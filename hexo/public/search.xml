<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>k8s-二进制安装16.6</title>
      <link href="/2020/03/12/k8s-%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%8516-6/"/>
      <url>/2020/03/12/k8s-%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%8516-6/</url>
      
        <content type="html"><![CDATA[<p>本文档介绍使用二进制部署  kubernetes v1.16.6  集群的所有步骤（Hard-Way模式）<br>本系列系文档适用于  CentOS 7  及以上版本系统<br>由于启用了  x509  证书双向认证、 RBAC  授权等严格的安全机制，建议从头开始部署，否则可能会认证、授权等失败！<br>从 v1.16.x 版本开始，本文档做了如下调整：</p><ul><li>容器运行时：用 containerd 替换 docker，更加简单、健壮；相应的命令行工具为crictl；</li><li>Pod 网络：用 calico 替换 flannel 实现 Pod 互通，支持更大规模的集群；新增指标监控系统：使用主流的 Prometheus、Grafana 技术栈实现集群指标采集和监控；如果想继续使用 docker 和 flannel，请参考附件文档。</li></ul><a id="more"></a><h1 id="组件版本和配置策略"><a href="#组件版本和配置策略" class="headerlink" title="组件版本和配置策略"></a>组件版本和配置策略</h1><h2 id="主要组件版本"><a href="#主要组件版本" class="headerlink" title="主要组件版本"></a>主要组件版本</h2><table><thead><tr><th align="center">组件</th><th align="center">版本</th></tr></thead><tbody><tr><td align="center">kubernetes</td><td align="center">1.16.6</td></tr><tr><td align="center">etcd</td><td align="center">3.4.3</td></tr><tr><td align="center">containerd</td><td align="center">1.3.3</td></tr><tr><td align="center">runc</td><td align="center">1.0.0-rc10</td></tr><tr><td align="center">calico</td><td align="center">3.12.0</td></tr><tr><td align="center">coredns</td><td align="center">1.6.6</td></tr><tr><td align="center">dashboard</td><td align="center">v2.0.0-rc4</td></tr><tr><td align="center">k8s-prometheus-adapter</td><td align="center">0.5.0</td></tr><tr><td align="center">prometheus-operator</td><td align="center">0.35.0</td></tr><tr><td align="center">prometheus</td><td align="center">2.15.2</td></tr><tr><td align="center">elasticsearch、kibana</td><td align="center">7.2.0</td></tr><tr><td align="center">cni-plugins</td><td align="center">0.8.5</td></tr><tr><td align="center">metrics-server</td><td align="center">0.3.6</td></tr></tbody></table><h2 id="主要配置策略"><a href="#主要配置策略" class="headerlink" title="主要配置策略"></a>主要配置策略</h2><h3 id="kube-apiserver："><a href="#kube-apiserver：" class="headerlink" title="kube-apiserver："></a>kube-apiserver：</h3><ul><li><p>使用节点本地 nginx 4 层透明代理实现高可用；</p></li><li><p>关闭非安全端口 8080 和匿名访问；</p></li><li><p>在安全端口 6443 接收 https 请求；</p></li><li><p>严格的认证和授权策略 (x509、token、RBAC)；</p></li><li><p>开启 bootstrap token 认证，支持 kubelet TLS bootstrapping；</p></li><li><p>使用 https 访问 kubelet、etcd，加密通信；</p><h3 id="kube-controller-manager："><a href="#kube-controller-manager：" class="headerlink" title="kube-controller-manager："></a>kube-controller-manager：</h3></li><li><p>3 节点高可用；</p></li><li><p>关闭非安全端口，在安全端口 10252 接收 https 请求；</p></li><li><p>使用 kubeconfig 访问 apiserver 的安全端口；</p></li><li><p>自动 approve kubelet 证书签名请求 (CSR)，证书过期后自动轮转；</p></li><li><p>各 controller 使用自己的 ServiceAccount 访问 apiserver；</p></li><li><p>kube-scheduler：</p></li><li><p>3 节点高可用；</p></li><li><p>使用 kubeconfig 访问 apiserver 的安全端口；</p><h3 id="kubelet："><a href="#kubelet：" class="headerlink" title="kubelet："></a>kubelet：</h3></li><li><p>使用 kubeadm 动态创建 bootstrap token，而不是在 apiserver 中静态配置；</p></li><li><p>使用 TLS bootstrap 机制自动生成 client 和 server 证书，过期后自动轮转；</p></li><li><p>在 KubeletConfiguration 类型的 JSON 文件配置主要参数；</p></li><li><p>关闭只读端口，在安全端口 10250 接收 https 请求，对请求进行认证和授权，拒绝</p></li><li><p>匿名访问和非授权访问；</p></li><li><p>使用 kubeconfig 访问 apiserver 的安全端口；</p><h3 id="kube-proxy："><a href="#kube-proxy：" class="headerlink" title="kube-proxy："></a>kube-proxy：</h3></li><li><p>使用 kubeconfig 访问 apiserver 的安全端口；</p></li><li><p>在 KubeProxyConfiguration 类型的 JSON 文件配置主要参数；</p></li><li><p>使用 ipvs 代理模式；</p><h3 id="集群插件："><a href="#集群插件：" class="headerlink" title="集群插件："></a>集群插件：</h3></li><li><p>DNS：使用功能、性能更好的 coredns；</p></li><li><p>Dashboard：支持登录认证；</p></li><li><p>Metric：metrics-server，使用 https 访问 kubelet 安全端口；</p></li><li><p>Log：Elasticsearch、Fluend、Kibana；</p></li><li><p>Registry 镜像库：docker-registry、harbor；</p></li></ul><h2 id="初始化系统和全局变量"><a href="#初始化系统和全局变量" class="headerlink" title="初始化系统和全局变量"></a>初始化系统和全局变量</h2><h3 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h3><ul><li><p>zhangjun-k8s-01：172.27.138.251</p></li><li><p>zhangjun-k8s-02：172.27.137.229</p></li><li><p>zhangjun-k8s-03：172.27.138.239</p></li></ul><blockquote><p>三台机器混合部署本文档的 etcd、master 集群和 woker 集群。</p><p>如果没有特殊说明，需要在所有节点上执行本文档的初始化操作。</p></blockquote><h3 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname k8s-01 # 将 k8s-01 替换为当前主机名</span><br></pre></td></tr></table></figure><p>如果 DNS 不支持主机名称解析，还需要在每台机器的  /etc/hosts  文件中添加主机名和 IP 的对应关系：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt;EOF</span><br><span class="line">172.27.138.251 k8s-01</span><br><span class="line">172.27.137.229 k8s-02</span><br><span class="line">172.27.138.239 k8s-03</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>退出，重新登录 root 账号，可以看到主机名生效。</p><h3 id="添加节点信任关系"><a href="#添加节点信任关系" class="headerlink" title="添加节点信任关系"></a>添加节点信任关系</h3><p>本操作只需要在k8s-01 节点上进行，设置 root 账户可以无密码登录所有节点：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id root@k8s-01</span><br><span class="line">ssh-copy-id root@k8s-02</span><br><span class="line">ssh-copy-id root@k8s-03</span><br></pre></td></tr></table></figure><h3 id="更新-PATH-变量"><a href="#更新-PATH-变量" class="headerlink" title="更新 PATH 变量"></a>更新 PATH 变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 'PATH=/opt/k8s/bin:$PATH' &gt;&gt;/root/.bashrc</span><br><span class="line">source /root/.bashrc</span><br></pre></td></tr></table></figure><ul><li>/opt/k8s/bin  目录保存本文档下载安装的程序；</li></ul><h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y chrony conntrack ipvsadm ipset jq iptables curl sysstat libseccomp wget</span><br><span class="line">socat git</span><br></pre></td></tr></table></figure><ul><li>本文档的 kube-proxy 使用 ipvs 模式，ipvsadm 为 ipvs 的管理工具；</li><li>etcd 集群各机器需要时间同步，chrony 用于系统时间同步；</li></ul><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><p>关闭防火墙，清理防火墙规则，设置默认转发策略：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">iptables -F &amp;&amp; iptables -X &amp;&amp; iptables -F -t nat &amp;&amp; iptables -X -t nat</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br></pre></td></tr></table></figure><h3 id="关闭-swap-分区"><a href="#关闭-swap-分区" class="headerlink" title="关闭 swap 分区"></a>关闭 swap 分区</h3><p>关闭 swap 分区，否则kubelet 会启动失败(可以设置 kubelet 启动参数 –fail-swap-on 为<br>false 关闭 swap 检查)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="关闭-SELinux"><a href="#关闭-SELinux" class="headerlink" title="关闭 SELinux"></a>关闭 SELinux</h3><p>关闭 SELinux，否则 kubelet 挂载目录时可能报错  Permission denied  ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config</span><br></pre></td></tr></table></figure><h3 id="优化内核参数"><a href="#优化内核参数" class="headerlink" title="优化内核参数"></a>优化内核参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kubernetes.conf &lt;&lt;EOF</span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=0</span><br><span class="line">net.ipv4.neigh.default.gc_thresh1=1024</span><br><span class="line">net.ipv4.neigh.default.gc_thresh1=2048</span><br><span class="line">net.ipv4.neigh.default.gc_thresh1=4096</span><br><span class="line">vm.swappiness=0</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">fs.inotify.max_user_instances=8192</span><br><span class="line">fs.inotify.max_user_watches=1048576</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">net.ipv6.conf.all.disable_ipv6=1</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line">EOF</span><br><span class="line">cp kubernetes.conf /etc/sysctl.d/kubernetes.conf</span><br><span class="line">sysctl -p /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure><ul><li>关闭 tcp_tw_recycle，否则与 NAT 冲突，可能导致服务不通；</li></ul><h3 id="设置系统时区"><a href="#设置系统时区" class="headerlink" title="设置系统时区"></a>设置系统时区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><h3 id="设置系统时钟同步"><a href="#设置系统时钟同步" class="headerlink" title="设置系统时钟同步"></a>设置系统时钟同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> chronyd</span><br><span class="line">systemctl start chronyd</span><br></pre></td></tr></table></figure><h3 id="查看同步状态："><a href="#查看同步状态：" class="headerlink" title="查看同步状态："></a>查看同步状态：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl status</span><br></pre></td></tr></table></figure><h4 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System clock synchronized: yes</span><br><span class="line">NTP service: active</span><br><span class="line">RTC in local TZ: no</span><br></pre></td></tr></table></figure><ul><li>System clock synchronized: yes  ，表示时钟已同步；</li><li>NTP service: active  ，表示开启了时钟同步服务；</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将当前的 UTC 时间写入硬件时钟</span></span><br><span class="line">timedatectl set-local-rtc 0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启依赖于系统时间的服务</span></span><br><span class="line">systemctl restart rsyslog</span><br><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure><p>关闭无关的服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop postfix &amp;&amp; systemctl disable postfix</span><br></pre></td></tr></table></figure><h3 id="创建相关目录"><a href="#创建相关目录" class="headerlink" title="创建相关目录"></a>创建相关目录</h3><h4 id="创建目录："><a href="#创建目录：" class="headerlink" title="创建目录："></a>创建目录：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/k8s/&#123;bin,work&#125; /etc/&#123;kubernetes,etcd&#125;/cert</span><br></pre></td></tr></table></figure><h3 id="创建环境变量文件"><a href="#创建环境变量文件" class="headerlink" title="创建环境变量文件"></a>创建环境变量文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NODE_IPS=("k8s-01" "k8s-02" "k8s-03"s)</span><br></pre></td></tr></table></figure><h3 id="分发集群配置参数脚本"><a href="#分发集群配置参数脚本" class="headerlink" title="分发集群配置参数脚本"></a>分发集群配置参数脚本</h3><p>后续使用的环境变量都定义在文件 <code>environment.sh</code> 中，请根据自己的机器、网络情况修<br>改。然后拷贝到所有节点：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">source environment.sh # 先修改</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">scp environment.sh root@$&#123;node_ip&#125;:/opt/k8s/bin/</span><br><span class="line">ssh root@$&#123;node_ip&#125; "chmod +x /opt/k8s/bin/*"</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h3><p>CentOS 7.x 系统自带的 3.10.x 内核存在一些 Bugs，导致运行的 Docker、Kubernetes不稳定，例如：</p><ol><li>高版本的 docker(1.13 以后) 启用了 3.10 kernel 实验支持的 kernel memoryaccount 功能(无法关闭)，当节点压力大如频繁启动和停止容器时会导致 cgroupmemory leak；</li><li>网络设备引用计数泄漏，会导致类似于报错：”kernel:unregister_netdevice: waitingfor eth0 to become free. Usage count = 1”;</li></ol><h4 id="解决方案如下："><a href="#解决方案如下：" class="headerlink" title="解决方案如下："></a>解决方案如下：</h4><ol><li><p>升级内核到 4.4.X 以上；</p></li><li><p>或者，手动编译内核，disable CONFIG_MEMCG_KMEM 特性；</p></li><li><p>或者，安装修复了该问题的 Docker 18.09.1 及以上的版本。但由于 kubelet 也会设置 kmem（它 vendor 了runc），所以需要重新编译 kubelet 并指定 GOFLAGS=”-tags=nokmem”；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone --branch v1.14.1 --single-branch --depth 1 https://github.com/kubernetes/kubernetes</span><br><span class="line">cd kubernetes</span><br><span class="line">KUBE_GIT_VERSION=v1.14.1 ./build/run.sh make kubelet GOFLAGS="-tags=nokmem"</span><br></pre></td></tr></table></figure><h4 id="这里采用升级内核的解决办法："><a href="#这里采用升级内核的解决办法：" class="headerlink" title="这里采用升级内核的解决办法："></a>这里采用升级内核的解决办法：</h4></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装完成后检查 /boot/grub2/grub.cfg 中对应内核 menuentry 中是否包含 initrd16 配置，如果没有，再安装一次！</span></span><br><span class="line">yum --enablerepo=elrepo-kernel install -y kernel-lt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置开机从新内核启动</span></span><br><span class="line">grub2-set-default 0</span><br></pre></td></tr></table></figure><h4 id="重启机器："><a href="#重启机器：" class="headerlink" title="重启机器："></a>重启机器：</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sync</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li>系统内核相关参数参考：<a href="https://docs.openshift.com/enterprise/3.2/admin_guide/overcommit.html" target="_blank" rel="noopener">https://docs.openshift.com/enterprise/3.2/admin_guide/overcommit.html</a></li><li>3.10.x 内核 kmem bugs 相关的讨论和解决办法：<br>i. <a href="https://github.com/kubernetes/kubernetes/issues/61937" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/issues/61937</a><br>ii. <a href="https://support.mesosphere.com/s/article/Critical-Issue-KMEM-MSPH-2018-0006" target="_blank" rel="noopener">https://support.mesosphere.com/s/article/Critical-Issue-KMEM-MSPH-2018-0006</a><br>iii. <a href="https://pingcap.com/blog/try-to-fix-two-linux-kernel-bugs-while-testing-tidb-operator-in-k8s/" target="_blank" rel="noopener">https://pingcap.com/blog/try-to-fix-two-linux-kernel-bugs-while-testing-tidb-operator-in-k8s/</a></li></ul><h1 id="创建-CA-根证书和秘钥"><a href="#创建-CA-根证书和秘钥" class="headerlink" title="创建 CA 根证书和秘钥"></a>创建 CA 根证书和秘钥</h1><ul><li>为确保安全， kubernetes  系统各组件需要使用  x509  证书对通信进行加密和认证。</li><li>CA (Certificate Authority) 是自签名的根证书，用来签名后续创建的其它证书。</li><li>CA 证书是集群所有节点共享的，只需要创建一次，后续用它签名其它所有证书。</li><li>本文档使用  CloudFlare  的 PKI 工具集 cfssl 创建所有证书。</li><li>注意：如果没有特殊指明，本文档的所有操作均在 k8s-01 节点上执行。</li></ul><h2 id="安装-cfssl-工具集"><a href="#安装-cfssl-工具集" class="headerlink" title="安装 cfssl 工具集"></a>安装 cfssl 工具集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /opt/k8s/cert &amp;&amp; cd /opt/k8s/work</span><br><span class="line">wget https://github.com/cloudflare/cfssl/releases/download/v1.4.1/cfssl_1.4.1_linux_amd64</span><br><span class="line">mv cfssl_1.4.1_linux_amd64 /opt/k8s/bin/cfssl</span><br><span class="line"></span><br><span class="line">wget https://github.com/cloudflare/cfssl/releases/download/v1.4.1/cfssljson_1.4.1_linux_amd64</span><br><span class="line">mv cfssljson_1.4.1_linux_amd64 /opt/k8s/bin/cfssljson</span><br><span class="line"></span><br><span class="line">wget https://github.com/cloudflare/cfssl/releases/download/v1.4.1/cfssl-certinfo_1.4.1_linux_amd64</span><br><span class="line">mv cfssl-certinfo_1.4.1_linux_amd64 /opt/k8s/bin/cfssl-certinfo</span><br><span class="line"></span><br><span class="line">chmod +x /opt/k8s/bin/*</span><br><span class="line">export PATH=/opt/k8s/bin:$PATH</span><br></pre></td></tr></table></figure><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>CA 配置文件用于配置根证书的使用场景 (profile) 和具体参数 (usage，过期时间、服务端认证、客户端认证、加密等)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ca-config.json &lt;&lt; EOF &#123;</span><br><span class="line">"signing": &#123;</span><br><span class="line">"default": &#123;</span><br><span class="line">"expiry": "87600h"</span><br><span class="line">&#125;,</span><br><span class="line">"profiles": &#123;</span><br><span class="line">"kubernetes": &#123;</span><br><span class="line">"usages": ["signing", "keyencipherment", "serverauth", "clientauth"],</span><br><span class="line">"expiry": "876000h"</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>signing  ：表示该证书可用于签名其它证书（生成的  ca.pem  证书中CA=TRUE  ）；</li><li>server auth  ：表示 client 可以用该该证书对 server 提供的证书进行验证；</li><li>client auth  ：表示 server 可以用该该证书对 client 提供的证书进行验证；</li><li>“expiry”: “876000h”  ：证书有效期设置为 100 年；</li></ul><h2 id="创建证书签名请求文件"><a href="#创建证书签名请求文件" class="headerlink" title="创建证书签名请求文件"></a>创建证书签名请求文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">cat &gt; ca-csr.json &lt;&lt; EOF &#123;</span><br><span class="line">"CN": "kubernetes-ca",</span><br><span class="line">"key": &#123;</span><br><span class="line">"algo": "rsa",</span><br><span class="line">"size": 2048</span><br><span class="line">&#125;,</span><br><span class="line">"names": [&#123;</span><br><span class="line">"C": "CN",</span><br><span class="line">"ST": "BeiJing",</span><br><span class="line">"L": "BeiJing",</span><br><span class="line">"O": "k8s",</span><br><span class="line">"OU": "opsnull"</span><br><span class="line">&#125;],</span><br><span class="line">"ca": &#123;</span><br><span class="line">"expiry": "876000h"</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>CN：Common Name  ：kube-apiserver 从证书中提取该字段作为请求的用户名(User Name)，浏览器使用该字段验证网站是否合法；</li><li>O：Organization  ：kube-apiserver 从证书中提取该字段作为请求用户所属的组(Group)；</li><li>kube-apiserver 将提取的  User、Group  作为  RBAC  授权的用户标识；</li></ul><p>注意：</p><ol><li>不同证书 csr 文件的 CN、C、ST、L、O、OU 组合必须不同，否则可能出现PEER’S CERTIFICATE HAS AN INVALID SIGNATURE  错误；</li><li>后续创建证书的 csr 文件时，CN 都不相同（C、ST、L、O、OU 相同），以达到区分的目的；</li></ol><h2 id="生成-CA-证书和私钥"><a href="#生成-CA-证书和私钥" class="headerlink" title="生成 CA 证书和私钥"></a>生成 CA 证书和私钥</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br><span class="line">ls ca*</span><br></pre></td></tr></table></figure><h2 id="分发证书文件"><a href="#分发证书文件" class="headerlink" title="分发证书文件"></a>分发证书文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "mkdir -p /etc/kubernetes/cert"</span><br><span class="line">scp ca*.pem ca-config.json root@$&#123;node_ip&#125;:/etc/kubernetes/cert</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="安装和配置-kubectl"><a href="#安装和配置-kubectl" class="headerlink" title="安装和配置 kubectl"></a>安装和配置 kubectl</h1><p>本文档介绍安装和配置 kubernetes 命令行管理工具 kubectl 的步骤。<br>注意：</p><ol><li>如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s-01 节点上执行；</li><li>本文档只需要部署一次，生成的 kubeconfig 文件是通用的，可以拷贝到需要执行kubectl 命令的机器的  ~/.kube/config  位置；</li></ol><h2 id="下载和分发-kubectl-二进制文件"><a href="#下载和分发-kubectl-二进制文件" class="headerlink" title="下载和分发 kubectl 二进制文件"></a>下载和分发 kubectl 二进制文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">wget https://dl.k8s.io/v1.16.6/kubernetes-client-linux-amd64.tar.gz #自行解决翻墙下载问题</span><br><span class="line">tar -xzvf kubernetes-client-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="分发到所有使用-kubectl-工具的节点："><a href="#分发到所有使用-kubectl-工具的节点：" class="headerlink" title="分发到所有使用 kubectl 工具的节点："></a>分发到所有使用 kubectl 工具的节点：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">scp kubernetes/client/bin/kubectl root@$&#123;node_ip&#125;:/opt/k8s/bin/</span><br><span class="line">ssh root@$&#123;node_ip&#125; "chmod +x /opt/k8s/bin/*"</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="创建-admin-证书和私钥"><a href="#创建-admin-证书和私钥" class="headerlink" title="创建 admin 证书和私钥"></a>创建 admin 证书和私钥</h2><p>kubectl 使用 https 协议与 kube-apiserver 进行安全通信，kube-apiserver 对 kubectl 请求包含的证书进行认证和授权。<br>kubectl 后续用于集群管理，所以这里创建具有最高权限的 admin 证书。</p><h3 id="创建证书签名请求："><a href="#创建证书签名请求：" class="headerlink" title="创建证书签名请求："></a>创建证书签名请求：</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/<span class="keyword">work</span></span><br><span class="line">cat &gt; <span class="keyword">admin</span>-csr.json &lt;&lt; EOF &#123;</span><br><span class="line">"CN": "admin",</span><br><span class="line">"hosts": [],</span><br><span class="line">"key": &#123;</span><br><span class="line">"algo": "rsa",</span><br><span class="line">"size": <span class="number">2048</span></span><br><span class="line">&#125;,</span><br><span class="line">"names": [&#123;</span><br><span class="line">"C": "CN",</span><br><span class="line">"ST": "BeiJing",</span><br><span class="line">"L": "BeiJing",</span><br><span class="line">"O": "system:masters",</span><br><span class="line">"OU": "opsnull"</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>O: system:masters  ：kube-apiserver 收到使用该证书的客户端请求后，为请求添加组（Group）认证标识  system:masters  ；</li><li>预定义的 ClusterRoleBinding  cluster-admin  将 Group  system:masters  与Role  cluster-admin  绑定，该 Role 授予操作集群所需的最高权限；</li><li>该证书只会被 kubectl 当做 client 证书使用，所以  hosts  字段为空；</li></ul><h3 id="生成证书和私钥："><a href="#生成证书和私钥：" class="headerlink" title="生成证书和私钥："></a>生成证书和私钥：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">cfssl gencert -ca=/opt/k8s/work/ca.pem \</span><br><span class="line">-ca-key=/opt/k8s/work/ca-key.pem \</span><br><span class="line">-config=/opt/k8s/work/ca-config.json \</span><br><span class="line">-profile=kubernetes admin-csr.json | cfssljson -bare admin</span><br><span class="line">ls admin*</span><br></pre></td></tr></table></figure><ul><li>忽略警告消息  [WARNING] This certificate lacks a “hosts” field.  ；</li></ul><h2 id="创建-kubeconfig-文件"><a href="#创建-kubeconfig-文件" class="headerlink" title="创建 kubeconfig 文件"></a>创建 kubeconfig 文件</h2><p>kubectl 使用 kubeconfig 文件访问 apiserver，该文件包含 kube-apiserver 的地址和认证信息（CA 证书和客户端证书）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置集群参数</span></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">--certificate-authority=/opt/k8s/work/ca.pem \</span><br><span class="line">--embed-certs=true \</span><br><span class="line">--server=https://$&#123;NODE_IPS[0]&#125;:6443 \</span><br><span class="line">--kubeconfig=kubectl.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置客户端认证参数</span></span><br><span class="line">kubectl config set-credentials admin \</span><br><span class="line">--client-certificate=/opt/k8s/work/admin.pem \</span><br><span class="line">--client-key=/opt/k8s/work/admin-key.pem \</span><br><span class="line">--embed-certs=true \</span><br><span class="line">--kubeconfig=kubectl.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置上下文参数</span></span><br><span class="line">kubectl config set-context kubernetes \</span><br><span class="line">--cluster=kubernetes \</span><br><span class="line">--user=admin \</span><br><span class="line">--kubeconfig=kubectl.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认上下文</span></span><br><span class="line">kubectl config use-context kubernetes --kubeconfig=kubectl.kubeconfig</span><br></pre></td></tr></table></figure><ul><li>–certificate-authority  ：验证 kube-apiserver 证书的根证书；</li><li>–client-certificate  、 –client-key  ：刚生成的  admin  证书和私钥，与kube-apiserver https 通信时使用；</li><li>–embed-certs=true  ：将 ca.pem 和 admin.pem 证书内容嵌入到生成的kubectl.kubeconfig 文件中(否则，写入的是证书文件路径，后续拷贝 kubeconfig 到其它机器时，还需要单独拷贝证书文件，不方便。)；</li><li>–server  ：指定 kube-apiserver 的地址，这里指向第一个节点上的服务；</li></ul><h2 id="分发-kubeconfig-文件"><a href="#分发-kubeconfig-文件" class="headerlink" title="分发 kubeconfig 文件"></a>分发 kubeconfig 文件</h2><h3 id="分发到所有使用-kubectl-命令的节点："><a href="#分发到所有使用-kubectl-命令的节点：" class="headerlink" title="分发到所有使用  kubectl  命令的节点："></a>分发到所有使用  kubectl  命令的节点：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "mkdir -p ~/.kube"</span><br><span class="line">scp kubectl.kubeconfig root@$&#123;node_ip&#125;:~/.kube/config</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="部署-etcd-集群"><a href="#部署-etcd-集群" class="headerlink" title="部署 etcd 集群"></a>部署 etcd 集群</h1><p>etcd 是基于 Raft 的分布式 KV 存储系统，由 CoreOS 开发，常用于服务发现、共享配置以及并发控制（如 leader 选举、分布式锁等）。</p><p>kubernetes 使用 etcd 集群持久化存储所有 API 对象、运行数据。</p><p>本文档介绍部署一个三节点高可用 etcd 集群的步骤：</p><ul><li>下载和分发 etcd 二进制文件；</li><li>创建 etcd 集群各节点的 x509 证书，用于加密客户端(如 etcdctl) 与 etcd 集群、etcd 集群之间的通信；</li><li>创建 etcd 的 systemd unit 文件，配置服务参数；</li><li>检查集群工作状态；</li></ul><p>etcd 集群节点名称和 IP 如下：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">k8s<span class="number">-01</span>：<span class="number">172.27</span><span class="number">.138</span><span class="number">.251</span></span><br><span class="line">k8s<span class="number">-02</span>：<span class="number">172.27</span><span class="number">.137</span><span class="number">.229</span></span><br><span class="line">k8s<span class="number">-03</span>：<span class="number">172.27</span><span class="number">.138</span><span class="number">.239</span></span><br></pre></td></tr></table></figure><p>注意：</p><ol><li>如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s-01 节点上执行；</li><li>flanneld 与本文档安装的 etcd v3.4.x 不兼容，如果要安装 flanneld（本文档使用calio），则需要将 etcd 降级到 v3.3.x 版本；</li></ol><h2 id="下载和分发-etcd-二进制文件"><a href="#下载和分发-etcd-二进制文件" class="headerlink" title="下载和分发 etcd 二进制文件"></a>下载和分发 etcd 二进制文件</h2><h3 id="到-etcd-的-release-页面-下载最新版本的发布包："><a href="#到-etcd-的-release-页面-下载最新版本的发布包：" class="headerlink" title="到 etcd 的 release 页面 下载最新版本的发布包："></a>到 etcd 的 release 页面 下载最新版本的发布包：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">wget https://github.com/coreos/etcd/releases/download/v3.4.3/etcd-v3.4.3-linux-amd64.tar.gz</span><br><span class="line">tar -xvf etcd-v3.4.3-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="分发二进制文件到集群所有节点："><a href="#分发二进制文件到集群所有节点：" class="headerlink" title="分发二进制文件到集群所有节点："></a>分发二进制文件到集群所有节点：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">scp etcd-v3.4.3-linux-amd64/etcd* root@$&#123;node_ip&#125;:/opt/k8s/bin</span><br><span class="line">ssh root@$&#123;node_ip&#125; "chmod +x /opt/k8s/bin/*"</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="创建-etcd-证书和私钥"><a href="#创建-etcd-证书和私钥" class="headerlink" title="创建 etcd 证书和私钥"></a>创建 etcd 证书和私钥</h2><h3 id="创建证书签名请求：-1"><a href="#创建证书签名请求：-1" class="headerlink" title="创建证书签名请求："></a>创建证书签名请求：</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">cat &gt; etcd-csr.json &lt;&lt; EOF &#123;</span><br><span class="line">"CN": "etcd",</span><br><span class="line">"hosts": [</span><br><span class="line">"127.0.0.1",</span><br><span class="line">"172.27.138.251",</span><br><span class="line">"172.27.137.229",</span><br><span class="line"><span class="string">"172.27.138.239"</span></span><br><span class="line">],</span><br><span class="line">"key": &#123;</span><br><span class="line">"algo": "rsa",</span><br><span class="line">"size": 2048</span><br><span class="line">&#125;,</span><br><span class="line">"names": [&#123;</span><br><span class="line">"C": "CN",</span><br><span class="line">"ST": "BeiJing",</span><br><span class="line">"L": "BeiJing",</span><br><span class="line">"O": "k8s",</span><br><span class="line">"OU": "opsnull"</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>hosts  ：指定授权使用该证书的 etcd 节点 IP 列表，需要将 etcd 集群所有节点 IP都列在其中；</li></ul><h3 id="生成证书和私钥：-1"><a href="#生成证书和私钥：-1" class="headerlink" title="生成证书和私钥："></a>生成证书和私钥：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">cfssl gencert -ca=/opt/k8s/work/ca.pem \</span><br><span class="line">-ca-key=/opt/k8s/work/ca-key.pem \</span><br><span class="line">-config=/opt/k8s/work/ca-config.json \</span><br><span class="line">-profile=kubernetes etcd-csr.json | cfssljson -bare etcd</span><br><span class="line">ls etcd*pem</span><br></pre></td></tr></table></figure><h3 id="分发生成的证书和私钥到各-etcd-节点："><a href="#分发生成的证书和私钥到各-etcd-节点：" class="headerlink" title="分发生成的证书和私钥到各 etcd 节点："></a>分发生成的证书和私钥到各 etcd 节点：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "mkdir -p /etc/etcd/cert"</span><br><span class="line">scp etcd*.pem root@$&#123;node_ip&#125;:/etc/etcd/cert/</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="创建-etcd-的-systemd-unit-模板文件"><a href="#创建-etcd-的-systemd-unit-模板文件" class="headerlink" title="创建 etcd 的 systemd unit 模板文件"></a>创建 etcd 的 systemd unit 模板文件</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">cat &gt; etcd.service.template &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Etcd Server</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"><span class="attribute">After</span>=network-online.target</span><br><span class="line"><span class="attribute">Wants</span>=network-online.target</span><br><span class="line"><span class="attribute">Documentation</span>=https://github.com/coreos</span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=notify</span><br><span class="line"><span class="attribute">WorkingDirectory</span>=<span class="variable">$&#123;ETCD_DATA_DIR&#125;</span></span><br><span class="line"><span class="attribute">ExecStart</span>=/opt/k8s/bin/etcd \\</span><br><span class="line"><span class="attribute">--data-dir</span>=<span class="variable">$&#123;ETCD_DATA_DIR&#125;</span> \\</span><br><span class="line"><span class="attribute">--wal-dir</span>=<span class="variable">$&#123;ETCD_WAL_DIR&#125;</span> \\</span><br><span class="line"><span class="attribute">--name</span>=##NODE_NAME## \\</span><br><span class="line"><span class="attribute">--cert-file</span>=/etc/etcd/cert/etcd.pem \\</span><br><span class="line"><span class="attribute">--key-file</span>=/etc/etcd/cert/etcd-key.pem \\</span><br><span class="line"><span class="attribute">--trusted-ca-file</span>=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line"><span class="attribute">--peer-cert-file</span>=/etc/etcd/cert/etcd.pem \\</span><br><span class="line"><span class="attribute">--peer-key-file</span>=/etc/etcd/cert/etcd-key.pem \\</span><br><span class="line"><span class="attribute">--peer-trusted-ca-file</span>=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">--peer-client-cert-auth \\</span><br><span class="line">--client-cert-auth \\</span><br><span class="line"><span class="attribute">--listen-peer-urls</span>=https://##NODE_IP##:2380 \\</span><br><span class="line"><span class="attribute">--initial-advertise-peer-urls</span>=https://##NODE_IP##:2380 \\</span><br><span class="line"><span class="attribute">--listen-client-urls</span>=https://##NODE_IP##:2379,http://127.0.0.1:2379 \\</span><br><span class="line"><span class="attribute">--advertise-client-urls</span>=https://##NODE_IP##:2379 \\</span><br><span class="line"><span class="attribute">--initial-cluster-token</span>=etcd-cluster-0 \\</span><br><span class="line"><span class="attribute">--initial-cluster</span>=<span class="variable">$&#123;ETCD_NODES&#125;</span> \\</span><br><span class="line"><span class="attribute">--initial-cluster-state</span>=new \\</span><br><span class="line"><span class="attribute">--auto-compaction-mode</span>=periodic \\</span><br><span class="line"><span class="attribute">--auto-compaction-retention</span>=1 \\</span><br><span class="line"><span class="attribute">--max-request-bytes</span>=33554432 \\</span><br><span class="line"><span class="attribute">--quota-backend-bytes</span>=6442450944 \\</span><br><span class="line"><span class="attribute">--heartbeat-interval</span>=250 \\</span><br><span class="line"><span class="attribute">--election-timeout</span>=2000</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"><span class="attribute">RestartSec</span>=5</span><br><span class="line"><span class="attribute">LimitNOFILE</span>=65536</span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>WorkingDirectory  、 –data-dir  ：指定工作目录和数据目录为${ETCD_DATA_DIR}  ，需在启动服务前创建这个目录；</li><li>–wal-dir  ：指定 wal 目录，为了提高性能，一般使用 SSD 或者和  –data-dir  不同的磁盘；</li><li>–name  ：指定节点名称，当  –initial-cluster-state  值为  new  时， –name  的参数值必须位于  –initial-cluster  列表中；</li><li>–cert-file  、 –key-file  ：etcd server 与 client 通信时使用的证书和私钥；</li><li>–trusted-ca-file  ：签名 client 证书的 CA 证书，用于验证 client 证书；</li><li>–peer-cert-file  、 –peer-key-file  ：etcd 与 peer 通信使用的证书和私钥；</li><li>–peer-trusted-ca-file  ：签名 peer 证书的 CA 证书，用于验证 peer 证书；</li></ul><h3 id="为各节点创建和分发-etcd-systemd-unit-文件"><a href="#为各节点创建和分发-etcd-systemd-unit-文件" class="headerlink" title="为各节点创建和分发 etcd systemd unit 文件"></a>为各节点创建和分发 etcd systemd unit 文件</h3><p>替换模板文件中的变量，为各节点创建 systemd unit 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for (( i=0; i &lt; 3; i++ ))</span><br><span class="line">do</span><br><span class="line">sed -e "s/##NODE_NAME##/$&#123;NODE_NAMES[i]&#125;/" -e "s/##NODE_IP##/$&#123;NO</span><br><span class="line">DE_IPS[i]&#125;/" etcd.service.template &gt; etcd-$&#123;NODE_IPS[i]&#125;.service</span><br><span class="line">done</span><br><span class="line">ls *.service</span><br></pre></td></tr></table></figure><ul><li>NODE_NAMES 和 NODE_IPS 为相同长度的 bash 数组，分别为节点名称和对应的 IP；</li></ul><p>分发生成的 systemd unit 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">scp etcd-$&#123;node_ip&#125;.service root@$&#123;node_ip&#125;:/etc/systemd/system/e</span><br><span class="line">tcd.service</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="启动-etcd-服务"><a href="#启动-etcd-服务" class="headerlink" title="启动 etcd 服务"></a>启动 etcd 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "mkdir -p $&#123;ETCD_DATA_DIR&#125; $&#123;ETCD_WAL_DIR&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "systemctl daemon-reload &amp;&amp; systemctl enable</span><br><span class="line">etcd &amp;&amp; systemctl restart etcd " &amp;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ul><li>必须先创建 etcd 数据目录和工作目录;</li><li>etcd 进程首次启动时会等待其它节点的 etcd 加入集群，命令  systemctl startetcd  会卡住一段时间，为正常现象；</li></ul><h3 id="检查启动结果"><a href="#检查启动结果" class="headerlink" title="检查启动结果"></a>检查启动结果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "systemctl status etcd|grep Active"</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>确保状态为  active (running)  ，否则查看日志，确认原因：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">journalctl -u etcd</span></span><br></pre></td></tr></table></figure><h3 id="验证服务状态"><a href="#验证服务状态" class="headerlink" title="验证服务状态"></a>验证服务状态</h3><p>部署完 etcd 集群后，在任一 etcd 节点上执行如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">/opt/k8s/bin/etcdctl \</span><br><span class="line">--endpoints=https://$&#123;node_ip&#125;:2379 \</span><br><span class="line">--cacert=/etc/kubernetes/cert/ca.pem \</span><br><span class="line">--cert=/etc/etcd/cert/etcd.pem \</span><br><span class="line">--key=/etc/etcd/cert/etcd-key.pem endpoint health</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ul><li>3.4.3 版本的 etcd/etcdctl 默认启用了 V3 API，所以执行 etcdctl 命令时不需要再指定环境变量  ETCDCTL_API=3  ；</li><li>从 K8S 1.13 开始，不再支持 v2 版本的 etcd；</li></ul><p>预期输出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 172.27.138.251</span></span><br><span class="line">https://172.27.138.251:2379 is healthy: successfully committed proposal: took = 2.756451ms</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 172.27.137.229</span></span><br><span class="line">https://172.27.137.229:2379 is healthy: successfully committed proposal: took = 2.025018ms</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 172.27.138.239</span></span><br><span class="line">https://172.27.138.239:2379 is healthy: successfully committed proposal: took = 2.335097ms</span><br></pre></td></tr></table></figure><p>输出均为  healthy  时表示集群服务正常。</p><h3 id="查看当前的-leader"><a href="#查看当前的-leader" class="headerlink" title="查看当前的 leader"></a>查看当前的 leader</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">/opt/k8s/bin/etcdctl \</span><br><span class="line">-w table --cacert=/etc/kubernetes/cert/ca.pem \</span><br><span class="line">--cert=/etc/etcd/cert/etcd.pem \</span><br><span class="line">--key=/etc/etcd/cert/etcd-key.pem \</span><br><span class="line">--endpoints=$&#123;ETCD_ENDPOINTS&#125; endpoint status</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">+-----------------------------+</span>------------------<span class="code">+---------+</span>---------</span><br><span class="line"><span class="code">+-----------+</span>------------<span class="code">+-----------+</span>------------+------------------</span><br><span class="line">--<span class="code">+--------+</span></span><br><span class="line">| ENDPOINT | ID | VERSION | DB SIZE |</span><br><span class="line">IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX</span><br><span class="line">| ERRORS |</span><br><span class="line"><span class="code">+-----------------------------+</span>------------------<span class="code">+---------+</span>---------</span><br><span class="line"><span class="code">+-----------+</span>------------<span class="code">+-----------+</span>------------+------------------</span><br><span class="line">--<span class="code">+--------+</span></span><br><span class="line">| https://172.27.138.251:2379 | 4250b255e93e0076 | 3.4.3 | 20 kB |</span><br><span class="line">false | false | 2 | 8 | 8</span><br><span class="line">| |</span><br><span class="line">| https://172.27.137.229:2379 | b3d912e6166f1213 | 3.4.3 | 20 kB |</span><br><span class="line">true | false | 2 | 8 | 8</span><br><span class="line">| |</span><br><span class="line">| https://172.27.138.239:2379 | 8a4d4a2904de8446 | 3.4.3 | 20 kB |</span><br><span class="line">false | false | 2 | 8 | 8</span><br><span class="line">| |</span><br><span class="line"><span class="code">+-----------------------------+</span>------------------<span class="code">+---------+</span>---------</span><br><span class="line"><span class="code">+-----------+</span>------------<span class="code">+-----------+</span>------------+------------------</span><br><span class="line">--<span class="code">+--------+</span></span><br></pre></td></tr></table></figure><ul><li>可见，当前的 leader 为 172.27.138.229。</li></ul><h1 id="部署-master-节点"><a href="#部署-master-节点" class="headerlink" title="部署 master 节点"></a>部署 master 节点</h1><p>kubernetes master 节点运行如下组件：</p><ul><li>kube-apiserver</li><li>kube-scheduler</li><li>kube-controller-manager</li></ul><p>kube-apiserver、kube-scheduler 和 kube-controller-manager 均以多实例模式运行：</p><ol><li>kube-scheduler 和 kube-controller-manager 会自动选举产生一个 leader 实例，其它实例处于阻塞模式，当 leader 挂了后，重新选举产生新的 leader，从而保证服务可用性；</li><li>kube-apiserver 是无状态的，可以通过 kube-nginx 进行代理访问（见06-2.apiserver高可用），从而保证服务可用性；<br>注意：如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s01 节点9上执行。</li></ol><h2 id="下载最新版本二进制文件"><a href="#下载最新版本二进制文件" class="headerlink" title="下载最新版本二进制文件"></a>下载最新版本二进制文件</h2><h3 id="下载二进制-tar-文件并解压："><a href="#下载二进制-tar-文件并解压：" class="headerlink" title="下载二进制 tar 文件并解压："></a>下载二进制 tar 文件并解压：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">wget https://dl.k8s.io/v1.16.6/kubernetes-server-linux-amd64.tar.gz# 自行解决翻墙问题</span><br><span class="line">tar -xzvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">cd kubernetes</span><br><span class="line">tar -xzvf kubernetes-src.tar.gz</span><br></pre></td></tr></table></figure><h3 id="将二进制文件拷贝到所有-master-节点："><a href="#将二进制文件拷贝到所有-master-节点：" class="headerlink" title="将二进制文件拷贝到所有 master 节点："></a>将二进制文件拷贝到所有 master 节点：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">scp kubernetes/server/bin/&#123;apiextensions-apiserver,kube-apiserver</span><br><span class="line">,kube-controller-manager,kube-proxy,kube-scheduler,kubeadm,kubectl,ku</span><br><span class="line">belet,mounter&#125; root@$&#123;node_ip&#125;:/opt/k8s/bin/</span><br><span class="line">ssh root@$&#123;node_ip&#125; "chmod +x /opt/k8s/bin/*"</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="部署-kube-apiserver-集群"><a href="#部署-kube-apiserver-集群" class="headerlink" title="部署 kube-apiserver 集群"></a>部署 kube-apiserver 集群</h2><p>本文档讲解部署一个三实例 kube-apiserver 集群的步骤.<br>注意：如果没有特殊指明，本文档的所有操作均在 k8s-01 节点上执行。</p><h3 id="创建-kubernetes-master-证书和私钥"><a href="#创建-kubernetes-master-证书和私钥" class="headerlink" title="创建 kubernetes-master 证书和私钥"></a>创建 kubernetes-master 证书和私钥</h3><h4 id="创建证书签名请求：-2"><a href="#创建证书签名请求：-2" class="headerlink" title="创建证书签名请求："></a>创建证书签名请求：</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">cat &gt; kubernetes-csr.json &lt;&lt; EOF &#123;</span><br><span class="line">"CN": "kubernetes-master",</span><br><span class="line">"hosts": [</span><br><span class="line">"127.0.0.1",</span><br><span class="line">"172.27.138.251",</span><br><span class="line">"172.27.137.229",</span><br><span class="line">"172.27.138.239",</span><br><span class="line">"$&#123;CLUSTER_KUBERNETES_SVC_IP&#125;",</span><br><span class="line">"kubernetes",</span><br><span class="line">"kubernetes.default",</span><br><span class="line">"kubernetes.default.svc",</span><br><span class="line">"kubernetes.default.svc.cluster",</span><br><span class="line">"kubernetes.default.svc.cluster.local.",</span><br><span class="line"><span class="string">"kubernetes.default.svc.$&#123;CLUSTER_DNS_DOMAIN&#125;."</span></span><br><span class="line">],</span><br><span class="line">"key": &#123;</span><br><span class="line">"algo": "rsa",</span><br><span class="line">"size": 2048</span><br><span class="line">&#125;,</span><br><span class="line">"names": [&#123;</span><br><span class="line">"C": "CN",</span><br><span class="line">"ST": "BeiJing",</span><br><span class="line">"L": "BeiJing",</span><br><span class="line">"O": "k8s",</span><br><span class="line">"OU": "opsnull"</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>hosts 字段指定授权使用该证书的 IP 和域名列表，这里列出了 master 节点 IP、kubernetes 服务的 IP 和域名；</li></ul><p>生成证书和私钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/opt/k8s/work/ca.pem \</span><br><span class="line">-ca-key=/opt/k8s/work/ca-key.pem \</span><br><span class="line">-config=/opt/k8s/work/ca-config.json \</span><br><span class="line">-profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernete</span><br><span class="line">s</span><br><span class="line">ls kubernetes*pem</span><br></pre></td></tr></table></figure><p>将生成的证书和私钥文件拷贝到所有 master 节点：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "mkdir -p /etc/kubernetes/cert"</span><br><span class="line">scp kubernetes*.pem root@$&#123;node_ip&#125;:/etc/kubernetes/cert/</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="创建加密配置文件"><a href="#创建加密配置文件" class="headerlink" title="创建加密配置文件"></a>创建加密配置文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">/opt/k8s/work</span></span><br><span class="line"><span class="string">source</span> <span class="string">/opt/k8s/bin/environment.sh</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">encryption-config.yaml</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">EncryptionConfig</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">  <span class="attr">providers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">aescbc:</span></span><br><span class="line">        <span class="attr">keys:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">key1</span></span><br><span class="line">            <span class="attr">secret:</span> <span class="string">$&#123;ENCRYPTION_KEY&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">identity:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h4 id="将加密配置文件拷贝到-master-节点的-etc-kubernetes-目录下："><a href="#将加密配置文件拷贝到-master-节点的-etc-kubernetes-目录下：" class="headerlink" title="将加密配置文件拷贝到 master 节点的  /etc/kubernetes  目录下："></a>将加密配置文件拷贝到 master 节点的  /etc/kubernetes  目录下：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">scp encryption-config.yaml root@$&#123;node_ip&#125;:/etc/kubernetes/</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="创建审计策略文件"><a href="#创建审计策略文件" class="headerlink" title="创建审计策略文件"></a>创建审计策略文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">/opt/k8s/work</span></span><br><span class="line"><span class="string">source</span> <span class="string">/opt/k8s/bin/environment.sh</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">audit-policy.yaml</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">audit.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Policy</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># The following requests were manually identified as high-volume and low-risk, so drop them.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">services/status</span></span><br><span class="line">    <span class="attr">users:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:kube-proxy'</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">nodes/status</span></span><br><span class="line">    <span class="attr">userGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:nodes'</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">namespaces:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">kube-system</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">    <span class="attr">users:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:kube-controller-manager'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:kube-scheduler'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:serviceaccount:kube-system:endpoint-controller'</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">namespaces/status</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">namespaces/finalize</span></span><br><span class="line">    <span class="attr">users:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:apiserver'</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don't log HPA fetching metrics.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">metrics.k8s.io</span></span><br><span class="line">    <span class="attr">users:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:kube-controller-manager'</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don't log these read-only URLs.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">nonResourceURLs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'/healthz*'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/version</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'/swagger*'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don't log events requests.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">events</span></span><br><span class="line">  <span class="comment"># node and pod status calls from nodes are high-volume and can be large, don't log responses</span></span><br><span class="line">  <span class="comment"># for expected updates from nodes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Request</span></span><br><span class="line">    <span class="attr">omitStages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RequestReceived</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">nodes/status</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">pods/status</span></span><br><span class="line">    <span class="attr">users:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">kubelet</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:node-problem-detector'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:serviceaccount:kube-system:node-problem-detector'</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Request</span></span><br><span class="line">    <span class="attr">omitStages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RequestReceived</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">nodes/status</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">pods/status</span></span><br><span class="line">    <span class="attr">userGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:nodes'</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># deletecollection calls can be large, don't log responses for expected namespace deletions</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Request</span></span><br><span class="line">    <span class="attr">omitStages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RequestReceived</span></span><br><span class="line">    <span class="attr">users:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'system:serviceaccount:kube-system:namespace-controller'</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">deletecollection</span></span><br><span class="line">  <span class="comment"># Secrets, ConfigMaps, and TokenReviews can contain sensitive &amp; binary data,</span></span><br><span class="line">  <span class="comment"># so only log at the Metadata level.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Metadata</span></span><br><span class="line">  <span class="attr">omitStages:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">RequestReceived</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">authentication.k8s.io</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">tokenreviews</span></span><br><span class="line">  <span class="comment"># Get repsonses can be large; skip them.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Request</span></span><br><span class="line">    <span class="attr">omitStages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RequestReceived</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">admissionregistration.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">apiextensions.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">apiregistration.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">apps</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">authentication.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">authorization.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">autoscaling</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">batch</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">certificates.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">extensions</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">metrics.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">networking.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">policy</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">scheduling.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">settings.k8s.io</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">storage.k8s.io</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Default level for known APIs</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">RequestResponse</span></span><br><span class="line">    <span class="attr">omitStages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RequestReceived</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">admissionregistration.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">apiextensions.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">apiregistration.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">apps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">authentication.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">authorization.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">autoscaling</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">batch</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">certificates.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">extensions</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">metrics.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">networking.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">policy</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">scheduling.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">settings.k8s.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">storage.k8s.io</span></span><br><span class="line">  <span class="comment"># Default level for all other requests.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Metadata</span></span><br><span class="line">    <span class="attr">omitStages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RequestReceived</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h4 id="分发审计策略文件："><a href="#分发审计策略文件：" class="headerlink" title="分发审计策略文件："></a>分发审计策略文件：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">scp audit-policy.yaml root@$&#123;node_ip&#125;:/etc/kubernetes/audit-policy.yaml</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="创建后续访问-metrics-server-或-kube-prometheus使用的证书"><a href="#创建后续访问-metrics-server-或-kube-prometheus使用的证书" class="headerlink" title="创建后续访问 metrics-server 或 kube-prometheus使用的证书"></a>创建后续访问 metrics-server 或 kube-prometheus使用的证书</h3><h4 id="创建证书签名请求"><a href="#创建证书签名请求" class="headerlink" title="创建证书签名请求:"></a>创建证书签名请求:</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /<span class="keyword">opt</span>/k8s/work</span><br><span class="line"><span class="keyword">cat</span> &gt; proxy-client-csr.json &lt;&lt; EOF &#123;</span><br><span class="line"><span class="string">"CN"</span>: <span class="string">"aggregator"</span>,</span><br><span class="line"><span class="string">"hosts"</span>: [],</span><br><span class="line"><span class="string">"key"</span>: &#123;</span><br><span class="line"><span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line"><span class="string">"size"</span>: <span class="number">2048</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"names"</span>: [&#123;</span><br><span class="line"><span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line"><span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line"><span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line"><span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line"><span class="string">"OU"</span>: <span class="string">"opsnull"</span></span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>CN 名称需要位于 kube-apiserver 的  –requestheader-allowed-names  参数中，否则后续访问 metrics 时会提示权限不足。</li></ul><h4 id="生成证书和私钥：-2"><a href="#生成证书和私钥：-2" class="headerlink" title="生成证书和私钥："></a>生成证书和私钥：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/cert/ca.pem \</span><br><span class="line">-ca-key=/etc/kubernetes/cert/ca-key.pem \</span><br><span class="line">-config=/etc/kubernetes/cert/ca-config.json \</span><br><span class="line">-profile=kubernetes proxy-client-csr.json | cfssljson -bare proxy-client</span><br><span class="line">ls proxy-client*.pem</span><br></pre></td></tr></table></figure><h4 id="将生成的证书和私钥文件拷贝到所有-master-节点："><a href="#将生成的证书和私钥文件拷贝到所有-master-节点：" class="headerlink" title="将生成的证书和私钥文件拷贝到所有 master 节点："></a>将生成的证书和私钥文件拷贝到所有 master 节点：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">scp proxy-client*.pem root@$&#123;node_ip&#125;:/etc/kubernetes/cert/</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="创建-kube-apiserver-systemd-unit-模板文件"><a href="#创建-kube-apiserver-systemd-unit-模板文件" class="headerlink" title="创建 kube-apiserver systemd unit 模板文件"></a>创建 kube-apiserver systemd unit 模板文件</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">cat &gt; kube-apiserver.service.template &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Kubernetes API Server</span><br><span class="line"><span class="attribute">Documentation</span>=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">WorkingDirectory</span>=<span class="variable">$&#123;K8S_DIR&#125;</span>/kube-apiserver</span><br><span class="line"><span class="attribute">ExecStart</span>=/opt/k8s/bin/kube-apiserver \\</span><br><span class="line">  <span class="attribute">--advertise-address</span>=##NODE_IP## \\</span><br><span class="line">  <span class="attribute">--default-not-ready-toleration-seconds</span>=360 \\</span><br><span class="line">  <span class="attribute">--default-unreachable-toleration-seconds</span>=360 \\</span><br><span class="line">  <span class="attribute">--feature-gates</span>=DynamicAuditing=true \\</span><br><span class="line">  <span class="attribute">--max-mutating-requests-inflight</span>=2000 \\</span><br><span class="line">  <span class="attribute">--max-requests-inflight</span>=4000 \\</span><br><span class="line">  <span class="attribute">--default-watch-cache-size</span>=200 \\</span><br><span class="line">  <span class="attribute">--delete-collection-workers</span>=2 \\</span><br><span class="line">  <span class="attribute">--encryption-provider-config</span>=/etc/kubernetes/encryption-config.yaml\\</span><br><span class="line">  <span class="attribute">--etcd-cafile</span>=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  <span class="attribute">--etcd-certfile</span>=/etc/kubernetes/cert/kubernetes.pem \\</span><br><span class="line">  <span class="attribute">--etcd-keyfile</span>=/etc/kubernetes/cert/kubernetes-key.pem \\</span><br><span class="line">  <span class="attribute">--etcd-servers</span>=<span class="variable">$&#123;ETCD_ENDPOINTS&#125;</span> \\</span><br><span class="line">  <span class="attribute">--bind-address</span>=##NODE_IP## \\</span><br><span class="line">  <span class="attribute">--secure-port</span>=6443 \\</span><br><span class="line">  <span class="attribute">--tls-cert-file</span>=/etc/kubernetes/cert/kubernetes.pem \\</span><br><span class="line">  <span class="attribute">--tls-private-key-file</span>=/etc/kubernetes/cert/kubernetes-key.pem \\</span><br><span class="line">  <span class="attribute">--insecure-port</span>=0 \\</span><br><span class="line">  --audit-dynamic-configuration \\</span><br><span class="line">  <span class="attribute">--audit-log-maxage</span>=15 \\</span><br><span class="line">  <span class="attribute">--audit-log-maxbackup</span>=3 \\</span><br><span class="line">  <span class="attribute">--audit-log-maxsize</span>=100 \\</span><br><span class="line">  --audit-log-truncate-enabled \\</span><br><span class="line">  <span class="attribute">--audit-log-path</span>=<span class="variable">$&#123;K8S_DIR&#125;</span>/kube-apiserver/audit.log \\</span><br><span class="line">  <span class="attribute">--audit-policy-file</span>=/etc/kubernetes/audit-policy.yaml \\</span><br><span class="line">  --profiling \\</span><br><span class="line">  <span class="attribute">--anonymous-auth</span>=<span class="literal">false</span> \\</span><br><span class="line">  <span class="attribute">--client-ca-file</span>=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  --enable-bootstrap-token-auth \\</span><br><span class="line">  <span class="attribute">--requestheader-allowed-names</span>=<span class="string">"aggregator"</span> \\</span><br><span class="line">  <span class="attribute">--requestheader-client-ca-file</span>=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  <span class="attribute">--requestheader-extra-headers-prefix</span>=<span class="string">"X-Remote-Extra-"</span> \\</span><br><span class="line">  <span class="attribute">--requestheader-group-headers</span>=X-Remote-Group \\</span><br><span class="line">  <span class="attribute">--requestheader-username-headers</span>=X-Remote-User \\</span><br><span class="line">  <span class="attribute">--service-account-key-file</span>=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  <span class="attribute">--authorization-mode</span>=Node,RBAC \\</span><br><span class="line">  <span class="attribute">--runtime-config</span>=api/all=true \\</span><br><span class="line">  <span class="attribute">--enable-admission-plugins</span>=NodeRestriction \\</span><br><span class="line">  <span class="attribute">--allow-privileged</span>=<span class="literal">true</span> \\</span><br><span class="line">  <span class="attribute">--apiserver-count</span>=3 \\</span><br><span class="line">  <span class="attribute">--event-ttl</span>=168h \\</span><br><span class="line">  <span class="attribute">--kubelet-certificate-authority</span>=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  <span class="attribute">--kubelet-client-certificate</span>=/etc/kubernetes/cert/kubernetes.pem \\</span><br><span class="line">  <span class="attribute">--kubelet-client-key</span>=/etc/kubernetes/cert/kubernetes-key.pem \\</span><br><span class="line">  <span class="attribute">--kubelet-https</span>=<span class="literal">true</span> \\</span><br><span class="line">  <span class="attribute">--kubelet-timeout</span>=10s \\</span><br><span class="line">  <span class="attribute">--proxy-client-cert-file</span>=/etc/kubernetes/cert/proxy-client.pem \\</span><br><span class="line">  <span class="attribute">--proxy-client-key-file</span>=/etc/kubernetes/cert/proxy-client-key.pem \\</span><br><span class="line">  <span class="attribute">--service-cluster-ip-range</span>=<span class="variable">$&#123;SERVICE_CIDR&#125;</span> \\</span><br><span class="line">  <span class="attribute">--service-node-port-range</span>=<span class="variable">$&#123;NODE_PORT_RANGE&#125;</span> \\</span><br><span class="line">  <span class="attribute">--logtostderr</span>=<span class="literal">true</span> \\</span><br><span class="line">  <span class="attribute">--v</span>=2</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"><span class="attribute">RestartSec</span>=10</span><br><span class="line"><span class="attribute">Type</span>=notify</span><br><span class="line"><span class="attribute">LimitNOFILE</span>=65536</span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><p>–advertise-address  ：apiserver 对外通告的 IP（kubernetes 服务后端节点IP）；</p></li><li><p>–default-*-toleration-seconds  ：设置节点异常相关的阈值；<br>*</p></li><li><p><em>–max-</em>-requests-inflight  ：请求相关的最大阈值；</p></li><li><p>–etcd-*  ：访问 etcd 的证书和 etcd 服务器地址；</p></li><li><p>–bind-address  ： https 监听的 IP，不能为  127.0.0.1  ，否则外界不能访问它的安全端口 6443；</p></li><li><p>–secret-port  ：https 监听端口；</p></li><li><p>–insecure-port=0  ：关闭监听 http 非安全端口(8080)；</p></li><li><p>–tls-*-file  ：指定 apiserver 使用的证书、私钥和 CA 文件；</p></li><li><p>–audit-*  ：配置审计策略和审计日志文件相关的参数；</p></li><li><p>–client-ca-file  ：验证 client (kue-controller-manager、kube-scheduler、kubelet、kube-proxy 等)请求所带的证书；</p></li><li><p>–enable-bootstrap-token-auth  ：启用 kubelet bootstrap 的 token 认证；</p></li><li><p>–requestheader-*  ：kube-apiserver 的 aggregator layer 相关的配置参数，proxy-client &amp; HPA 需要使用；</p></li><li><p>–requestheader-client-ca-file  ：用于签名  –proxy-client-cert-file和  –proxy-client-key-file  指定的证书；在启用了 metric aggregator 时使用；</p></li><li><p>–requestheader-allowed-names  ：不能为空，值为逗号分割的  –proxy-client-cert-file  证书的 CN 名称，这里设置为 “aggregator”；</p></li><li><p>–service-account-key-file  ：签名 ServiceAccount Token 的公钥文件，kube-controller-manager 的  –service-account-private-key-file  指定私钥文件，两者配对使用；</p></li><li><p>–runtime-config=api/all=true  ： 启用所有版本的 APIs，如autoscaling/v2alpha1；</p></li><li><p>–authorization-mode=Node,RBAC  、 –anonymous-auth=false  ： 开启Node 和 RBAC 授权模式，拒绝未授权的请求；</p></li><li><p>–enable-admission-plugins  ：启用一些默认关闭的 plugins；</p></li><li><p>–allow-privileged  ：运行执行 privileged 权限的容器；</p></li><li><p>–apiserver-count=3  ：指定 apiserver 实例的数量；</p></li><li><p>–event-ttl  ：指定 events 的保存时间；</p></li><li><p>–kubelet-*  ：如果指定，则使用 https 访问 kubelet APIs；需要为证书对应的用户(上面 kubernetes*.pem 证书的用户为 kubernetes) 用户定义 RBAC 规则，否则访问 kubelet API 时提示未授权；<br>*</p></li><li><p><em>–proxy-client-</em>  ：apiserver 访问 metrics-server 使用的证书；</p></li><li><p>–service-cluster-ip-range  ： 指定 Service Cluster IP 地址段；</p></li><li><p>–service-node-port-range  ： 指定 NodePort 的端口范围；</p></li></ul><p>如果 kube-apiserver 机器没有运行 kube-proxy，则还需要添加  –enable-aggregator-routing=true  参数；<br>关于  –requestheader-XXX  相关参数，参考：</p><ul><li><a href="https://github.com/kubernetes-incubator/apiserver-builder/blob/master/docs/concepts/auth.md" target="_blank" rel="noopener">https://github.com/kubernetes-incubator/apiserver-builder/blob/master/docs/concepts/auth.md</a></li><li><a href="https://docs.bitnami.com/kubernetes/how-to/configure-autoscaling-custom-metrics/" target="_blank" rel="noopener">https://docs.bitnami.com/kubernetes/how-to/configure-autoscaling-custom-metrics/</a></li></ul><p>注意：</p><ol><li>–requestheader-client-ca-file  指定的 CA 证书，必须具有  client authand server auth  ；</li><li>如果  –requestheader-allowed-names  不为空,且  –proxy-client-cert-file  证书的 CN 名称不在 allowed-names 中，则后续查看 node 或 pods 的metrics 失败，提示：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl top nodes</span></span><br><span class="line">Error from server (Forbidden): nodes.metrics.k8s.io is forbidden:User "aggregator" cannot list resource "nodes" in API group "metrics.k8s.io" at the cluster scope</span><br></pre></td></tr></table></figure><h3 id="为各节点创建和分发-kube-apiserver-systemd-unit文件"><a href="#为各节点创建和分发-kube-apiserver-systemd-unit文件" class="headerlink" title="为各节点创建和分发 kube-apiserver systemd unit文件"></a>为各节点创建和分发 kube-apiserver systemd unit文件</h3><h4 id="替换模板文件中的变量，为各节点生成-systemd-unit-文件："><a href="#替换模板文件中的变量，为各节点生成-systemd-unit-文件：" class="headerlink" title="替换模板文件中的变量，为各节点生成 systemd unit 文件："></a>替换模板文件中的变量，为各节点生成 systemd unit 文件：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for (( i=0; i &lt; 3; i++ ))</span><br><span class="line">do</span><br><span class="line">sed -e "s/##NODE_NAME##/$&#123;NODE_NAMES[i]&#125;/" -e "s/##NODE_IP##/$&#123;NODE_IPS[i]&#125;/" kube-apiserver.service.template &gt; kube-apiserver-$&#123;NODE_IPS[i]&#125;.service</span><br><span class="line">done</span><br><span class="line">ls kube-apiserver*.service</span><br></pre></td></tr></table></figure><ul><li>NODE_NAMES 和 NODE_IPS 为相同长度的 bash 数组，分别为节点名称和对应的 IP；</li></ul><h4 id="分发生成的-systemd-unit-文件："><a href="#分发生成的-systemd-unit-文件：" class="headerlink" title="分发生成的 systemd unit 文件："></a>分发生成的 systemd unit 文件：</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;</span>NODE_IPS[@]&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">echo <span class="string">"&gt;&gt;&gt; $&#123;node_ip&#125;"</span></span><br><span class="line">scp kube-apiserver-<span class="variable">$&#123;</span>node_ip&#125;.service root@<span class="variable">$&#123;</span>node_ip&#125;<span class="symbol">:/etc/systemd/system/kube-apiserver</span>.service</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>启动 kube-apiserver 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "mkdir -p $&#123;K8S_DIR&#125;/kube-apiserver"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "systemctl daemon-reload &amp;&amp; systemctl enable kube-apiserver &amp;&amp; systemctl restart kube-apiserver"</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="检查-kube-apiserver-运行状态"><a href="#检查-kube-apiserver-运行状态" class="headerlink" title="检查 kube-apiserver 运行状态"></a>检查 kube-apiserver 运行状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">for node_ip in $&#123;NODE_IPS[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo "&gt;&gt;&gt; $&#123;node_ip&#125;"</span><br><span class="line">ssh root@$&#123;node_ip&#125; "systemctl status kube-apiserver |grep 'Active:'"</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>确保状态为  active (running)  ，否则查看日志，确认原因：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">journalctl -u kube-apiserver</span></span><br></pre></td></tr></table></figure><h3 id="检查集群状态"><a href="#检查集群状态" class="headerlink" title="检查集群状态"></a>检查集群状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl cluster-info</span></span><br><span class="line">Kubernetes master is running at https://172.27.138.251:6443</span><br><span class="line">To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get all --all-namespaces</span></span><br><span class="line">NAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE</span><br><span class="line">default service/kubernetes ClusterIP 10.254.0.1 &lt;none&gt; 443/TCP 3m53s</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get componentstatuses</span></span><br><span class="line">NAME AGE</span><br><span class="line">controller-manager &lt;unknown&gt;</span><br><span class="line">scheduler &lt;unknown&gt;</span><br><span class="line">etcd-0 &lt;unknown&gt;</span><br><span class="line">etcd-2 &lt;unknown&gt;</span><br><span class="line">etcd-1 &lt;unknown&gt;</span><br></pre></td></tr></table></figure><ul><li>Kubernetes 1.16.6 存在 Bugs 导致返回结果一直为  <unknown>  ，但  kubectlget cs -o yaml  可以返回正确结果；</unknown></li></ul><h3 id="检查-kube-apiserver-监听的端口"><a href="#检查-kube-apiserver-监听的端口" class="headerlink" title="检查 kube-apiserver 监听的端口"></a>检查 kube-apiserver 监听的端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo netstat -lnpt|grep kube</span></span><br><span class="line">tcp 0 0 172.27.138.251:6443 0.0.0.0:* LISTEN 101442/kube-apiserv</span><br></pre></td></tr></table></figure><ul><li>6443: 接收 https 请求的安全端口，对所有请求做认证和授权；</li><li>由于关闭了非安全端口，故没有监听 8080；</li></ul><h2 id="部署高可用-kube-controller-manager-集群"><a href="#部署高可用-kube-controller-manager-集群" class="headerlink" title="部署高可用 kube-controller-manager 集群"></a>部署高可用 kube-controller-manager 集群</h2><p>本文档介绍部署高可用 kube-controller-manager 集群的步骤。</p><p>该集群包含 3 个节点，启动后将通过竞争选举机制产生一个 leader 节点，其它节点为阻塞状态。当 leader 节点不可用时，阻塞的节点将再次进行选举产生新的 leader 节点，从而保证服务的可用性。</p><p>为保证通信安全，本文档先生成 x509 证书和私钥，kube-controller-manager 在如下两种情况下使用该证书：</p><ol><li>与 kube-apiserver 的安全端口通信;</li><li>在安全端口(https，10252) 输出 prometheus 格式的 metrics；</li></ol><p>注意：如果没有特殊指明，本文档的所有操作均在k8s-01 节点上执行。</p><h3 id="创建-kube-controller-manager-证书和私钥"><a href="#创建-kube-controller-manager-证书和私钥" class="headerlink" title="创建 kube-controller-manager 证书和私钥"></a>创建 kube-controller-manager 证书和私钥</h3><h4 id="创建证书签名请求：-3"><a href="#创建证书签名请求：-3" class="headerlink" title="创建证书签名请求："></a>创建证书签名请求：</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">cat &gt; kube-controller-manager-csr.json &lt;&lt; EOF &#123;</span><br><span class="line">"CN": "system:kube-controller-manager",</span><br><span class="line">"key": &#123;</span><br><span class="line">"algo": "rsa",</span><br><span class="line">"size": 2048</span><br><span class="line">&#125;,</span><br><span class="line">"hosts": [</span><br><span class="line">"127.0.0.1",</span><br><span class="line">"172.27.138.251",</span><br><span class="line">"172.27.137.229",</span><br><span class="line"><span class="string">"172.27.138.239"</span></span><br><span class="line">],</span><br><span class="line">"names": [&#123;</span><br><span class="line">"C": "CN",</span><br><span class="line">"ST": "BeiJing",</span><br><span class="line">"L": "BeiJing",</span><br><span class="line">"O": "system:kube-controller-manager",</span><br><span class="line">"OU": "opsnull"</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>hosts 列表包含所有 kube-controller-manager 节点 IP；</li><li>CN 和 O 均为  system:kube-controller-manager  ，kubernetes 内置的ClusterRoleBindings  system:kube-controller-manager  赋予 kube-controller-manager 工作所需的权限。</li></ul><h4 id="生成证书和私钥：-3"><a href="#生成证书和私钥：-3" class="headerlink" title="生成证书和私钥："></a>生成证书和私钥：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cfssl gencert -ca=/opt/k8s/work/ca.pem \</span><br><span class="line">-ca-key=/opt/k8s/work/ca-key.pem \</span><br><span class="line">-config=/opt/k8s/work/ca-config.json \</span><br><span class="line">-profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager</span><br><span class="line">ls kube-controller-manager*pem</span><br></pre></td></tr></table></figure><h4 id="将生成的证书和私钥分发到所有-master-节点："><a href="#将生成的证书和私钥分发到所有-master-节点：" class="headerlink" title="将生成的证书和私钥分发到所有 master 节点："></a>将生成的证书和私钥分发到所有 master 节点：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp kube-controller-manager*.pem root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/kubernetes/cert/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建和分发-kubeconfig-文件"><a href="#创建和分发-kubeconfig-文件" class="headerlink" title="创建和分发 kubeconfig 文件"></a>创建和分发 kubeconfig 文件</h3><p>kube-controller-manager 使用 kubeconfig 文件访问 apiserver，该文件提供了 apiserver地址、嵌入的 CA 证书和 kube-controller-manager 证书等信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/k8s/work/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=<span class="string">"https://##NODE_IP##:6443"</span> \</span><br><span class="line">  --kubeconfig=kube-controller-manager.kubeconfig</span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials system:kube-controller-manager \</span><br><span class="line">  --client-certificate=kube-controller-manager.pem \</span><br><span class="line">  --client-key=kube-controller-manager-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=kube-controller-manager.kubeconfig</span><br><span class="line">kubectl config <span class="built_in">set</span>-context system:kube-controller-manager \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-controller-manager \</span><br><span class="line">  --kubeconfig=kube-controller-manager.kubeconfig</span><br><span class="line">kubectl config use-context system:kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig</span><br></pre></td></tr></table></figure><ul><li>kube-controller-manager 与 kube-apiserver 混布，故直接通过节点 IP 访问 kube-apiserver；</li></ul><h4 id="分发-kubeconfig-到所有-master-节点："><a href="#分发-kubeconfig-到所有-master-节点：" class="headerlink" title="分发 kubeconfig 到所有 master 节点："></a>分发 kubeconfig 到所有 master 节点：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">sed -e <span class="string">"s/##NODE_IP##/<span class="variable">$&#123;node_ip&#125;</span>/"</span> kube-controller-manager.kubeconfig &gt; kube-controller-manager-<span class="variable">$&#123;node_ip&#125;</span>.kubeconfig</span><br><span class="line">scp kube-controller-manager-<span class="variable">$&#123;node_ip&#125;</span>.kubeconfig root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/kubernetes/kube-controller-manager.kubeconfig</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建-kube-controller-manager-systemd-unit-模板文件"><a href="#创建-kube-controller-manager-systemd-unit-模板文件" class="headerlink" title="创建 kube-controller-manager systemd unit 模板文件"></a>创建 kube-controller-manager systemd unit 模板文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">source /opt/k8s/bin/environment.sh</span><br><span class="line">cat &gt; kube-controller-manager.service.template &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=$&#123;K8S_DIR&#125;/kube-controller-manager</span><br><span class="line">ExecStart=/opt/k8s/bin/kube-controller-manager \\</span><br><span class="line">  --profiling \\</span><br><span class="line">  --cluster-name=kubernetes \\</span><br><span class="line">  --controllers=*,bootstrapsigner,tokencleaner \\</span><br><span class="line">  --kube-api-qps=1000 \\</span><br><span class="line">  --kube-api-burst=2000 \\</span><br><span class="line">  --leader-elect \\</span><br><span class="line">  --use-service-account-credentials\\</span><br><span class="line">  --concurrent-service-syncs=2 \\</span><br><span class="line">  --bind-address=##NODE_IP## \\</span><br><span class="line">  --secure-port=10252 \\</span><br><span class="line">  --tls-cert-file=/etc/kubernetes/cert/kube-controller-manager.pem \\</span><br><span class="line">  --tls-private-key-file=/etc/kubernetes/cert/kube-controller-manager-key.pem \\</span><br><span class="line">  --port=0 \\</span><br><span class="line">  --authentication-kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig \\</span><br><span class="line">  --client-ca-file=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  --requestheader-allowed-names="aggregator" \\</span><br><span class="line">  --requestheader-client-ca-file=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  --requestheader-extra-headers-prefix="X-Remote-Extra-" \\</span><br><span class="line">  --requestheader-group-headers=X-Remote-Group \\</span><br><span class="line">  --requestheader-username-headers=X-Remote-User \\</span><br><span class="line">  --authorization-kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig \\</span><br><span class="line">  --cluster-signing-cert-file=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  --cluster-signing-key-file=/etc/kubernetes/cert/ca-key.pem \\</span><br><span class="line">  --experimental-cluster-signing-duration=876000h \\</span><br><span class="line">  --horizontal-pod-autoscaler-sync-period=10s \\</span><br><span class="line">  --concurrent-deployment-syncs=10 \\</span><br><span class="line">  --concurrent-gc-syncs=30 \\</span><br><span class="line">  --node-cidr-mask-size=24 \\</span><br><span class="line">  --service-cluster-ip-range=$&#123;SERVICE_CIDR&#125; \\</span><br><span class="line">  --pod-eviction-timeout=6m \\</span><br><span class="line">  --terminated-pod-gc-threshold=10000 \\</span><br><span class="line">  --root-ca-file=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  --service-account-private-key-file=/etc/kubernetes/cert/ca-key.pem \\</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig \\</span><br><span class="line">  --logtostderr=true \\</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><p><code>--port=0</code>  ：关闭监听非安全端口（http），同时  <code>--address</code>  参数无效， <code>--bind-address</code>  参数有效；</p></li><li><p><code>--secure-port=10252</code>  、 <code>--bind-address=0.0.0.0</code>  : 在所有网络接口监听10252 端口的 https /metrics 请求；</p></li><li><p><code>--kubeconfig</code>  ：指定 kubeconfig 文件路径，kube-controller-manager 使用它连接和验证 kube-apiserver；</p></li><li><p><code>--authentication-kubeconfig</code>  和  <code>--authorization-kubeconfig</code>  ：kube-controller-manager 使用它连接 apiserver，对 client 的请求进行认证和授权。 kube-controller-manager  不再使用  -<code>-tls-ca-file</code>  对请求 httpsmetrics 的 Client 证书进行校验。如果没有配置这两个 kubeconfig 参数，则 client连接 kube-controller-manager https 端口的请求会被拒绝(提示权限不足)。</p></li><li><p><code>--cluster-signing-*-file</code>  ：签名 TLS Bootstrap 创建的证书；</p></li><li><p><code>--experimental-cluster-signing-duration</code>  ：指定 TLS Bootstrap 证书的有效期；</p></li><li><p>–root-ca-file  ：放置到容器 ServiceAccount 中的 CA 证书，用来对 kube-apiserver 的证书进行校验；</p></li><li><p><code>--service-account-private-key-file</code>  ：签名 ServiceAccount 中 Token 的私钥文件，必须和 kube-apiserver 的  –service-account-key-file  指定的公钥文件配对使用；</p></li><li><p><code>--service-cluster-ip-range</code>  ：指定 Service Cluster IP 网段，必须和 kube-apiserver 中的同名参数一致；</p></li><li><p><code>--leader-elect=true</code>  ：集群运行模式，启用选举功能；被选为 leader 的节点负责处理工作，其它节点为阻塞状态；</p></li><li><p><code>--controllers=*,bootstrapsigner,tokencleaner</code>  ：启用的控制器列表，tokencleaner 用于自动清理过期的 Bootstrap token；</p></li><li><p><code>--horizontal-pod-autoscaler-*</code>  ：custom metrics 相关参数，支持autoscaling/v2alpha1；</p></li><li><p><code>--tls-cert-file , --tls-private-key-file</code>  ：使用 https 输出 metrics 时使用的 Server 证书和秘钥；</p></li><li><p><code>--use-service-account-credentials=true</code>  : kube-controller-manager 中各controller 使用 serviceaccount 访问 kube-apiserver；</p></li></ul><h3 id="为各节点创建和分发-kube-controller-manangersystemd-unit-文件"><a href="#为各节点创建和分发-kube-controller-manangersystemd-unit-文件" class="headerlink" title="为各节点创建和分发 kube-controller-manangersystemd unit 文件"></a>为各节点创建和分发 kube-controller-manangersystemd unit 文件</h3><p>替换模板文件中的变量，为各节点创建 systemd unit 文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> (( i=0; i &lt; 3; i++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">sed -e <span class="string">"s/##NODE_NAME##/<span class="variable">$&#123;NODE_NAMES[i]&#125;</span>/"</span> -e <span class="string">"s/##NODE_IP##/<span class="variable">$&#123;NODE_IPS[i]&#125;</span>/"</span> kube-controller-manager.service.template &gt; kube-controller-manager-<span class="variable">$&#123;NODE_IPS[i]&#125;</span>.service</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">ls kube-controller-manager*.service</span><br></pre></td></tr></table></figure><p>分发到所有 master 节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp kube-controller-manager-<span class="variable">$&#123;node_ip&#125;</span>.service root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/systemd/system/kube-controller-manager.service</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="启动-kube-controller-manager-服务"><a href="#启动-kube-controller-manager-服务" class="headerlink" title="启动 kube-controller-manager 服务"></a>启动 kube-controller-manager 服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"mkdir -p <span class="variable">$&#123;K8S_DIR&#125;</span>/kube-controller-manager"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl daemon-reload &amp;&amp; systemctl enable kube-controller-manager &amp;&amp; systemctl restart kube-controller-manager"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="检查服务运行状态"><a href="#检查服务运行状态" class="headerlink" title="检查服务运行状态"></a>检查服务运行状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl status kube-controller-manager|grep Active"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>确保状态为  active (running)  ，否则查看日志，确认原因：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">journalctl -u kube-controller-manager</span></span><br></pre></td></tr></table></figure><p>kube-controller-manager 监听 10252 端口，接收 https 请求：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo netstat -lnpt | grep kube-cont</span><br><span class="line">tcp 0 0 172.27.138.251:10252 0.0.0.0:* LISTEN 108977/kube-control</span><br></pre></td></tr></table></figure><h3 id="查看输出的-metrics"><a href="#查看输出的-metrics" class="headerlink" title="查看输出的 metrics"></a>查看输出的 metrics</h3><p>注意：以下命令在 kube-controller-manager 节点上执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s --cacert /opt/k8s/work/ca.pem --cert /opt/k8s/work/admin.pem --key /opt/k8s/work/admin-key.pem https://172.27.138.251:10252/metrics |head</span><br><span class="line"><span class="comment"># HELP ClusterRoleAggregator_adds (Deprecated) Total number of adds handled by workqueue: ClusterRoleAggregator</span></span><br><span class="line"><span class="comment"># TYPE ClusterRoleAggregator_adds counter</span></span><br><span class="line">ClusterRoleAggregator_adds 3</span><br><span class="line"><span class="comment"># HELP ClusterRoleAggregator_depth (Deprecated) Current depth of workqueue: ClusterRoleAggregator</span></span><br><span class="line"><span class="comment"># TYPE ClusterRoleAggregator_depth gauge</span></span><br><span class="line">ClusterRoleAggregator_depth 0</span><br><span class="line"><span class="comment"># HELP ClusterRoleAggregator_longest_running_processor_microseconds (Deprecated) How many microseconds has the longest running processor for ClusterRoleAggregator been running.</span></span><br><span class="line"><span class="comment"># TYPE ClusterRoleAggregator_longest_running_processor_microseconds gauge</span></span><br><span class="line">ClusterRoleAggregator_longest_running_processor_microseconds 0</span><br><span class="line"><span class="comment"># HELP ClusterRoleAggregator_queue_latency (Deprecated) How long an item stays in workqueueClusterRoleAggregator before being requested.</span></span><br></pre></td></tr></table></figure><h3 id="查看当前的-leader-1"><a href="#查看当前的-leader-1" class="headerlink" title="查看当前的 leader"></a>查看当前的 leader</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get endpoints kube-controller-manager --namespace=kube-system -o yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">annotations:</span><br><span class="line">control-plane.alpha.kubernetes.io/leader: <span class="string">'&#123;"holderIdentity":"zha</span></span><br><span class="line"><span class="string">ngjun-k8s-03_e334e88d-6b52-40e0-b2a1-a6f7e47593e1","leaseDurationSeco</span></span><br><span class="line"><span class="string">nds":15,"acquireTime":"2020-02-07T07:01:32Z","renewTime":"2020-02-07T</span></span><br><span class="line"><span class="string">07:01:44Z","leaderTransitions":1&#125;'</span></span><br><span class="line">creationTimestamp: <span class="string">"2020-02-07T06:59:38Z"</span></span><br><span class="line">name: kube-controller-manager</span><br><span class="line">namespace: kube-system</span><br><span class="line">resourceVersion: <span class="string">"561"</span></span><br><span class="line">selfLink: /api/v1/namespaces/kube-system/endpoints/kube-controller-</span><br><span class="line">manager</span><br><span class="line">uid: e5d52a8c-fe69-4910-a125-d7ec97cead16</span><br></pre></td></tr></table></figure><p>可见，当前的 leader 为 zhangjun-k8s-03 节点。</p><h3 id="测试-kube-controller-manager-集群的高可用"><a href="#测试-kube-controller-manager-集群的高可用" class="headerlink" title="测试 kube-controller-manager 集群的高可用"></a>测试 kube-controller-manager 集群的高可用</h3><p>停掉一个或两个节点的 kube-controller-manager 服务，观察其它节点的日志，看是否获取了 leader 权限。</p><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ol><li>关于 controller 权限和 use-service-account-credentials 参数：<a href="https://github.com/kubernetes/kubernetes/issues/48208" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/issues/48208</a></li><li>kubelet 认证和授权：<a href="https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authorization" target="_blank" rel="noopener">https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubelet-authorization</a></li></ol><h2 id="部署高可用-kube-scheduler-集群"><a href="#部署高可用-kube-scheduler-集群" class="headerlink" title="部署高可用 kube-scheduler 集群"></a>部署高可用 kube-scheduler 集群</h2><p>本文档介绍部署高可用 kube-scheduler 集群的步骤。</p><p>该集群包含 3 个节点，启动后将通过竞争选举机制产生一个 leader 节点，其它节点为阻塞状态。当 leader 节点不可用后，剩余节点将再次进行选举产生新的 leader 节点，从而保证服务的可用性。</p><p>为保证通信安全，本文档先生成 x509 证书和私钥，kube-scheduler 在如下两种情况下<br>使用该证书：</p><ol><li>与 kube-apiserver 的安全端口通信;</li><li>在安全端口(https，10251) 输出 prometheus 格式的 metrics；</li><li>注意：如果没有特殊指明，本文档的所有操作均在 k8s-01 节点上执行。</li></ol><h3 id="创建-kube-scheduler-证书和私钥"><a href="#创建-kube-scheduler-证书和私钥" class="headerlink" title="创建 kube-scheduler 证书和私钥"></a>创建 kube-scheduler 证书和私钥</h3><p>创建证书签名请求：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cat &gt; kube-scheduler-csr.json &lt;&lt; EOF &#123;</span><br><span class="line"><span class="string">"CN"</span>: <span class="string">"system:kube-scheduler"</span>,</span><br><span class="line"><span class="string">"hosts"</span>: [</span><br><span class="line"><span class="string">"127.0.0.1"</span>,</span><br><span class="line"><span class="string">"172.27.138.239"</span>,</span><br><span class="line"><span class="string">"172.27.137.229"</span>,</span><br><span class="line"><span class="string">"172.27.138.251"</span></span><br><span class="line">],</span><br><span class="line"><span class="string">"key"</span>: &#123;</span><br><span class="line"><span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line"><span class="string">"size"</span>: 2048</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"names"</span>: [&#123;</span><br><span class="line"><span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line"><span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line"><span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line"><span class="string">"O"</span>: <span class="string">"system:kube-scheduler"</span>,</span><br><span class="line"><span class="string">"OU"</span>: <span class="string">"opsnull"</span></span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>hosts 列表包含所有 kube-scheduler 节点 IP；</li><li>CN 和 O 均为  system:kube-scheduler  ，kubernetes 内置的ClusterRoleBindings  system:kube-scheduler  将赋予 kube-scheduler 工作所需的权限；</li></ul><p>生成证书和私钥：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cfssl gencert -ca=/opt/k8s/work/ca.pem \</span><br><span class="line">-ca-key=/opt/k8s/work/ca-key.pem \</span><br><span class="line">-config=/opt/k8s/work/ca-config.json \</span><br><span class="line">-profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler</span><br><span class="line">ls kube-scheduler*pem</span><br></pre></td></tr></table></figure><p>将生成的证书和私钥分发到所有 master 节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp kube-scheduler*.pem root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/kubernetes/cert/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建和分发-kubeconfig-文件-1"><a href="#创建和分发-kubeconfig-文件-1" class="headerlink" title="创建和分发 kubeconfig 文件"></a>创建和分发 kubeconfig 文件</h3><p>kube-scheduler 使用 kubeconfig 文件访问 apiserver，该文件提供了 apiserver 地址、嵌入的 CA 证书和 kube-scheduler 证书：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/k8s/work/ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=<span class="string">"https://##NODE_IP##:6443"</span> \</span><br><span class="line">  --kubeconfig=kube-scheduler.kubeconfig</span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials system:kube-scheduler \</span><br><span class="line">  --client-certificate=kube-scheduler.pem \</span><br><span class="line">  --client-key=kube-scheduler-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=kube-scheduler.kubeconfig</span><br><span class="line">kubectl config <span class="built_in">set</span>-context system:kube-scheduler \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-scheduler \</span><br><span class="line">  --kubeconfig=kube-scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context system:kube-scheduler --kubeconfig=kube-sc</span><br><span class="line">heduler.kubeconfig</span><br></pre></td></tr></table></figure><p>分发 kubeconfig 到所有 master 节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">sed -e <span class="string">"s/##NODE_IP##/<span class="variable">$&#123;node_ip&#125;</span>/"</span> kube-scheduler.kubeconfig &gt; kube-scheduler-<span class="variable">$&#123;node_ip&#125;</span>.kubeconfig</span><br><span class="line">scp kube-scheduler-<span class="variable">$&#123;node_ip&#125;</span>.kubeconfig root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/kubernetes/kube-scheduler.kubeconfig</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建-kube-scheduler-配置文件"><a href="#创建-kube-scheduler-配置文件" class="headerlink" title="创建 kube-scheduler 配置文件"></a>创建 kube-scheduler 配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cat &gt;kube-scheduler.yaml.template &lt;&lt;EOF</span><br><span class="line">apiVersion: kubescheduler.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeSchedulerConfiguration</span><br><span class="line">bindTimeoutSeconds: 600</span><br><span class="line">clientConnection:</span><br><span class="line">burst: 200</span><br><span class="line">kubeconfig: <span class="string">"/etc/kubernetes/kube-scheduler.kubeconfig"</span></span><br><span class="line">qps: 100</span><br><span class="line">enableContentionProfiling: <span class="literal">false</span></span><br><span class="line">enableProfiling: <span class="literal">true</span></span><br><span class="line">hardPodAffinitySymmetricWeight: 1</span><br><span class="line">healthzBindAddress: <span class="comment">##NODE_IP##:10251</span></span><br><span class="line">leaderElection:</span><br><span class="line">leaderElect: <span class="literal">true</span></span><br><span class="line">metricsBindAddress: <span class="comment">##NODE_IP##:10251</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>–kubeconfig  ：指定 kubeconfig 文件路径，kube-scheduler 使用它连接和验证kube-apiserver；</li><li>–leader-elect=true  ：集群运行模式，启用选举功能；被选为 leader 的节点负责处理工作，其它节点为阻塞状态；</li></ul><p>替换模板文件中的变量：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> (( i=0; i &lt; 3; i++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">sed -e <span class="string">"s/##NODE_NAME##/<span class="variable">$&#123;NODE_NAMES[i]&#125;</span>/"</span> -e <span class="string">"s/##NODE_IP##/<span class="variable">$&#123;NODE_IPS[i]&#125;</span>/"</span> kube-scheduler.yaml.template &gt; kube-scheduler-<span class="variable">$&#123;NODE_IPS[i]&#125;</span>.yaml</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">ls kube-scheduler*.yaml</span><br></pre></td></tr></table></figure><ul><li>NODE_NAMES 和 NODE_IPS 为相同长度的 bash 数组，分别为节点名称和对应的 IP；</li></ul><p>分发 kube-scheduler 配置文件到所有 master 节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp kube-scheduler-<span class="variable">$&#123;node_ip&#125;</span>.yaml root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/kubernetes/kube-scheduler.yaml</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>重命名为 kube-scheduler.yaml;</p><h3 id="创建-kube-scheduler-systemd-unit-模板文件"><a href="#创建-kube-scheduler-systemd-unit-模板文件" class="headerlink" title="创建 kube-scheduler systemd unit 模板文件"></a>创建 kube-scheduler systemd unit 模板文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">cat &gt; kube-scheduler.service.template &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=<span class="variable">$&#123;K8S_DIR&#125;</span>/kube-scheduler</span><br><span class="line">ExecStart=/opt/k8s/bin/kube-scheduler \\</span><br><span class="line">  --config=/etc/kubernetes/kube-scheduler.yaml \\</span><br><span class="line">  --<span class="built_in">bind</span>-address=<span class="comment">##NODE_IP## \\</span></span><br><span class="line">  --secure-port=10259 \\</span><br><span class="line">  --port=0 \\</span><br><span class="line">  --tls-cert-file=/etc/kubernetes/cert/kube-scheduler.pem \\</span><br><span class="line">  --tls-private-key-file=/etc/kubernetes/cert/kube-scheduler-key.pem \\</span><br><span class="line">  --authentication-kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig \\</span><br><span class="line">  --client-ca-file=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  --requestheader-allowed-names=<span class="string">""</span> \\</span><br><span class="line">  --requestheader-client-ca-file=/etc/kubernetes/cert/ca.pem \\</span><br><span class="line">  --requestheader-extra-headers-prefix=<span class="string">"X-Remote-Extra-"</span> \\</span><br><span class="line">  --requestheader-group-headers=X-Remote-Group \\</span><br><span class="line">  --requestheader-username-headers=X-Remote-User \\</span><br><span class="line">  --authorization-kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig \\</span><br><span class="line">  --logtostderr=<span class="literal">true</span> \\</span><br><span class="line">  --v=2</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line">StartLimitInterval=0</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="为各节点创建和分发-kube-scheduler-systemd-unit文件"><a href="#为各节点创建和分发-kube-scheduler-systemd-unit文件" class="headerlink" title="为各节点创建和分发 kube-scheduler systemd unit文件"></a>为各节点创建和分发 kube-scheduler systemd unit文件</h3><p>替换模板文件中的变量，为各节点创建 systemd unit 文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> (( i=0; i &lt; 3; i++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">sed -e <span class="string">"s/##NODE_NAME##/<span class="variable">$&#123;NODE_NAMES[i]&#125;</span>/"</span> -e <span class="string">"s/##NODE_IP##/<span class="variable">$&#123;NODE_IPS[i]&#125;</span>/"</span> kube-scheduler.service.template &gt; kube-scheduler-<span class="variable">$&#123;NODE_IPS[i]&#125;</span>.service</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">ls kube-scheduler*.service</span><br></pre></td></tr></table></figure><p>分发 systemd unit 文件到所有 master 节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp kube-scheduler-<span class="variable">$&#123;node_ip&#125;</span>.service root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/systemd/system/kube-scheduler.service</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="启动-kube-scheduler-服务"><a href="#启动-kube-scheduler-服务" class="headerlink" title="启动 kube-scheduler 服务"></a>启动 kube-scheduler 服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"mkdir -p <span class="variable">$&#123;K8S_DIR&#125;</span>/kube-scheduler"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl daemon-reload &amp;&amp; systemctl enable kube-scheduler &amp;&amp; systemctl restart kube-scheduler"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="检查服务运行状态-1"><a href="#检查服务运行状态-1" class="headerlink" title="检查服务运行状态"></a>检查服务运行状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl status kube-scheduler|grep Active"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>确保状态为  active (running)  ，否则查看日志，确认原因：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">journalctl </span>-u kube-<span class="keyword">scheduler </span>-f</span><br></pre></td></tr></table></figure><h3 id="查看输出的-metrics-1"><a href="#查看输出的-metrics-1" class="headerlink" title="查看输出的 metrics"></a>查看输出的 metrics</h3><p>注意：以下命令在 kube-scheduler 节点上执行。</p><p>kube-scheduler 监听 10251 和 10259 端口：</p><ul><li><p>10251：接收 http 请求，非安全端口，不需要认证授权；</p></li><li><p>10259：接收 https 请求，安全端口，需要认证授权；</p></li></ul><p>两个接口都对外提供  /metrics  和  /healthz  的访问。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo netstat -lnpt |grep kube-sch</span><br><span class="line">tcp 0 0 172.27.138.251:10251 0.0.0.0:* LISTEN 114702/kube-schedul</span><br><span class="line">tcp 0 0 172.27.138.251:10259 0.0.0.0:* LISTEN 114702/kube-schedul</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s http://172.27.138.251:10251/metrics |head</span><br><span class="line"><span class="comment"># HELP apiserver_audit_event_total Counter of audit events generatedand sent to the audit backend.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_audit_event_total counter</span></span><br><span class="line">apiserver_audit_event_total 0</span><br><span class="line"><span class="comment"># HELP apiserver_audit_requests_rejected_total Counter of apiserver requests rejected due to an error in audit logging backend.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_audit_requests_rejected_total counter</span></span><br><span class="line">apiserver_audit_requests_rejected_total 0</span><br><span class="line"><span class="comment"># HELP apiserver_client_certificate_expiration_seconds Distribution of the remaining lifetime on the certificate used to authenticate a request.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_client_certificate_expiration_seconds histogram</span></span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket&#123;le=<span class="string">"0"</span>&#125; 0</span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket&#123;le=<span class="string">"1800"</span>&#125; 0</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s --cacert /opt/k8s/work/ca.pem --cert /opt/k8s/work/admin.pe</span><br><span class="line">m --key /opt/k8s/work/admin-key.pem https://172.27.138.251:10259/metr</span><br><span class="line">ics |head</span><br><span class="line"><span class="comment"># HELP apiserver_audit_event_total Counter of audit events generatedand sent to the audit backend.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_audit_event_total counter</span></span><br><span class="line">apiserver_audit_event_total 0</span><br><span class="line"><span class="comment"># HELP apiserver_audit_requests_rejected_total Counter of apiserver requests rejected due to an error in audit logging backend.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_audit_requests_rejected_total counter</span></span><br><span class="line">apiserver_audit_requests_rejected_total 0</span><br><span class="line"><span class="comment"># HELP apiserver_client_certificate_expiration_seconds Distribution of the remaining lifetime on the certificate used to authenticate a request.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_client_certificate_expiration_seconds histogram</span></span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket&#123;le=<span class="string">"0"</span>&#125; 0</span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket&#123;le=<span class="string">"1800"</span>&#125; 0</span><br></pre></td></tr></table></figure><h3 id="查看当前的-leader-2"><a href="#查看当前的-leader-2" class="headerlink" title="查看当前的 leader"></a>查看当前的 leader</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get endpoints kube-scheduler --namespace=kube-system -o yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">annotations:</span><br><span class="line">control-plane.alpha.kubernetes.io/leader: <span class="string">'&#123;"holderIdentity":"zha</span></span><br><span class="line"><span class="string">ngjun-k8s-01_ce04632e-64e4-477e-b8f0-4e69020cd996","leaseDurationSeco</span></span><br><span class="line"><span class="string">nds":15,"acquireTime":"2020-02-07T07:05:00Z","renewTime":"2020-02-07T</span></span><br><span class="line"><span class="string">07:05:28Z","leaderTransitions":0&#125;'</span></span><br><span class="line">creationTimestamp: <span class="string">"2020-02-07T07:05:00Z"</span></span><br><span class="line">name: kube-scheduler</span><br><span class="line">namespace: kube-system</span><br><span class="line">resourceVersion: <span class="string">"756"</span></span><br><span class="line">selfLink: /api/v1/namespaces/kube-system/endpoints/kube-scheduler</span><br><span class="line">uid: 1b687724-a6e2-4404-9efb-a1f0e201fecc</span><br></pre></td></tr></table></figure><p>可见，当前的 leader 为 k8s-01 节点。</p><h3 id="测试-kube-scheduler-集群的高可用"><a href="#测试-kube-scheduler-集群的高可用" class="headerlink" title="测试 kube-scheduler 集群的高可用"></a>测试 kube-scheduler 集群的高可用</h3><p>随便找一个或两个 master 节点，停掉 kube-scheduler 服务，看其它节点是否获取了leader 权限。</p><h1 id="部署-worker-节点"><a href="#部署-worker-节点" class="headerlink" title="部署 worker 节点"></a>部署 worker 节点</h1><p>kubernetes worker 节点运行如下组件：</p><ul><li>containerd</li><li>kubelet</li><li>kube-proxy</li><li>calico</li><li>kube-nginx</li></ul><p>注意：如果没有特殊指明，本文档的所有操作均在k8s-01 节点上执行。</p><h2 id="安装依赖包-1"><a href="#安装依赖包-1" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"yum install -y epel-release"</span> &amp;</span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"yum install -y chrony conntrack ipvsadm ipset jq iptables curl sysstat libseccomp wget socat git"</span> &amp;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="apiserver-高可用"><a href="#apiserver-高可用" class="headerlink" title="apiserver 高可用"></a>apiserver 高可用</h2><p>本文档讲解使用 nginx 4 层透明代理功能实现 Kubernetes worker 节点组件高可用访问kube-apiserver 集群的步骤。<br>注意：如果没有特殊指明，本文档的所有操作均在 k8s-01 节点上执行。</p><ul><li>控制节点的 kube-controller-manager、kube-scheduler 是多实例部署且连接本机的kube-apiserver，所以只要有一个实例正常，就可以保证高可用；</li><li>集群内的 Pod 使用 K8S 服务域名 kubernetes 访问 kube-apiserver， kube-dns 会自动解析出多个 kube-apiserver 节点的 IP，所以也是高可用的；</li><li>在每个节点起一个 nginx 进程，后端对接多个 apiserver 实例，nginx 对它们做健康检查和负载均衡；<br>kubelet、kube-proxy 通过本地的 nginx（监听 127.0.0.1）访问 kube-apiserver，从而实现 kube-apiserver 的高可用；</li></ul><h2 id="下载和编译-nginx"><a href="#下载和编译-nginx" class="headerlink" title="下载和编译 nginx"></a>下载和编译 nginx</h2><p>下载源码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">wget http://nginx.org/download/nginx-1.15.3.tar.gz</span><br><span class="line">tar -xzvf nginx-1.15.3.tar.gz</span><br></pre></td></tr></table></figure><h3 id="配置编译参数："><a href="#配置编译参数：" class="headerlink" title="配置编译参数："></a>配置编译参数：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work/nginx-1.15.3</span><br><span class="line">mkdir nginx-prefix</span><br><span class="line">yum install -y gcc make</span><br><span class="line">./configure --with-stream --without-http --prefix=$(<span class="built_in">pwd</span>)/nginx-prefix --without-http_uwsgi_module --without-http_scgi_module --without-http_fastcgi_module</span><br></pre></td></tr></table></figure><ul><li>–with-stream  ：开启 4 层透明转发(TCP Proxy)功能；</li><li>–without-xxx  ：关闭所有其他功能，这样生成的动态链接二进制程序依赖最小；</li></ul><h3 id="编译和安装："><a href="#编译和安装：" class="headerlink" title="编译和安装："></a>编译和安装：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work/nginx-1.15.3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="验证编译的-nginx"><a href="#验证编译的-nginx" class="headerlink" title="验证编译的 nginx"></a>验证编译的 nginx</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work/nginx-1.15.3</span><br><span class="line">./nginx-prefix/sbin/nginx -v</span><br><span class="line">nginx version: nginx/1.15.3</span><br></pre></td></tr></table></figure><h2 id="安装和部署-nginx"><a href="#安装和部署-nginx" class="headerlink" title="安装和部署 nginx"></a>安装和部署 nginx</h2><h3 id="创建目录结构："><a href="#创建目录结构：" class="headerlink" title="创建目录结构："></a>创建目录结构：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"mkdir -p /opt/k8s/kube-nginx/&#123;conf,logs,sbin&#125;"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="拷贝二进制程序："><a href="#拷贝二进制程序：" class="headerlink" title="拷贝二进制程序："></a>拷贝二进制程序：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"mkdir -p /opt/k8s/kube-nginx/&#123;conf,logs,sbin&#125;"</span></span><br><span class="line">scp /opt/k8s/work/nginx-1.15.3/nginx-prefix/sbin/nginx root@<span class="variable">$&#123;node_ip&#125;</span>:/opt/k8s/kube-nginx/sbin/kube-nginx</span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"chmod a+x /opt/k8s/kube-nginx/sbin/*"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li>重命名二进制文件为 kube-nginx；</li></ul><h3 id="配置-nginx，开启-4-层透明转发功能："><a href="#配置-nginx，开启-4-层透明转发功能：" class="headerlink" title="配置 nginx，开启 4 层透明转发功能："></a>配置 nginx，开启 4 层透明转发功能：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cat &gt; kube-nginx.conf &lt;&lt; \EOF</span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">stream &#123;</span><br><span class="line">  upstream backend &#123;</span><br><span class="line">    <span class="built_in">hash</span> <span class="variable">$remote_addr</span> consistent;</span><br><span class="line">      server 172.27.138.251:6443 max_fails=3 fail_timeout=30s;</span><br><span class="line">      server 172.27.137.229:6443 max_fails=3 fail_timeout=30s;</span><br><span class="line">      server 172.27.138.239:6443 max_fails=3 fail_timeout=30s;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">server &#123;</span><br><span class="line">  listen 127.0.0.1:8443;</span><br><span class="line">  proxy_connect_timeout 1s;</span><br><span class="line">  proxy_pass backend;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>upstream backend  中的 server 列表为集群中各 kube-apiserver 的节点 IP，需要根据实际情况修改；</li></ul><p>分发配置文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp kube-nginx.conf root@<span class="variable">$&#123;node_ip&#125;</span>:/opt/k8s/kube-nginx/conf/kube-nginx.conf</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="配置-systemd-unit-文件，启动服务"><a href="#配置-systemd-unit-文件，启动服务" class="headerlink" title="配置 systemd unit 文件，启动服务"></a>配置 systemd unit 文件，启动服务</h3><p>配置 kube-nginx systemd unit 文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cat &gt; kube-nginx.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=kube-apiserver nginx proxy</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStartPre=/opt/k8s/kube-nginx/sbin/kube-nginx -c /opt/k8s/kube-ngi</span><br><span class="line">nx/conf/kube-nginx.conf -p /opt/k8s/kube-nginx -t</span><br><span class="line">ExecStart=/opt/k8s/kube-nginx/sbin/kube-nginx -c /opt/k8s/kube-nginx/</span><br><span class="line">conf/kube-nginx.conf -p /opt/k8s/kube-nginx</span><br><span class="line">ExecReload=/opt/k8s/kube-nginx/sbin/kube-nginx -c /opt/k8s/kube-nginx</span><br><span class="line">/conf/kube-nginx.conf -p /opt/k8s/kube-nginx -s reload</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line">StartLimitInterval=0</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="分发-systemd-unit-文件："><a href="#分发-systemd-unit-文件：" class="headerlink" title="分发 systemd unit 文件："></a>分发 systemd unit 文件：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp kube-nginx.service root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/systemd/system/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="启动-kube-nginx-服务："><a href="#启动-kube-nginx-服务：" class="headerlink" title="启动 kube-nginx 服务："></a>启动 kube-nginx 服务：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl daemon-reload &amp;&amp; systemctl enable kube-nginx &amp;&amp; systemctl restart kube-nginx"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="检查-kube-nginx-服务运行状态"><a href="#检查-kube-nginx-服务运行状态" class="headerlink" title="检查 kube-nginx 服务运行状态"></a>检查 kube-nginx 服务运行状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl status kube-nginx |grep 'Active:'"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#确保状态为  active (running)  ，否则查看日志，确认原因：</span></span><br><span class="line">journalctl -u kube-nginx</span><br></pre></td></tr></table></figure><h2 id="部署-containerd-组件"><a href="#部署-containerd-组件" class="headerlink" title="部署 containerd 组件"></a>部署 containerd 组件</h2><p>containerd 实现了 kubernetes 的 Container Runtime Interface (CRI) 接口，提供容器运行时核心功能，如镜像管理、容器管理等，相比 dockerd 更加简单、健壮和可移植。</p><p>注意：</p><ol><li>如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s01 节点上执行。</li><li>如果想使用 docker，请参考附件 F.部署docker.md；</li><li>docker 需要与 flannel 配合使用，且先安装 flannel；</li></ol><h3 id="下载和分发二进制文件"><a href="#下载和分发二进制文件" class="headerlink" title="下载和分发二进制文件"></a>下载和分发二进制文件</h3><p>下载二进制文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">wget https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.17.0/crictl-v1.17.0-linux-amd64.tar.gz \</span><br><span class="line">https://github.com/opencontainers/runc/releases/download/v1.0.0-rc10/runc.amd64 \</span><br><span class="line">https://github.com/containernetworking/plugins/releases/download/v0.8.5/cni-plugins-linux-amd64-v0.8.5.tgz \</span><br><span class="line">https://github.com/containerd/containerd/releases/download/v1.3.3/containerd-1.3.3.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>解压：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">mkdir containerd</span><br><span class="line">tar -xvf containerd-1.3.3.linux-amd64.tar.gz -C containerd</span><br><span class="line">tar -xvf crictl-v1.17.0-linux-amd64.tar.gz</span><br><span class="line">mkdir cni-plugins</span><br><span class="line">sudo tar -xvf cni-plugins-linux-amd64-v0.8.5.tgz -C cni-plugins</span><br><span class="line">sudo mv runc.amd64 runc</span><br></pre></td></tr></table></figure><p>分发二进制文件到所有 worker 节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp containerd/bin/* crictl cni-plugins/* runc root@<span class="variable">$&#123;node_ip&#125;</span>:/opt/k8s/bin</span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"chmod a+x /opt/k8s/bin/* &amp;&amp; mkdir -p /etc/cni/net.d"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建和分发-containerd-配置文件"><a href="#创建和分发-containerd-配置文件" class="headerlink" title="创建和分发 containerd 配置文件"></a>创建和分发 containerd 配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">cat &lt;&lt; EOF | sudo tee containerd-config.toml</span><br><span class="line">version = 2</span><br><span class="line">root = <span class="string">"<span class="variable">$&#123;CONTAINERD_DIR&#125;</span>/root"</span></span><br><span class="line">state = <span class="string">"<span class="variable">$&#123;CONTAINERD_DIR&#125;</span>/state"</span></span><br><span class="line"></span><br><span class="line">[plugins]</span><br><span class="line">[plugins.<span class="string">"io.containerd.grpc.v1.cri"</span>]</span><br><span class="line">sandbox_image = <span class="string">"registry.cn-beijing.aliyuncs.com/images_k8s/paus</span></span><br><span class="line"><span class="string">e-amd64:3.1"</span></span><br><span class="line">[plugins.<span class="string">"io.containerd.grpc.v1.cri"</span>.cni]</span><br><span class="line">bin_dir = <span class="string">"/opt/k8s/bin"</span></span><br><span class="line">conf_dir = <span class="string">"/etc/cni/net.d"</span></span><br><span class="line">[plugins.<span class="string">"io.containerd.runtime.v1.linux"</span>]</span><br><span class="line">    shim = <span class="string">"containerd-shim"</span></span><br><span class="line">    runtime = <span class="string">"runc"</span></span><br><span class="line">    runtime_root = <span class="string">""</span></span><br><span class="line">    no_shim = <span class="literal">false</span></span><br><span class="line">    shim_debug = <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"mkdir -p /etc/containerd/ <span class="variable">$&#123;CONTAINERD_DIR&#125;</span>/&#123;root,state&#125;"</span></span><br><span class="line">scp containerd-config.toml root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/containerd/config.toml</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建-containerd-systemd-unit-文件"><a href="#创建-containerd-systemd-unit-文件" class="headerlink" title="创建 containerd systemd unit 文件"></a>创建 containerd systemd unit 文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cat &lt;&lt;EOF | sudo tee containerd.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=containerd container runtime</span><br><span class="line">Documentation=https://containerd.io</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">"PATH=/opt/k8s/bin:/bin:/sbin:/usr/bin:/usr/sbin"</span></span><br><span class="line">ExecStartPre=/sbin/modprobe overlay</span><br><span class="line">ExecStart=/opt/k8s/bin/containerd</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line">Delegate=yes</span><br><span class="line">KillMode=process</span><br><span class="line">OOMScoreAdjust=-999</span><br><span class="line">LimitNOFILE=1048576</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="分发-systemd-unit-文件，启动-containerd-服务"><a href="#分发-systemd-unit-文件，启动-containerd-服务" class="headerlink" title="分发 systemd unit 文件，启动 containerd 服务"></a>分发 systemd unit 文件，启动 containerd 服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp containerd.service root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/systemd/system</span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl enable containerd &amp;&amp; systemctl restart containerd"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建和分发-crictl-配置文件"><a href="#创建和分发-crictl-配置文件" class="headerlink" title="创建和分发 crictl 配置文件"></a>创建和分发 crictl 配置文件</h3><p>crictl 是兼容 CRI 容器运行时的命令行工具，提供类似于 docker 命令的功能。具体参考官方文档。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cat &lt;&lt; EOF | sudo tee crictl.yaml</span><br><span class="line">runtime-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line">image-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line">timeout: 10</span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>分发到所有 worker 节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">scp crictl.yaml root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/crictl.yaml</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="部署-kubelet-组件"><a href="#部署-kubelet-组件" class="headerlink" title="部署 kubelet 组件"></a>部署 kubelet 组件</h2><p>kubelet 运行在每个 worker 节点上，接收 kube-apiserver 发送的请求，管理 Pod 容器，执行交互式命令，如 exec、run、logs 等。</p><p>kubelet 启动时自动向 kube-apiserver 注册节点信息，内置的 cadvisor 统计和监控节点的资源使用情况。</p><p>为确保安全，部署时关闭了 kubelet 的非安全 http 端口，对请求进行认证和授权，拒绝未授权的访问(如 apiserver、heapster 的请求)。</p><p>注意：如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s-01 节点上执行。</p><h3 id="下载和分发-kubelet-二进制文件"><a href="#下载和分发-kubelet-二进制文件" class="headerlink" title="下载和分发 kubelet 二进制文件"></a>下载和分发 kubelet 二进制文件</h3><p>参考 05-1.部署master节点。</p><h3 id="创建-kubelet-bootstrap-kubeconfig-文件"><a href="#创建-kubelet-bootstrap-kubeconfig-文件" class="headerlink" title="创建 kubelet bootstrap kubeconfig 文件"></a>创建 kubelet bootstrap kubeconfig 文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_name <span class="keyword">in</span> <span class="variable">$&#123;NODE_NAMES[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_name&#125;</span>"</span></span><br><span class="line"><span class="comment"># 创建 token</span></span><br><span class="line"><span class="built_in">export</span> BOOTSTRAP_TOKEN=$(kubeadm token create \</span><br><span class="line">--description kubelet-bootstrap-token \</span><br><span class="line">--groups system:bootstrappers:<span class="variable">$&#123;node_name&#125;</span> \</span><br><span class="line">--kubeconfig ~/.kube/config)</span><br><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">--certificate-authority=/etc/kubernetes/cert/ca.pem \</span><br><span class="line">--embed-certs=<span class="literal">true</span> \</span><br><span class="line">--server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">--kubeconfig=kubelet-bootstrap-<span class="variable">$&#123;node_name&#125;</span>.kubeconfig</span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kubelet-bootstrap \</span><br><span class="line">--token=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">--kubeconfig=kubelet-bootstrap-<span class="variable">$&#123;node_name&#125;</span>.kubeconfig</span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">--cluster=kubernetes \</span><br><span class="line">--user=kubelet-bootstrap \</span><br><span class="line">--kubeconfig=kubelet-bootstrap-<span class="variable">$&#123;node_name&#125;</span>.kubeconfig</span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=kubelet-bootstrap-<span class="variable">$&#123;node_name&#125;</span>.kubeconfig</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li>向 kubeconfig 写入的是 token，bootstrap 结束后 kube-controller-manager 为kubelet 创建 client 和 server 证书；</li></ul><p>查看 kubeadm 为各节点创建的 token：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm token list --kubeconfig ~/.kube/config</span><br><span class="line">TOKEN TTL EXPIRES USAGE</span><br><span class="line">S DESCRIPTION EXTRA GROUPS</span><br><span class="line">2sb8wy.euialqfpxfbcljby 23h 2020-02-08T15:36:30+08:00 authe</span><br><span class="line">ntication,signing kubelet-bootstrap-token system:bootstrappers:zh</span><br><span class="line">angjun-k8s-02</span><br><span class="line">ta7onm.fcen74h0mczyfbz2 23h 2020-02-08T15:36:30+08:00 authe</span><br><span class="line">ntication,signing kubelet-bootstrap-token system:bootstrappers:zh</span><br><span class="line">angjun-k8s-01</span><br><span class="line">xk27zp.tylnvywx9kc8sq87 23h 2020-02-08T15:36:30+08:00 authe</span><br><span class="line">ntication,signing kubelet-bootstrap-token system:bootstrappers:zh</span><br><span class="line">angjun-k8s-03</span><br></pre></td></tr></table></figure><ul><li><p>token 有效期为 1 天，超期后将不能再被用来 boostrap kubelet，且会被 kube-controller-manager 的 tokencleaner 清理；</p></li><li><p>kube-apiserver 接收 kubelet 的 bootstrap token 后，将请求的 user 设置为system:bootstrap:<Token id>  ，group 设置为  system:bootstrappers  ，后续将为这个 group 设置 ClusterRoleBinding；</Token></p></li></ul><h3 id="分发-bootstrap-kubeconfig-文件到所有-worker-节点"><a href="#分发-bootstrap-kubeconfig-文件到所有-worker-节点" class="headerlink" title="分发 bootstrap kubeconfig 文件到所有 worker 节点"></a>分发 bootstrap kubeconfig 文件到所有 worker 节点</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_name <span class="keyword">in</span> <span class="variable">$&#123;NODE_NAMES[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_name&#125;</span>"</span></span><br><span class="line">scp kubelet-bootstrap-<span class="variable">$&#123;node_name&#125;</span>.kubeconfig root@<span class="variable">$&#123;node_name&#125;</span>:/etc/kubernetes/kubelet-bootstrap.kubeconfig</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建和分发-kubelet-参数配置文件"><a href="#创建和分发-kubelet-参数配置文件" class="headerlink" title="创建和分发 kubelet 参数配置文件"></a>创建和分发 kubelet 参数配置文件</h3><p>从 v1.10 开始，部分 kubelet 参数需在配置文件中配置， kubelet –help  会提示：</p><p><code>DEPRECATED: This parameter should be set via the config file specified by the Kubelet&#39;s --config flag</code></p><p>创建 kubelet 参数配置文件模板（可配置项参考代码中注释）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">/opt/k8s/work</span></span><br><span class="line"><span class="string">source</span> <span class="string">/opt/k8s/bin/environment.sh</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">kubelet-config.yaml.template</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">address:</span> <span class="string">"##NODE_IP##"</span></span><br><span class="line"><span class="attr">staticPodPath:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">syncFrequency:</span> <span class="string">1m</span></span><br><span class="line"><span class="attr">fileCheckFrequency:</span> <span class="string">20s</span></span><br><span class="line"><span class="attr">httpCheckFrequency:</span> <span class="string">20s</span></span><br><span class="line"><span class="attr">staticPodURL:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">10250</span></span><br><span class="line"><span class="attr">readOnlyPort:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">rotateCertificates:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">serverTLSBootstrap:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">authentication:</span></span><br><span class="line"><span class="attr">anonymous:</span></span><br><span class="line"><span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">webhook:</span></span><br><span class="line"><span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">x509:</span></span><br><span class="line"><span class="attr">clientCAFile:</span> <span class="string">"/etc/kubernetes/cert/ca.pem"</span></span><br><span class="line"><span class="attr">authorization:</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">Webhook</span></span><br><span class="line"><span class="attr">registryPullQPS:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">registryBurst:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">eventRecordQPS:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">eventBurst:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">enableDebuggingHandlers:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">enableContentionProfiling:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">healthzPort:</span> <span class="number">10248</span></span><br><span class="line"><span class="attr">healthzBindAddress:</span> <span class="string">"##NODE_IP##"</span></span><br><span class="line"><span class="attr">clusterDomain:</span> <span class="string">"$&#123;CLUSTER_DNS_DOMAIN&#125;"</span></span><br><span class="line"><span class="attr">clusterDNS:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">"$&#123;CLUSTER_DNS_SVC_IP&#125;"</span></span><br><span class="line"><span class="attr">nodeStatusUpdateFrequency:</span> <span class="string">10s</span></span><br><span class="line"><span class="attr">nodeStatusReportFrequency:</span> <span class="string">1m</span></span><br><span class="line"><span class="attr">imageMinimumGCAge:</span> <span class="string">2m</span></span><br><span class="line"><span class="attr">imageGCHighThresholdPercent:</span> <span class="number">85</span></span><br><span class="line"><span class="attr">imageGCLowThresholdPercent:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">volumeStatsAggPeriod:</span> <span class="string">1m</span></span><br><span class="line"><span class="attr">kubeletCgroups:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">systemCgroups:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">cgroupRoot:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">cgroupsPerQOS:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">cgroupDriver:</span> <span class="string">cgroupfs</span></span><br><span class="line"><span class="attr">runtimeRequestTimeout:</span> <span class="string">10m</span></span><br><span class="line"><span class="attr">hairpinMode:</span> <span class="string">promiscuous-bridge</span></span><br><span class="line"><span class="attr">maxPods:</span> <span class="number">220</span></span><br><span class="line"><span class="attr">podCIDR:</span> <span class="string">"$&#123;CLUSTER_CIDR&#125;"</span></span><br><span class="line"><span class="attr">podPidsLimit:</span> <span class="number">-1</span></span><br><span class="line"><span class="attr">resolvConf:</span> <span class="string">/etc/resolv.conf</span></span><br><span class="line"><span class="attr">maxOpenFiles:</span> <span class="number">1000000</span></span><br><span class="line"><span class="attr">kubeAPIQPS:</span> <span class="number">1000</span></span><br><span class="line"><span class="attr">kubeAPIBurst:</span> <span class="number">2000</span></span><br><span class="line"><span class="attr">serializeImagePulls:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">evictionHard:</span></span><br><span class="line">  <span class="attr">memory.available:</span> <span class="string">"100Mi"</span></span><br><span class="line">  <span class="attr">nodefs.available:</span> <span class="string">"10%"</span></span><br><span class="line">  <span class="attr">nodefs.inodesFree:</span> <span class="string">"5%"</span></span><br><span class="line">  <span class="attr">imagefs.available:</span> <span class="string">"15%"</span></span><br><span class="line"><span class="attr">evictionSoft:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">enableControllerAttachDetach:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">failSwapOn:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">containerLogMaxSize:</span> <span class="string">20Mi</span></span><br><span class="line"><span class="attr">containerLogMaxFiles:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">systemReserved:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">kubeReserved:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">systemReservedCgroup:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">kubeReservedCgroup:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">enforceNodeAllocatable:</span> <span class="string">["pods"]</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><ul><li>address：kubelet 安全端口（https，10250）监听的地址，不能为 127.0.0.1，否则kube-apiserver、heapster 等不能调用 kubelet 的 API；</li><li>readOnlyPort=0：关闭只读端口(默认 10255)，等效为未指定；</li><li>authentication.anonymous.enabled：设置为 false，不允许匿名访问 10250 端口；</li><li>authentication.x509.clientCAFile：指定签名客户端证书的 CA 证书，开启 HTTP 证书认证；</li><li>authentication.webhook.enabled=true：开启 HTTPs bearer token 认证；</li><li>对于未通过 x509 证书和 webhook 认证的请求(kube-apiserver 或其他客户端)，将被拒绝，提示 Unauthorized；</li><li>authroization.mode=Webhook：kubelet 使用 SubjectAccessReview API 查询kube-apiserver 某 user、group 是否具有操作资源的权限(RBAC)；</li><li>featureGates.RotateKubeletClientCertificate、featureGates.RotateKubeletServerCertificate：自动 rotate 证书，证书的有效期取决于 kube-controller-manager 的 –experimental-cluster-signing-duration 参数；</li><li>需要 root 账户运行；</li></ul><p>为各节点创建和分发 kubelet 配置文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">sed -e <span class="string">"s/##NODE_IP##/<span class="variable">$&#123;node_ip&#125;</span>/"</span> kubelet-config.yaml.template &gt;</span><br><span class="line">kubelet-config-<span class="variable">$&#123;node_ip&#125;</span>.yaml.template</span><br><span class="line">scp kubelet-config-<span class="variable">$&#123;node_ip&#125;</span>.yaml.template root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/kubernetes/kubelet-config.yaml</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建和分发-kubelet-systemd-unit-文件"><a href="#创建和分发-kubelet-systemd-unit-文件" class="headerlink" title="创建和分发 kubelet systemd unit 文件"></a>创建和分发 kubelet systemd unit 文件</h3><p>创建 kubelet systemd unit 文件模板：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">cat &gt; kubelet.service.template &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=containerd.service</span><br><span class="line">Requires=containerd.service</span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=<span class="variable">$&#123;K8S_DIR&#125;</span>/kubelet</span><br><span class="line">ExecStart=/opt/k8s/bin/kubelet \\</span><br><span class="line">  --bootstrap-kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig \\</span><br><span class="line">  --cert-dir=/etc/kubernetes/cert \\</span><br><span class="line">  --network-plugin=cni \\</span><br><span class="line">  --cni-conf-dir=/etc/cni/net.d \\</span><br><span class="line">  --container-runtime=remote \\</span><br><span class="line">  --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock \\</span><br><span class="line">  --root-dir=<span class="variable">$&#123;K8S_DIR&#125;</span>/kubelet \\</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \\</span><br><span class="line">  --config=/etc/kubernetes/kubelet-config.yaml \\</span><br><span class="line">  --hostname-override=<span class="comment">##NODE_NAME## \\</span></span><br><span class="line">  --image-pull-progress-deadline=15m \\</span><br><span class="line">  --volume-plugin-dir=<span class="variable">$&#123;K8S_DIR&#125;</span>/kubelet/kubelet-plugins/volume/<span class="built_in">exec</span>/ \\</span><br><span class="line">  --logtostderr=<span class="literal">true</span> \\</span><br><span class="line">  --v=2</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line">StartLimitInterval=0</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>如果设置了  –hostname-override  选项，则  kube-proxy  也需要设置该选项，否则会出现找不到 Node 的情况；</li><li>–bootstrap-kubeconfig  ：指向 bootstrap kubeconfig 文件，kubelet 使用该文件中的用户名和 token 向 kube-apiserver 发送 TLS Bootstrapping 请求；</li><li>K8S approve kubelet 的 csr 请求后，在  –cert-dir  目录创建证书和私钥文件，然后写入  –kubeconfig  文件；</li><li>–pod-infra-container-image  不使用 redhat 的  pod-infrastructure:latest  镜像，它不能回收僵尸容器；</li></ul><p>为各节点创建和分发 kubelet systemd unit 文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_name <span class="keyword">in</span> <span class="variable">$&#123;NODE_NAMES[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_name&#125;</span>"</span></span><br><span class="line">sed -e <span class="string">"s/##NODE_NAME##/<span class="variable">$&#123;node_name&#125;</span>/"</span> kubelet.service.template &gt; kubelet-<span class="variable">$&#123;node_name&#125;</span>.service</span><br><span class="line">scp kubelet-<span class="variable">$&#123;node_name&#125;</span>.service root@<span class="variable">$&#123;node_name&#125;</span>:/etc/systemd/system/kubelet.service</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="授予-kube-apiserver-访问-kubelet-API-的权限"><a href="#授予-kube-apiserver-访问-kubelet-API-的权限" class="headerlink" title="授予 kube-apiserver 访问 kubelet API 的权限"></a>授予 kube-apiserver 访问 kubelet API 的权限</h3><p>在执行 kubectl exec、run、logs 等命令时，apiserver 会将请求转发到 kubelet 的 https端口。这里定义 RBAC 规则，授权 apiserver 使用的证书（kubernetes.pem）用户名（CN：kuberntes-master）访问 kubelet API 的权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kube-apiserver:kubelet-apis --clusterrole=system:kubelet-api-admin --user kubernetes-master</span><br></pre></td></tr></table></figure><h3 id="Bootstrap-Token-Auth-和授予权限"><a href="#Bootstrap-Token-Auth-和授予权限" class="headerlink" title="Bootstrap Token Auth 和授予权限"></a>Bootstrap Token Auth 和授予权限</h3><p>kubelet 启动时查找  –kubeletconfig  参数对应的文件是否存在，如果不存在则使用–bootstrap-kubeconfig  指定的 kubeconfig 文件向 kube-apiserver 发送证书签名请求 (CSR)。</p><p>kube-apiserver 收到 CSR 请求后，对其中的 Token 进行认证，认证通过后将请求的user 设置为  system:bootstrap:<Token id>  ，group 设置为system:bootstrappers  ，这一过程称为  Bootstrap Token Auth  。</Token></p><p>默认情况下，这个 user 和 group 没有创建 CSR 的权限，kubelet 启动失败，错误日志如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sudo journalctl -u kubelet -a |grep -A 2 <span class="string">'certificatesigningrequests'</span></span><br><span class="line">May 26 12:13:41 zhangjun-k8s-01 kubelet[128468]: I0526 12:13:41.79823</span><br><span class="line">0 128468 certificate_manager.go:366] Rotating certificates</span><br><span class="line">May 26 12:13:41 zhangjun-k8s-01 kubelet[128468]: E0526 12:13:41.80199</span><br><span class="line">7 128468 certificate_manager.go:385] Failed <span class="keyword">while</span> requesting a signe</span><br><span class="line">d certificate from the master: cannot create certificate signing requ</span><br><span class="line">est: certificatesigningrequests.certificates.k8s.io is forbidden: Use</span><br><span class="line">r <span class="string">"system:bootstrap:82jfrm"</span> cannot create resource <span class="string">"certificatesignin</span></span><br><span class="line"><span class="string">grequests"</span> <span class="keyword">in</span> API group <span class="string">"certificates.k8s.io"</span> at the cluster scope</span><br></pre></td></tr></table></figure><p>解决办法是：创建一个 clusterrolebinding，将 group system:bootstrappers 和clusterrole system:node-bootstrapper 绑定：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --group=system:bootstrappers</span><br></pre></td></tr></table></figure><h3 id="自动-approve-CSR-请求，生成-kubelet-client-证书"><a href="#自动-approve-CSR-请求，生成-kubelet-client-证书" class="headerlink" title="自动 approve CSR 请求，生成 kubelet client 证书"></a>自动 approve CSR 请求，生成 kubelet client 证书</h3><p><strong>kubelet 创建 CSR 请求后，下一步需要创建被 approve，有两种方式：</strong></p><ol><li><strong>kube-controller-manager 自动 aprrove；</strong></li><li><strong>手动使用命令  kubectl certificate approve  ；</strong></li></ol><p><strong>CSR 被 approve 后，kubelet 向 kube-controller-manager 请求创建 client 证书，kube-controller-manager 中的  csrapproving  controller 使用  SubjectAccessReview  API来检查 kubelet 请求（对应的 group 是 system:bootstrappers）是否具有相应的权限。创建三个 ClusterRoleBinding，分别授予 group system:bootstrappers 和 groupsystem:nodes 进行 approve client、renew client、renew server 证书的权限（servercsr 是手动 approve 的，见后文）：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">/opt/k8s/work</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">csr-crb.yaml</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line"><span class="comment"># Approve all CSRs for the group "system:bootstrappers"</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">auto-approve-csrs-for-group</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Group</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">system:bootstrappers</span></span><br><span class="line"><span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">system:certificates.k8s.io:certificatesigningrequests:nodecl</span></span><br><span class="line"><span class="string">ient</span></span><br><span class="line"><span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># To let a node of the group "system:nodes" renew its own credential</span></span><br><span class="line"><span class="string">s</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">node-client-cert-renewal</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Group</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">system:nodes</span></span><br><span class="line"><span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">system:certificates.k8s.io:certificatesigningrequests:selfnodeclient</span></span><br><span class="line"><span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># A ClusterRole which instructs the CSR approver to approve a node requesting a</span></span><br><span class="line"><span class="comment"># serving cert matching its client cert.</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">approve-node-server-renewal-csr</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["certificates.k8s.io"]</span></span><br><span class="line"><span class="attr">resources:</span> <span class="string">["certificatesigningrequests/selfnodeserver"]</span></span><br><span class="line"><span class="attr">verbs:</span> <span class="string">["create"]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># To let a node of the group "system:nodes" renew its own server credentials</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">node-server-cert-renewal</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Group</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">system:nodes</span></span><br><span class="line"><span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">approve-node-server-renewal-csr</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">apply</span> <span class="string">-f</span> <span class="string">csr-crb.yaml</span></span><br></pre></td></tr></table></figure><ul><li><strong>auto-approve-csrs-for-group：自动 approve node 的第一次 CSR； 注意第一次CSR 时，请求的 Group 为 system:bootstrappers；</strong></li><li><strong>node-client-cert-renewal：自动 approve node 后续过期的 client 证书，自动生成的证书 Group 为 system:nodes;</strong></li><li><strong>node-server-cert-renewal：自动 approve node 后续过期的 server 证书，自动生成的证书 Group 为 system:nodes;</strong></li></ul><h3 id="启动-kubelet-服务"><a href="#启动-kubelet-服务" class="headerlink" title="启动 kubelet 服务"></a>启动 kubelet 服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"mkdir -p <span class="variable">$&#123;K8S_DIR&#125;</span>/kubelet/kubelet-plugins/volume/exec/"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"/usr/sbin/swapoff -a"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl daemon-reload &amp;&amp; systemctl enable kubelet &amp;&amp; systemctl restart kubelet"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>启动服务前必须先创建工作目录；</strong></p></li><li><p><strong>关闭 swap 分区，否则 kubelet 会启动失败；</strong></p></li></ul><p><strong>kubelet 启动后使用 –bootstrap-kubeconfig 向 kube-apiserver 发送 CSR 请求，当这个CSR 被 approve 后，kube-controller-manager 为 kubelet 创建 TLS 客户端证书、私钥和 –kubeletconfig 文件。</strong></p><p><strong>注意：kube-controller-manager 需要配置  –cluster-signing-cert-file  和  –cluster-signing-key-file  参数，才会为 TLS Bootstrap 创建证书和私钥。</strong></p><h3 id="查看-kubelet-情况"><a href="#查看-kubelet-情况" class="headerlink" title="查看 kubelet 情况"></a>查看 kubelet 情况</h3><p>稍等一会，三个节点的 CSR 都被自动 approved：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get csr</span><br><span class="line">NAME AGE REQUESTOR CONDITION</span><br><span class="line">csr-5rwzm 43s system:node:zhangjun-k8s-01 Pending</span><br><span class="line">csr-65nms 55s system:bootstrap:2sb8wy Approved,Issued</span><br><span class="line">csr-8t5hj 42s system:node:zhangjun-k8s-02 Pending</span><br><span class="line">csr-jkhhs 41s system:node:zhangjun-k8s-03 Pending</span><br><span class="line">csr-jv7dn 56s system:bootstrap:ta7onm Approved,Issued</span><br><span class="line">csr-vb6p5 54s system:bootstrap:xk27zp Approved,Issued</span><br></pre></td></tr></table></figure><ul><li><strong>Pending 的 CSR 用于创建 kubelet server 证书，需要手动 approve，参考后文。</strong></li></ul><p>所有节点均注册（NotReady 状态是预期的，后续安装了网络插件后就好）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get node</span><br><span class="line">NAME STATUS ROLES AGE VERSION</span><br><span class="line">zhangjun-k8s-01 NotReady &lt;none&gt; 10h v1.16.6</span><br><span class="line">zhangjun-k8s-02 NotReady &lt;none&gt; 10h v1.16.6</span><br><span class="line">zhangjun-k8s-03 NotReady &lt;none&gt; 10h v1.16.6</span><br></pre></td></tr></table></figure><p>kube-controller-manager 为各 node 生成了 kubeconfig 文件和公私钥：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l /etc/kubernetes/kubelet.kubeconfig</span><br><span class="line">-rw------- 1 root root 2246 Feb 7 15:38 /etc/kubernetes/kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line">$ ls -l /etc/kubernetes/cert/kubelet-client-*</span><br><span class="line">-rw------- 1 root root 1281 Feb 7 15:38 /etc/kubernetes/cert/kubelet-client-2020-02-07-15-38-21.pem</span><br><span class="line">lrwxrwxrwx 1 root root 59 Feb 7 15:38 /etc/kubernetes/cert/kubelet-client-current.pem -&gt; /etc/kubernetes/cert/kubelet-client-2020-02-07-15-38-21.pem</span><br></pre></td></tr></table></figure><p>没有自动生成 kubelet server 证书；</p><h3 id="手动-approve-server-cert-csr"><a href="#手动-approve-server-cert-csr" class="headerlink" title="手动 approve server cert csr"></a>手动 approve server cert csr</h3><p>基于安全性考虑，CSR approving controllers 不会自动 approve kubelet server 证书签名请求，需要手动 approve：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get csr</span><br><span class="line">NAME AGE REQUESTOR CONDITION</span><br><span class="line">csr-5rwzm 3m22s system:node:zhangjun-k8s-01 Pending</span><br><span class="line">csr-65nms 3m34s system:bootstrap:2sb8wy Approved,Issued</span><br><span class="line">csr-8t5hj 3m21s system:node:zhangjun-k8s-02 Pending</span><br><span class="line">csr-jkhhs 3m20s system:node:zhangjun-k8s-03 Pending</span><br><span class="line">csr-jv7dn 3m35s system:bootstrap:ta7onm Approved,Issued</span><br><span class="line">csr-vb6p5 3m33s system:bootstrap:xk27zp Approved,Issued</span><br><span class="line">$ <span class="comment"># 手动 approve</span></span><br><span class="line">$ kubectl get csr | grep Pending | awk <span class="string">'&#123;print $1&#125;'</span> | xargs kubectl certificate approve</span><br><span class="line">$ <span class="comment"># 自动生成了 server 证书</span></span><br><span class="line">$ ls -l /etc/kubernetes/cert/kubelet-*</span><br><span class="line">-rw------- 1 root root 1281 Feb 7 15:38 /etc/kubernetes/cert/kubelet-client-2020-02-07-15-38-21.pem</span><br><span class="line">lrwxrwxrwx 1 root root 59 Feb 7 15:38 /etc/kubernetes/cert/kubelet-client-current.pem -&gt; /etc/kubernetes/cert/kubelet-client-2020-02-07-15-38-21.pem</span><br><span class="line">-rw------- 1 root root 1330 Feb 7 15:42 /etc/kubernetes/cert/kubelet-server-2020-02-07-15-42-12.pem</span><br><span class="line">lrwxrwxrwx 1 root root 59 Feb 7 15:42 /etc/kubernetes/cert/kubelet-server-current.pem -&gt; /etc/kubernetes/cert/kubelet-server-2020-02-07-15-42-12.pem</span><br></pre></td></tr></table></figure><h3 id="kubelet-api-认证和授权"><a href="#kubelet-api-认证和授权" class="headerlink" title="kubelet api 认证和授权"></a>kubelet api 认证和授权</h3><p>kubelet 配置了如下认证参数：</p><ul><li><p>authentication.anonymous.enabled：设置为 false，不允许匿名访问 10250 端口；</p></li><li><p>authentication.x509.clientCAFile：指定签名客户端证书的 CA 证书，开启 HTTPs证书认证；</p></li><li><p>authentication.webhook.enabled=true：开启 HTTPs bearer token 认证；</p><p>同时配置了如下授权参数：</p></li><li><p>authroization.mode=Webhook：开启 RBAC 授权；</p></li></ul><p>kubelet 收到请求后，使用 clientCAFile 对证书签名进行认证，或者查询 bearer token是否有效。如果两者都没通过，则拒绝请求，提示  Unauthorized  ：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s --cacert /etc/kubernetes/cert/ca.pem https://172.27.138.251:10250/metrics</span><br><span class="line">Unauthorized</span><br><span class="line">$ curl -s --cacert /etc/kubernetes/cert/ca.pem -H <span class="string">"Authorization: Bearer 123456"</span> https://172.27.138.251:10250/metrics</span><br><span class="line">Unauthorized</span><br></pre></td></tr></table></figure><h4 id="证书认证和授权"><a href="#证书认证和授权" class="headerlink" title="证书认证和授权"></a>证书认证和授权</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># 权限不足的证书；</span></span><br><span class="line">$ curl -s --cacert /etc/kubernetes/cert/ca.pem --cert /etc/kubernetes/cert/kube-controller-manager.pem --key /etc/kubernetes/cert/kube-controller-manager-key.pem https://172.27.138.251:10250/metrics</span><br><span class="line">Forbidden (user=system:kube-controller-manager, verb=get, resource=nodes, subresource=metrics)</span><br><span class="line">$ <span class="comment"># 使用部署 kubectl 命令行工具时创建的、具有最高权限的 admin 证书；</span></span><br><span class="line">$ curl -s --cacert /etc/kubernetes/cert/ca.pem --cert /opt/k8s/work/a</span><br><span class="line">dmin.pem --key /opt/k8s/work/admin-key.pem https://172.27.138.251:102</span><br><span class="line">50/metrics|head</span><br><span class="line"><span class="comment"># HELP apiserver_audit_event_total Counter of audit events generatedand sent to the audit backend.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_audit_event_total counter</span></span><br><span class="line">apiserver_audit_event_total 0</span><br><span class="line"><span class="comment"># HELP apiserver_audit_requests_rejected_total Counter of apiserver requests rejected due to an error in audit logging backend.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_audit_requests_rejected_total counter</span></span><br><span class="line">apiserver_audit_requests_rejected_total 0</span><br><span class="line"><span class="comment"># HELP apiserver_client_certificate_expiration_seconds Distribution of the remaining lifetime on the certificate used to authenticate a request.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_client_certificate_expiration_seconds histogram</span></span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket&#123;le=<span class="string">"0"</span>&#125; 0</span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket&#123;le=<span class="string">"1800"</span>&#125; 0</span><br></pre></td></tr></table></figure><ul><li>–cacert  、 –cert  、 –key  的参数值必须是文件路径，如上面的./admin.pem  不能省略  ./  ，否则返回  401 Unauthorized  ；</li></ul><h3 id="bear-token-认证和授权"><a href="#bear-token-认证和授权" class="headerlink" title="bear token 认证和授权"></a>bear token 认证和授权</h3><p>创建一个 ServiceAccount，将它和 ClusterRole system:kubelet-api-admin 绑定，从而具有调用 kubelet API 的权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl create sa kubelet-api-test</span><br><span class="line">kubectl create clusterrolebinding kubelet-api-test --clusterrole=system:kubelet-api-admin --serviceaccount=default:kubelet-api-test</span><br><span class="line">SECRET=$(kubectl get secrets | grep kubelet-api-test | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line">TOKEN=$(kubectl describe secret <span class="variable">$&#123;SECRET&#125;</span> | grep -E <span class="string">'^token'</span> | awk <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;TOKEN&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s --cacert /etc/kubernetes/cert/ca.pem -H <span class="string">"Authorization: Bearer <span class="variable">$&#123;TOKEN&#125;</span>"</span> https://172.27.138.251:10250/metrics | head</span><br><span class="line"><span class="comment"># HELP apiserver_audit_event_total Counter of audit events generatedand sent to the audit backend.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_audit_event_total counter</span></span><br><span class="line">apiserver_audit_event_total 0</span><br><span class="line"><span class="comment"># HELP apiserver_audit_requests_rejected_total Counter of apiserver requests rejected due to an error in audit logging backend.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_audit_requests_rejected_total counter</span></span><br><span class="line">apiserver_audit_requests_rejected_total 0</span><br><span class="line"><span class="comment"># HELP apiserver_client_certificate_expiration_seconds Distribution of the remaining lifetime on the certificate used to authenticate a request.</span></span><br><span class="line"><span class="comment"># TYPE apiserver_client_certificate_expiration_seconds histogram</span></span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket&#123;le=<span class="string">"0"</span>&#125; 0</span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket&#123;le=<span class="string">"1800"</span>&#125; 0</span><br></pre></td></tr></table></figure><h3 id="cadvisor-和-metrics"><a href="#cadvisor-和-metrics" class="headerlink" title="cadvisor 和 metrics"></a>cadvisor 和 metrics</h3><p>cadvisor 是内嵌在 kubelet 二进制中的，统计所在节点各容器的资源(CPU、内存、磁盘、网卡)使用情况的服务。</p><p>浏览器访问 <a href="https://172.27.138.251:10250/metrics" target="_blank" rel="noopener">https://172.27.138.251:10250/metrics</a> 和<a href="https://172.27.138.251:10250/metrics/cadvisor" target="_blank" rel="noopener">https://172.27.138.251:10250/metrics/cadvisor</a> 分别返回 kubelet 和 cadvisor 的metrics。</p><p>注意：</p><p>kubelet.config.json 设置 authentication.anonymous.enabled 为 false，不允许匿名证书访问 10250 的 https 服务；<br>参考 浏览器访问kube-apiserver安全端口，创建和导入相关证书，然后访问上面的 10250 端口；</p><h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><ol><li>kubelet 认证和授权：<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/" target="_blank" rel="noopener">https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/</a></li></ol><h2 id="部署-kube-proxy-组件"><a href="#部署-kube-proxy-组件" class="headerlink" title="部署 kube-proxy 组件"></a>部署 kube-proxy 组件</h2><p>kube-proxy 运行在所有 worker 节点上，它监听 apiserver 中 service 和 endpoint 的变化情况，创建路由规则以提供服务 IP 和负载均衡功能。</p><p>本文档讲解部署 ipvs 模式的 kube-proxy 过程。</p><p>注意：如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s-01 节点上执行，然后远程分发文件和执行命令。</p><h3 id="下载和分发-kube-proxy-二进制文件"><a href="#下载和分发-kube-proxy-二进制文件" class="headerlink" title="下载和分发 kube-proxy 二进制文件"></a>下载和分发 kube-proxy 二进制文件</h3><p>参考 05-1.部署master节点.md。</p><h3 id="创建-kube-proxy-证书"><a href="#创建-kube-proxy-证书" class="headerlink" title="创建 kube-proxy 证书"></a>创建 kube-proxy 证书</h3><p>创建证书签名请求：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/k8s/work</span><br><span class="line">cat &gt; kube-proxy-csr.json &lt;&lt; EOF &#123;</span><br><span class="line">"CN": "system:kube-proxy",</span><br><span class="line">"key": &#123;</span><br><span class="line">"algo": "rsa",</span><br><span class="line">"size": 2048</span><br><span class="line">&#125;,</span><br><span class="line">"names": [&#123;</span><br><span class="line">"C": "CN",</span><br><span class="line">"ST": "BeiJing",</span><br><span class="line">"L": "BeiJing",</span><br><span class="line">"O": "k8s",</span><br><span class="line">"OU": "opsnull"</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>CN：指定该证书的 User 为  system:kube-proxy  ；</li><li>预定义的 RoleBinding  system:node-proxier  将User  system:kube-proxy  与Role  system:node-proxier  绑定，该 Role 授予了调用  kube-apiserverProxy 相关 API 的权限；</li><li>该证书只会被 kube-proxy 当做 client 证书使用，所以 hosts 字段为空；</li></ul><p>生成证书和私钥：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">cfssl gencert -ca=/opt/k8s/work/ca.pem \</span><br><span class="line">-ca-key=/opt/k8s/work/ca-key.pem \</span><br><span class="line">-config=/opt/k8s/work/ca-config.json \</span><br><span class="line">-profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy</span><br><span class="line">ls kube-proxy*</span><br></pre></td></tr></table></figure><h3 id="创建和分发-kubeconfig-文件-2"><a href="#创建和分发-kubeconfig-文件-2" class="headerlink" title="创建和分发 kubeconfig 文件"></a>创建和分发 kubeconfig 文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">--certificate-authority=/opt/k8s/work/ca.pem \</span><br><span class="line">--embed-certs=<span class="literal">true</span> \</span><br><span class="line">--server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">--kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kube-proxy \</span><br><span class="line">--client-certificate=kube-proxy.pem \</span><br><span class="line">--client-key=kube-proxy-key.pem \</span><br><span class="line">--embed-certs=<span class="literal">true</span> \</span><br><span class="line">--kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">--cluster=kubernetes \</span><br><span class="line">--user=kube-proxy \</span><br><span class="line">--kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure><p>分发 kubeconfig 文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_name <span class="keyword">in</span> <span class="variable">$&#123;NODE_NAMES[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_name&#125;</span>"</span></span><br><span class="line">scp kube-proxy.kubeconfig root@<span class="variable">$&#123;node_name&#125;</span>:/etc/kubernetes/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建-kube-proxy-配置文件"><a href="#创建-kube-proxy-配置文件" class="headerlink" title="创建 kube-proxy 配置文件"></a>创建 kube-proxy 配置文件</h3><p>从 v1.10 开始，kube-proxy 部分参数可以配置文件中配置。可以使用  –write-config-to  选项生成该配置文件，或者参考 源代码的注释。</p><p>创建 kube-proxy config 文件模板：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">cat &gt; kube-proxy-config.yaml.template &lt;&lt;EOF</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">clientConnection:</span><br><span class="line">  burst: 200</span><br><span class="line">  kubeconfig: <span class="string">"/etc/kubernetes/kube-proxy.kubeconfig"</span></span><br><span class="line">  qps: 100</span><br><span class="line">bindAddress: <span class="comment">##NODE_IP##</span></span><br><span class="line">healthzBindAddress: <span class="comment">##NODE_IP##:10256</span></span><br><span class="line">metricsBindAddress: <span class="comment">##NODE_IP##:10249</span></span><br><span class="line">enableProfiling: <span class="literal">true</span></span><br><span class="line">clusterCIDR: <span class="variable">$&#123;CLUSTER_CIDR&#125;</span></span><br><span class="line">hostnameOverride: <span class="comment">##NODE_NAME##</span></span><br><span class="line">mode: <span class="string">"ipvs"</span></span><br><span class="line">portRange: <span class="string">""</span></span><br><span class="line">iptables:</span><br><span class="line">masqueradeAll: <span class="literal">false</span></span><br><span class="line">ipvs:</span><br><span class="line">scheduler: rr</span><br><span class="line">excludeCIDRs: []</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>bindAddress  : 监听地址；</li><li>clientConnection.kubeconfig  : 连接 apiserver 的 kubeconfig 文件；</li><li>clusterCIDR  : kube-proxy 根据  –cluster-cidr  判断集群内部和外部流量，指定  –cluster-cidr  或  –masquerade-all  选项后 kube-proxy 才会对访问Service IP 的请求做 SNAT；</li><li>hostnameOverride  : 参数值必须与 kubelet 的值一致，否则 kube-proxy 启动后会找不到该 Node，从而不会创建任何 ipvs 规则；</li><li>mode  : 使用 ipvs 模式；</li></ul><p>为各节点创建和分发 kube-proxy 配置文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> (( i=0; i &lt; 3; i++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;NODE_NAMES[i]&#125;</span>"</span></span><br><span class="line">sed -e <span class="string">"s/##NODE_NAME##/<span class="variable">$&#123;NODE_NAMES[i]&#125;</span>/"</span> -e <span class="string">"s/##NODE_IP##/<span class="variable">$&#123;NODE_IPS[i]&#125;</span>/"</span> kube-proxy-config.yaml.template &gt; kube-proxy-config-<span class="variable">$&#123;NODE_NAMES[i]&#125;</span>.yaml.template</span><br><span class="line">scp kube-proxy-config-<span class="variable">$&#123;NODE_NAMES[i]&#125;</span>.yaml.template root@<span class="variable">$&#123;NODE_NAMES[i]&#125;</span>:/etc/kubernetes/kube-proxy-config.yaml</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="创建和分发-kube-proxy-systemd-unit-文件"><a href="#创建和分发-kube-proxy-systemd-unit-文件" class="headerlink" title="创建和分发 kube-proxy systemd unit 文件"></a>创建和分发 kube-proxy systemd unit 文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">cat &gt; kube-proxy.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kube-Proxy Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=<span class="variable">$&#123;K8S_DIR&#125;</span>/kube-proxy</span><br><span class="line">ExecStart=/opt/k8s/bin/kube-proxy \\</span><br><span class="line">  --config=/etc/kubernetes/kube-proxy-config.yaml \\</span><br><span class="line">  --logtostderr=<span class="literal">true</span> \\</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>分发 kube-proxy systemd unit 文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_name <span class="keyword">in</span> <span class="variable">$&#123;NODE_NAMES[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_name&#125;</span>"</span></span><br><span class="line">scp kube-proxy.service root@<span class="variable">$&#123;node_name&#125;</span>:/etc/systemd/system/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="启动-kube-proxy-服务"><a href="#启动-kube-proxy-服务" class="headerlink" title="启动 kube-proxy 服务"></a>启动 kube-proxy 服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"mkdir -p <span class="variable">$&#123;K8S_DIR&#125;</span>/kube-proxy"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"modprobe ip_vs_rr"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl daemon-reload &amp;&amp; systemctl enable kube-proxy &amp;&amp; systemctl restart kube-proxy"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="检查启动结果-1"><a href="#检查启动结果-1" class="headerlink" title="检查启动结果"></a>检查启动结果</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"systemctl status kube-proxy|grep Active"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>确保状态为  active (running)  ，否则查看日志，确认原因：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -u kube-proxy</span><br></pre></td></tr></table></figure><h3 id="查看监听端口"><a href="#查看监听端口" class="headerlink" title="查看监听端口"></a>查看监听端口</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo netstat -lnpt|grep kube-prox</span><br><span class="line">tcp 0 0 172.27.138.251:10256 0.0.0.0:* LISTEN 30590/kube-proxy</span><br><span class="line">tcp 0 0 172.27.138.251:10249 0.0.0.0:* LISTEN 30590/kube-proxy</span><br></pre></td></tr></table></figure><ul><li>10249：http prometheus metrics port;</li><li>10256：http healthz port;</li></ul><p>查看 ipvs 路由规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"/usr/sbin/ipvsadm -ln"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>预期输出：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; 172.27.138.251</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">-&gt; RemoteAddress:Port Forward Weight ActiveConn InActConnTCP 10.254.0.1:443 rr</span><br><span class="line">-&gt; 172.27.137.229:6443 Masq 1 0 0</span><br><span class="line">-&gt; 172.27.138.239:6443 Masq 1 0 0</span><br><span class="line">-&gt; 172.27.138.251:6443 Masq 1 0 0</span><br><span class="line">&gt;&gt;&gt; 172.27.137.229</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">-&gt; RemoteAddress:Port Forward Weight ActiveConn InActConnTCP 10.254.0.1:443 rr</span><br><span class="line">-&gt; 172.27.137.229:6443 Masq 1 0 0</span><br><span class="line">-&gt; 172.27.138.239:6443 Masq 1 0 0</span><br><span class="line">-&gt; 172.27.138.251:6443 Masq 1 0 0</span><br><span class="line">&gt;&gt;&gt; 172.27.138.239</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">-&gt; RemoteAddress:Port Forward Weight ActiveConn InActConnTCP 10.254.0.1:443 rr</span><br><span class="line">-&gt; 172.27.137.229:6443 Masq 1 0 0</span><br><span class="line">-&gt; 172.27.138.239:6443 Masq 1 0 0</span><br><span class="line">-&gt; 172.27.138.251:6443 Masq 1 0 0</span><br></pre></td></tr></table></figure><p>可见所有通过 https 访问 K8S SVC kubernetes 的请求都转发到 kube-apiserver 节点的6443 端口；</p><h2 id="部署-calico-网络"><a href="#部署-calico-网络" class="headerlink" title="部署 calico 网络"></a>部署 calico 网络</h2><p>kubernetes 要求集群内各节点(包括 master 节点)能通过 Pod 网段互联互通。</p><p>calico 使用 IPIP 或 BGP 技术（默认为 IPIP）为各节点创建一个可以互通的 Pod 网络。</p><p>如果使用 flannel，请参考附件 E.部署flannel网络.md（flannel 与 docker 结合使用）</p><p>注意：如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s01 节点上执行。</p><h3 id="安装-calico-网络插件"><a href="#安装-calico-网络插件" class="headerlink" title="安装 calico 网络插件"></a>安装 calico 网络插件</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/opt/</span>k8s/work</span><br><span class="line">curl <span class="string">https:</span><span class="comment">//docs.projectcalico.org/manifests/calico.yaml -O</span></span><br></pre></td></tr></table></figure><p>修改配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">cp</span> <span class="string">calico.yaml</span> <span class="string">calico.yaml.orig</span></span><br><span class="line"><span class="string">$</span> <span class="string">diff</span> <span class="string">calico.yaml.orig</span> <span class="string">calico.yaml</span></span><br><span class="line"><span class="string">630c630,632</span></span><br><span class="line"><span class="string">&lt;</span> <span class="attr">value:</span> <span class="string">"192.168.0.0/16"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">&gt;</span> <span class="attr">value:</span> <span class="string">"172.30.0.0/16"</span></span><br><span class="line"><span class="string">&gt;</span> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">IP_AUTODETECTION_METHOD</span></span><br><span class="line"><span class="string">&gt;</span> <span class="attr">value:</span> <span class="string">"interface=eth.*"</span></span><br><span class="line"><span class="string">699c701</span></span><br><span class="line"><span class="string">&lt;</span> <span class="attr">path:</span> <span class="string">/opt/cni/bin</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">&gt;</span> <span class="attr">path:</span> <span class="string">/opt/k8s/bin</span></span><br></pre></td></tr></table></figure><p>将 Pod 网段地址修改为  172.30.0.0/16  ;<br>calico 自动探查互联网卡，如果有多快网卡，则可以配置用于互联的网络接口命名正则表达式，如上面的  eth.*  (根据自己服务器的网络接口名修改)；</p><p>运行 calico 插件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f calico.yaml</span><br></pre></td></tr></table></figure><ul><li>calico 插架以 daemonset 方式运行在所有的 K8S 节点上。</li></ul><p>查看 calico 运行状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pods -n kube-system -o wide</span><br><span class="line">NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINE SS GATES</span><br><span class="line">calico-kube-controllers-77c4b7448-99lfq 1/1 Running 0 2m11s 172.30.184.128 </span><br><span class="line">zhangjun-k8s-03 &lt;none&gt; &lt;none&gt;calico-node-dxnjs 1/1 Running 0</span><br><span class="line">2m11s 172.27.137.229 zhangjun-k8s-02 &lt;none&gt; &lt;none&gt;calico-node-rknzz 1/1 Running 0</span><br><span class="line">2m11s 172.27.138.239 zhangjun-k8s-03 &lt;none&gt; &lt;none&gt;calico-node-rw84c 1/1 Running 0</span><br><span class="line">2m11s 172.27.138.251 zhangjun-k8s-01 &lt;none&gt; &lt;none&gt;</span><br></pre></td></tr></table></figure><p>使用 crictl 命令查看 calico 使用的镜像：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ crictl images</span><br><span class="line">IMAGE TAGIMAGE ID SIZE</span><br><span class="line">docker.io/calico/cni v3<span class="number">.12</span><span class="number">.0</span> cb6799752c46c <span class="number">66.5</span>MB</span><br><span class="line">docker.io/calico/node v3<span class="number">.12</span><span class="number">.0</span> fc05bc4225f39 <span class="number">89.7</span>MB</span><br><span class="line">docker.io/calico/pod2daemon-flexvol v3<span class="number">.12</span><span class="number">.0</span> <span class="number">98793</span>d0a88c82 <span class="number">37.5</span>MB</span><br><span class="line">registry.cn-beijing.aliyuncs.com/images_k8s/pause-amd64 <span class="number">3.121</span>a595adc69ca <span class="number">326</span>kB</span><br></pre></td></tr></table></figure><ul><li>如果 crictl 输出为空或执行失败，则有可能是缺少配置文件  /etc/crictl.yaml导致的，该文件的配置如下：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/crictl.yaml</span><br><span class="line">runtime-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line">image-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line">timeout: 10</span><br><span class="line">debug: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h1 id="验证集群功能"><a href="#验证集群功能" class="headerlink" title="验证集群功能"></a>验证集群功能</h1><p>本文档验证 K8S 集群是否工作正常。</p><p>注意：如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s-01 节点上执行，然后远程分发文件和执行命令。</p><h2 id="检查节点状态"><a href="#检查节点状态" class="headerlink" title="检查节点状态"></a>检查节点状态</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get nodes</span><br><span class="line">NAME STATUS ROLES AGE VERSION</span><br><span class="line">zhangjun-k8s-01 Ready &lt;none&gt; 15m v1.16.6</span><br><span class="line">zhangjun-k8s-02 Ready &lt;none&gt; 15m v1.16.6</span><br><span class="line">zhangjun-k8s-03 Ready &lt;none&gt; 15m v1.16.6</span><br></pre></td></tr></table></figure><p>都为 Ready 且版本为 v1.16.6 时正常。</p><h2 id="创建测试文件"><a href="#创建测试文件" class="headerlink" title="创建测试文件"></a>创建测试文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">/opt/k8s/work</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">nginx-ds.yml</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">nginx-ds</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">nginx-ds</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">matchLabels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line"><span class="attr">template:</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">containers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-nginx</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">nginx:1.7.9</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f nginx-ds.yml</span><br></pre></td></tr></table></figure><p>检查各节点的 Pod IP 连通性</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pods -o wide -l app=nginx-ds</span><br><span class="line">NAME READY STATUS RESTARTS AGE IPNODE NOMINATED NODE READINESS GATES</span><br><span class="line">nginx-ds-j7v5g 1/1 Running 0 61s 172.30.244.1zhangjun-k8s-01 &lt;none&gt; &lt;none&gt;</span><br><span class="line">nginx-ds-js8g8 1/1 Running 0 61s 172.30.82.129 zhangjun-k8s-02 &lt;none&gt; &lt;none&gt;</span><br><span class="line">nginx-ds-n2p4x 1/1 Running 0 61s 172.30.184.130  zhangjun-k8s-03 &lt;none&gt; &lt;none&gt;</span><br></pre></td></tr></table></figure><p>在所有 Node 上分别 ping 上面三个 Pod IP，看是否连通：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh <span class="variable">$&#123;node_ip&#125;</span> <span class="string">"ping -c 1 172.30.244.1"</span></span><br><span class="line">ssh <span class="variable">$&#123;node_ip&#125;</span> <span class="string">"ping -c 1 172.30.82.129"</span></span><br><span class="line">ssh <span class="variable">$&#123;node_ip&#125;</span> <span class="string">"ping -c 1 172.30.184.130"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="检查服务-IP-和端口可达性"><a href="#检查服务-IP-和端口可达性" class="headerlink" title="检查服务 IP 和端口可达性"></a>检查服务 IP 和端口可达性</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get svc -l app=nginx-ds</span><br><span class="line">NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE</span><br><span class="line">nginx-ds NodePort 10.254.116.22 &lt;none&gt; 80:30562/TCP 2m7s</span><br></pre></td></tr></table></figure><p>可见：</p><ul><li>Service Cluster IP：10.254.116.22</li><li>服务端口：80</li><li>NodePort 端口：30562</li></ul><p>在所有 Node 上 curl Service IP：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh <span class="variable">$&#123;node_ip&#125;</span> <span class="string">"curl -s 10.254.116.22"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>预期输出 nginx 欢迎页面内容。</p><h2 id="检查服务的-NodePort-可达性"><a href="#检查服务的-NodePort-可达性" class="headerlink" title="检查服务的 NodePort 可达性"></a>检查服务的 NodePort 可达性</h2><p>在所有 Node 上执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">ssh <span class="variable">$&#123;node_ip&#125;</span> <span class="string">"curl -s <span class="variable">$&#123;node_ip&#125;</span>:30562"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>预期输出 nginx 欢迎页面内容。</p><h1 id="部署集群插件"><a href="#部署集群插件" class="headerlink" title="部署集群插件"></a>部署集群插件</h1><p>插件是集群的附件组件，丰富和完善了集群的功能。</p><h2 id="部署-coredns-插件"><a href="#部署-coredns-插件" class="headerlink" title="部署 coredns 插件"></a>部署 coredns 插件</h2><p>如果没有特殊指明，本文档的所有操作均在 k8s-01 节点上执行；</p><h3 id="下载和配置-coredns"><a href="#下载和配置-coredns" class="headerlink" title="下载和配置 coredns"></a>下载和配置 coredns</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/coredns/deployment.git</span><br><span class="line">mv deployment coredns-deployment</span><br></pre></td></tr></table></figure><h3 id="创建-coredns"><a href="#创建-coredns" class="headerlink" title="创建 coredns"></a>创建 coredns</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work/coredns-deployment/kubernetes</span><br><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line">./deploy.sh -i <span class="variable">$&#123;CLUSTER_DNS_SVC_IP&#125;</span> -d <span class="variable">$&#123;CLUSTER_DNS_DOMAIN&#125;</span> | kubectl apply -f -</span><br></pre></td></tr></table></figure><h3 id="检查-coredns-功能"><a href="#检查-coredns-功能" class="headerlink" title="检查 coredns 功能"></a>检查 coredns 功能</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get all -n kube-system -l k8s-app=kube-dns</span><br><span class="line">NAME READY STATUS RESTARTS AGE</span><br><span class="line">pod/coredns-76b74f549-cwm8d 1/1 Running 0 62s</span><br><span class="line">NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S)</span><br><span class="line">AGE</span><br><span class="line">service/kube-dns ClusterIP 10.254.0.2 &lt;none&gt; 53/UDP,53/T</span><br><span class="line">CP,9153/TCP 62s</span><br><span class="line">NAME READY UP-TO-DATE AVAILABLE AGE</span><br><span class="line">deployment.apps/coredns 1/1 1 1 62s</span><br><span class="line">NAME DESIRED CURRENT READY AGE</span><br><span class="line">replicaset.apps/coredns-76b74f549 1 1 1 62s</span><br></pre></td></tr></table></figure><h4 id="新建一个-Deployment："><a href="#新建一个-Deployment：" class="headerlink" title="新建一个 Deployment："></a>新建一个 Deployment：</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">/opt/k8s/work</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">my-nginx.yaml</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">my-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">matchLabels:</span></span><br><span class="line"><span class="attr">run:</span> <span class="string">my-nginx</span></span><br><span class="line"><span class="attr">template:</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">run:</span> <span class="string">my-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-nginx</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">nginx:1.7.9</span></span><br><span class="line">      <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">my-nginx.yaml</span></span><br></pre></td></tr></table></figure><p>export 该 Deployment, 生成  my-nginx  服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl expose deploy my-nginx</span><br><span class="line">service <span class="string">"my-nginx"</span> exposed</span><br><span class="line">$ kubectl get services my-nginx -o wide</span><br><span class="line">NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGESELECTOR</span><br><span class="line">my-nginx ClusterIP 10.254.67.218 &lt;none&gt; 80/TCP 5s run=my-nginx</span><br></pre></td></tr></table></figure><p>创建另一个 Pod，查看  /etc/resolv.conf  是否包含  kubelet  配置的  –cluster-dns  和  –cluster-domain  ，是否能够将服务  my-nginx  解析到上面显示的 Cluster IP  10.254.40.167</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">/opt/k8s/work</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">dnsutils-ds.yml</span> <span class="string">&lt;&lt;EOF</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">dnsutils-ds</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">dnsutils-ds</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">dnsutils-ds</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">dnsutils-ds</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">matchLabels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">dnsutils-ds</span></span><br><span class="line"><span class="attr">template:</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">dnsutils-ds</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">containers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-dnsutils</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">tutum/dnsutils:latest</span></span><br><span class="line"><span class="attr">command:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">"3600"</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">dnsutils-ds.yml</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pods -lapp=dnsutils-ds -o wide</span><br><span class="line">NAME READY STATUS RESTARTS AGE IPNODE NOMINATED NODE READINESS GATES</span><br><span class="line">dnsutils-ds-7h9np 1/1 Running 0 69s 172.30.244.3</span><br><span class="line">zhangjun-k8s-01 &lt;none&gt; &lt;none&gt;</span><br><span class="line">dnsutils-ds-fthdl 1/1 Running 0 69s 172.30.82.131</span><br><span class="line">zhangjun-k8s-02 &lt;none&gt; &lt;none&gt;</span><br><span class="line">dnsutils-ds-w69zp 1/1 Running 0 69s 172.30.184.132</span><br><span class="line">zhangjun-k8s-03 &lt;none&gt; &lt;none&gt;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -it <span class="built_in">exec</span> dnsutils-ds-7h9np cat /etc/resolv.conf</span><br><span class="line">search default.svc.cluster.local svc.cluster.local cluster.local 4pd.io</span><br><span class="line">nameserver 10.254.0.2</span><br><span class="line">options ndots:5</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -it <span class="built_in">exec</span> dnsutils-ds-7h9np nslookup kubernetes</span><br><span class="line">Server: 10.254.0.2</span><br><span class="line">Address: 10.254.0.2<span class="comment">#53</span></span><br><span class="line">Name: kubernetes.default.svc.cluster.local</span><br><span class="line">Address: 10.254.0.1</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -it <span class="built_in">exec</span> dnsutils-ds-7h9np nslookup www.baidu.com</span><br><span class="line">Server: 10.254.0.2</span><br><span class="line">Address: 10.254.0.2<span class="comment">#53</span></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">*** Can<span class="string">'t find www.baidu.com: No answer</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">-it</span> <span class="string">exec</span> <span class="string">dnsutils-ds-7h9np</span> <span class="string">nslookup</span> <span class="string">www.baidu.com.</span></span><br><span class="line"><span class="attr">Server:</span> <span class="number">10.254</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line"><span class="attr">Address:</span> <span class="number">10.254</span><span class="number">.0</span><span class="number">.2</span><span class="comment">#53</span></span><br><span class="line"><span class="attr">Non-authoritative answer:</span></span><br><span class="line"><span class="string">www.baidu.com</span> <span class="string">canonical</span> <span class="string">name</span> <span class="string">=</span> <span class="string">www.a.shifen.com.</span></span><br><span class="line"><span class="attr">Name:</span> <span class="string">www.a.shifen.com</span></span><br><span class="line"><span class="attr">Address:</span> <span class="number">220.181</span><span class="number">.38</span><span class="number">.150</span></span><br><span class="line"><span class="attr">Name:</span> <span class="string">www.a.shifen.com</span></span><br><span class="line"><span class="attr">Address:</span> <span class="number">220.181</span><span class="number">.38</span><span class="number">.149</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">-it</span> <span class="string">exec</span> <span class="string">dnsutils-ds-7h9np</span> <span class="string">nslookup</span> <span class="string">my-nginx</span></span><br><span class="line"><span class="attr">Server:</span> <span class="number">10.254</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line"><span class="attr">Address:</span> <span class="number">10.254</span><span class="number">.0</span><span class="number">.2</span><span class="comment">#53</span></span><br><span class="line"><span class="attr">Name:</span> <span class="string">my-nginx.default.svc.cluster.local</span></span><br><span class="line"><span class="attr">Address:</span> <span class="number">10.254</span><span class="number">.67</span><span class="number">.218</span></span><br></pre></td></tr></table></figure><h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://community.infoblox.com/t5/Community-Blog/CoreDNS-for-Kubernetes-Service-Discovery/ba-p/8187" target="_blank" rel="noopener">https://community.infoblox.com/t5/Community-Blog/CoreDNS-for-Kubernetes-Service-Discovery/ba-p/8187</a></li><li><a href="https://coredns.io/2017/03/01/coredns-for-kubernetes-service-discovery-take-2/" target="_blank" rel="noopener">https://coredns.io/2017/03/01/coredns-for-kubernetes-service-discovery-take-2/</a></li><li><a href="https://www.cnblogs.com/boshen-hzb/p/7511432.html" target="_blank" rel="noopener">https://www.cnblogs.com/boshen-hzb/p/7511432.html</a></li><li><a href="https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns</a></li></ol><h2 id="部署-dashboard-插件"><a href="#部署-dashboard-插件" class="headerlink" title="部署 dashboard 插件"></a>部署 dashboard 插件</h2><p>如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s-01 节点上执行；</p><h3 id="下载和修改配置文件"><a href="#下载和修改配置文件" class="headerlink" title="下载和修改配置文件"></a>下载和修改配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc4/aio/deploy/recommended.yaml</span><br><span class="line">mv recommended.yaml dashboard-recommended.yaml</span><br></pre></td></tr></table></figure><h3 id="执行所有定义文件"><a href="#执行所有定义文件" class="headerlink" title="执行所有定义文件"></a>执行所有定义文件</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/opt/k8s/work</span></span><br><span class="line">kubectl apply -f dashboard-recommended.yaml</span><br></pre></td></tr></table></figure><h3 id="查看运行状态"><a href="#查看运行状态" class="headerlink" title="查看运行状态"></a>查看运行状态</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl <span class="keyword">get</span> pods -n kubernetes-dashboard</span><br><span class="line">NAME READY STATUS RESTARTS AGE</span><br><span class="line">dashboard-metrics-scraper<span class="number">-7</span>b8b58dc8b-dlk5t <span class="number">1</span>/<span class="number">1</span> Running <span class="number">070</span>s</span><br><span class="line">kubernetes-dashboard<span class="number">-6</span>cfc8c4c9-j8vcm <span class="number">1</span>/<span class="number">1</span> Running <span class="number">070</span>s</span><br></pre></td></tr></table></figure><h3 id="访问-dashboard"><a href="#访问-dashboard" class="headerlink" title="访问 dashboard"></a>访问 dashboard</h3><p>从 1.7 开始，dashboard 只允许通过 https 访问，如果使用 kube proxy 则必须监听localhost 或 127.0.0.1。对于 NodePort 没有这个限制，但是仅建议在开发环境中使用。对于不满足这些条件的登录访问，在登录成功后浏览器不跳转，始终停在登录界面。</p><h3 id="通过-port-forward-访问-dashboard"><a href="#通过-port-forward-访问-dashboard" class="headerlink" title="通过 port forward 访问 dashboard"></a>通过 port forward 访问 dashboard</h3><p>启动端口转发：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhangjun-k8s-01 work] kubectl port-forward -n kubernetes-dashboard svc/kubernetes-dashboard 4443:443 --address 0.0.0.0</span><br></pre></td></tr></table></figure><p>浏览器访问 URL： <a href="https://172.27.138.251:4443" target="_blank" rel="noopener">https://172.27.138.251:4443</a></p><h3 id="创建登录-Dashboard-的-token-和-kubeconfig-配置文件"><a href="#创建登录-Dashboard-的-token-和-kubeconfig-配置文件" class="headerlink" title="创建登录 Dashboard 的 token 和 kubeconfig 配置文件"></a>创建登录 Dashboard 的 token 和 kubeconfig 配置文件</h3><p>dashboard 默认只支持 token 认证（不支持 client 证书认证），所以如果使用Kubeconfig 文件，需要将 token 写入到该文件。</p><h4 id="创建登录-token"><a href="#创建登录-token" class="headerlink" title="创建登录 token"></a>创建登录 token</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl create sa dashboard-admin -n kube-system</span><br><span class="line"></span><br><span class="line">kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin </span><br><span class="line">ADMIN_SECRET=$(kubectl get secrets -n kube-system | grep dashboard-admin | awk <span class="string">'&#123;print $1&#125;'</span>) DASHBOARD_LOGIN_TOKEN=$(kubectl describe secret -n kube-system <span class="variable">$&#123;ADMIN_SECRET&#125;</span> | grep -E <span class="string">'^token'</span> | awk <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;DASHBOARD_LOGIN_TOKEN&#125;</span></span><br></pre></td></tr></table></figure><p>使用输出的 token 登录 Dashboard。</p><h3 id="创建使用-token-的-KubeConfig-文件"><a href="#创建使用-token-的-KubeConfig-文件" class="headerlink" title="创建使用 token 的 KubeConfig 文件"></a>创建使用 token 的 KubeConfig 文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/k8s/bin/environment.sh</span><br><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">--certificate-authority=/etc/kubernetes/cert/ca.pem \</span><br><span class="line">--embed-certs=<span class="literal">true</span> \</span><br><span class="line">--server=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">--kubeconfig=dashboard.kubeconfig</span><br><span class="line"><span class="comment"># 设置客户端认证参数，使用上面创建的 Token</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials dashboard_user \</span><br><span class="line">--token=<span class="variable">$&#123;DASHBOARD_LOGIN_TOKEN&#125;</span> \</span><br><span class="line">--kubeconfig=dashboard.kubeconfig</span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">--cluster=kubernetes \</span><br><span class="line">--user=dashboard_user \</span><br><span class="line">--kubeconfig=dashboard.kubeconfig</span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=dashboard.kubeconfig</span><br></pre></td></tr></table></figure><p>用生成的 dashboard.kubeconfig 登录 Dashboard。</p><h3 id="参考-4"><a href="#参考-4" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://github.com/kubernetes/dashboard/wiki/Access-control" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/wiki/Access-control</a></li><li><a href="https://github.com/kubernetes/dashboard/issues/2558" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/issues/2558</a></li><li><a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/" target="_blank" rel="noopener">https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/</a></li><li><a href="https://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard---1.7.X-and-above" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard---1.7.X-and-above</a></li><li><a href="https://github.com/kubernetes/dashboard/issues/2540" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/issues/2540</a></li></ol><h2 id="部署-kube-prometheus-插架"><a href="#部署-kube-prometheus-插架" class="headerlink" title="部署 kube-prometheus 插架"></a>部署 kube-prometheus 插架</h2><p>kube-prometheus 是一整套监控解决方案，它使用 Prometheus 采集集群指标，Grafana 做展示，包含如下组件：</p><ul><li>The Prometheus Operator</li><li>Highly available Prometheus</li><li>Highly available Alertmanager</li><li>Prometheus node-exporter</li><li>Prometheus Adapter for Kubernetes Metrics APIs （k8s-prometheus-adapter）</li><li>kube-state-metrics</li><li>Grafana</li></ul><p>其中 k8s-prometheus-adapter 使用 Prometheus 实现了 metrics.k8s.io 和custom.metrics.k8s.io API，所以不需要再部署  metrics-server  。 如果要单独部署metrics-server  ，请参考：C.metrics-server插件.md</p><p>如果没有特殊指明，本文档的所有操作均在 k8s-01 节点上执行；</p><h3 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a>下载和安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/coreos/kube-prometheus.git</span><br><span class="line"><span class="built_in">cd</span> kube-prometheus/</span><br><span class="line">sed -i -e <span class="string">'s_quay.io_quay.azk8s.cn_'</span> manifests/*.yaml manifests/setup/*.yaml <span class="comment"># 使用微软的 Registry</span></span><br><span class="line">kubectl apply -f manifests/setup <span class="comment"># 安装 prometheus-operator</span></span><br><span class="line">kubectl apply -f manifests/ <span class="comment"># 安装 promethes metric adapter</span></span><br></pre></td></tr></table></figure><h3 id="查看运行状态-1"><a href="#查看运行状态-1" class="headerlink" title="查看运行状态"></a>查看运行状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pods -n monitoring</span><br><span class="line">NAME READY STATUS RESTARTS AGE</span><br><span class="line">alertmanager-main-0 2/2 Running 063s</span><br><span class="line">alertmanager-main-1 2/2 Running 063s</span><br><span class="line">alertmanager-main-2 2/2 Running 063s</span><br><span class="line">grafana-76b8d59b9b-nd6gk 1/1 Running 011m</span><br><span class="line">kube-state-metrics-67b7c5dc78-sktzg 3/3 Running 073s</span><br><span class="line">node-exporter-prsvf 2/2 Running 034s</span><br><span class="line">node-exporter-qdh6n 2/2 Running 071s</span><br><span class="line">node-exporter-z6h4z 2/2 Running 069s</span><br><span class="line">prometheus-adapter-5f46ccd66d-bbsns 1/1 Running 073s</span><br><span class="line">prometheus-k8s-0 3/3 Running 153s</span><br><span class="line">prometheus-k8s-1 3/3 Running 153s</span><br><span class="line">prometheus-operator-6d8b95b467-htx56 1/1 Running 074s</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl top pods -n monitoring</span><br><span class="line">NAME CPU(cores) MEMORY(bytes)</span><br><span class="line">alertmanager-main-0 0m 18Mi</span><br><span class="line">alertmanager-main-1 2m 20Mi</span><br><span class="line">alertmanager-main-2 0m 19Mi</span><br><span class="line">grafana-76b8d59b9b-nd6gk 4m 49Mi</span><br><span class="line">kube-state-metrics-67b7c5dc78-sktzg 11m 29Mi</span><br><span class="line">kube-state-metrics-959876458-cjtr5 9m 37Mi</span><br><span class="line">node-exporter-prsvf 4m 11Mi</span><br><span class="line">node-exporter-qdh6n 1m 20Mi</span><br><span class="line">node-exporter-z6h4z 5m 11Mi</span><br><span class="line">prometheus-adapter-5f46ccd66d-bbsns 0m 17Mi</span><br><span class="line">prometheus-k8s-0 15m 190Mi</span><br><span class="line">prometheus-k8s-1 6m 199Mi</span><br><span class="line">prometheus-operator-6d8b95b467-htx56 0m 20Mi</span><br><span class="line">08-4.kube-prometheus插件</span><br></pre></td></tr></table></figure><h3 id="访问-Prometheus-UI"><a href="#访问-Prometheus-UI" class="headerlink" title="访问 Prometheus UI"></a>访问 Prometheus UI</h3><p>启动代理：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl port-forward --address 0.0.0.0 svc/grafana -n monitoring 3000:3000</span><br><span class="line">Forwarding from 0.0.0.0:3000 -&gt; 3000</span><br></pre></td></tr></table></figure><p>浏览器访问：<a href="http://172.27.138.251:3000/" target="_blank" rel="noopener">http://172.27.138.251:3000/</a></p><p>用 admin/admin 登录：</p><h2 id="部署-EFK-插件"><a href="#部署-EFK-插件" class="headerlink" title="部署 EFK 插件"></a>部署 EFK 插件</h2><p>注意：</p><ol><li>如果没有特殊指明，本文档的所有操作均在 zhangjun-k8s-01 节点上执行。</li><li>kuberntes 自带插件的 manifests yaml 文件使用 gcr.io 的 docker registry，国内被墙，需要手动替换为其它 registry 地址；</li><li>可以从微软中国提供的 gcr.io 免费代理下载被墙的镜像；</li></ol><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>将下载的 kubernetes-server-linux-amd64.tar.gz 解压后，再解压其中的 kubernetes-src.tar.gz 文件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work/kubernetes/</span><br><span class="line">tar -xzvf kubernetes-src.tar.gz</span><br></pre></td></tr></table></figure><p>EFK 目录是  kubernetes/cluster/addons/fluentd-elasticsearch</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work/kubernetes/cluster/addons/fluentd-elasticsearch</span><br><span class="line">sed -i -e <span class="string">'s_quay.io_quay.azk8s.cn_'</span> es-statefulset.yaml <span class="comment"># 使用微软的Registry</span></span><br><span class="line">sed -i -e <span class="string">'s_quay.io_quay.azk8s.cn_'</span> fluentd-es-ds.yaml <span class="comment"># 使用微软的 Registry</span></span><br></pre></td></tr></table></figure><h3 id="执行定义文件"><a href="#执行定义文件" class="headerlink" title="执行定义文件"></a>执行定义文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/k8s/work/kubernetes/cluster/addons/fluentd-elasticsearch</span><br><span class="line">kubectl apply -f .</span><br></pre></td></tr></table></figure><h3 id="检查执行结果"><a href="#检查执行结果" class="headerlink" title="检查执行结果"></a>检查执行结果</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get all -n kube-system |grep -E <span class="string">'elasticsearch|fluentd|kibana'</span></span><br></pre></td></tr></table></figure><p>kibana Pod 第一次启动时会用较长时间(0-20分钟)来优化和 Cache 状态页面，可以 tailf该 Pod 的日志观察进度：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl logs kibana-logging-75888755d6-nw6bc -n kube-system -f</span><br></pre></td></tr></table></figure><p>注意：只有当 Kibana pod 启动完成后，浏览器才能查看 kibana dashboard，否则会被拒绝。</p><h3 id="通过-kubectl-proxy-访问-kibana"><a href="#通过-kubectl-proxy-访问-kibana" class="headerlink" title="通过 kubectl proxy 访问 kibana"></a>通过 kubectl proxy 访问 kibana</h3><p>创建代理：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl proxy --address=<span class="string">'172.27.138.251'</span> --port=8086 --accept-hosts=<span class="string">'^*$'</span></span><br><span class="line">Starting to serve on 172.27.138.251:8086</span><br></pre></td></tr></table></figure><p>浏览器访问 URL： <a href="http://172.27.138.251:8086/api/v1/namespaces/kube-system/services/kibana-logging/proxy" target="_blank" rel="noopener">http://172.27.138.251:8086/api/v1/namespaces/kube-system/services/kibana-logging/proxy</a></p><p>在 Management -&gt; Indices 页面创建一个 index（相当于 mysql 中的一个 database），选中  Index contains time-based events  ，使用默认的  logstash-*  pattern，点击  Create  ;</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy基于cookie实现客户端会话保持</title>
      <link href="/2020/03/10/ha+kp/HAProxy%E5%9F%BA%E4%BA%8Ecookie%E5%AE%9E%E7%8E%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BC%9A%E8%AF%9D%E4%BF%9D%E6%8C%81/"/>
      <url>/2020/03/10/ha+kp/HAProxy%E5%9F%BA%E4%BA%8Ecookie%E5%AE%9E%E7%8E%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BC%9A%E8%AF%9D%E4%BF%9D%E6%8C%81/</url>
      
        <content type="html"><![CDATA[<h2 id="缓存功能"><a href="#缓存功能" class="headerlink" title="缓存功能"></a>缓存功能</h2><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7-2 ~]<span class="comment">#vim /etc/haproxy/haproxy.cfg</span></span><br><span class="line">listen web1</span><br><span class="line">  mode http</span><br><span class="line">  <span class="built_in">bind</span> 192.168.36.104:80</span><br><span class="line">  option forwardfor</span><br><span class="line">  cookie SERVER-COOKIE insert indirect nocache</span><br><span class="line">  server web1 192.168.36.110:80 cookie web-110 weight 1 check inter 3000 fall 3 rise 5</span><br><span class="line">  server web2 192.168.36.106:80 cookie web-106 weight 1 check inter 3000 fall 3 rise 5</span><br><span class="line"></span><br><span class="line">[root@CentOS7-2 ~]<span class="comment">#systemctl restart haproxy.service</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> haproxy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> haproxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy的调度算法</title>
      <link href="/2020/03/10/ha+kp/HAProxy%E7%9A%84%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
      <url>/2020/03/10/ha+kp/HAProxy%E7%9A%84%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="HAProxy简单介绍"><a href="#HAProxy简单介绍" class="headerlink" title="HAProxy简单介绍"></a><strong>HAProxy简单介绍</strong></h2><p>HAProxy虽然名字前有HA，但它并不是一款高可用软件，而是一款用于实现负载均衡的软件，可实现四层与七层的负载均衡。</p><a id="more"></a><p><strong>HAProxy配置</strong><br>HAProxy配置段分为两大部分：<br>1.全局配置段，在配置文件中的标识为global，主要功能有如下：<br>a.在global中可以对HAProxy的进程及安全相关参数进行配置<br>b.性能调整<br>c.Debug<br>2.代理配置段，在配置文件中的标识为proxyies，它还分为如下小段：<br>a.default：为frontend，listen，backend提供默认配置<br>b.frontend：前端主机配置，可类比于Nginx的server { }<br>c.listen：将前端和后端整合在一起配置，同时拥有前端和后端。</p><p><strong>HAProxy在balance中定义</strong><br>格式为 balance <algorithm> [ <arguments> ] </arguments></algorithm></p><h2 id="静态调度算法"><a href="#静态调度算法" class="headerlink" title="静态调度算法"></a>静态调度算法</h2><ul><li><strong>1.static-rr</strong> </li></ul><p>与roundrobin类似，static-rr也是一种轮询算法，但它是静态的，对后端主机数量无限制。</p><ul><li><p><strong>2.first</strong> </p></li><li><p>根据服务器标识顺序选择服务器，当服务器承载的连接数达到maxconn的值后便将新情求调度至下一台服务器。此算法只在一些特殊场景下使用。</p></li></ul><h2 id="动态调度算法"><a href="#动态调度算法" class="headerlink" title="动态调度算法"></a>动态调度算法</h2><ul><li><strong>1.roundrobin</strong> </li></ul><p>根据服务器权重轮询的算法，可以自定义权重，它支持慢启动，并能在运行时修改权重，所以是一种动态算法。最多支持4095台后端主机。</p><ul><li><p><strong>2.leastconn</strong> </p></li><li><p>最小连接数算法，一种可以根据后端主机连接数情况进行调度的动态算法，支持慢启动和运行时调整，可将新的请求调度至连接数较少的后端主机。与LVS中lc算法类似。</p></li></ul><h2 id="调度算法-source"><a href="#调度算法-source" class="headerlink" title="调度算法-source"></a>调度算法-source</h2><p>源地址hash，基于用户源地址hash并将请求转发到后端服务器，默认为静态即取模方式，但是可以通过hash-type支持的选项更改，后续一个源地址请求将被转发至同一个后端web服务器，比较适用于session保持/缓存业务等场景</p><ul><li><strong>1.source</strong> </li></ul><p>源地址hash，基于用户源地址hash并将请求转发到后端服务器，默认为静态即取模方式，但是可以通过hash-type支持的选项更改，后续同一个源地址请求将被转发至同一个后端web服务器，比较适用于session保持/缓存业务等场景。</p><ul><li>2.consistent：</li></ul><p>一致性哈希，该hash是动态的，支持在线调整权重，支持慢启动，优点在于当服务器的总权重发生变化时，对调度结果影响是局部的，不会引起大的变动。</p><h2 id="uri"><a href="#uri" class="headerlink" title="uri"></a><strong>uri</strong></h2><ul><li><p>根据请求的uri进行hash处理并调度之后端主机。</p></li><li><p>1.map-based：取模法</p></li></ul><p>基于服务器权重的hash数组取模，该hash是静态的即不支持在线调整权重 ，不支持慢启动，其对后端服务器调度均衡，缺点是当服务器的总权重发生变化时，即有服务器上线或下线，都会因权重发生变化而导致调度结果整体改变， hash（o）mod n 。</p><ul><li><p><strong>2.url_param</strong> </p></li><li><p>将URL的参数进行判断并进行hash计算，参数可以自定义，任何的URL参数都可以。</p></li><li><p><strong>3.hdr</strong></p></li><li><p><name>根据请求中的HTTP报文首部的值进行hash计算并调度。name可以是GET、USERAGENT等首部名。</name></p></li><li><p>HAProxy可以选择普通hash算法也可以选择一致性hash算法。可用参数hash_type配置。</p></li></ul><p><img src="/2020/03/10/ha+kp/HAProxy%E7%9A%84%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/redis%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E4%BC%98%E5%8C%96/image-2.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> haproxy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> haproxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LVS四种工作模式搭建与十种调度算法</title>
      <link href="/2020/03/10/ha+kp/LVS%E5%9B%9B%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%8D%81%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
      <url>/2020/03/10/ha+kp/LVS%E5%9B%9B%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%8D%81%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="LVS概念"><a href="#LVS概念" class="headerlink" title="LVS概念"></a>LVS概念</h2><a id="more"></a><p><strong>lvs集群类型中的术语：</strong></p><blockquote><p>VS：Virtual Server，Director Server(DS) Dispatcher(调度器)，Load Balancer<br>RS：Real Server(lvs), upstream server(nginx) backend server(haproxy)<br>CIP：Client IP<br>VIP: Virtual serve IP VS外网的IP<br>DIP: Director IP VS内网的IP<br>RIP: Real server IP 访问流程：CIP &lt;–&gt; VIP == DIP &lt;–&gt; RIP</p></blockquote><h2 id="lvs集群的类型"><a href="#lvs集群的类型" class="headerlink" title="lvs集群的类型"></a>lvs集群的类型</h2><p>lvs集群的类型： lvs-nat：修改请求报文的目标IP,多目标IP的DNAT<br>lvs-dr：操纵封装新的MAC地址<br>lvs-tun：在原请求IP报文之外新加一个IP首部<br>lvs-fullnat：修改请求报文的源和目标IP</p><h2 id="lvs-nat模式"><a href="#lvs-nat模式" class="headerlink" title="lvs-nat模式"></a>lvs-nat模式</h2><p>本质是多目标IP的DNAT，通过将请求报文中的目标地址和目标端口修改为某挑出的RS的RIP和PORT实现转发<br>（1）RIP和DIP应在同一个IP网络，且应使用私网地址；RS的网关要指向DIP<br>（2）请求报文和响应报文都必须经由Director转发，Director易于成为系统瓶颈<br>（3）支持端口映射，可修改请求报文的目标PORT<br>（4）VS必须是Linux系统，RS可以是任意OS系统</p><p><img src="/2020/03/10/ha+kp/LVS%E5%9B%9B%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%8D%81%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/9ba851755989137e92642d85eadeb92a.png" alt="img"></p><p><img src="/2020/03/10/ha+kp/LVS%E5%9B%9B%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%8D%81%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/image.png" alt="img"></p><p>[root@localhost ~]#hostnamectl set-hostname client<br>[root@localhost ~]#hostnamectl set-hostname LVS<br>[root@localhost ~]#hostnamectl set-hostname server1<br>[root@localhost ~]#hostnamectl set-hostname server2</p><p>[root@server1 ~]# echo server1 &gt; /var/www/html/index.html<br>[root@server2 ~]# echo server2 &gt; /var/www/html/index.html</p><p>[root@server1 ~]#systemctl start httpd.service<br>[root@server2 ~]#systemctl start httpd.service</p><p>[root@lvs ~]# yum install ipvsadm<br>[root@lvs ~]#ipvsadm -A -t 172.22.50.200:80<br>[root@lvs ~]#ipvsadm -a -t 172.22.50.200:80 -r 192.168.64.130 -m -w 3<br>[root@lvs ~]#ipvsadm -a -t 172.22.50.200:80 -r 192.168.64.140 –m –w 1</p><p>开启核心转发功能<br>[root@lvs ~]#vim /etc/sysctl.conf<br>net.ipv4.ip_forward=1<br>[root@lvs ~]#sysctl -p<br>net.ipv4.ip_forward = 1</p><p>[root@client ~]#while true; do curl 172.22.50.200 ;sleep 1;done<br>server1<br>server2</p><p>保存<br>[root@lvs ~]#ipvsadm-save -n &gt; /etc/sysconfig/ipvsadm<br>[root@lvs ~]#systemctl start ipvsadm<br>[root@lvs ~]#systemctl enable ipvsadm.service</p><h3 id="开启https"><a href="#开启https" class="headerlink" title="开启https"></a>开启https</h3><p>[root@server1 ~]# yum install mod_ssl<br>[root@server1 ~]# systemctl restart httpd<br>[root@lvs ~]#ipvsadm -A -t 172.22.50.200:443<br>[root@lvs ~]#ipvsadm -a -t 172.22.50.200:443 -r 192.168.64.130 -m -w 3<br>[root@lvs ~]#ipvsadm -a -t 172.22.50.200:443 -r 192.168.64.140 –m –w 1</p><h2 id="LVS-DR"><a href="#LVS-DR" class="headerlink" title="LVS-DR"></a>LVS-DR</h2><p><img src="/2020/03/10/ha+kp/LVS%E5%9B%9B%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%8D%81%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/86a7a0494950498ef9f735e74cd9173e.png" alt="img"></p><p><img src="/2020/03/10/ha+kp/LVS%E5%9B%9B%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%8D%81%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/image-1.png" alt="img"></p><p>router开启核心转发功能<br>[root@router <del>]#vim /etc/sysctl.conf<br>net.ipv4.ip_forward=1<br>[root@router</del>]#sysctl -p<br>net.ipv4.ip_forward = 1</p><p>[root@client ~]#traceroute 192.168.64.130<br>traceroute to 192.168.64.130 (192.168.64.130), 30 hops max, 60 byte packets<br>1 gateway (172.22.143.144) 1.551 ms 7.670 ms 7.611 ms<br>2 192.168.64.130 (192.168.64.130) 7.559 ms 7.512 ms 7.465 ms</p><ul><li>RS服务器脚本</li></ul><p>#!/bin/bash<br>vip=’192.168.64.200′<br>iface=’lo:1′<br>mask=’255.255.255.255′<br>port=’80’<br>rs1=’192.168.64.130′<br>rs2=’192.168.64.140′<br>scheduler=’wrr’<br>type=’-g’<br>rpm -q ipvsadm &amp;&gt; /dev/null || yum -y install ipvsadm &amp;&gt; /dev/null</p><p>case $1 in<br>start)<br>ifconfig $iface $vip netmask $mask #broadcast $vip up<br>iptables -F</p><p>ipvsadm -A -t ${vip}:${port} -s $scheduler<br>ipvsadm -a -t ${vip}:${port} -r ${rs1} $type -w 1<br>ipvsadm -a -t ${vip}:${port} -r ${rs2} $type -w 1<br>echo “The VS Server is Ready!”<br>;;<br>stop)<br>ipvsadm -C<br>ifconfig $iface down<br>echo “The VS Server is Canceled!”<br>;;<br>*)<br>echo “Usage: $(basename $0) start|stop”<br>exit 1<br>;;<br>esac</p><ul><li>LVS服务器脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">vip=192.168.64.200</span><br><span class="line">mask=<span class="string">'255.255.255.255'</span></span><br><span class="line">dev=lo:1</span><br><span class="line">rpm -q httpd &amp;&gt; /dev/null || yum -y install httpd &amp;&gt;/dev/null</span><br><span class="line">service httpd start &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">"The httpd Server is Ready!"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"&lt;h1&gt;`hostname`&lt;/h1&gt;"</span> &gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">    <span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> 2 &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    ifconfig <span class="variable">$dev</span> <span class="variable">$vip</span> netmask <span class="variable">$mask</span> <span class="comment">#broadcast $vip up</span></span><br><span class="line">    <span class="comment">#route add -host $vip dev $dev</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The RS Server is Ready!"</span></span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    ifconfig <span class="variable">$dev</span> down</span><br><span class="line">    <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The RS Server is Canceled!"</span></span><br><span class="line">    ;;</span><br><span class="line">*) </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$(basename $0)</span> start|stop"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>[root@lvs ~]# ipvsadm -Ln –stats<br>IP Virtual Server version 1.2.1 (size=4096)<br>Prot LocalAddress:Port Conns InPkts OutPkts InBytes OutBytes<br>-&gt; RemoteAddress:Port<br>TCP 192.168.64.200:80 7 42 0 2786 0<br>-&gt; 192.168.64.130:80 3 18 0 1194 0<br>-&gt; 192.168.64.140:80 4 24 0 1592 0</p><h3 id="RIP与VIP不同网段"><a href="#RIP与VIP不同网段" class="headerlink" title="RIP与VIP不同网段"></a>RIP与VIP不同网段</h3><p>将VIP改为：10.0.0.100<br>Router加一个地址 10.0.0.200 与内网网卡绑定<br>Ifconfig eth0:1 10.0.0.200/24</p><h2 id="MYSQL服务调度"><a href="#MYSQL服务调度" class="headerlink" title="MYSQL服务调度"></a>MYSQL服务调度</h2><p>[root@lvs ~]#ipvsadm -A -t 172.22.50.200:3306<br>[root@lvs ~]#ipvsadm -a -t 192.168.64.130:3306 -r 192.168.64.130 -m -w 3<br>[root@lvs ~]#ipvsadm -a -t 192.168.64.140:3306 -r 192.168.64.140 –m –w 1<br>添加授权账号</p><p>mysql -e ‘grant all on <em>.</em> to test@”%” identified by “centos” ’</p><p>mysql –uroot –pcentos –h</p><p>Firewall mark<br>iptables -t mangle -A PREROUTING -d 10.0.0.100 -p tcp -m multiport –dports 80,443 -j MARK –set-mark 10<br>[root@lvs ~]# ipvsadm -A -f 10 -s rr<br>[root@lvs ~]# ipvsadm -a -f 10 –r 192.168.64.130 -m -w 3<br>[root@lvs ~]# ipvsadm -a -f 10 –r 192.168.64.140 -m -w 3</p><p><img src="/2020/03/10/ha+kp/LVS%E5%9B%9B%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%8D%81%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/2f8cc3fb2efa0dcb72fe9b1c2ad2811d.png" alt="img"></p><h2 id="持久连接"><a href="#持久连接" class="headerlink" title="持久连接"></a>持久连接</h2><p>[root@lvs ~]# ipvsadm -A -f 10 -s rr –p</p><p><img src="/2020/03/10/ha+kp/LVS%E5%9B%9B%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%8D%81%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/eca3c32eccb720e6553b2401fb5147dc.png" alt="img"></p><h2 id="LVS十种调度算法："><a href="#LVS十种调度算法：" class="headerlink" title="LVS十种调度算法："></a>LVS十种调度算法：</h2><ul><li>LVS调度算法分为静态和动态两类：静态算法（4种）：</li><li>只根据算法进行调度 而不考虑后端服务器的实际连接情况和负载情况</li><li>RR：轮叫调度（Round Robin）<br>调度器通过”轮叫”调度算法将外部请求按顺序轮流分配到集群中的真实服务器上，它均等地对待每一台服务器，而不管服务器上实际的连接数和系统负载｡</li><li>WRR：加权轮叫（Weight RR）<br>调度器通过“加权轮叫”调度算法根据真实服务器的不同处理能力来调度访问请求。这样可以保证处理能力强的服务器处理更多的访问流量。调度器可以自动问询真实服务器的负载情况,并动态地调整其权值。</li><li>DH：目标地址散列调度（Destination Hash ）<br>根据请求的目标IP地址，作为散列键(HashKey)从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。</li><li>SH：源地址 hash（Source Hash）<br>源地址散列”调度算法根据请求的源IP地址，作为散列键(HashKey)从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空｡动态算法（6种）：前端的调度器会根据后端真实服务器的实际连接情况来分配请求</li><li>LC：最少链接（Least Connections）<br>调度器通过”最少连接”调度算法动态地将网络请求调度到已建立的链接数最少的服务器上。如果集群系统的真实服务器具有相近的系统性能，采用”最小连接”调度算法可以较好地均衡负载。</li><li>WLC：加权最少连接(默认采用的就是这种)（Weighted Least Connections）<br>在集群系统中的服务器性能差异较大的情况下，调度器采用“加权最少链接”调度算法优化负载均衡性能，具有较高权值的服务器将承受较大比例的活动连接负载｡调度器可以自动问询真实服务器的负载情况,并动态地调整其权值。</li><li>SED：最短延迟调度（Shortest Expected Delay ）<br>在WLC基础上改进，Overhead = （ACTIVE+1）*256/加权，不再考虑非活动状态，把当前处于活动状态的数目+1来实现，数目最小的，接受下次请求，+1的目的是为了考虑加权的时候，非活动连接过多缺陷：当权限过大的时候，会倒置空闲服务器一直处于无连接状态。</li><li>NQ永不排队/最少队列调度（Never Queue Scheduling NQ）<br>无需队列。如果有台 realserver的连接数＝0就直接分配过去，不需要再进行sed运算，保证不会有一个主机很空间。在SED基础上无论+几，第二次一定给下一个，保证不会有一个主机不会很空闲着，不考虑非活动连接，才用NQ，SED要考虑活动状态连接，对于DNS的UDP不需要考虑非活动连接，而httpd的处于保持状态的服务就需要考虑非活动连接给服务器的压力。</li><li>LBLC：基于局部性的最少链接（locality-Based Least Connections）<br>基于局部性的最少链接”调度算法是针对目标IP地址的负载均衡，目前主要用于Cache集群系统｡该算法根据请求的目标IP地址找出该目标IP地址最近使用的服务器，若该服务器是可用的且没有超载，将请求发送到该服务器;若服务器不存在，或者该服务器超载且有服务器处于一半的工作负载，则用“最少链接”的原则选出一个可用的服务器，将请求发送到该服务器｡</li><li>LBLCR：带复制的基于局部性最少连接（Locality-Based Least Connections with Replication）<br>带复制的基于局部性最少链接”调度算法也是针对目标IP地址的负载均衡，目前主要用于Cache集群系统｡它与LBLC算法的不同之处是它要维护从一个目标IP地址到一组服务器的映射，而LBLC算法维护从一个目标IP地址到一台服务器的映射｡该算法根据请求的目标IP地址找出该目标IP地址对应的服务器组，按”最小连接”原则从服务器组中选出一台服务器，若服务器没有超载，将请求发送到该服务器；若服务器超载，则按“最小连接”原则从这个集群中选出一台服务器，将该服务器加入到服务器组中，将请求发送到该服务器｡同时，当该服务器组有一段时间没有被修改，将最忙的服务器从服务器组中删除，以降低复制的程度。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 负载均衡 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> LVS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rpm命令使用</title>
      <link href="/2020/03/10/Linux/rpm%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/03/10/Linux/rpm%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>rpm命令</strong> 是RPM软件包的管理工具。rpm原本是Red Hat Linux发行版专门用来管理Linux各项套件的程序，由于它遵循GPL规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM套件管理方式的出现，让Linux易于安装，升级，间接提升了Linux的适用度。</p><a id="more"></a><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">rpm</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure><p>选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a：查询所有套件；</span><br><span class="line">b&lt;完成阶段&gt;&lt;套件档&gt;+或-t &lt;完成阶段&gt;&lt;套件档&gt;+：设置包装套件的完成阶段，并指定套件档的文件名称</span><br><span class="line">c：只列出组态配置文件，本参数需配合<span class="string">"-l"</span>参数使用</span><br><span class="line">d：只列出文本文件，本参数需配合<span class="string">"-l"</span>参数使用；</span><br><span class="line">e&lt;套件档&gt;或--erase&lt;套件档&gt;：删除指定的套件;</span><br><span class="line">f&lt;文件&gt;+：查询拥有指定文件的套件；</span><br><span class="line">h或--<span class="built_in">hash</span>：套件安装时列出标记；</span><br><span class="line">i：显示套件的相关信息；</span><br><span class="line">i&lt;套件档&gt;或--install&lt;套件档&gt;：安装指定的套件档；</span><br><span class="line">l：显示套件的文件列表；</span><br><span class="line">p&lt;套件档&gt;+：查询指定的RPM套件档；</span><br><span class="line">q：使用询问模式，当遇到任何问题时，rpm指令会先询问用户；</span><br><span class="line">R：显示套件的关联性信息；</span><br><span class="line">s：显示文件状态，本参数需配合<span class="string">"-l"</span>参数使用；</span><br><span class="line">U&lt;套件档&gt;或--upgrade&lt;套件档&gt;：升级指定的套件档；</span><br><span class="line">v：显示指令执行过程；</span><br><span class="line">vv：详细显示指令执行过程，便于排错。</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ol><li>rpm软件包的安装可以使用程序rpm来完成。执行下面的命令：</li></ol><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh your-<span class="class"><span class="keyword">package</span>.<span class="title">rpm</span></span></span><br></pre></td></tr></table></figure><p>2.我的系统中安装了那些rpm软件包。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rpm</span> -qa 讲列出所有安装过的包</span><br></pre></td></tr></table></figure><p>3.如果要查找所有安装过的包含某个字符串sql的软件包</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -<span class="keyword">qa</span> | <span class="keyword">grep</span> sql</span><br></pre></td></tr></table></figure><p>4.如何获得某个软件包的文件全名。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rpm -q mysql</span></span><br></pre></td></tr></table></figure><p>5.可以获得系统中安装的mysql软件包全名，从中可以获得当前软件包的版本等信息。这个例子中可以得到信息mysql-3.23.54a-11一个rpm包中的文件安装到那里去了？</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rpm</span> -ql 包名</span><br></pre></td></tr></table></figure><p>注意这里的是不包括.rpm后缀的软件包的名称，也就是说只能用mysql或者mysql-3.23.54a-11而不是mysql-3.23.54a-11.rpm。如果只是想知道可执行程序放到那里去了，也可以用which，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> mysql</span><br></pre></td></tr></table></figure><p>6.一个rpm包中包含那些文件。</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一个没有安装过的软件包，使用`rpm -qlp  **** .rpm`</span><br><span class="line"> 一个已经安装过的软件包，还可以使用`rpm -ql  **** .rpm`</span><br></pre></td></tr></table></figure><p>7.如何获取关于一个软件包的版本，用途等相关信息？</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一个没有安装过的软件包，使用`rpm -qip  **** .rpm`</span><br><span class="line">一个已经安装过的软件包，还可以使用`rpm -qi  **** .rpm`</span><br></pre></td></tr></table></figure><p>8.某个程序是哪个软件包安装的，或者哪个软件包包含这个程序。</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -qf `which 程序名`    #返回软件包的全名</span><br><span class="line">rpm -qif `which 程序名`   #返回软件包的有关信息</span><br><span class="line">rpm -qlf `which 程序名`   #返回软件包的文件列表</span><br></pre></td></tr></table></figure><p>9.如何查看安装openssl.x86.rpm包的依赖关系</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-qpR</span> <span class="selector-tag">httpd-tools-2</span><span class="selector-class">.4</span><span class="selector-class">.6-88</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span><span class="selector-class">.rpm</span></span><br></pre></td></tr></table></figure><p>10.查询会安装哪⼏个⽂件，分别到哪个⽬录，⽽不实<br>际安装？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qpl httpd-tools-2.4.6-88.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><p>11.如何查询openssl安装的时间</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rpm -qai openssl</span></span><br></pre></td></tr></table></figure><h3 id="rpm-默认安装位置"><a href="#rpm-默认安装位置" class="headerlink" title="rpm 默认安装位置"></a>rpm 默认安装位置</h3><p>/etc/ 配置文件<br>/usr/bin/ 可执行文件<br>/urs/lib/ 程序使用的函数库<br>/usr/share/doc/ 使用手册<br>/usr/share/man/ manual</p>]]></content>
      
      
      <categories>
          
          <category> 命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用awl0.2进行局域网SYN进行洪水ATT</title>
      <link href="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/"/>
      <url>/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/</url>
      
        <content type="html"><![CDATA[<h3 id="SYN洪水ATT的过程："><a href="#SYN洪水ATT的过程：" class="headerlink" title="SYN洪水ATT的过程："></a>SYN洪水ATT的过程：</h3><blockquote><p>在服务端返回一个确认的SYN-ACK包的时候有个潜在的弊端，如果发起的客户是一个不存在的客户端，那么服务端就不会接到客户端回应的ACK包。</p><a id="more"></a><p>这时服务端需要耗费一定的数量的系统内存来等待这个未决的连接，直到等待超关闭，才能施放内存。<br>如果恶意者通过通过ip欺骗，发送大量SYN包给受害者系统，导致服务端存在大量未决的连接并占用大量内存和tcp连接，从而导致正常客户端无法访问服务端，这就是SYN洪水ATT的过程。</p></blockquote><p>基本过程：从客户端到服务器<br><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/fb1281adf08e1beb5ba26788d0d96260.png" alt="img"></p><h3 id="awl0-2下载地址"><a href="#awl0-2下载地址" class="headerlink" title="awl0.2下载地址:"></a>awl0.2下载地址:</h3><p><a href="https://pan.baidu.com/s/1KeWufWTjQl6cA8xLd_3FVw" target="_blank" rel="noopener">https://pan.baidu.com/s/1KeWufWTjQl6cA8xLd_3FVw</a><br>提取码y1x0</p><h3 id="开始安装awl"><a href="#开始安装awl" class="headerlink" title="开始安装awl"></a>开始安装awl</h3><h3 id="1-解压"><a href="#1-解压" class="headerlink" title="1.解压"></a>1.解压</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">roo<span class="variable">t:</span>~ # tar xf awl-<span class="number">0.2</span>.tar </span><br><span class="line">roo<span class="variable">t:</span>~ # <span class="keyword">cd</span> awl-<span class="number">0.2</span>/</span><br><span class="line">roo<span class="variable">t:</span>~/awl-<span class="number">0.2</span> # <span class="keyword">ls</span></span><br><span class="line">acconfig.h    AUTHORS       config.h.in  configure.in  include     ltmain.<span class="keyword">sh</span>    missing  src</span><br><span class="line">acinclude.m4  ChangeLog     config.sub   COPYING       INSTALL     Makefile.<span class="keyword">am</span>  NEWS     TODO</span><br><span class="line">aclocal.m4    config.guess  configure    depcomp       install-<span class="keyword">sh</span>  Makefile.in  README</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/063fe79de033473af0a120ef3807b665.png" alt="img"></p><h3 id="2-编译安装"><a href="#2-编译安装" class="headerlink" title="2.编译安装"></a>2.编译安装</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~/awl<span class="number">-0.2</span> <span class="meta"># ./configure --prefix=/app/awl      #将全部文件安装至/app/awl/文件夹下</span></span><br><span class="line"><span class="symbol">root:</span>~/awl<span class="number">-0.2</span> <span class="meta"># make -j 4             #以4个进程同时编译——把源代码编译成可执行的二进制文件</span></span><br><span class="line"><span class="symbol">root:</span>~/awl<span class="number">-0.2</span> <span class="meta"># make install  #安装</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/414a8107c74f2e4c5a5f5efb4449fcb2.png" alt="img"></p><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>在centos6上有一台http服务器 ip为172.22.50.52<br>服务 器端为centos7 ip为172.22.50.51<br><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/cfd9c2f5118f06bd9e7052a82e45d9a9.png" alt="img"><br><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/6173fe15530cf46706926bbc78a3c332.png" alt="img"><br><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/c5e1fa8949aa0a0869e2d7914bb6e1bd.png" alt="img"><br>http服务为172.22.50.51<br>服务器（被ATT端）172.22.50.52<br>双方都能ping通</p><h3 id="开始ATT"><a href="#开始ATT" class="headerlink" title="开始ATT"></a>开始ATT</h3><p><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/c32f43940d48c84bbde898c72d2d24d8.png" alt="img"><br>通过刚才ping 52 可用 arp -n 查看ping过的主机mac地址</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># arp -n</span></span><br></pre></td></tr></table></figure><blockquote><p>awl参数如下:<br>-i 发送包的接口,如果省略默认是eth0<br>-m 指定目标mac地址 注：如果-m没有指定mac，默认目标MAC地址是“FF.FF.FF.FF.FF.FF”，<br>FF.FF.FF.FF.FF.FF MAC地址是什么？<br>这表示向同一网段内的所有主机发出ARP广播，进行SYNATT，还容易使整个局域网瘫痪。<br>-d 被ATT的机器的IP<br>-p 被ATT的机器的端口</p></blockquote><h2 id="在awl安装目录下使用awl-也可将awl文件夹写入PATH直接使用"><a href="#在awl安装目录下使用awl-也可将awl文件夹写入PATH直接使用" class="headerlink" title="在awl安装目录下使用awl(也可将awl文件夹写入PATH直接使用)"></a>在awl安装目录下使用awl(也可将awl文件夹写入PATH直接使用)</h2><p><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/6bbcbd16f4ff7ca6d29a79ae5e7a6ae9.png" alt="img"></p><h3 id="警告：在5秒内按CTLR-C停止"><a href="#警告：在5秒内按CTLR-C停止" class="headerlink" title="警告：在5秒内按CTLR+C停止"></a>警告：在5秒内按CTLR+C停止</h3><h3 id="这里有大量的伪装ip对52进行访问"><a href="#这里有大量的伪装ip对52进行访问" class="headerlink" title="这里有大量的伪装ip对52进行访问"></a>这里有大量的伪装ip对52进行访问</h3><p><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/621837c15a5286149cf0b545a298d96e.png" alt="img"></p><h3 id="ATT时服务器http服务器已不能访问"><a href="#ATT时服务器http服务器已不能访问" class="headerlink" title="ATT时服务器http服务器已不能访问"></a>ATT时服务器http服务器已不能访问</h3><p><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/081ccb7be9e7461856e484b5808c4c0c.png" alt="img"></p><h3 id="停止后访问恢复正常"><a href="#停止后访问恢复正常" class="headerlink" title="停止后访问恢复正常"></a>停止后访问恢复正常</h3><p><img src="/2020/03/10/Linux/Linux%E4%BD%BF%E7%94%A8awl0-2%E8%BF%9B%E8%A1%8C%E5%B1%80%E5%9F%9F%E7%BD%91SYN%E8%BF%9B%E8%A1%8C%E6%B4%AA%E6%B0%B4ATT/36f139a24283701de9eda155efbd982f.png" alt="img"></p><h1 id="拓展："><a href="#拓展：" class="headerlink" title="拓展："></a>拓展：</h1><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./awl -i ens33 -m  -d <span class="number">172.22</span><span class="number">.50</span><span class="number">.52</span> -p <span class="number">80</span></span><br></pre></td></tr></table></figure><p>在-m后不要跟目标mac地址，默认目标MAC地址是“FF.FF.FF.FF.FF.FF”<br>这表示向同一网段内的所有主机发出ARP广播，进行SYN ATT，容易使整个<strong>局域网瘫痪</strong></p><h1 id="慎重使用"><a href="#慎重使用" class="headerlink" title="慎重使用"></a>慎重使用</h1><h1 id="仅供学习网络协议，了解SYN洪水，请勿搞破坏"><a href="#仅供学习网络协议，了解SYN洪水，请勿搞破坏" class="headerlink" title="仅供学习网络协议，了解SYN洪水，请勿搞破坏"></a>仅供学习网络协议，了解SYN洪水，请勿搞破坏</h1>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SYN </tag>
            
            <tag> ATT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos6,7grub防止其他用户通过单用户系统破解root密码</title>
      <link href="/2020/03/10/Linux/centos6-7grub%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87%E5%8D%95%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%A0%B4%E8%A7%A3root%E5%AF%86%E7%A0%81/"/>
      <url>/2020/03/10/Linux/centos6-7grub%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87%E5%8D%95%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%A0%B4%E8%A7%A3root%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="centos7配置"><a href="#centos7配置" class="headerlink" title="centos7配置"></a>centos7配置</h2><a id="more"></a><h3 id="1-生成密码"><a href="#1-生成密码" class="headerlink" title="1.生成密码"></a>1.生成密码</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># grub2-mkpasswd-pbkdf2</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/centos6-7grub%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87%E5%8D%95%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%A0%B4%E8%A7%A3root%E5%AF%86%E7%A0%81/11633c60bfe215f1298b3db766218639.png" alt="img"></p><h3 id="2-编辑文件"><a href="#2-编辑文件" class="headerlink" title="2.编辑文件"></a>2.编辑文件</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vim /etc/grub.d/00_header</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/centos6-7grub%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87%E5%8D%95%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%A0%B4%E8%A7%A3root%E5%AF%86%E7%A0%81/4631d63ad355da1cd06d1ce2669b52cb.png" alt="img"></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="literal">EOF</span></span><br><span class="line"><span class="built_in">set</span> superusers=<span class="string">'root'</span></span><br><span class="line">password_pbkdf2  root grub.pbkdf2.sha512<span class="number">.10000</span>.B26A27BDB528B6B5C06979B5E0EFD8B9B436D96629C78B062A2B161945BE38965118BB13D2D88C09FFC415DDE73BBD294795F00F08279957DA0132978E0A69D0<span class="number">.8</span>A506D6B41740DEB74A1C618D0E34BC1DBC0578800C40599670D81BF13DA3DC5D0427C21325BAAEC73A12789A096BD077A06B918F5A74C420A4B291CFD059E76</span><br><span class="line"><span class="literal">EOF</span></span><br></pre></td></tr></table></figure><h3 id="3-更新grub信息"><a href="#3-更新grub信息" class="headerlink" title="3.更新grub信息"></a>3.更新grub信息</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/centos6-7grub%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87%E5%8D%95%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%A0%B4%E8%A7%A3root%E5%AF%86%E7%A0%81/b6529031da3494292fbd3e09e2b68dd6.png" alt="img"></p><h3 id="测试-显示引导时按e进入输入密码模式-成功"><a href="#测试-显示引导时按e进入输入密码模式-成功" class="headerlink" title="测试(显示引导时按e进入输入密码模式)成功"></a>测试(显示引导时按e进入输入密码模式)成功</h3><p><img src="/2020/03/10/Linux/centos6-7grub%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87%E5%8D%95%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%A0%B4%E8%A7%A3root%E5%AF%86%E7%A0%81/0f77010d974fd11a2bd9be806192220e.png" alt="img"></p><h2 id="centos6配置"><a href="#centos6配置" class="headerlink" title="centos6配置"></a>centos6配置</h2><h3 id="获取密文密码"><a href="#获取密文密码" class="headerlink" title="获取密文密码"></a>获取密文密码</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># grub-md5-crypt</span></span><br></pre></td></tr></table></figure><h3 id="编辑文件-在title行上面加入password-–md5"><a href="#编辑文件-在title行上面加入password-–md5" class="headerlink" title="编辑文件(在title行上面加入password –md5)"></a>编辑文件(在title行上面加入password –md5)</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="string">/boot/grub/grub.conf</span></span><br><span class="line">password <span class="params">--md5</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/centos6-7grub%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E9%80%9A%E8%BF%87%E5%8D%95%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F%E7%A0%B4%E8%A7%A3root%E5%AF%86%E7%A0%81/805a49f4ae56a18465319e2569c72530.png" alt="img"></p><h3 id="重启测试-按p进入grub-输入密码才可修改，成功"><a href="#重启测试-按p进入grub-输入密码才可修改，成功" class="headerlink" title="重启测试(按p进入grub)输入密码才可修改，成功"></a>重启测试(按p进入grub)输入密码才可修改，成功</h3>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7.6网卡绑定实现网卡冗余</title>
      <link href="/2020/03/10/Linux/centos7-6%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8D%A1%E5%86%97%E4%BD%99/"/>
      <url>/2020/03/10/Linux/centos7-6%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8D%A1%E5%86%97%E4%BD%99/</url>
      
        <content type="html"><![CDATA[<p>常用的绑定驱动模式有:<br>mode=0平衡负载模式:平时两块网卡均工作，且自动备援，采用Switch支援。<br>mode=1自动备援模式:平时只有一块网卡工作，故障后自动替换为另外的网卡。<br>mode=2平衡策略模式:此模式提供负载平衡和容错能力<br>mode=6:平衡负载模式:平时两块网卡均工作，且自动备援，无须设置Switch支援。</p><a id="more"></a><h3 id="1-添加2块网卡"><a href="#1-添加2块网卡" class="headerlink" title="1.添加2块网卡"></a>1.添加2块网卡</h3><p><img src="/2020/03/10/Linux/centos7-6%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8D%A1%E5%86%97%E4%BD%99/a76550e49899eacebce22fd49f129bbb.png" alt="img"></p><h3 id="2-确认网卡正常工作"><a href="#2-确认网卡正常工作" class="headerlink" title="2.确认网卡正常工作"></a>2.确认网卡正常工作</h3><p><img src="/2020/03/10/Linux/centos7-6%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8D%A1%E5%86%97%E4%BD%99/666eec6f73791d7b347a902d368ebc66.png" alt="img"></p><h3 id="3-添加新网卡配置文件"><a href="#3-添加新网卡配置文件" class="headerlink" title="3.添加新网卡配置文件"></a>3.添加新网卡配置文件</h3><h4 id="现在新添加的两块网卡均无配置文件需手动添加"><a href="#现在新添加的两块网卡均无配置文件需手动添加" class="headerlink" title="现在新添加的两块网卡均无配置文件需手动添加"></a>现在新添加的两块网卡均无配置文件需手动添加</h4><p><img src="/2020/03/10/Linux/centos7-6%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8D%A1%E5%86%97%E4%BD%99/e3f132847ffc2f48066b94bd0ee5ecad.png" alt="img"></p><h3 id="ifcfg-eth1"><a href="#ifcfg-eth1" class="headerlink" title="ifcfg-eth1"></a>ifcfg-eth1</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">DEVICE</span>=eth1</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=none</span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">MASTER</span>=bond0</span><br><span class="line"><span class="attr">SLAVE</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure><h3 id="ifcfg-eth2"><a href="#ifcfg-eth2" class="headerlink" title="ifcfg-eth2"></a>ifcfg-eth2</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">DEVICE</span>=eth2</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=none</span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">MASTER</span>=bond0</span><br><span class="line"><span class="attr">SLAVE</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure><h3 id="ifcfg-bond0"><a href="#ifcfg-bond0" class="headerlink" title="ifcfg-bond0"></a>ifcfg-bond0</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Bond</span><br><span class="line"><span class="attr">BOOTPROTO</span>=none</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">DEVICE</span>=bond0</span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">192.168</span>.<span class="number">153.130</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="attr">BONDING_OPTS</span>= “miimon=<span class="number">100</span> mode=<span class="number">0</span>”   //模式<span class="number">0</span>，miimon是用来进行链路监测</span><br></pre></td></tr></table></figure><h3 id="4-bond配置-修改modprobe相关设定文件"><a href="#4-bond配置-修改modprobe相关设定文件" class="headerlink" title="4.bond配置,修改modprobe相关设定文件"></a>4.bond配置,修改modprobe相关设定文件</h3><p>需要关闭NetworkManager服务</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># systemctl stop NetworkManager</span></span><br><span class="line"><span class="meta"># systemctl disable NetworkManager</span></span><br></pre></td></tr></table></figure><h3 id="5-查看内核是否加载bonding"><a href="#5-查看内核是否加载bonding" class="headerlink" title="5.查看内核是否加载bonding"></a>5.查看内核是否加载bonding</h3><p>重启网络服务</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl restart network</span></span><br></pre></td></tr></table></figure><p>查看内核是否加载</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># lsmod |grep bonding</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/centos7-6%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8D%A1%E5%86%97%E4%BD%99/172f4b6504a72c5e0b70d99eae95e3ad.png" alt="img"></p><h3 id="6-查看是否成功-eth1与eth2-MAC地址已同步说明绑定成功"><a href="#6-查看是否成功-eth1与eth2-MAC地址已同步说明绑定成功" class="headerlink" title="6.查看是否成功(eth1与eth2 MAC地址已同步说明绑定成功)"></a>6.查看是否成功(eth1与eth2 MAC地址已同步说明绑定成功)</h3><p><img src="/2020/03/10/Linux/centos7-6%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8D%A1%E5%86%97%E4%BD%99/cd360c0412847ed5fbbc9aafbc511cad.png" alt="img"><br>在另一台同网段虚拟机也可以ping通<br><img src="/2020/03/10/Linux/centos7-6%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E7%BD%91%E5%8D%A1%E5%86%97%E4%BD%99/7f4162ecb00ea9a2a636eab215f2b104.png" alt="img"></p><h3 id="7-多网卡也只需添加一块网卡写入配置文件即可"><a href="#7-多网卡也只需添加一块网卡写入配置文件即可" class="headerlink" title="7.多网卡也只需添加一块网卡写入配置文件即可"></a>7.多网卡也只需添加一块网卡写入配置文件即可</h3>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nmcli实现Network-Teaming</title>
      <link href="/2020/03/10/Linux/nmcli%E5%AE%9E%E7%8E%B0Network-Teaming/"/>
      <url>/2020/03/10/Linux/nmcli%E5%AE%9E%E7%8E%B0Network-Teaming/</url>
      
        <content type="html"><![CDATA[<p>网络组：是将多个网卡聚合在一起方法，从而实现冗错和提高吞吐量<br>网络组不同于旧版中bonding技术，提供更好的性能和扩展性<br>网络组由内核驱动和teamd守护进程实现.</p><a id="more"></a><p>多种方式runner<br>broadcast<br>roundrobin<br>activebackup<br>loadbalance<br>lacp (implements the 802.3ad Link Aggregation Control Protocol)<br><img src="/2020/03/10/Linux/nmcli%E5%AE%9E%E7%8E%B0Network-Teaming/9dfedabd72360e20bb522aba61fc1f79.png" alt="img"><br>这是已经配好的，NetworkManger支持多配置文件，想删时需要先down网卡</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# nmcli<span class="built_in"> connection </span>show</span><br><span class="line">[root@localhost ~]# nmcli<span class="built_in"> connection </span>down NWteam0</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/nmcli%E5%AE%9E%E7%8E%B0Network-Teaming/02097343774069c9fff7f3cf09bcdcf4.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# nmcli<span class="built_in"> connection </span>delete NWteam0 (删除网卡配置文件)</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/nmcli%E5%AE%9E%E7%8E%B0Network-Teaming/308ea3f157106e7685efda867ca74b16.png" alt="img"></p><h2 id="1创建网络组接口"><a href="#1创建网络组接口" class="headerlink" title="1创建网络组接口"></a>1创建网络组接口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nmcli con add <span class="built_in">type</span> team con-name CNAME ifname INAME [config JSON]</span><br><span class="line">CNAME 连接名，INAME 接口名</span><br><span class="line">JSON 指定runner方式</span><br><span class="line">格式：<span class="string">'&#123;"runner": &#123;"name": "METHOD"&#125;&#125;'</span></span><br><span class="line">METHOD 可以是broadcast, roundrobin,</span><br><span class="line">activebackup, loadbalance, lacp</span><br><span class="line">[root@localhost ~]<span class="comment"># nmcli connection add con-name OFFICE type team ifname office config '&#123;"runner":&#123;"name":"loadbalance"&#125;&#125;' ipv4.addresses 192.168.153.150 ipv4.method manual</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/nmcli%E5%AE%9E%E7%8E%B0Network-Teaming/06a7698d79e26a76d9b0bc6eb556da1d.png" alt="img"><br><img src="/2020/03/10/Linux/nmcli%E5%AE%9E%E7%8E%B0Network-Teaming/29238011f5d980132ff24660e555146e.png" alt="img"></p><h2 id="2创建port接口"><a href="#2创建port接口" class="headerlink" title="2创建port接口"></a>2创建port接口</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# nmcli<span class="built_in"> connection </span><span class="builtin-name">add</span> con-name OFFICE-1<span class="built_in"> type </span>team-slave ifname ens33 master OFFICE</span><br><span class="line">[root@localhost ~]# nmcli<span class="built_in"> connection </span><span class="builtin-name">add</span> con-name OFFICE-2<span class="built_in"> type </span>team-slave ifname ens38 master OFFICE</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/nmcli%E5%AE%9E%E7%8E%B0Network-Teaming/4251b0ef0a7ff72b404bf2806e236dbc.png" alt="img"><br>(绿色代表已开启的配置文件)</p><h2 id="3测试"><a href="#3测试" class="headerlink" title="3测试"></a>3测试</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# nmcli<span class="built_in"> connection </span>up OFFICE # 开启OFFICE配置</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nmcli </tag>
            
            <tag> Network-Teaming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>awk命令详解</title>
      <link href="/2020/03/10/Linux/awk%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/03/10/Linux/awk%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="awk命令格式和选项"><a href="#awk命令格式和选项" class="headerlink" title="awk命令格式和选项"></a>awk命令格式和选项</h2><p><em>语法形式</em></p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk [options] <span class="string">'program'</span> <span class="keyword">file</span>…</span><br><span class="line"><span class="function"><span class="keyword">Program</span></span>：pattern&#123;<span class="keyword">action</span> statements;..&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>命令选项</strong></p><p><strong>-F fs</strong>    fs指定输入分隔符，fs可以是字符串或正则表达式，如-F:<br><strong>-v var=value</strong>    赋值一个用户定义变量，将外部变量传递给awk<br><strong>-f scripfile</strong>   从脚本文件中读取awk命令<br><strong>-m[fr] val</strong>    对val值设置内在限制，-mf选项限制分配给val的最大块数目；-mr选项限制记录的最大数目。这两个功能是Bell实验室版awk的扩展功能，在标准awk中不适用。</p><h3 id="模式-pattern"><a href="#模式-pattern" class="headerlink" title="模式 pattern"></a>模式 pattern</h3><p>模式可以是以下任意一个：</p><ul><li>/正则表达式/：使用通配符的扩展集。</li><li>关系表达式：使用运算符进行操作，可以是字符串或数字的比较测试。</li><li>模式匹配表达式：用运算符<code>~</code>（匹配）和<code>!~</code>（不匹配）。</li><li>BEGIN语句块、pattern语句块、END语句块：参见awk的工作原理</li></ul><h2 id="awk脚本基本结构"><a href="#awk脚本基本结构" class="headerlink" title="awk脚本基本结构"></a>awk脚本基本结构</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123; <span class="keyword">print</span> <span class="string">"start"</span> &#125; pattern&#123; commands &#125; END&#123; <span class="keyword">print</span> <span class="string">"end"</span> &#125;' <span class="keyword">file</span></span><br></pre></td></tr></table></figure><h3 id="awk的工作原理"><a href="#awk的工作原理" class="headerlink" title="awk的工作原理"></a>awk的工作原理</h3><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">awk 'BEGIN</span><span class="template-variable">&#123; commands &#125;</span><span class="xml"> pattern</span><span class="template-variable">&#123; commands &#125;</span><span class="xml"> END</span><span class="template-variable">&#123; commands &#125;</span><span class="xml">'</span></span><br></pre></td></tr></table></figure><ul><li><p>第一步：执行<code>BEGIN{ commands }</code>语句块中的语句；</p></li><li><p>第二步：从文件或标准输入(stdin)读取一行，然后执行<code>pattern{ commands }</code>语句块，它逐行扫描文件，从第一行到最后一行重复这个过程，直到文件全部被读取完毕。</p></li><li><p>第三步：当读至输入流末尾时，执行</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">END</span>&#123; commands &#125;</span><br></pre></td></tr></table></figure><p>语句块。</p><p><strong>BEGIN语句块</strong> 在awk开始从输入流中读取行 <strong>之前</strong> 被执行，这是一个可选的语句块，比如变量初始化、打印输出表格的表头等语句通常可以写在BEGIN语句块中。</p><p><strong>END语句块</strong> 在awk从输入流中读取完所有的行 <strong>之后</strong> 即被执行，比如打印所有行的分析结果这类信息汇总都是在END语句块中完成，它也是一个可选语句块。</p><p><strong>pattern语句块</strong> 中的通用命令是最重要的部分，它也是可选的。如果没有提供pattern语句块，则默认执行<code>{ print }</code>，即打印每一个读取到的行，awk读取的每一行都会执行该语句块。</p><p><strong>示例</strong></p></li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo -<span class="keyword">e</span> <span class="string">"A line 1nA line 2"</span> | awk 'BEGIN&#123; <span class="keyword">print</span> <span class="string">"Start"</span> &#125; &#123; <span class="keyword">print</span> &#125; END&#123; <span class="keyword">print</span> <span class="string">"End"</span> &#125;'</span><br><span class="line">Start</span><br><span class="line">A <span class="keyword">line</span> 1</span><br><span class="line">A <span class="keyword">line</span> 2</span><br><span class="line">End</span><br></pre></td></tr></table></figure><p>当使用不带参数的<code>print</code>时，它就打印当前行，当<code>print</code>的参数是以逗号进行分隔时，打印时则以空格作为定界符。在awk的print语句块中双引号是被当作拼接符使用，例如：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo | awk '&#123; <span class="built_in">var1</span>=<span class="string">"v1"</span>; var2=<span class="string">"v2"</span>; var3=<span class="string">"v3"</span>; <span class="built_in">print</span> <span class="built_in">var1</span>,var2,var3; &#125;' </span><br><span class="line">v1 v2 v3</span><br></pre></td></tr></table></figure><p>双引号拼接使用：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo | awk '&#123; <span class="built_in">var1</span>=<span class="string">"v1"</span>; var2=<span class="string">"v2"</span>; var3=<span class="string">"v3"</span>; <span class="built_in">print</span> <span class="built_in">var1</span><span class="string">"="</span>var2<span class="string">"="</span>var3; &#125;'</span><br><span class="line">v1=v2=v3</span><br></pre></td></tr></table></figure><p>{ }类似一个循环体，会对文件中的每一行进行迭代，通常变量初始化语句（如：i=0）以及打印文件头部的语句放入BEGIN语句块中，将打印的结果等语句放在END语句块中。</p><h2 id="awk内置变量（预定义变量）"><a href="#awk内置变量（预定义变量）" class="headerlink" title="awk内置变量（预定义变量）"></a>awk内置变量（预定义变量）</h2><p>FS:字段分隔符等同-F</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">awk</span> -v FS=<span class="string">':'</span> <span class="string">'&#123;print <span class="variable">$1</span>,FS,<span class="variable">$3</span>&#125;’ /etc/passwd </span></span><br><span class="line"><span class="string">awk –F: '</span>&#123;<span class="attribute">print</span> <span class="variable">$1</span>,<span class="variable">$3</span>,<span class="variable">$7</span>&#125;’ /etc/passwd</span><br></pre></td></tr></table></figure><p>OFS：输出字段分隔符，默认为空白字符</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">awk</span> -v FS=‘:’ -v OFS=‘:’ <span class="string">'&#123;print <span class="variable">$1</span>,<span class="variable">$3</span>,<span class="variable">$7</span>&#125;’ /etc/passwd</span></span><br></pre></td></tr></table></figure><p>RS：输入记录分隔符，指定输入时的换行符</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -v <span class="attribute">RS</span>=<span class="string">' '</span> ‘&#123;<span class="builtin-name">print</span> &#125;’ /etc/passwd</span><br></pre></td></tr></table></figure><p>ORS：输出记录分隔符，输出时用指定符号代替换行符</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -v <span class="attribute">RS</span>=<span class="string">' '</span> -v <span class="attribute">ORS</span>=<span class="string">'###'</span>‘&#123;<span class="builtin-name">print</span> &#125;’ /etc/passwd</span><br></pre></td></tr></table></figure><p>NF：字段数量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="operator">-F</span>：‘&#123;print NF&#125;’ /etc/fstab 引用变量时，变量前不需加<span class="variable">$</span> </span><br><span class="line">awk <span class="operator">-F</span>：‘&#123;print <span class="variable">$</span>(NF<span class="literal">-1</span>)&#125;<span class="string">' /etc/passwd</span></span><br></pre></td></tr></table></figure><p>NR：行数记录号</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk ‘&#123;<span class="keyword">print</span> NR&#125;’ <span class="regexp">/etc/</span>fstab </span><br><span class="line">awk END‘&#123;<span class="keyword">print</span> NR&#125;’ <span class="regexp">/etc/</span>fstab</span><br></pre></td></tr></table></figure><p>FNR：各文件分别计数,记录号</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'&#123;print FNR&#125;'</span> <span class="regexp">/etc/</span>fstab <span class="regexp">/etc/i</span>nittab</span><br></pre></td></tr></table></figure><p>FILENAME：当前文件名</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk '&#123;<span class="keyword">print</span> FILENAME&#125;’ /etc/fstab</span><br></pre></td></tr></table></figure><p>ARGC：命令行参数的个数</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk '&#123;print ARGC&#125;’ <span class="string">/etc/fstab</span> <span class="string">/etc/inittab</span> </span><br><span class="line">awk ‘BEGIN &#123;print ARGC&#125;’ <span class="string">/etc/fstab</span> <span class="string">/etc/inittab</span></span><br></pre></td></tr></table></figure><p>ARGV：数组，保存的是命令行所给定的各参数</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk ‘<span class="keyword">BEGIN</span> &#123;print ARGV[<span class="number">0</span>]&#125;’ <span class="regexp">/etc/</span>fstab <span class="regexp">/etc/i</span>nittab </span><br><span class="line">awk ‘<span class="keyword">BEGIN</span> &#123;print ARGV[<span class="number">1</span>]&#125;’ <span class="regexp">/etc/</span>fstab <span class="regexp">/etc/i</span>nittab</span><br></pre></td></tr></table></figure><p>FILENAME当前⽂件名FILENAME变量的使⽤</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'&#123;print FILENAME,FNR,$1&#125;'</span> <span class="regexp">/etc/</span>fstab <span class="regexp">/root/</span>awktest.txt</span><br></pre></td></tr></table></figure><p>自定义变量量(区分字符大小写)<br>(1) -v var=value<br>(2) 在program中直接定义</p><h2 id="将外部变量值传递给awk"><a href="#将外部变量值传递给awk" class="headerlink" title="将外部变量值传递给awk"></a>将外部变量值传递给awk</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">awk -v <span class="attribute">test</span>=<span class="string">'hello gawk'</span> <span class="string">'&#123;print test&#125;'</span> /etc/fstab </span><br><span class="line">awk -v <span class="attribute">test</span>=<span class="string">'hello gawk'</span> <span class="string">'BEGIN&#123;print test&#125;'</span> </span><br><span class="line">awk <span class="string">'BEGIN&#123;test="hello,gawk";print test&#125;'</span> </span><br><span class="line">awk -F:‘&#123;<span class="attribute">sex</span>=“male”;print <span class="variable">$1</span>,sex,age;<span class="attribute">age</span>=18&#125;’ /etc/passwd </span><br><span class="line">awk -F: -f awkscript <span class="attribute">script</span>=“awk” /etc/passwd</span><br></pre></td></tr></table></figure><h2 id="查找进程pid"><a href="#查找进程pid" class="headerlink" title="查找进程pid"></a>查找进程pid</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">netstat</span> -antup | grep <span class="number">7770</span> | awk <span class="string">'&#123; print <span class="variable">$NF</span> NR&#125;'</span> | awk <span class="string">'&#123; print <span class="variable">$1</span>&#125;'</span></span><br></pre></td></tr></table></figure><h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><p>比较操作符：<br>==, !=, &gt;, &gt;=, &lt;=<br>模式匹配符：<br><del>：左边是否和右边匹配，包含<br>!</del>：是否不匹配 示例：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">awk</span> -F: <span class="string">'<span class="variable">$0</span> ~ /root/&#123;print <span class="variable">$1</span>&#125;‘ /etc/passwd </span></span><br><span class="line"><span class="string">awk '</span><span class="variable">$0</span>~“^root<span class="string">"' /etc/passwd </span></span><br><span class="line"><span class="string">awk '<span class="variable">$0</span> !~ /root/‘ /etc/passwd </span></span><br><span class="line"><span class="string">awk -F: ‘<span class="variable">$3</span>==0’ /etc/passwd</span></span><br></pre></td></tr></table></figure><p>逻辑操作符：<br>与&amp;&amp;，或||，非!<br>示例：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">• awk -F: '<span class="variable">$3</span>&gt;=0 &amp;&amp; <span class="variable">$3</span>&lt;=1000 &#123;<span class="keyword">print</span> <span class="variable">$1&#125;</span>' /etc/passwd </span><br><span class="line">• awk -F: '<span class="variable">$3</span>==0 || <span class="variable">$3</span>&gt;=1000 &#123;<span class="keyword">print</span> <span class="variable">$1&#125;</span>' /etc/passwd </span><br><span class="line">• awk -F: ‘!(<span class="variable">$3</span>==0) &#123;<span class="keyword">print</span> <span class="variable">$1&#125;</span>' /etc/passwd </span><br><span class="line">• awk -F: ‘!(<span class="variable">$3</span>&gt;=500) &#123;<span class="keyword">print</span> <span class="variable">$3&#125;</span>’ /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="运算级优先级表"><a href="#运算级优先级表" class="headerlink" title="运算级优先级表"></a>运算级优先级表</h3><p>!级别越高越优先<br>级别越高越优先</p><h2 id="awk高级输入输出"><a href="#awk高级输入输出" class="headerlink" title="awk高级输入输出"></a>awk高级输入输出</h2><h3 id="读取下一条记录"><a href="#读取下一条记录" class="headerlink" title="读取下一条记录"></a>读取下一条记录</h3><p>awk中<code>next</code>语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面语句。而进行下一行匹配。next语句一般用于多行合并：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat text.txt</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line"></span><br><span class="line">awk <span class="string">'NR%2==1&#123;next&#125;&#123;print NR,$0;&#125;'</span> text.txt</span><br><span class="line"><span class="number">2</span> b</span><br><span class="line"><span class="number">4</span> d</span><br></pre></td></tr></table></figure><p>当记录行号除以2余1，就跳过当前行。下面的<code>print NR,$0</code>也不会执行。下一行开始，程序有开始判断<code>NR%2</code>值。这个时候记录行号是<code>：2</code> ，就会执行下面语句块：<code>&#39;print NR,$0&#39;</code></p><p>分析发现需要将包含有“web”行进行跳过，然后需要将内容与下面行合并为一行：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat text.txt</span><br><span class="line">web01[<span class="number">192.168</span><span class="number">.2</span><span class="number">.100</span>]</span><br><span class="line">httpd            ok</span><br><span class="line">tomcat               ok</span><br><span class="line">sendmail               ok</span><br><span class="line">web02[<span class="number">192.168</span><span class="number">.2</span><span class="number">.101</span>]</span><br><span class="line">httpd            ok</span><br><span class="line">postfix               ok</span><br><span class="line">web03[<span class="number">192.168</span><span class="number">.2</span><span class="number">.102</span>]</span><br><span class="line">mysqld            ok</span><br><span class="line">httpd               ok</span><br><span class="line"><span class="number">0</span></span><br><span class="line">awk <span class="string">'/^web/&#123;T=$0;next;&#125;&#123;print T":t"$0;&#125;'</span> test.txt</span><br><span class="line">web01[<span class="number">192.168</span><span class="number">.2</span><span class="number">.100</span>]:   httpd            ok</span><br><span class="line">web01[<span class="number">192.168</span><span class="number">.2</span><span class="number">.100</span>]:   tomcat               ok</span><br><span class="line">web01[<span class="number">192.168</span><span class="number">.2</span><span class="number">.100</span>]:   sendmail               ok</span><br><span class="line">web02[<span class="number">192.168</span><span class="number">.2</span><span class="number">.101</span>]:   httpd            ok</span><br><span class="line">web02[<span class="number">192.168</span><span class="number">.2</span><span class="number">.101</span>]:   postfix               ok</span><br><span class="line">web03[<span class="number">192.168</span><span class="number">.2</span><span class="number">.102</span>]:   mysqld            ok</span><br><span class="line">web03[<span class="number">192.168</span><span class="number">.2</span><span class="number">.102</span>]:   httpd               ok</span><br></pre></td></tr></table></figure><h3 id="简单地读取一条记录"><a href="#简单地读取一条记录" class="headerlink" title="简单地读取一条记录"></a>简单地读取一条记录</h3><p><code>awk getline</code>用法：输出重定向需用到<code>getline函数</code>。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。</p><p>getline语法：getline var，变量var包含了特定行的内容。</p><p>awk getline从整体上来说，用法说明：</p><ul><li><p><strong>当其左右无重定向符|或&lt;时：</strong> getline作用于当前文件，读入当前文件的第一行给其后跟的变量<code>var</code>或<code>$0</code>（无变量），应该注意到，由于awk在处理getline之前已经读入了一行，所以getline得到的返回结果是隔行的。</p></li><li><p>当其左右有重定向符<code>|</code>或<code>&lt;</code>时：</p></li></ul><p>  getline则作用于定向输入文件，由于该文件是刚打开，并没有被awk读入一行，只是getline读入，那么getline返回的是该文件的第一行，而不是隔行。</p><p>  <strong>示例：</strong></p><p>执行linux的<code>date</code>命令，并通过管道输出给<code>getline</code>，然后再把输出赋值给自定义变量out，并打印它：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123; <span class="string">"date"</span> | getline <span class="keyword">out</span>; <span class="keyword">print</span> <span class="keyword">out</span> &#125;' <span class="keyword">test</span></span><br></pre></td></tr></table></figure><p>执行shell的date命令，并通过管道输出给getline，然后getline从管道中读取并将输入赋值给out，split函数把变量out转化成数组mon，然后打印数组mon的第二个元素：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123; <span class="string">"date"</span> | getline <span class="keyword">out</span>; <span class="keyword">split</span>(<span class="keyword">out</span>,mon); <span class="keyword">print</span> mon[2] &#125;' <span class="keyword">test</span></span><br></pre></td></tr></table></figure><p>命令ls的输出传递给geline作为输入，循环使getline从ls的输出中读取一行，并把它打印到屏幕。这里没有输入文件，因为BEGIN块在打开输入文件前执行，所以可以忽略输入文件。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="symbol">'BEGIN</span>&#123; <span class="keyword">while</span>( <span class="string">"ls"</span> | getline) print &#125;'</span><br></pre></td></tr></table></figure><h3 id="关闭文件"><a href="#关闭文件" class="headerlink" title="关闭文件"></a>关闭文件</h3><p>awk中允许在程序中关闭一个输入或输出文件，方法是使用awk的close语句。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">close</span><span class="params">(<span class="string">"filename"</span>)</span></span></span><br></pre></td></tr></table></figure><p>filename可以是getline打开的文件，也可以是stdin，包含文件名的变量或者getline使用的确切命令。或一个输出文件，可以是stdout，包含文件名的变量或使用管道的确切命令。</p><h3 id="输出到一个文件"><a href="#输出到一个文件" class="headerlink" title="输出到一个文件"></a>输出到一个文件</h3><p>awk中允许用如下方式将结果输出到一个文件：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">| awk '&#123;printf("</span>hello word!n<span class="string">") &gt; "</span>datafile<span class="string">"&#125;'</span></span><br><span class="line">或</span><br><span class="line">echo <span class="string">| awk '&#123;printf("</span>hello word!n<span class="string">") &gt;&gt; "</span>datafile<span class="string">"&#125;'</span></span><br></pre></td></tr></table></figure><h2 id="控制语句："><a href="#控制语句：" class="headerlink" title="控制语句："></a>控制语句：</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;statements;...&#125;：组合语句；</span><br><span class="line"><span class="keyword">if</span>(condition)&#123;statements;...&#125;<span class="keyword">else</span> &#123;statements;...&#125; </span><br><span class="line"><span class="keyword">if</span>(condition1)&#123;statement1&#125;<span class="keyword">else</span> <span class="keyword">if</span>(condition2)&#123;statement2&#125; <span class="keyword">else</span>&#123;statement3&#125; </span><br><span class="line"><span class="keyword">while</span>(condition)&#123;statements;...&#125; </span><br><span class="line"><span class="keyword">do</span> &#123;statements;...&#125; <span class="keyword">while</span>(condition)</span><br><span class="line"><span class="keyword">for</span>(expr1;expr2;expr3) &#123;statements;...&#125; </span><br><span class="line"><span class="keyword">break</span> </span><br><span class="line"><span class="keyword">continue</span> </span><br><span class="line"><span class="keyword">delete</span> array[index] </span><br><span class="line"><span class="keyword">delete</span> array </span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">awk-F:<span class="string">'&#123;$3&gt;=500?usertype="commonuser":usertype="sysuser";printf"%-15s %-20s %10d\n",usertype,$1,$3&#125;'</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></table></figure><h3 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h3><p>数字做数组索引（下标）：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Array[1]</span>=<span class="string">"sun"</span></span><br><span class="line"><span class="attr">Array[2]</span>=<span class="string">"kai"</span></span><br></pre></td></tr></table></figure><p>字符串做数组索引（下标）：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span>[<span class="string">"first"</span>]=<span class="string">"www"</span></span><br><span class="line"><span class="keyword">Array</span><span class="string">"[last"</span>]=<span class="string">"name"</span></span><br><span class="line"><span class="keyword">Array</span>[<span class="string">"birth"</span>]=<span class="string">"1987"</span></span><br></pre></td></tr></table></figure><p>使用中<code>print Array[1]</code>会打印出sun；使用<code>print Array[2]</code>会打印出kai；使用<code>print[&quot;birth&quot;]</code>会得到1987。</p><p><strong>读取数组的值</strong></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; for(<span class="name">item</span> in array) &#123;print array[item]&#125;<span class="comment">; &#125;       #输出的顺序是随机的</span></span><br><span class="line">&#123; for(<span class="name">i=1;i&lt;=len;i++</span>) &#123;print array[i]&#125;<span class="comment">; &#125;         #Len是数组的长度</span></span><br></pre></td></tr></table></figure><h3 id="数组相关函数"><a href="#数组相关函数" class="headerlink" title="数组相关函数"></a>数组相关函数</h3><p><strong>得到数组长度：</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123;info=<span class="string">"it is a test"</span>;lens=<span class="keyword">split</span>(info,<span class="keyword">tA</span>,<span class="string">" "</span>);<span class="keyword">print</span> <span class="built_in">length</span>(<span class="keyword">tA</span>),lens;&#125;'</span><br><span class="line">4 4</span><br></pre></td></tr></table></figure><p>length返回字符串以及数组长度，split进行分割字符串为数组，也会返回分割得到数组长度。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123;info=<span class="string">"it is a test"</span>;<span class="keyword">split</span>(info,<span class="keyword">tA</span>,<span class="string">" "</span>);<span class="keyword">print</span> asort(<span class="keyword">tA</span>);&#125;'</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>asort对数组进行排序，返回数组长度。</p><p><strong>输出数组内容（无序，有序输出）：</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123;info=<span class="string">"it is a test"</span>;<span class="keyword">split</span>(info,<span class="keyword">tA</span>,<span class="string">" "</span>);<span class="keyword">for</span>(k <span class="keyword">in</span> <span class="keyword">tA</span>)&#123;<span class="keyword">print</span> k,<span class="keyword">tA</span>[k];&#125;&#125;'</span><br><span class="line">4 <span class="keyword">test</span></span><br><span class="line">1 it</span><br><span class="line">2 is</span><br><span class="line">3 a</span><br></pre></td></tr></table></figure><p><code>for…in</code>输出，因为数组是关联数组，默认是无序的。所以通过<code>for…in</code>得到是无序的数组。如果需要得到有序数组，需要通过下标获得。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123;info=<span class="string">"it is a test"</span>;tlen=split(info,tA,<span class="string">" "</span>);for(k=<span class="number">1</span>;k&lt;=tlen;k++)&#123;print k,tA[k];&#125;&#125;'</span><br><span class="line"><span class="number">1</span> it</span><br><span class="line"><span class="number">2</span> is</span><br><span class="line"><span class="number">3</span> a</span><br><span class="line"><span class="number">4</span> test</span><br></pre></td></tr></table></figure><p>注意：数组下标是从1开始，与C数组不一样。</p><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><p>awk内置函数，主要分以下3种类似：算数函数、字符串函数、其它一般函数、时间函数。</p><h3 id="算术函数"><a href="#算术函数" class="headerlink" title="算术函数"></a>算术函数</h3><table><thead><tr><th align="left">格式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">atan2( y, x )</td><td align="left">返回 y/x 的反正切。</td></tr><tr><td align="left">cos( x )</td><td align="left">返回 x 的余弦；x 是弧度。</td></tr><tr><td align="left">sin( x )</td><td align="left">返回 x 的正弦；x 是弧度。</td></tr><tr><td align="left">exp( x )</td><td align="left">返回 x 幂函数。</td></tr><tr><td align="left">log( x )</td><td align="left">返回 x 的自然对数。</td></tr><tr><td align="left">sqrt( x )</td><td align="left">返回 x 平方根。</td></tr><tr><td align="left">int( x )</td><td align="left">返回 x 的截断至整数的值。</td></tr><tr><td align="left">rand( )</td><td align="left">返回任意数字 n，其中 0 &lt;= n &lt; 1。</td></tr><tr><td align="left">srand( [expr] )</td><td align="left">将 rand 函数的种子值设置为 Expr 参数的值，或如果省略 Expr 参数则使用某天的时间。返回先前的种子值。</td></tr></tbody></table><p>举例说明：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN&#123;OFMT=<span class="string">"%.3f"</span>;fs=sin(<span class="number">1</span>);fe=exp(<span class="number">10</span>);fl=log(<span class="number">10</span>);fi=int(<span class="number">3.1415</span>);print fs,fe,fl,fi;&#125;'</span><br><span class="line"><span class="number">0.841</span> <span class="number">22026.466</span> <span class="number">2.303</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>OFMT 设置输出数据格式是保留3位小数。</p><p>获得随机数：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="number">'BE</span>GIN&#123;srand();fr=<span class="keyword">int</span>(<span class="number">100</span>*<span class="keyword">rand</span>());print fr;&#125;'</span><br><span class="line"><span class="number">78</span></span><br><span class="line">awk <span class="number">'BE</span>GIN&#123;srand();fr=<span class="keyword">int</span>(<span class="number">100</span>*<span class="keyword">rand</span>());print fr;&#125;'</span><br><span class="line"><span class="number">31</span></span><br><span class="line">awk <span class="number">'BE</span>GIN&#123;srand();fr=<span class="keyword">int</span>(<span class="number">100</span>*<span class="keyword">rand</span>());print fr;&#125;'</span><br><span class="line"><span class="number">41</span></span><br></pre></td></tr></table></figure><p><strong>格式化字符串输出（printf使用）</strong></p><p>格式化字符串格式：</p><p>其中格式化字符串包括两部分内容：一部分是正常字符，这些字符将按原样输出; 另一部分是格式化规定字符，以<code>&quot;%&quot;</code>开始，后跟一个或几个规定字符,用来确定输出内容格式。</p><table><thead><tr><th align="left">格式</th><th align="left">描述</th><th align="left">格式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">%d</td><td align="left">十进制有符号整数</td><td align="left">%u</td><td align="left">十进制无符号整数</td></tr><tr><td align="left">%f</td><td align="left">浮点数</td><td align="left">%s</td><td align="left">字符串</td></tr><tr><td align="left">%c</td><td align="left">单个字符</td><td align="left">%p</td><td align="left">指针的值</td></tr><tr><td align="left">%e</td><td align="left">指数形式的浮点数</td><td align="left">%x</td><td align="left">%X 无符号以十六进制表示的整数</td></tr><tr><td align="left">%o</td><td align="left">无符号以八进制表示的整数</td><td align="left">%g</td><td align="left">自动选择合适的表示法</td></tr></tbody></table><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">awk -F: ‘&#123;<span class="keyword">printf</span> <span class="string">"%s"</span>,$1&#125;’ /etc/passwd </span><br><span class="line">awk -F: ‘&#123;<span class="keyword">printf</span> <span class="string">"%s\n"</span>,$1&#125;’ /etc/passwd </span><br><span class="line">awk -F: <span class="string">'&#123;printf "%-20s %10d\n",$1,$3&#125;'</span> /etc/passwd </span><br><span class="line">awk -F:‘ &#123;<span class="keyword">printf</span> <span class="string">"Username: %s\n"</span>,$1&#125;’ /etc/passwd </span><br><span class="line">awk -F: ‘&#123;<span class="keyword">printf</span> “Username: %s,UID:%d\n<span class="string">",$1,$3&#125;’ /etc/passwd </span></span><br><span class="line"><span class="string">awk -F: ‘&#123;printf "</span>Username: %15s,UID:%d\n<span class="string">",$1,$3&#125;’ /etc/passwd </span></span><br><span class="line"><span class="string">awk -F: ‘&#123;printf "</span>Username: %-<span class="number">15</span><span class="keyword">s</span>,UID:%d\n<span class="string">",$1,$3&#125;’ /etc/passwd</span></span><br></pre></td></tr></table></figure><h2 id="练习实例"><a href="#练习实例" class="headerlink" title="练习实例"></a>练习实例</h2><p>输出当前所有用户</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -<span class="string">F:</span> <span class="string">'&#123;printf "user:%d ^C\n",NR,$1&#125;'</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></table></figure><p>ssh连接数</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ss -nt<span class="string">|awk -F "</span>[[:space:]]+<span class="string">|:"</span> 'NR&gt;1&#123;print $(NF-2)&#125;'</span><br><span class="line">ss -nt<span class="string">|awk -F "</span>[[:space:]]+<span class="string">|:"</span> 'NR!=1&#123;print $(NF-2)&#125;'</span><br></pre></td></tr></table></figure><p>uid大于1000用户</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">awk</span> -F: <span class="string">'<span class="variable">$3</span>&gt;=1000&#123;print <span class="variable">$1</span>,<span class="variable">$3</span>&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><p>本机ip地址</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line">ifconfig ens33 |awk 'NR==<span class="number">2</span>&#123;print $<span class="number">2</span>&#125;'</span><br><span class="line"><span class="number">6</span></span><br><span class="line">ifconfig eth0 |awk -F<span class="string">"[[:space:]]+|:"</span> 'NR==<span class="number">2</span>&#123;print $<span class="number">4</span>&#125;'</span><br></pre></td></tr></table></figure><p>分区使用率</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df|awk -F<span class="string">"[[:space:]]+|%"</span> 'NR!=1&#123;<span class="keyword">print</span> <span class="variable">$1</span>,<span class="variable">$5&#125;</span>'</span><br><span class="line"></span><br><span class="line">df|awk -F<span class="string">"[[:space:]]+|%"</span> 'NR!=1 &amp;&amp; <span class="variable">$5</span>&gt;10&#123;<span class="keyword">print</span> <span class="variable">$1</span>,<span class="variable">$5&#125;</span>'</span><br><span class="line">df|awk -F<span class="string">"[[:space:]]+|%"</span> '/^\/dev\/sd/&#123;<span class="keyword">print</span> <span class="variable">$1</span>,<span class="variable">$5&#125;</span>'</span><br><span class="line">fstab</span><br><span class="line"><span class="keyword">cat</span> /etc/fstab |awk '!/^#|^$/&#123;<span class="keyword">print</span> <span class="variable">$0&#125;</span>'</span><br></pre></td></tr></table></figure><p>可登录用户</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> /etc/passwd |awk '!/nologin$/&#123;<span class="keyword">print</span> <span class="variable">$0&#125;</span>'</span><br><span class="line"><span class="keyword">cat</span> /etc/passwd |awk '/nologin$/&#123;<span class="keyword">print</span> <span class="variable">$0&#125;</span>'</span><br></pre></td></tr></table></figure><p>⽂件ip_list.txt如下格式，请提取“.magedu.com”前⾯的主机名部分 并写⼊到该⽂件中：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> blog<span class="selector-class">.magedu</span><span class="selector-class">.com</span> </span><br><span class="line"><span class="number">2</span> www<span class="selector-class">.magedu</span><span class="selector-class">.com</span> </span><br><span class="line">... </span><br><span class="line"><span class="number">999</span> study<span class="selector-class">.magedu</span>.com</span><br><span class="line">awk -F<span class="string">'[" ".]'</span> <span class="string">'&#123;print $2&#125;'</span> ip_list<span class="selector-class">.txt</span> &gt;&gt; ip_list.txt</span><br></pre></td></tr></table></figure><p>统计/etc/fstab⽂件中每个⽂件系统类型出现的次数？</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk '/^[UUID\/]/&#123;<span class="built_in">fs</span>[$<span class="number">3</span>]++&#125;END&#123;<span class="keyword">for</span>(i <span class="keyword">in</span> <span class="built_in">fs</span>)&#123;<span class="built_in">print</span> i,<span class="built_in">fs</span>[i]&#125;&#125;' /etc/fstab</span><br></pre></td></tr></table></figure><p>统计/etc/fstab⽂件中每个单词出现的次数？</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk '&#123;<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=NF;i++)&#123;<span class="built_in">word</span>[$i]++&#125;&#125;END&#123;<span class="keyword">for</span>(j <span class="keyword">in</span> <span class="built_in">word</span>)&#123;print j,<span class="built_in">word</span>[j]&#125;&#125;' /etc/fstab</span><br></pre></td></tr></table></figure><p>提取出字符串Yd$C@M05MB%9Bdh7dq+YVixp3vpw中的所有数 字？</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">echo</span> <span class="string">"yd<span class="variable">$C</span><span class="variable">@M05MB</span>%9&amp;Bdh7dq+yVixp3vpw"</span> | awk <span class="string">'gsub(/[^[:digit:]]/," ",<span class="variable">$0</span>)'</span></span><br></pre></td></tr></table></figure><p>有⼀⽂件记录了1-100000之间的随机的整数共5000个，存储的格 式，100,50,35,89，。。。请取出其中最⼤和最⼩的整数？</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">]# (echo -e <span class="string">"$RANDOM\c"</span>;<span class="keyword">for</span>((i=<span class="number">1</span>;&lt;<span class="number">100</span>;i++));<span class="keyword">do</span> echo -e “,$RANDOM\c”;done)i&gt;<span class="built_in">num</span>.txt</span><br><span class="line">]#awk -F <span class="string">","</span> '&#123;<span class="built_in">min</span>=$<span class="number">1</span>;<span class="built_in">max</span>=$<span class="number">1</span>;<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=NF;i++)&#123;<span class="keyword">if</span>($i&gt;=<span class="built_in">max</span>)&#123;<span class="built_in">max</span>=$i&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">min</span>&gt;=$i)<span class="built_in">min</span>=$i&#125;<span class="built_in">print</span> <span class="built_in">min</span>,<span class="built_in">max</span>&#125;' <span class="built_in">num</span>.txt</span><br></pre></td></tr></table></figure><p>解决DOS***⽣产案例：根据web⽇志或⽹络连接数，监控当某个ip 并发连接数或者短时间内pv达到100，即调⽤防⽕墙命令封掉对应的ip，控频率每隔5分钟；防⽕墙命令为iptables -A INPUT -s IP -j REJECT？</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim deny_dos.<span class="keyword">sh</span> </span><br><span class="line"><span class="keyword">while</span> true ;<span class="keyword">do</span> </span><br><span class="line">awk '/^[0-9]/&#123;IP[<span class="variable">$1</span>]++&#125;END&#123;<span class="keyword">for</span>(i <span class="keyword">in</span> IP)&#123;<span class="keyword">if</span> (IP[i]&gt;=100)<span class="keyword">print</span> i&#125;&#125;' </span><br><span class="line">/<span class="keyword">var</span>/<span class="keyword">log</span>/httpd/access_log | <span class="keyword">while</span> <span class="keyword">read</span> <span class="keyword">line</span>;<span class="keyword">do</span> iptables -A <span class="keyword">INPUT</span> -s <span class="variable">$line</span> -j REJECT;done </span><br><span class="line"><span class="keyword">sleep</span> 300</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>将以下⽂件内容中FQDN取出并根据其进⾏计数从⾼到低排序：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http:</span><span class="comment">//mail.magedu.com/index.html</span></span><br><span class="line"><span class="string">http:</span><span class="comment">//www.magedu.com/test.html</span></span><br><span class="line"><span class="string">http:</span><span class="comment">//study.magedu.com/index.html</span></span><br><span class="line"><span class="string">http:</span><span class="comment">//blog.magedu.com/index.html</span></span><br><span class="line"><span class="string">http:</span><span class="comment">//www.magedu.com/images/logo.jpg</span></span><br><span class="line"><span class="string">http:</span><span class="comment">//blog.magedu.com/20080102.html</span></span><br><span class="line">awk -F <span class="string">"[/]+"</span> <span class="string">'&#123;html[$2]++&#125;END&#123;for(i in html)print i,html[i]&#125;'</span> html.txt</span><br><span class="line">答：awk -F “/” ‘&#123;print $<span class="number">3</span>&#125;’|sort|uniq -c|sort -nr</span><br></pre></td></tr></table></figure><p>将以下⽂本以inode为标记，对inode相同的counts进⾏累加，并且统 计出 同一inode中，beginnumber的最小值和endnumber的最大值</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">inode|<span class="string">beginnumber</span>|<span class="string">endnumber</span>|<span class="string">counts</span>|</span><br><span class="line">106|<span class="string">3363120000</span>|<span class="string">3363129999</span>|<span class="string">10000</span>|</span><br><span class="line">106|<span class="string">3368560000</span>|<span class="string">3368579999</span>|<span class="string">20000</span>|</span><br><span class="line">310|<span class="string">3337000000</span>|<span class="string">3337000100</span>|<span class="string">101</span>|</span><br><span class="line">310|<span class="string">3342950000</span>|<span class="string">3342959999</span>|<span class="string">10000</span>|</span><br><span class="line">310|<span class="string">3362120960</span>|<span class="string">3362120961</span>|<span class="string">2</span>|</span><br><span class="line">311|<span class="string">3313460102</span>|<span class="string">3313469999</span>|<span class="string">9898</span>|</span><br><span class="line">311|<span class="string">3313470000</span>|<span class="string">3313499999</span>|<span class="string">30000</span>|</span><br><span class="line">311|<span class="string">3362120962</span>|<span class="string">3362120963</span>|<span class="string">2</span>|</span><br><span class="line">输出的结果格式为：</span><br><span class="line"> 310|<span class="string">3337000000</span>|<span class="string">3362120961</span>|<span class="string">10103</span>|</span><br><span class="line"> 311|<span class="string">3313460102</span>|<span class="string">3362120963</span>|<span class="string">39900</span>|</span><br><span class="line"> 106|<span class="string">3363120000</span>|<span class="string">3368579999</span>|<span class="string">30000</span>|<span class="string"> </span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F&#39;|&#39; -v OFS&#x3D;&#39;|&#39; &#39;&#x2F;^[0-9]&#x2F;&#123;inode[$1]++; if(!bn[$1])&#123;bn[$1]&#x3D;$2&#125;else if(bn[$1]&gt;$2)&#123;bn[$1]&#x3D;$2&#125;; if(en[$1]</span><br></pre></td></tr></table></figure><p>#######################</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">⽂件datafile内容如下： </span><br><span class="line">Mike Harrington:[<span class="number">510</span>] <span class="number">548</span><span class="number">-1278</span>:<span class="number">250</span>:<span class="number">100</span>:<span class="number">175</span></span><br><span class="line">Christian Dobbins:[<span class="number">408</span>] <span class="number">538</span><span class="number">-2358</span>:<span class="number">155</span>:<span class="number">90</span>:<span class="number">201</span></span><br><span class="line">Suan Dalsass:[<span class="number">206</span>] <span class="number">654</span><span class="number">-6279</span>:<span class="number">250</span>:<span class="number">60</span>:<span class="number">50</span></span><br><span class="line">Archie McNichol:[<span class="number">206</span>] <span class="number">548</span><span class="number">-1348</span>:<span class="number">250</span>:<span class="number">100</span>:<span class="number">175</span></span><br><span class="line">Jody Savage:[<span class="number">206</span>] <span class="number">548</span><span class="number">-1278</span>:<span class="number">15</span>:<span class="number">188</span>:<span class="number">150</span></span><br><span class="line">Guy Quigley:[<span class="number">916</span>] <span class="number">343</span><span class="number">-6410</span>:<span class="number">250</span>:<span class="number">100</span>:<span class="number">175</span></span><br><span class="line">Dan Saveage:[<span class="number">406</span>] <span class="number">298</span><span class="number">-7744</span>:<span class="number">450</span>:<span class="number">300</span>:<span class="number">275</span></span><br><span class="line">Nancy McNeil:[<span class="number">206</span>] <span class="number">548</span><span class="number">-1278</span>:<span class="number">250</span>:<span class="number">80</span>:<span class="number">75</span></span><br><span class="line">John Goldenrod:[<span class="number">916</span>] <span class="number">348</span><span class="number">-4278</span>:<span class="number">250</span>:<span class="number">100</span>:<span class="number">175</span></span><br><span class="line">Chet Main:[<span class="number">510</span>] <span class="number">548</span><span class="number">-5258</span>:<span class="number">50</span>:<span class="number">95</span>:<span class="number">135</span></span><br><span class="line">Tom Savage:[<span class="number">408</span>] <span class="number">926</span><span class="number">-3456</span>:<span class="number">250</span>:<span class="number">168</span>:<span class="number">200</span></span><br><span class="line">Elizabeth Stachelin:[<span class="number">916</span>] <span class="number">440</span><span class="number">-1763</span>:<span class="number">175</span>:<span class="number">75</span>:<span class="number">300</span></span><br></pre></td></tr></table></figure><p>上面的数据表中包含名字、电话号码和过去三个月里的捐款,下面分别用awk解答：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>)显示所有电话号码？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '&#123;print $<span class="number">2</span>&#125;' datafile.txt </span><br><span class="line"><span class="number">2</span>)显示Dan的电话号码？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '/^Dan/&#123;print $<span class="number">2</span>&#125;' datafile.txt </span><br><span class="line"><span class="number">3</span>)显示Suan的捐款和电话？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '/^Suan/&#123;print $<span class="number">3</span>,$<span class="number">4</span>,$<span class="number">5</span>,$<span class="number">2</span>&#125;' datafile.txt </span><br><span class="line"><span class="number">4</span>)显示所有以D开头的姓？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '&#123;print $<span class="number">1</span>&#125;' datafile.txt | awk '&#123;print $<span class="number">2</span>&#125;'|awk '/^D/' </span><br><span class="line"><span class="number">5</span>)显示所有以一个C或E开头的名？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '&#123;print $<span class="number">1</span>&#125;' datafile.txt | awk '&#123;print $<span class="number">1</span>&#125;'|awk '/^[CE]/'</span><br><span class="line"><span class="number">6</span>)显示所有只有四个字符的名？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '&#123;print $<span class="number">1</span>&#125;' datafile.txt | awk '&#123;if(length($<span class="number">1</span>)==<span class="number">4</span>)print $<span class="number">1</span>&#125;' </span><br><span class="line"><span class="number">7</span>)显示所有区号为<span class="number">916</span>的人名？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '/<span class="number">916</span>/&#123;print $<span class="number">1</span>&#125;' datafile.txt</span><br><span class="line"><span class="number">8</span>)显示Mike的捐款，显示每个值时都有$开头，如$<span class="number">250</span>$<span class="number">100</span>$<span class="number">175</span>？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '/^Mike/&#123;print <span class="string">"$"</span>$<span class="number">3</span><span class="string">"$"</span>$<span class="number">4</span><span class="string">"$"</span>$<span class="number">5</span>&#125;' datafile.txt </span><br><span class="line"><span class="number">9</span>)显示姓，其后跟一个逗号和名，如Jody，Savage？ </span><br><span class="line">答：awk -F <span class="string">":"</span> '&#123;print $<span class="number">1</span>&#125;' datafile.txt | awk '&#123;print $<span class="number">2</span>,<span class="string">","</span>,$<span class="number">1</span>&#125;' </span><br><span class="line"><span class="number">10</span>)写一个awk的脚本，作用： </span><br><span class="line">（<span class="number">1</span>）显示Savage的全名和电话号码 </span><br><span class="line">（<span class="number">2</span>）显示Cher的捐款 </span><br><span class="line">（<span class="number">3</span>）显示所有头一个月捐款$<span class="number">250</span>的人名 </span><br><span class="line">答：vim awk #!/bin/awk -f </span><br><span class="line">BEGIN&#123;FS=<span class="string">":"</span>&#125; </span><br><span class="line">&#123;if($<span class="number">1</span> ~/Savage/) print $<span class="number">1</span><span class="string">":"</span>$<span class="number">2</span>&#125;</span><br><span class="line">&#123;if($<span class="number">1</span>~/^Chet/) print <span class="string">"$"</span>$<span class="number">3</span><span class="string">":"</span><span class="string">"$"</span>$<span class="number">4</span><span class="string">":"</span><span class="string">"$"</span>$<span class="number">5</span>&#125;</span><br><span class="line">&#123;if($<span class="number">3</span>==<span class="number">250</span>) print $<span class="number">1</span>&#125; </span><br><span class="line">awk -f awk datafile.txt</span><br></pre></td></tr></table></figure><p>⽂件名AccQryFree2016.log，存在⽬录/root/boss/log/下，内容：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">12:00:00 service <span class="keyword">start</span> query_value,exited <span class="keyword">with</span> <span class="keyword">value</span> <span class="number">0</span>;</span><br><span class="line">12:00:01 <span class="keyword">select</span> * <span class="keyword">from</span> crm_user <span class="keyword">where</span> sts=<span class="number">1</span>;exited <span class="keyword">with</span> <span class="keyword">value</span> <span class="number">0</span>;</span><br><span class="line">12:10:01 <span class="keyword">use</span> db:db_ngboss[srv_zw1] <span class="number">12</span>:<span class="number">20</span>:<span class="number">00</span> service <span class="keyword">start</span> query_value,exited <span class="keyword">with</span> <span class="keyword">value</span> <span class="number">0</span>;</span><br><span class="line">12:22:01 <span class="keyword">select</span> * <span class="keyword">from</span> crm_user <span class="keyword">where</span> sts=<span class="number">1</span>;exited <span class="keyword">with</span> <span class="keyword">value</span> <span class="number">0</span>;</span><br><span class="line">12:23:01 <span class="keyword">use</span> db:db_ngboss[srv_zw1]</span><br><span class="line"><span class="number">1</span>)统计出文件中字符串exited <span class="keyword">with</span> <span class="keyword">value</span> <span class="number">0</span>出现的次数？ </span><br><span class="line">答：grep -o <span class="string">"exited with value 0"</span> AccQryFree2016.log|uniq -c </span><br><span class="line"><span class="number">2</span>)使用vi编辑器，将文件中exited <span class="keyword">with</span> <span class="keyword">value</span> <span class="number">0</span>替换为EXITED <span class="keyword">WITH</span> <span class="keyword">VALUE</span> <span class="number">0</span>？ </span><br><span class="line">答：vim /root/boss/<span class="keyword">log</span>/AccQryFree2016.log :%s/exited <span class="keyword">with</span> <span class="keyword">value</span> <span class="number">0</span>/EXITED <span class="keyword">WITH</span> <span class="keyword">VALUE</span> <span class="number">0</span>/g </span><br><span class="line"><span class="number">3</span>)写出带有exited <span class="keyword">with</span> <span class="keyword">value</span> <span class="number">0</span>的时间列全部输出？ </span><br><span class="line">答：grep <span class="string">"exited with value 0"</span> AccQryFree2016.log|awk -F <span class="string">" "</span> <span class="string">' &#123;print $2&#125;'</span> </span><br><span class="line"><span class="number">4</span>)把该文件压缩？ </span><br><span class="line">答：tar jcvf AccQryFree2016.log.tar.bz2 /root/boss/<span class="keyword">log</span>/AccQryFree2016.log</span><br><span class="line"><span class="number">5</span>)配置一个定时任务，将该文件在每周五下午<span class="number">6</span>点进行删除？ </span><br><span class="line">答：crontab -e <span class="number">0</span> <span class="number">18</span> * * <span class="number">5</span> rm -rf /root/boss/<span class="keyword">log</span>/AccQryFree2016.log</span><br></pre></td></tr></table></figure><p>使⽤netstat和awk统计服务器出现tcp⽹络状态并按数量排序？</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tan |<span class="type">grep</span> <span class="string">"^tcp\b"</span> |<span class="type">awk</span> '&#123;print $<span class="number">5</span>&#125;' |<span class="type">sort</span> | <span class="type">uniq</span> -c| <span class="type">sort</span> -nr</span><br></pre></td></tr></table></figure><p>实现查询⽂件file1⾥⾯空格开始的所在的⾏号？</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">答：grep -n -E <span class="string">'^[[:sapce:]] '</span> file1|awk -F: <span class="string">'&#123;print <span class="subst">$1</span>&#125;'</span></span><br></pre></td></tr></table></figure><p>使⽤awk命令，计算⼀个⽬录下⽂件⼤⼩的总和？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">答：ll |awk '<span class="keyword">BEGIN</span>&#123;<span class="keyword">sum</span>=<span class="number">0</span>&#125;&#123;<span class="keyword">sum</span>=<span class="keyword">sum</span>+$<span class="number">5</span>&#125;<span class="keyword">END</span>&#123;print <span class="keyword">sum</span>&#125;<span class="string">'</span></span><br></pre></td></tr></table></figure><p>使⽤awk统计当前主机的并发访问量？</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">答：netstat -tan | awk '/^tcp/ &#123;++<span class="section">state</span>[$NF]&#125; END &#123;for(<span class="type">key</span> in <span class="section">state</span>) print <span class="type">key</span>,<span class="string">"<span class="subst">\t</span>"</span>,<span class="section">state</span>[<span class="type">key</span>]&#125;' 显示结果： </span><br><span class="line">LAST_ACK <span class="number">1</span> SYN_RECV <span class="number">14</span> </span><br><span class="line">ESTABLISHED <span class="number">79</span> </span><br><span class="line">FIN_WAIT1 <span class="number">28</span> </span><br><span class="line">FIN_WAIT2 <span class="number">3</span> </span><br><span class="line">CLOSING <span class="number">5</span> </span><br><span class="line">TIME_WAIT <span class="number">1669</span> </span><br><span class="line">解释： </span><br><span class="line">CLOSED：无连接是活动的或正在进行 </span><br><span class="line">LISTEN：服务器在等待进入呼叫 </span><br><span class="line">SYN_RECV：一个连接请求已经到达，等待确认 </span><br><span class="line">SYN_SENT：应用已经开始，打开一个连接 </span><br><span class="line">ESTABLISHED：正常数据传输状态 </span><br><span class="line">FIN_WAIT1：应用说它已经完成 </span><br><span class="line">FIN_WAIT2：另一边已同意释放 </span><br><span class="line">ITMED_WAIT：等待所有分组死掉 </span><br><span class="line">CLOSING：两边同时尝试关闭 </span><br><span class="line">TIME_WAIT：另一边已初始化一个释放 </span><br><span class="line">LAST_ACK：等待所有分组死掉</span><br><span class="line">统计apache访问⽇志流量排名前<span class="number">10</span>个ip？ </span><br><span class="line">答： </span><br><span class="line">cat access_log | awk ’&#123;print $<span class="number">1</span>&#125;’ | sort | uniq -c | sort -n -r | head <span class="number">-10</span></span><br><span class="line">解法<span class="number">2</span>： </span><br><span class="line">awk ‘&#123;a[$<span class="number">1</span>] += <span class="number">1</span>;&#125; END &#123;for (i in a) printf(“%d %s\n”, a[i], i);&#125;’ 日志文 件 | sort -n | tail</span><br></pre></td></tr></table></figure><p>使⽤netstat -an输出格式，请编写脚本，统计输出连接到本地主机 数最多的10个ip，并按连接数从多到少排序？<br>tcp 0 52 172.18.118.155:22 172.18.116.232:49916 ESTABLISHED<br>答：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh </span></span><br><span class="line">top10ip=`ss -nt | grep <span class="string">'ESTAB'</span> | awk <span class="string">'&#123;print $5&#125;'</span> | cut -d: -f1 | grep <span class="string">"^[[:digit:]]\+.*"</span> | sort | uniq -c | sort -rnk1 | awk <span class="string">'&#123;print $2,"\t",$1&#125;'</span> | head`</span><br></pre></td></tr></table></figure><p>echo “连接到本地主机最多的10个ip是：$top10ip”nginx的access.log⽇志如下，⽤shell实现，将状态码为200的请求 的ip访问排名前10个列出来：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">172.18.116.232</span> - - <span class="string">[18/May/2018:00:20:29 -0400]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">304</span> <span class="number">0</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.117 Safari/537.36"</span> <span class="string">"-"</span></span><br><span class="line"><span class="number">172.18.116.232</span> - - <span class="string">[18/May/2018:00:20:29 -0400]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">304</span> <span class="number">0</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.117 Safari/537.36"</span> <span class="string">"-"</span></span><br><span class="line">答：awk '($<span class="number">9</span> ~ /<span class="number">200</span>/)' access.log | awk '&#123;print $<span class="number">9</span>,$<span class="number">7</span>&#125;' | sort -nr |head -n10</span><br></pre></td></tr></table></figure><p>统计apaceh的access.log中访问量最多的5个ip？</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">172.18.116.232</span> - - <span class="string">[21/May/2018:05:29:11 -0400]</span> <span class="string">"<span class="keyword">GET</span> /favicon.ico HTTP/1.1"</span> <span class="number">404</span> <span class="number">209</span> <span class="string">"http://172.18.118.155:8080/"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.117 Safari/537.36"</span></span><br><span class="line">答： cat access_log | awk ’&#123;print $<span class="number">1</span>&#125;’ | sort | uniq -c | sort -nr | head -<span class="number">5</span></span><br></pre></td></tr></table></figure><p>awk实现打印奇数⾏和偶数⾏</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">偶数seq <span class="number">10</span>|awk '!(i=!i)'</span><br><span class="line">奇数seq <span class="number">10</span>|awk 'i=!i'</span><br><span class="line">等同于sed命令：</span><br><span class="line">seq <span class="number">10</span> | sed -n '<span class="number">1</span>~<span class="number">2</span>p'</span><br><span class="line">seq <span class="number">10</span> | sed -n '<span class="number">2</span>~<span class="number">2</span>p'</span><br></pre></td></tr></table></figure><p>匹配以f开头的⾏开始，到r开头的⾏结束之间的所有⾏</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'/^f/,/^r/'</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></table></figure><p>查找netstat -nt命令的结果中Foreign Address列的地址，统计每个地址链接的次数，如果⼤于2次， 显⽰ip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">netstat</span> -nt |awk <span class="string">'/^tcp/&#123;print <span class="variable">$5</span>&#125;'</span>|awk -F: <span class="string">'&#123;print <span class="variable">$1</span>&#125;'</span>|sort |uniq -c|awk <span class="string">'<span class="variable">$1</span>&gt;1&#123;print <span class="variable">$2</span>&#125;'</span> <span class="number">172.18.116.232</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> awk </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络时间服务ntp和chrony进行内外网时间同步</title>
      <link href="/2020/03/10/Linux/%E7%BD%91%E7%BB%9C%E6%97%B6%E9%97%B4%E6%9C%8D%E5%8A%A1ntp%E5%92%8Cchrony%E8%BF%9B%E8%A1%8C%E5%86%85%E5%A4%96%E7%BD%91%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
      <url>/2020/03/10/Linux/%E7%BD%91%E7%BB%9C%E6%97%B6%E9%97%B4%E6%9C%8D%E5%8A%A1ntp%E5%92%8Cchrony%E8%BF%9B%E8%A1%8C%E5%86%85%E5%A4%96%E7%BD%91%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<ul><li>时间同步：多主机协作工作时，各个主机的时间同步很重要，时间不一致会造成很多重要应用的故障，如：加密协议，日志，集群等， 利用NTP（NetworkTime Protocol） 协议使网络中的各个计算机时间达到同步。目前NTP协议属于运维基础架构中必备的基本服务之一</li></ul><a id="more"></a><h3 id="时间同步实现：ntp，chrony"><a href="#时间同步实现：ntp，chrony" class="headerlink" title="时间同步实现：ntp，chrony"></a>时间同步实现：ntp，chrony</h3><ul><li>ntp：将系统时钟和世界协调时UTC同步，精度在局域网内可达0.1ms，在互联网上绝大多数的地方精度可以达到1-50ms，项目官网：<a href="http://www.ntp.org" target="_blank" rel="noopener">http://www.ntp.org</a></li><li>chrony：实现NTP协议的的自由软件。可使系统时钟与NTP服务器，参考时钟（例如GPS接收器）以及使用手表和键盘的手动输入进行同步。还可以作为<br>NTPv4（RFC 5905）服务器和对等体运行，为网络中的计算机提供时间服务。设计用于在各种条件下良好运行，包括间歇性和高度拥挤的网络连接，温度变化（计算机时钟对温度敏感），以及不能连续运行或在虚拟机上运行的系统。通过Internet同步的两台机器之间的典型精度在几毫秒之内，在LAN上，精度通常为几十微秒。利用硬件时间戳或硬件参考时钟，可实现亚微秒的精度</li></ul><h3 id="chrony"><a href="#chrony" class="headerlink" title="chrony"></a>chrony</h3><ul><li>chrony 的优势：</li><li>更快的同步只需要数分钟而非数小时时间，从而最大程度减少了时间和率<br>误差，对于并非全天 24 小时运行的虚拟计算机而言非常有用</li><li>能够更好地响应时钟频率的快速变化，对于具备不稳定时钟的虚拟机或致<br>时钟频率发生变化的节能技术而言非常有用</li><li>在初始同步后，它不会停止时钟，以防对需要系统时间保持单调的应用序<br>造成影响</li><li>在应对临时非对称延迟时（例如，在大规模下载造成链接饱和时）提供更<br>好的稳定性</li><li>无需对服务器进行定期轮询，因此具备间歇性网络连接的系统仍然可以快速同步时钟</li></ul><h3 id="安装-配置"><a href="#安装-配置" class="headerlink" title="安装,配置"></a>安装,配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">yum -y install chrony</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">systemctl <span class="built_in">enable</span> chronyd</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">systemctl start chronyd</span></span><br></pre></td></tr></table></figure><ul><li>包：chrony</li><li>两个主要程序：chronyd和chronyc<br><strong>chronyd：</strong>后台运行的守护进程，用于调整内核中运行的系统时钟和时钟务器同步。它确定计算机增减时间的比率，并对此进行补偿<br><strong>chronyc：</strong>命令行用户工具，用于监控性能并进行多样化的配置。它在<br>chronyd实例控制的计算机上工作，也可在一台不同的远程计算机上工作</li><li>服务unit 文件： /usr/lib/systemd/system/chronyd.service</li><li>监听端口： 323/udp，123/udp</li><li>配置文件： /etc/chrony.conf</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&gt;cat /etc/chrony.conf </span><br><span class="line"><span class="comment"># Use public servers from the pool.ntp.org project.</span></span><br><span class="line"><span class="comment"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span></span><br><span class="line"><span class="comment">#server  172.22.50.54 iburst</span></span><br><span class="line">server 0.centos.pool.ntp.org iburst #可用于时钟服务器</span><br><span class="line">server 1.centos.pool.ntp.org iburst #iburst 选项当服务器可达时，发送一个八个数据包而不是通常的一个数据包。</span><br><span class="line">包间隔通常为2秒,可加快初始同步速度</span><br><span class="line">server 2.centos.pool.ntp.org iburst</span><br><span class="line">server 3.centos.pool.ntp.org iburst</span><br><span class="line"></span><br><span class="line"><span class="comment"># Record the rate at which the system clock gains/losses time.</span></span><br><span class="line">driftfile /var/lib/chrony/drift #根据实际时间计算出计算机增减时间的比率，将它记录到一个文件中，</span><br><span class="line">会在重启后为系统时钟作出补偿</span><br><span class="line"><span class="comment"># Allow the system clock to be stepped in the first three updates</span></span><br><span class="line"><span class="comment"># if its offset is larger than 1 second.</span></span><br><span class="line">makestep 1.0 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable kernel synchronization of the real-time clock (RTC).# 启用内核模式，系统时间每11分钟会拷贝到实时时钟（RTC）</span></span><br><span class="line">rtcsync</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable hardware timestamping on all interfaces that support it.</span></span><br><span class="line"><span class="comment">#hwtimestamp *</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Increase the minimum number of selectable sources required to adjust</span></span><br><span class="line"><span class="comment"># the system clock.</span></span><br><span class="line"><span class="comment">#minsources 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow NTP client access from local network.# 指定一台主机、子网，或者网络以允许或拒绝访问本服务器</span></span><br><span class="line"><span class="comment">#allow 192.168.0.0/16 # cmdallow / cmddeny - 可以指定哪台主机可以通过chronyd使用控制命令</span></span><br><span class="line">allow 172.22.50.0/16</span><br><span class="line"><span class="comment"># Serve time even if not synchronized to a time source.</span></span><br><span class="line">local stratum 10</span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify file containing keys for NTP authentication.</span></span><br><span class="line"><span class="comment">#keyfile /etc/chrony.keys</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify directory for log files.</span></span><br><span class="line">logdir /var/log/chrony</span><br><span class="line"></span><br><span class="line"><span class="comment"># Select which information is logged.</span></span><br><span class="line"><span class="comment">#log measurements statistics tracking</span></span><br></pre></td></tr></table></figure><h3 id="chronyc命令"><a href="#chronyc命令" class="headerlink" title="chronyc命令"></a>chronyc命令</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">help命令可以查看更多chronyc的交互命令</span><br><span class="line">accheck 检查是否对特定主机可访问当前服务器</span><br><span class="line">activity 显示有多少NTP源在线/离线</span><br><span class="line">sources [-v] 显示当前时间源的同步信息</span><br><span class="line">sourcestats [-v]显示当前时间源的同步统计信息</span><br><span class="line"><span class="builtin-name">add</span><span class="built_in"> server </span>手动添加一台新的NTP服务器</span><br><span class="line">clients 报告已访问本服务器的客户端列表</span><br><span class="line">delete 手动移除NTP服务器或对等服务器</span><br><span class="line">settime 手动设置守护进程时间</span><br><span class="line">sracking 显示系统时间信息</span><br></pre></td></tr></table></figure><p><img src="https://s1.51cto.com/images/blog/201904/18/d742ef81c7ddfdba35c248b005b01c89.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><h3 id="同步时间，"><a href="#同步时间，" class="headerlink" title="同步时间，"></a>同步时间，</h3><h4 id="客户端添加地址为172-22-50-5的时间服务器"><a href="#客户端添加地址为172-22-50-5的时间服务器" class="headerlink" title="客户端添加地址为172.22.50.5的时间服务器"></a>客户端添加地址为172.22.50.5的时间服务器</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server  <span class="number">172.22</span><span class="number">.50</span><span class="number">.54</span> iburst</span><br></pre></td></tr></table></figure><p><img src="https://s1.51cto.com/images/blog/201904/18/991d5ebeae2ba9936495827d38c58fe5.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><h4 id="服务器端添加可允许时间同步的主机ip"><a href="#服务器端添加可允许时间同步的主机ip" class="headerlink" title="服务器端添加可允许时间同步的主机ip"></a>服务器端添加可允许时间同步的主机ip</h4><p>添加50.0网段所有主机</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allow <span class="number">172.22</span><span class="number">.50</span><span class="number">.0</span>/<span class="number">16</span></span><br></pre></td></tr></table></figure><p>开启local stratum 10</p><p><img src="https://s1.51cto.com/images/blog/201904/18/c7d9579e927da24cbf7f92e7cf8d3a12.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><h2 id="公共NTP服务器"><a href="#公共NTP服务器" class="headerlink" title="公共NTP服务器"></a>公共NTP服务器</h2><ul><li>pool.ntp.org：项目是一个提供可靠易用的NTP服务的虚拟集群<br>cn.pool.ntp.org<br>0-3.cn.pool.ntp.org</li><li>阿里云公共NTP服务器<br>Unix/linux类：ntp.aliyun.com，ntp1-7.aliyun.com<br>windows类： time.pool.aliyun.com</li><li>大学ntp服务<br>s1a.time.edu.cn 北京邮电大学<br>s1b.time.edu.cn 清华大学<br>s1c.time.edu.cn 北京大学</li><li>国家授时中心服务器<br>210.72.145.44</li></ul><h2 id="时间工具"><a href="#时间工具" class="headerlink" title="时间工具"></a>时间工具</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看日期时间、时区及<span class="string">NTP状</span>态：<span class="string">timedatectl</span></span><br><span class="line"><span class="string">查</span>看时区列表：<span class="string">timedatectl </span><span class="built_in">list-timezones</span></span><br><span class="line"><span class="built_in">修改时区：timedatectl</span> <span class="built_in">set-timezone</span> <span class="string">Asia/</span><span class="string">Shanghai</span></span><br><span class="line"><span class="string">修</span>改日期时间：<span class="string">timedatectl </span><span class="built_in">set-time</span> <span class="string">"2019-04-19 10:30:00"</span></span><br><span class="line">开启<span class="string">NTP：</span> <span class="string">timedatectl </span><span class="built_in">set-ntp</span> <span class="string">true/</span><span class="string">flase</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ntp </tag>
            
            <tag> chrony </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CA和证书</title>
      <link href="/2020/03/10/Linux/CA%E5%92%8C%E8%AF%81%E4%B9%A6/"/>
      <url>/2020/03/10/Linux/CA%E5%92%8C%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="企业内网搭建CA服务器生成自签名证书，CA签署，实现企业内网基于key验证访问服务器"><a href="#企业内网搭建CA服务器生成自签名证书，CA签署，实现企业内网基于key验证访问服务器" class="headerlink" title="企业内网搭建CA服务器生成自签名证书，CA签署，实现企业内网基于key验证访问服务器"></a>企业内网搭建CA服务器生成自签名证书，CA签署，实现企业内网基于key验证访问服务器</h1><a id="more"></a><h3 id="一些CA基础"><a href="#一些CA基础" class="headerlink" title="一些CA基础"></a>一些CA基础</h3><blockquote><ul><li>PKI：Public Key Infrastructure<br>签证机构：CA（Certificate Authority）<br>注册机构：RA<br>证书吊销列表：CRL</li><li>X.509：定义了证书的结构以及认证协议标准<br>版本号 主体公钥<br>序列号 CRL分发点<br>签名算法 扩展信息<br>颁发者 发行者签名<br>有效期限<br>主体名称</li><li>证书类型：<br>证书授权机构的证书<br>服务器<br>用户证书<br>获取证书两种方法：<br>1)使用证书授权机构<br>生成证书请求（csr）<br>2)将证书请求csr发送给CA<br>CA签名颁发证书<br>自签名的证书<br>自已签发自己的公钥</li></ul></blockquote><h2 id="证书作用"><a href="#证书作用" class="headerlink" title="证书作用"></a>证书作用</h2><ul><li><p>获取证书后，例如网站流量将基于HTTPS 协议</p></li><li><p>HTTPS 协议：就是“HTTP 协议”和“SSL/TLS 协议”的组合。HTTP over</p></li><li><p>SSL”或“HTTP over TLS”，对http协议的文本数据进行加密处理后，成为二<br>进制形式传输<br>SSL：Secure Socket Layer，TLS: Transport Layer Security<br>1995：SSL 2.0 Netscape<br>1996：SSL 3.0<br>1999：TLS 1.0<br>2006：TLS 1.1 IETF(Internet工程任务组) RFC 4346<br>2008：TLS 1.2 当前使用<br>2015：TLS 1.3<br>功能：机密性，认证，完整性，重放保护</p></li><li><p>HTTPS结构</p></li><li><p>HTTPS工作过程</p></li><li><p>必要命令openssl了解</p></li></ul><blockquote><p>OpenSSL：开源项目<br>三个组件：<br>openssl：多用途的命令行工具，包openssl<br>libcrypto：加密算法库，包openssl-libs<br>libssl：加密模块应用库，实现了ssl及tls，包nss<br>* openssl命令：<br>两种运行模式：交互模式和批处理模式<br>openssl version：程序版本号<br>标准命令、消息摘要命令、加密命令<br>标准命令：enc, ca, req, …</p></blockquote><h2 id="1搭建CA服务器"><a href="#1搭建CA服务器" class="headerlink" title="1搭建CA服务器"></a>1搭建CA服务器</h2><h3 id="①在服务器端生成私钥"><a href="#①在服务器端生成私钥" class="headerlink" title="①在服务器端生成私钥"></a>①在服务器端生成私钥</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd /etc/pki/CA</span><br><span class="line">[root@localhost CA]# touch index.txt #生成证书索引数据库文件</span><br><span class="line">[root@localhost CA]# echo <span class="number">0</span>F &gt; serial #指定第一个颁发证书的序列号</span><br><span class="line">[root@localhost CA]# (umask <span class="number">066</span><span class="comment">;openssl genrsa -out private/cakey.pem 4096 )   #生成私钥</span></span><br><span class="line">Generating RSA private key, <span class="number">4096</span> bit long modulus</span><br><span class="line">.......++</span><br><span class="line">.........................................++</span><br><span class="line">e is <span class="number">65537</span> (<span class="number">0x10001</span>)</span><br><span class="line">[root@localhost CA]# openssl req -new -x509 -key private/cakey.pem  -out cacert.pem -days <span class="number">3650</span> #给自己颁发证书</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter '.', the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (<span class="number">2</span> letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:beijin</span><br><span class="line">Locality Name (eg, city) [Default City]:beijin</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:ailibaba</span><br><span class="line">Organizational Unit Name (eg, section) []:taobao</span><br><span class="line">Common Name (eg, your name or your server's hostname) []:www.taobao.com</span><br><span class="line">Email Address []</span><br><span class="line">[root@localhost CA]# tree</span><br><span class="line">.</span><br><span class="line">├── cacert.pem</span><br><span class="line">├── certs</span><br><span class="line">├── crl</span><br><span class="line">├── index.txt</span><br><span class="line">├── newcerts</span><br><span class="line">├── private</span><br><span class="line">│   └── cakey.pem</span><br><span class="line">└── serial</span><br><span class="line"><span class="number">4</span> directories, <span class="number">4</span> files</span><br><span class="line">[root@localhost CA]# openssl x509 -in cacert.pem -noout -text  # 以易读方式打开证书</span><br><span class="line">Certificate:</span><br><span class="line">    Data:</span><br><span class="line">        Version: <span class="number">3</span> (<span class="number">0</span>x2)</span><br><span class="line">        Serial Number:</span><br><span class="line">            <span class="number">f6:4f:6a:1f:a6:de:88:9a</span></span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">        Issuer: C=CN, ST=beijin, L=beijin, O=ailibaba, OU=taobao, CN=www.taobao.com</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Apr <span class="number">18 07:51:51</span> <span class="number">2019</span> GMT</span><br><span class="line">            Not After : Apr <span class="number">15 07:51:51</span> <span class="number">2029</span> GMT</span><br><span class="line">        Subject: C=CN, ST=beijin, L=beijin, O=ailibaba, OU=taobao, CN=www.taobao.com</span><br><span class="line">        Subject Public Key Info:</span><br><span class="line">            Public Key Algorithm: rsaEncryption</span><br><span class="line">                Public-Key: (<span class="number">4096</span> bit)</span><br><span class="line">                Modulus:</span><br><span class="line">                    <span class="number">00:ed:09:66:55:c8:65:18</span>:a7:aa:<span class="number">7d</span>:<span class="number">0</span>b:fe:d3:<span class="number">91</span>:</span><br><span class="line">                    <span class="number">b3:f2:a2:a2:4a:ca:02:34</span>:<span class="number">70</span>:<span class="number">37</span>:<span class="number">5d</span>:<span class="number">80</span>:<span class="number">8</span>c:<span class="number">21</span>:<span class="number">79</span>:</span><br><span class="line">                    <span class="number">e9:58:78:73:98:8c:c4:e5</span>:<span class="number">43</span>:ee:<span class="number">44</span>:ca:<span class="number">60</span>:<span class="number">72</span>:<span class="number">50</span>:</span><br><span class="line">                    <span class="number">05:43:d4:cc:4a:bc:b7:4a</span>:<span class="number">33</span>:<span class="number">53</span>:<span class="number">13</span>:b0:df:b0:<span class="number">5d</span>:</span><br><span class="line">                    <span class="number">ac:9d:a3:af:70:37:ca:09</span>:<span class="number">4</span>e:ce:<span class="number">69</span>:<span class="number">77</span>:<span class="number">2</span>a:<span class="number">1</span>a:ee:</span><br><span class="line">                    <span class="number">db:40:0c:d5:49:be:c0:a0</span>:f6:a4:<span class="number">8d</span>:<span class="number">33:20:57:54</span>:</span><br><span class="line">                    <span class="number">30:ce:74:fe:cd:30:3f:8d</span>:<span class="number">9</span>f:bc:f9:<span class="number">0</span>e:db:<span class="number">1</span>f:<span class="number">7</span>c:</span><br><span class="line">                    <span class="number">93:ab:ad:41:78:53:b5:f9</span>:a2:<span class="number">8</span>c:d<span class="number">4:48:80:82</span>:e0:</span><br><span class="line">                    <span class="number">aa:13:45:73:22:f0:41:16</span>:a1:<span class="number">1</span>f:<span class="number">59</span>:bb:c1:<span class="number">7</span>e:<span class="number">58</span>:</span><br><span class="line">                    <span class="number">16:3c:24:ac:1b:53:19:0b</span>:<span class="number">81</span>:<span class="number">87</span>:f7:<span class="number">9</span>b:b6:<span class="number">86</span>:<span class="number">4</span>e:</span><br><span class="line">                    <span class="number">82:c4:7a:29:d1:39:54:d9</span>:<span class="number">36</span>:b0:<span class="number">7</span>b:<span class="number">95</span>:<span class="number">79</span>:fc:<span class="number">13</span>:</span><br><span class="line">                    <span class="number">29:48:d2:cc:b0:ae:34:f0</span>:<span class="number">22</span>:<span class="number">8</span>f:df:b3:<span class="number">76</span>:<span class="number">8</span>a:<span class="number">84</span>:</span><br><span class="line">                    <span class="number">3a:ce:36:97:85:3d:10:50</span>:a<span class="number">7:12:24:17</span>:<span class="number">1d</span>:<span class="number">9d</span>:bf:</span><br><span class="line">                    <span class="number">f8:e9:7c:7b:b4:67:c9:1f</span>:<span class="number">41</span>:ee:<span class="number">19</span>:<span class="number">45</span>:<span class="number">9</span>b:<span class="number">39</span>:<span class="number">70</span>:</span><br><span class="line">                    <span class="number">d7:9e:7f:97:44:1e:f5:ee</span>:cb:<span class="number">70</span>:e6:<span class="number">6</span>a:f7:<span class="number">8</span>f:a6:</span><br><span class="line">                    <span class="number">44:da:00:18:c3:de:4b:66</span>:<span class="number">8</span>f:d7:<span class="number">45</span>:a7:<span class="number">09</span>:<span class="number">43</span>:f1:</span><br><span class="line">                    <span class="number">be:0c:68:1a:18:ae:05:61</span>:<span class="number">1</span>f:<span class="number">2</span>f:<span class="number">01</span>:c7:<span class="number">8d</span>:<span class="number">74</span>:<span class="number">3</span>f:</span><br><span class="line">                    <span class="number">7f:b5:5b:65:dd:6e:d9:47</span>:<span class="number">0</span>f:<span class="number">38</span>:b3:ff:<span class="number">7</span>c:<span class="number">92</span>:<span class="number">95</span>:</span><br><span class="line">                    <span class="number">48:de:d5:44:17:07:da:5e</span>:bd:<span class="number">00</span>:e8:<span class="number">03</span>:bd:ee:<span class="number">47</span>:</span><br><span class="line">                    <span class="number">3f:7a:14:a6:63:1c:29:d8</span>:<span class="number">16</span>:ce:<span class="number">26</span>:<span class="number">1</span>a:<span class="number">2</span>a:ee:bd:</span><br><span class="line">                    <span class="number">57:43:d0:4d:08:52:96:e4</span>:<span class="number">68</span>:<span class="number">0</span>a:b5:<span class="number">19</span>:c9:ea:<span class="number">4d</span>:</span><br><span class="line">                    <span class="number">42:53:ec:3a:45:a6:ca:68</span>:b9:e8:<span class="number">2</span>e:<span class="number">38</span>:f0:<span class="number">4</span>c:<span class="number">51</span>:</span><br><span class="line">                    <span class="number">4b:e9:20:5c:f4:b4:7b:20</span>:<span class="number">6</span>a:dd:<span class="number">21</span>:<span class="number">31</span>:<span class="number">49</span>:d6:b1:</span><br><span class="line">                    <span class="number">39:0f:dc:22:52:2c:cb:94</span>:<span class="number">21</span>:af:e6:<span class="number">82</span>:<span class="number">09</span>:a8:<span class="number">08</span>:</span><br><span class="line">                    <span class="number">ef:f1:21:61:da:fb:ba:ce</span>:<span class="number">8</span>f:<span class="number">70</span>:<span class="number">4d</span>:e0:d9:b0:d1:</span><br><span class="line">                    <span class="number">6e:42:37:33:f0:8d:57:14</span>:<span class="number">56</span>:<span class="number">6</span>a:<span class="number">5</span>e:<span class="number">2</span>c:<span class="number">60</span>:<span class="number">8</span>e:<span class="number">3</span>f:</span><br><span class="line">                    <span class="number">05:06:35:53:e0:0b:81:9a</span>:<span class="number">11</span>:<span class="number">38</span>:b1:<span class="number">95</span>:c6:f6:<span class="number">1d</span>:</span><br><span class="line">                    <span class="number">f6:85:61:99:b6:bc:d0:2e</span>:ab:d9:<span class="number">5</span>e:<span class="number">6</span>a:<span class="number">53</span>:<span class="number">4</span>e:<span class="number">95</span>:</span><br><span class="line">                    <span class="number">5e:a5:a5:4d:6a:45:3b:dd</span>:d5:c4:<span class="number">1</span>b:d1:<span class="number">95</span>:f0:<span class="number">24</span>:</span><br><span class="line">                    <span class="number">a0:7c:19:42:8b:2e:cd:df</span>:a7:<span class="number">2d</span>:e3:d6:a4:f7:<span class="number">22</span>:</span><br><span class="line">                    <span class="number">a4:52:bd:2c:0f:77:fc:b3</span>:<span class="number">27:89:55:31</span>:<span class="number">0</span>a:<span class="number">8</span>f:<span class="number">2</span>a:</span><br><span class="line">                    <span class="number">3a:ec:07:45:29:96:09:f5</span>:e6:<span class="number">95</span>:<span class="number">87</span>:e2:<span class="number">21</span>:c8:a1:</span><br><span class="line">                    <span class="number">be:6b:f8:95:9a:9c:08:52</span>:<span class="number">48</span>:<span class="number">19</span>:c0:<span class="number">0</span>c:a4:d8:<span class="number">37</span>:</span><br><span class="line">                    <span class="number">19:42:98:21:40:45:3c:6a</span>:ff:e7:<span class="number">33</span>:<span class="number">8d</span>:<span class="number">1</span>f:<span class="number">2</span>f:ef:</span><br><span class="line">                    <span class="number">73</span>:c5:<span class="number">5</span>f</span><br><span class="line">                Exponent: <span class="number">65537</span> (<span class="number">0x10001</span>)</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                <span class="number">D5:5D:21:99:D3:9A:BA:90</span>:<span class="number">16:F4:BF:2D:78:C7:27:DF</span>:F5:<span class="number">8</span>B:<span class="number">42</span>:F7</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyi<span class="number">d:D5:5D:21:99:D3:9A:BA</span>:<span class="number">90:16:F4:BF:2D:78:C7:27</span>:DF:F5:<span class="number">8</span>B:<span class="number">42</span>:F7</span><br><span class="line"></span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:TRUE</span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">         <span class="number">27:a5:73:06:6c:2f:c4:a4</span>:<span class="number">c0:24:29:3e:3f:5b:e8:e2</span>:d7:fe:</span><br><span class="line">         <span class="number">38:93:b5:c9:05:f5:45:9d</span>:<span class="number">78:5b:ae:cd:bb:26:c0:fc</span>:b6:e1:</span><br><span class="line">         <span class="number">82:ef:7d:f3:28:48:c4:e2</span>:<span class="number">c0:1a:ab:13:39:9f:95:98</span>:c6:<span class="number">47</span>:</span><br><span class="line">         <span class="number">d1:dd:8f:b4:3e:dd:c5:79</span>:<span class="number">38:94:01:9d:14:b9:f4:87</span>:bd:<span class="number">88</span>:</span><br><span class="line">         <span class="number">a2:5d:4a:16:ee:f9:0d:9f</span>:<span class="number">fa:d0:dc:c3:4b:a2:df:28</span>:<span class="number">57</span>:<span class="number">33</span>:</span><br><span class="line">         <span class="number">4e:31:c0:45:4f:d6:6e:ee</span>:<span class="number">43:e5:9b:8f:7b:d8:46:66</span>:<span class="number">83</span>:fa:</span><br><span class="line">         <span class="number">56:68:e6:30:19:0e:b4:41</span>:<span class="number">74:dd:72:ce:e7:83:f5:50</span>:f1:<span class="number">5d</span>:</span><br><span class="line">         <span class="number">46:29:fa:09:73:c5:e7:76</span>:<span class="number">99:78:2b:35:9d:7c:69:91</span>:<span class="number">47</span>:cd:</span><br><span class="line">         <span class="number">98:1d:28:b2:df:0b:a1:51</span>:<span class="number">3b:f9:09:32:64:41:f1:00</span>:d9:<span class="number">29</span>:</span><br><span class="line">         <span class="number">74:18:f9:98:bf:2c:b1:81</span>:<span class="number">95:bb:3d:d0:57:46:cc:78</span>:<span class="number">9</span>a:<span class="number">51</span>:</span><br><span class="line">         <span class="number">38:7e:6b:cb:ff:7d:84:98</span>:<span class="number">81:70:c2:49:79:f3:f0:5a</span>:<span class="number">7</span>a:<span class="number">47</span>:</span><br><span class="line">         <span class="number">db:4d:4d:6a:6a:14:97:02</span>:<span class="number">fa:80:91:39:b2:8c:b8:85</span>:ec:a6:</span><br><span class="line">         <span class="number">10:b5:aa:82:a3:7f:5a:f4</span>:<span class="number">75:09:11:47:91:64:f9:6c</span>:f0:<span class="number">87</span>:</span><br><span class="line">         <span class="number">11:9a:d8:26:71:be:45:dc</span>:<span class="number">9a:aa:57:2e:5b:78:45:5f</span>:<span class="number">72</span>:<span class="number">9</span>f:</span><br><span class="line">         <span class="number">ae:d8:d4:f1:e7:65:c7:fb</span>:<span class="number">69:b9:d7:04:03:3d:26:00</span>:<span class="number">74</span>:<span class="number">09</span>:</span><br><span class="line">         <span class="number">4d:97:4d:83:1f:d9:ec:52</span>:<span class="number">18:e0:45:ff:f6:2d:d7:2d</span>:<span class="number">6</span>a:<span class="number">76</span>:</span><br><span class="line">         <span class="number">e7:63:28:a5:24:97:73:46</span>:<span class="number">d5:2b:39:aa:25:7c:78:fb</span>:f7:<span class="number">13</span>:</span><br><span class="line">         <span class="number">65:f7:56:18:13:74:f0:f2</span>:<span class="number">a2:b2:a0:61:09:0c:a3:56</span>:aa:<span class="number">46</span>:</span><br><span class="line">         <span class="number">4f:34:3e:ca:85:30:ea:06</span>:<span class="number">7b:a3:ed:ce:a1:83:d2:c6</span>:<span class="number">63</span>:<span class="number">26</span>:</span><br><span class="line">         <span class="number">e8:02:f5:a7:78:fd:84:dd</span>:<span class="number">33:5d:b1:0c:af:fe:6b:30</span>:<span class="number">0</span>b:b2:</span><br><span class="line">         <span class="number">fe:eb:95:3c:dd:7e:37:ac</span>:<span class="number">4f:cf:19:64:45:4b:b8:05</span>:<span class="number">14</span>:<span class="number">91</span>:</span><br><span class="line">         <span class="number">97:68:39:39:08:d8:e2:4d</span>:<span class="number">d0:eb:64:0b:a1:38:68:ac</span>:c6:<span class="number">14</span>:</span><br><span class="line">         <span class="number">66:b1:d3:15:d2:5c:50:eb</span>:<span class="number">99:69:bf:ce:87:38:07:00</span>:af:<span class="number">14</span>:</span><br><span class="line">         <span class="number">4a:d1:0d:f8:e2:be:6f:46</span>:<span class="number">5f:5a:ad:0c:e3:42:d0:49</span>:<span class="number">37</span>:<span class="number">59</span>:</span><br><span class="line">         <span class="number">47:93:17:b7:ee:6f:0a:8f</span>:<span class="number">b1:13:ef:9d:dd:7f:c1:fc</span>:f5:<span class="number">80</span>:</span><br><span class="line">         <span class="number">73:42:cf:aa:57:62:96:99</span>:<span class="number">8e:eb:4c:6c:d3:fd:4a:82</span>:<span class="number">52</span>:e3:</span><br><span class="line">         <span class="number">03:e0:07:c9:33:44:e3:6e</span>:<span class="number">60:7e:5b:b6:fb:62:e1:55</span>:<span class="number">5</span>a:<span class="number">4</span>b:</span><br><span class="line">         <span class="number">fb:61:7e:87:e7:59:0b:4c</span>:<span class="number">bd:72:f1:4d:91:02:b4:39</span>:<span class="number">01</span>:ae:</span><br><span class="line">         <span class="number">45:0b:5b:e1:f7:1e:41:c3</span></span><br></pre></td></tr></table></figure><h2 id="②在客户端生成证书申请"><a href="#②在客户端生成证书申请" class="headerlink" title="②在客户端生成证书申请"></a>②在客户端生成证书申请</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root:/data# (umask 066;openssl genrsa -out test.key 1024)  # 生成私钥</span><br><span class="line">Generating RSA private key, 1024 bit long modulus</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span>++++++</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span>.++++++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line">root:/data# openssl req -new  -key test.key -out test.csr # 生成csr证书申请文件</span><br><span class="line">You are about <span class="keyword">to</span> be asked <span class="keyword">to</span> enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about <span class="keyword">to</span> enter is what is called a Distinguished Name <span class="keyword">or</span> a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line"><span class="keyword">For</span> some fields there will be a<span class="built_in"> default </span>value,</span><br><span class="line"><span class="keyword">If</span> you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State <span class="keyword">or</span> Province Name (full name) []:beijin</span><br><span class="line">Locality Name (eg, city) [Default City]:changping</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:jindong</span><br><span class="line">Organizational Unit Name (eg, section) []:wuliu</span><br><span class="line">Common Name (eg, your name <span class="keyword">or</span> your server<span class="string">'s hostname) []:www.jd.com</span></span><br><span class="line"><span class="string">Email Address []:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Please enter the following '</span>extra<span class="string">' attributes</span></span><br><span class="line"><span class="string">to be sent with your certificate request</span></span><br><span class="line"><span class="string">A challenge password []:</span></span><br><span class="line"><span class="string">An optional company name []:</span></span><br><span class="line"><span class="string">root:/data# scp test.csr 172.22.50.53:/etc/pki/CA/certs/test.csr # 将证书传给客户端</span></span><br></pre></td></tr></table></figure><ul><li>注意：默认要求 国家，省，公司名称三项必须和CA一致</li></ul><h2 id="③在CA服务器端给客户端颁发证书"><a href="#③在CA服务器端给客户端颁发证书" class="headerlink" title="③在CA服务器端给客户端颁发证书"></a>③在CA服务器端给客户端颁发证书</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost CA]# openssl ca -<span class="keyword">in</span> certs/test.csr  -<span class="keyword">out</span> certs/test.crt -days <span class="number">100</span></span><br><span class="line">Using configuration <span class="keyword">from</span> /etc/pki/tls/openssl.cnf</span><br><span class="line">Check that the request matches the signature</span><br><span class="line">Signature ok</span><br><span class="line">Certificate Details:</span><br><span class="line">Serial Number: <span class="number">15</span> (<span class="number">0xf</span>)</span><br><span class="line">Validity</span><br><span class="line"> Not Before: Apr <span class="number">18</span> <span class="number">08</span>:<span class="number">15</span>:<span class="number">24</span> <span class="number">2019</span> GMT</span><br><span class="line">    Not After : Jul <span class="number">27</span> <span class="number">08</span>:<span class="number">15</span>:<span class="number">24</span> <span class="number">2019</span> GMT</span><br><span class="line">Subject:</span><br><span class="line">    countryName               = CN</span><br><span class="line">    stateOrProvinceName       = beijin</span><br><span class="line">    localityName              = changping</span><br><span class="line">    organizationName          = jindong</span><br><span class="line">    organizationalUnitName    = wuliu</span><br><span class="line">    commonName                = www.jd.com</span><br><span class="line">X509v3 extensions:</span><br><span class="line">    X509v3 Basic Constraints: </span><br><span class="line">        CA:FALSE</span><br><span class="line">    Netscape Comment: </span><br><span class="line">        OpenSSL Generated Certificate</span><br><span class="line">    X509v3 Subject Key Identifier: </span><br><span class="line">        FB:<span class="number">94</span>:F3:F3:<span class="number">2</span>B:AB:<span class="number">12</span>:<span class="number">4</span>A:<span class="number">93</span>:B0:<span class="number">83</span>:<span class="number">8</span>C:B3:CA:<span class="number">0</span>E:<span class="number">0</span>A:<span class="number">82</span>:E8:EA:B9</span><br><span class="line">    X509v3 Authority Key Identifier: </span><br><span class="line">        keyid:D5:<span class="number">5</span>D:<span class="number">21</span>:<span class="number">99</span>:D3:<span class="number">9</span>A:BA:<span class="number">90</span>:<span class="number">16</span>:F4:BF:<span class="number">2</span>D:<span class="number">78</span>:C7:<span class="number">27</span>:DF:F5:<span class="number">8</span>B:<span class="number">42</span>:F7</span><br><span class="line">                        Certificate <span class="keyword">is</span> to be certified until Jul <span class="number">27</span> <span class="number">08</span>:<span class="number">15</span>:<span class="number">24</span> <span class="number">2019</span> GMT (<span class="number">100</span> days)</span><br><span class="line">                        Sign the certificate? [y/n]:y</span><br><span class="line">                        <span class="number">1</span> <span class="keyword">out</span> of <span class="number">1</span> certificate requests certified, commit? [y/n]y</span><br><span class="line">                        Write <span class="keyword">out</span> database with <span class="number">1</span> new entries</span><br><span class="line">                        Data Base Updated</span><br></pre></td></tr></table></figure><h2 id="实现可多次颁发证书"><a href="#实现可多次颁发证书" class="headerlink" title="实现可多次颁发证书"></a>实现可多次颁发证书</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cat</span> index.txt.attr</span><br><span class="line">unique_subject = <span class="literal">yes</span></span><br><span class="line">改为<span class="literal">no</span></span><br></pre></td></tr></table></figure><h2 id="吊销证书"><a href="#吊销证书" class="headerlink" title="吊销证书"></a>吊销证书</h2><p>在客户端获取要吊销的证书的</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">serial</span> openssl x509 -<span class="keyword">in</span> /<span class="type">PATH</span>/<span class="keyword">FROM</span>/CERT_FILE -noout -<span class="type">serial</span> -subject</span><br></pre></td></tr></table></figure><p>在CA上，根据客户提交的serial与subject信息，对比检验是否与index.txt文件中的信息一致， 吊销证书：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl ca -revoke <span class="regexp">/etc/</span>pki<span class="regexp">/CA/</span>newcerts<span class="regexp">/SERIAL.pem</span></span><br></pre></td></tr></table></figure><p>指定第一个吊销证书的编号,注意：第一次更新证书吊销列表前，才需要执行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="number">01</span> &gt; <span class="regexp">/etc/</span>pki<span class="regexp">/CA/</span>crlnumber </span><br><span class="line">更新证书吊销列表 openssl ca -gencrl -out <span class="regexp">/etc/</span>pki<span class="regexp">/CA/</span>crl.pem </span><br><span class="line">查看crl文件： openssl crl -<span class="keyword">in</span> <span class="regexp">/etc/</span>pki<span class="regexp">/CA/</span>crl.pem -noout -text</span><br></pre></td></tr></table></figure><h2 id="修改默认配置"><a href="#修改默认配置" class="headerlink" title="修改默认配置"></a>修改默认配置</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">policy</span>          = policy_anything <span class="comment"># 可使国家，城市等信息不一样</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/CA%E5%92%8C%E8%AF%81%E4%B9%A6/6f6054985d77c3769bdd0f9bf5eded56.png" alt="img"></p><h2 id="基于key验证远程登录主机"><a href="#基于key验证远程登录主机" class="headerlink" title="基于key验证远程登录主机"></a>基于key验证远程登录主机</h2><p>进入用户秘钥管理<br><img src="/2020/03/10/Linux/CA%E5%92%8C%E8%AF%81%E4%B9%A6/baa3c7a51804d36466401de16de35127.png" alt="img"><br>点击生成<br><img src="/2020/03/10/Linux/CA%E5%92%8C%E8%AF%81%E4%B9%A6/cc8d801577a6d65c3112b50e4995c631.png" alt="img"><br>点击保存为文件<br><img src="/2020/03/10/Linux/CA%E5%92%8C%E8%AF%81%E4%B9%A6/eec64de7987a4543b45307dd944e0fb7.png" alt="img"><br>在客户端保存公钥</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> CA]<span class="meta"># cd </span></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># cd .ssh</span></span><br><span class="line">-bash: cd: .ssh: No such file <span class="literal">or</span> directory</span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># mkdir .ssh</span></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># cd .ssh</span></span><br><span class="line">[root<span class="symbol">@localhost</span> .ssh]<span class="meta"># </span></span><br><span class="line">[root<span class="symbol">@localhost</span> .ssh]<span class="meta"># tree</span></span><br><span class="line">.</span><br><span class="line">└── known_hosts</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> directories, <span class="number">1</span> file</span><br><span class="line">[root<span class="symbol">@localhost</span> .ssh]<span class="meta"># rz -E</span></span><br><span class="line">rz waiting <span class="keyword">to</span> receive.</span><br><span class="line">[root<span class="symbol">@localhost</span> .ssh]<span class="meta"># &gt;authorized_keys</span></span><br><span class="line">[root<span class="symbol">@localhost</span> .ssh]<span class="meta"># ls</span></span><br><span class="line"><span class="number">7</span>key.pub  authorized_keys  known_hosts</span><br><span class="line">[root<span class="symbol">@localhost</span> .ssh]<span class="meta"># cat 7key.pub &gt;&gt;authorized_keys </span></span><br><span class="line">[root<span class="symbol">@localhost</span> .ssh]<span class="meta"># tree</span></span><br><span class="line">.</span><br><span class="line">├── <span class="number">7</span>key.pub</span><br><span class="line">├── authorized_keys</span><br><span class="line">└── known_hosts</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> directories, <span class="number">3</span> files</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/CA%E5%92%8C%E8%AF%81%E4%B9%A6/cfa4cc9097c6771909f8639add4be724.png" alt="img"><br>更改后即可基于key验证登录</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ca </tag>
            
            <tag> 证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用cobbler实现系统自动化安装及web管理</title>
      <link href="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/%E5%88%A9%E7%94%A8cobbler%E5%AE%9E%E7%8E%B0%E7%B3%BB%E7%BB%9F%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85%E5%8F%8Aweb%E7%AE%A1%E7%90%86/"/>
      <url>/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/%E5%88%A9%E7%94%A8cobbler%E5%AE%9E%E7%8E%B0%E7%B3%BB%E7%BB%9F%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85%E5%8F%8Aweb%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装包和配置服务"><a href="#1-安装包和配置服务" class="headerlink" title="1 安装包和配置服务"></a>1 安装包和配置服务</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~<span class="meta"># yum install cobbler  dhcp -y</span></span><br><span class="line"><span class="symbol">root:</span>~<span class="meta"># systemctl enable tftp dhcpd httpd cobblerd</span></span><br><span class="line"><span class="symbol">root:</span>~<span class="meta"># systemctl start tftp  httpd cobblerd</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-修改cobbler-配置文件"><a href="#2-修改cobbler-配置文件" class="headerlink" title="2 修改cobbler 配置文件"></a>2 修改cobbler 配置文件</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/cobbler/settings</span><br><span class="line">server: cobblerIP  384</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/%E5%88%A9%E7%94%A8cobbler%E5%AE%9E%E7%8E%B0%E7%B3%BB%E7%BB%9F%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85%E5%8F%8Aweb%E7%AE%A1%E7%90%86/171c4c03f3c561ec2574d7c0e77da0c0.png" alt="img"><br>““`<br>next_server: cobblerIP 272</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https:<span class="regexp">//</span>s1.<span class="number">51</span>cto.com<span class="regexp">/images/</span>blog<span class="regexp">/201904/</span><span class="number">19</span><span class="regexp">/290dc61ee65de2a2697d5d040478a78f.png?x-oss-process=image/</span>watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=)</span><br></pre></td></tr></table></figure><p>default_password_crypted: “$1$VBqc7U0W$F2qhI5oZwR8chJBU.mAly1” 101</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https:<span class="regexp">//</span>s1.<span class="number">51</span>cto.com<span class="regexp">/images/</span>blog<span class="regexp">/201904/</span><span class="number">19</span><span class="regexp">/90833ca45103ddd0246c9b3e7521dbda.png?x-oss-process=image/</span>watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=)</span><br></pre></td></tr></table></figure><p>manage_dhcp: 1 242 #可自动配置dhcp</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https:<span class="regexp">//</span>s1.<span class="number">51</span>cto.com<span class="regexp">/images/</span>blog<span class="regexp">/201904/</span><span class="number">19</span><span class="regexp">/28a8f123de629a645fa9668e9f0c6c06.png?x-oss-process=image/</span>watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=)</span><br></pre></td></tr></table></figure><p>root:<del># cobbler get-loaders<br>task started: 2019-04-19_074328_get_loaders<br>task started (id=Download Bootloader Content, time=Fri Apr 19 07:43:28 2019)<br>downloading <a href="https://cobbler.github.io/loaders/README" target="_blank" rel="noopener">https://cobbler.github.io/loaders/README</a> to /var/lib/cobbler/loaders/README<br>downloading <a href="https://cobbler.github.io/loaders/COPYING.elilo" target="_blank" rel="noopener">https://cobbler.github.io/loaders/COPYING.elilo</a> to /var/lib/cobbler/loaders/COPYING.elilo<br>downloading <a href="https://cobbler.github.io/loaders/COPYING.yaboot" target="_blank" rel="noopener">https://cobbler.github.io/loaders/COPYING.yaboot</a> to /var/lib/cobbler/loaders/COPYING.yaboot<br>downloading <a href="https://cobbler.github.io/loaders/COPYING.syslinux" target="_blank" rel="noopener">https://cobbler.github.io/loaders/COPYING.syslinux</a> to /var/lib/cobbler/loaders/COPYING.syslinux<br>downloading <a href="https://cobbler.github.io/loaders/elilo-3.8-ia64.efi" target="_blank" rel="noopener">https://cobbler.github.io/loaders/elilo-3.8-ia64.efi</a> to /var/lib/cobbler/loaders/elilo-ia64.efi<br>downloading <a href="https://cobbler.github.io/loaders/yaboot-1.3.17" target="_blank" rel="noopener">https://cobbler.github.io/loaders/yaboot-1.3.17</a> to /var/lib/cobbler/loaders/yaboot<br>downloading <a href="https://cobbler.github.io/loaders/pxelinux.0-3.86" target="_blank" rel="noopener">https://cobbler.github.io/loaders/pxelinux.0-3.86</a> to /var/lib/cobbler/loaders/pxelinux.0<br>downloading <a href="https://cobbler.github.io/loaders/menu.c32-3.86" target="_blank" rel="noopener">https://cobbler.github.io/loaders/menu.c32-3.86</a> to /var/lib/cobbler/loaders/menu.c32<br>downloading <a href="https://cobbler.github.io/loaders/grub-0.97-x86.efi" target="_blank" rel="noopener">https://cobbler.github.io/loaders/grub-0.97-x86.efi</a> to /var/lib/cobbler/loaders/grub-x86.efi<br>downloading <a href="https://cobbler.github.io/loaders/grub-0.97-x86_64.efi" target="_blank" rel="noopener">https://cobbler.github.io/loaders/grub-0.97-x86_64.efi</a> to /var/lib/cobbler/loaders/grub-x86_64.efi<br><strong>* TASK COMPLETE *</strong><br>root:</del># cobbler sync<br>task started: 2019-04-19_074450_sync</p><hr><p>!!! TASK FAILED !!!</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## <span class="number">3</span> 配置dhcp服务</span><br></pre></td></tr></table></figure><p>root:~# vim /etc/cobbler/dhcp.template<br>subnet 192.168.64.0 netmask 255.255.255.0 {<br>option routers 192.168.64.254;<br>option domain-name-servers 1.1.1.1;<br>option subnet-mask 255.255.255.0;<br>range dynamic-bootp 192.168.64.100 192.168.64.254</p><p>root:~# cobbler sync<br>task started: 2019-04-19_075613_sync<br>task started (id=Sync, time=Fri Apr 19 07:56:13 2019)<br>running pre-sync triggers<br>…………………………….<br>running shell triggers from /var/lib/cobbler/triggers/change/*<br><strong>* TASK COMPLETE *</strong><br>““</p><h2 id="4导入安装源文件"><a href="#4导入安装源文件" class="headerlink" title="4导入安装源文件"></a>4导入安装源文件</h2><h3 id="将光盘挂载好"><a href="#将光盘挂载好" class="headerlink" title="将光盘挂载好"></a>将光盘挂载好</h3><blockquote><p>root:~# df<br>Filesystem 1K-blocks Used Available Use% Mounted on<br>/dev/mapper/centos-root 52403200 2066756 50336444 4% /<br>devtmpfs 919432 0 919432 0% /dev<br>tmpfs 931612 0 931612 0% /dev/shm<br>tmpfs 931612 9744 921868 2% /run<br>tmpfs 931612 0 931612 0% /sys/fs/cgroup<br>/dev/sda1 1038336 149004 889332 15% /boot<br>/dev/mapper/centos-home 154057220 33100 154024120 1% /home<br>tmpfs 186324 0 186324 0% /run/user/0<br>/dev/sr0 10491772 10491772 0 100% /mnt/7<br>/dev/sr1 3897932 3897932 0 100% /mnt/6</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root:~# cobbler <span class="keyword">import</span> --path=/mnt/<span class="number">6</span> --name=Centos<span class="number">-6.10</span> --arch=x86_64</span><br><span class="line">task started: <span class="number">2019</span><span class="number">-04</span><span class="number">-19</span>_080352_import</span><br><span class="line">task started (id=Media <span class="keyword">import</span>, time=Fri Apr <span class="number">19</span> <span class="number">08</span>:<span class="number">03</span>:<span class="number">52</span> <span class="number">2019</span>)</span><br><span class="line">Found a candidate signature: breed=redhat, version=rhel6</span><br><span class="line">Found a matching signature: breed=redhat, version=rhel6</span><br><span class="line">Adding distros <span class="keyword">from</span> path /var/www/cobbler/ks_mirror/Centos<span class="number">-6.10</span>-x86_64:</span><br><span class="line">creating new distro: Centos<span class="number">-6.10</span>-x86_64</span><br><span class="line">trying symlink: /var/www/cobbler/ks_mirror/Centos<span class="number">-6.10</span>-x86_64 -&gt; /var/www/cobbler/links/Centos<span class="number">-6.10</span>-x86_64</span><br><span class="line">creating new profile: Centos<span class="number">-6.10</span>-x86_64</span><br><span class="line">associating repos</span><br><span class="line">checking <span class="keyword">for</span> rsync repo(s)</span><br><span class="line">checking <span class="keyword">for</span> rhn repo(s)</span><br><span class="line">checking <span class="keyword">for</span> yum repo(s)</span><br><span class="line">starting descent <span class="built_in">int</span>o /var/www/cobbler/ks_mirror/Centos<span class="number">-6.10</span>-x86_64 <span class="keyword">for</span> Centos<span class="number">-6.10</span>-x86_64</span><br><span class="line">processing repo at : /var/www/cobbler/ks_mirror/Centos<span class="number">-6.10</span>-x86_64</span><br><span class="line">need to process repo/comps: /var/www/cobbler/ks_mirror/Centos<span class="number">-6.10</span>-x86_64</span><br><span class="line">looking <span class="keyword">for</span> /var/www/cobbler/ks_mirror/Centos<span class="number">-6.10</span>-x86_64/repodata<span class="comment">/*comps*.xml</span></span><br><span class="line"><span class="comment">Keeping repodata as-is :/var/www/cobbler/ks_mirror/Centos-6.10-x86_64/repodata</span></span><br><span class="line"><span class="comment">*** TASK COMPLETE ***</span></span><br></pre></td></tr></table></figure><h3 id="查看现有安装选项"><a href="#查看现有安装选项" class="headerlink" title="查看现有安装选项"></a>查看现有安装选项</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">root</span>:<span class="string">~# cobbler profile list</span></span><br><span class="line">   <span class="attr">Centos-6.10-x86_64</span></span><br><span class="line"><span class="meta">[root@localhost</span> <span class="string">~]# cobbler distro list  #安装原文件名称</span></span><br><span class="line"><span class="meta">[root@localhost</span> <span class="string">~]# cat /var/lib/tftpboot/pxelinux.cfg/default </span></span><br><span class="line"><span class="attr">DEFAULT</span> <span class="string">menu</span></span><br><span class="line"><span class="attr">PROMPT</span> <span class="string">0</span></span><br><span class="line"><span class="attr">MENU</span> <span class="string">TITLE Cobbler | http://cobbler.github.io/</span></span><br><span class="line"><span class="attr">TIMEOUT</span> <span class="string">200</span></span><br><span class="line"><span class="attr">TOTALTIMEOUT</span> <span class="string">6000</span></span><br><span class="line"><span class="attr">ONTIMEOUT</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">LABEL</span> <span class="string">local</span></span><br><span class="line">        <span class="attr">MENU</span> <span class="string">LABEL (local)</span></span><br><span class="line">        <span class="attr">MENU</span> <span class="string">DEFAULT</span></span><br><span class="line">        <span class="attr">LOCALBOOT</span> <span class="string">-1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">LABEL</span> <span class="string">Centos-6.10-x86_64</span></span><br><span class="line">        <span class="attr">kernel</span> <span class="string">/images/Centos-6.10-x86_64/vmlinuz</span></span><br><span class="line">        <span class="attr">MENU</span> <span class="string">LABEL Centos-6.10-x86_64</span></span><br><span class="line">        <span class="attr">append</span> <span class="string">initrd=/images/Centos-6.10-x86_64/initrd.img ksdevice=bootif lang=  kssendmac text  ks=http://192.168.64.131/cblr/svc/op/ks/profile/Centos-6.10-x86_64</span></span><br><span class="line">        <span class="attr">ipappend</span> <span class="string">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">MENU</span> <span class="string">end</span></span><br><span class="line"><span class="attr">cobbler</span> <span class="string">profile remove --name=NAME</span></span><br><span class="line"><span class="attr">cobbler</span> <span class="string">distro remove --name=NAME</span></span><br></pre></td></tr></table></figure><h3 id="现在已经可以自动化安装了，不过cobbler默认配置文件为最小化安装，想要自定义的花要修改配置文件"><a href="#现在已经可以自动化安装了，不过cobbler默认配置文件为最小化安装，想要自定义的花要修改配置文件" class="headerlink" title="现在已经可以自动化安装了，不过cobbler默认配置文件为最小化安装，想要自定义的花要修改配置文件"></a>现在已经可以自动化安装了，不过cobbler默认配置文件为最小化安装，想要自定义的花要修改配置文件</h3><h3 id="Centos-7-0下使用system-config-kickstart"><a href="#Centos-7-0下使用system-config-kickstart" class="headerlink" title="Centos 7.0下使用system-config-kickstart"></a>Centos 7.0下使用system-config-kickstart</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修改CentOS-Base.repo</span><br><span class="line"></span><br><span class="line">[base]                     修改 ----------&gt;[development]  </span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line">root:~# yum install -y <span class="keyword">system</span>-config-kickstart.noarch</span><br><span class="line">root:~  # env LANG=zh_CN.UTF<span class="number">-8</span> <span class="keyword">system</span>-config-kickstart #生成自定义配置文件</span><br></pre></td></tr></table></figure><h2 id="将ks文件和系统关联，生成启动菜单"><a href="#将ks文件和系统关联，生成启动菜单" class="headerlink" title="将ks文件和系统关联，生成启动菜单"></a>将ks文件和系统关联，生成启动菜单</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cobbler<span class="built_in"> profile </span><span class="builtin-name">add</span> <span class="attribute">--name</span>=Centos6_mini <span class="attribute">--distro</span>=Centos-6.10-x86_64 <span class="attribute">--kickstart</span>=/var/lib/cobbler/kickstarts/ks6mini.cfg</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/%E5%88%A9%E7%94%A8cobbler%E5%AE%9E%E7%8E%B0%E7%B3%BB%E7%BB%9F%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85%E5%8F%8Aweb%E7%AE%A1%E7%90%86/5dde38f4722f98adb718806a21f6dd71.png" alt="img"></p><h3 id="将所有选项选完即可左上角保存"><a href="#将所有选项选完即可左上角保存" class="headerlink" title="将所有选项选完即可左上角保存"></a>将所有选项选完即可左上角保存</h3><h3 id="centos6ks文件"><a href="#centos6ks文件" class="headerlink" title="centos6ks文件"></a>centos6ks文件</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#platform=x86, AMD64, or Intel EM64T</span></span><br><span class="line"><span class="comment">#version=DEVEL</span></span><br><span class="line"><span class="comment"># Firewall configuration</span></span><br><span class="line">firewall <span class="params">--disabled</span></span><br><span class="line"><span class="comment"># Install OS instead of upgrade</span></span><br><span class="line">install</span><br><span class="line"><span class="comment"># Use CDROM installation media</span></span><br><span class="line">url <span class="params">--url=</span>$tree</span><br><span class="line"><span class="comment"># Root password</span></span><br><span class="line">rootpw <span class="params">--iscrypted</span> $1$RR1QsW0t$qYYwsKO5LloO6y3WaTkdj0</span><br><span class="line"><span class="comment"># System authorization information</span></span><br><span class="line">auth  <span class="params">--useshadow</span>  <span class="params">--passalgo=sha512</span></span><br><span class="line"><span class="comment"># Use text mode install</span></span><br><span class="line">text</span><br><span class="line"><span class="comment"># System keyboard</span></span><br><span class="line">keyboard us</span><br><span class="line"><span class="comment"># System language</span></span><br><span class="line">lang en_US</span><br><span class="line"><span class="comment"># SELinux configuration</span></span><br><span class="line">selinux <span class="params">--disabled</span></span><br><span class="line"><span class="comment"># Do not configure the X Window System</span></span><br><span class="line">skipx</span><br><span class="line"><span class="comment"># Installation logging level</span></span><br><span class="line">logging <span class="params">--level=info</span></span><br><span class="line"><span class="comment"># Reboot after installation</span></span><br><span class="line">reboot</span><br><span class="line"><span class="comment"># System timezone</span></span><br><span class="line">timezone  Asia/Shanghai</span><br><span class="line"><span class="comment"># Network information</span></span><br><span class="line">network  <span class="params">--bootproto=dhcp</span> <span class="params">--device=eth0</span> <span class="params">--onboot=on</span></span><br><span class="line"><span class="comment"># System bootloader configuration</span></span><br><span class="line">bootloader <span class="params">--location=mbr</span> <span class="params">--md5pass=</span><span class="string">"$1$EmYezDTP$mBxhDFd/BRDIn6ZBAOtL00"</span></span><br><span class="line"><span class="comment"># Clear the Master Boot Record</span></span><br><span class="line">zerombr</span><br><span class="line"><span class="comment"># Partition clearing information</span></span><br><span class="line">clearpart <span class="params">--all</span> <span class="params">--initlabel</span> </span><br><span class="line"><span class="comment"># Disk partitioning information</span></span><br><span class="line">part <span class="string">/boot</span> <span class="params">--fstype=</span><span class="string">"ext4"</span> <span class="params">--size=1024</span></span><br><span class="line">part / <span class="params">--fstype=</span><span class="string">"ext4"</span> <span class="params">--grow</span> <span class="params">--size=1</span></span><br><span class="line"></span><br><span class="line">%post</span><br><span class="line">mkdir <span class="string">/root/.ssh</span></span><br><span class="line">chmod 700 <span class="string">/root/.ssh</span></span><br><span class="line">cat &gt; <span class="string">/root/.ssh/authorized_keys</span> &lt;&lt;EOF</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAtSEz3OSOAI6UMkRjIVk3cXwVf/tYa9YsBOVd4vamGtrAuPN5+zgOj9T9p+QI0nJHva6LR4Wz5es46zXoSrLoKY4rTpqnmuPNYuG3B/cybOv99+hriq7Vs9/OqMIgsLbtk4R99Rg75wL9jXpcyxgKtCyVYG4sjdlfyQXQXuauzai6u9oqKo7MmDyWiC9QJSqfilrQKhUB+OfVo4/vkYxKLsRy8N6k2BoRTk2VIp7XKB4gr3sutgutXk35A3O08ukGBSA+378G2csDmf9nctGv4kSw/gR6Mdy2LnhcxcnPA5IP39Buvkdp2eqXOnY1zWxTiUdLtfAb81rFpwMudtaK1w== rsa 2048-041619</span><br><span class="line">EOF</span><br><span class="line">chmod 600 <span class="string">/root/.ssh/authorized_keys</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line">systemctl stop NetworkManager</span><br><span class="line">systemctl disable NetworkManager</span><br><span class="line">%end</span><br><span class="line"></span><br><span class="line">%packages</span><br><span class="line">@base</span><br><span class="line">@debugging</span><br><span class="line">@network-tools</span><br><span class="line"></span><br><span class="line">%end</span><br></pre></td></tr></table></figure><h2 id="centos7ks文件"><a href="#centos7ks文件" class="headerlink" title="centos7ks文件"></a>centos7ks文件</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#platform=x86, AMD64, or Intel EM64T</span></span><br><span class="line"><span class="comment">#version=DEVEL</span></span><br><span class="line"><span class="comment"># Install OS instead of upgrade</span></span><br><span class="line"><span class="attr">install</span></span><br><span class="line"><span class="comment"># Keyboard layouts</span></span><br><span class="line"><span class="attr">keyboard</span> <span class="string">'us'</span></span><br><span class="line"><span class="comment"># Root password</span></span><br><span class="line"><span class="attr">rootpw</span> <span class="string">--iscrypted $1$F4q00dyi$IQ1/CLubGYHtDw6EvSiln0</span></span><br><span class="line"><span class="comment"># System language</span></span><br><span class="line"><span class="attr">lang</span> <span class="string">en_US</span></span><br><span class="line"><span class="comment"># System authorization information</span></span><br><span class="line"><span class="attr">auth</span>  <span class="string">--useshadow  --passalgo=sha512</span></span><br><span class="line"><span class="comment"># Use CDROM installation media</span></span><br><span class="line"><span class="attr">url</span> <span class="string">--url=$tree</span></span><br><span class="line"><span class="comment"># Use graphical install</span></span><br><span class="line"><span class="attr">text</span></span><br><span class="line"><span class="comment"># SELinux configuration</span></span><br><span class="line"><span class="attr">selinux</span> <span class="string">--disabled</span></span><br><span class="line"><span class="comment"># Do not configure the X Window System</span></span><br><span class="line"><span class="attr">skipx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Firewall configuration</span></span><br><span class="line"><span class="attr">firewall</span> <span class="string">--disabled</span></span><br><span class="line"><span class="comment"># Network information</span></span><br><span class="line"><span class="attr">network</span>  <span class="string">--bootproto=dhcp --device=ens33</span></span><br><span class="line"><span class="comment"># Halt after installation</span></span><br><span class="line"><span class="attr">halt</span></span><br><span class="line"><span class="comment"># System timezone</span></span><br><span class="line"><span class="attr">timezone</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="comment"># System bootloader configuration</span></span><br><span class="line"><span class="attr">bootloader</span> <span class="string">--append=" crashkernel=auto" --location=mbr --boot-drive=sda</span></span><br><span class="line"><span class="comment"># Partition clearing information</span></span><br><span class="line"><span class="attr">clearpart</span> <span class="string">--all --initlabel</span></span><br><span class="line"><span class="attr">reboot</span></span><br><span class="line"><span class="comment"># Disk partitioning information</span></span><br><span class="line"><span class="attr">part</span> <span class="string">/boot --fstype="xfs" --size=1024</span></span><br><span class="line"><span class="attr">part</span> <span class="string">/ --fstype="xfs" --grow --size=1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">%post</span></span><br><span class="line"><span class="attr">mkdir</span> <span class="string">/root/.ssh</span></span><br><span class="line"><span class="attr">chmod</span> <span class="string">700 /root/.ssh</span></span><br><span class="line"><span class="attr">cat</span> <span class="string">&gt; /root/.ssh/authorized_keys &lt;&lt;EOF</span></span><br><span class="line"><span class="meta">ssh-rsa</span> <span class="string">AAAAB3NzaC1yc2EAAAABIwAAAQEAtSEz3OSOAI6UMkRjIVk3cXwVf/tYa9YsBOVd4vamGtrAuPN5+zgOj9T9p+QI0nJHva6LR4Wz5es46zXoSrLoKY4rTpqnmuPNYuG3B/cybOv99+hriq7Vs9/OqMIgsLbtk4R99Rg75wL9jXpcyxgKtCyVYG4sjdlfyQXQXuauzai6u9oqKo7MmDyWiC9QJSqfilrQKhUB+OfVo4/vkYxKLsRy8N6k2BoRTk2VIp7XKB4gr3sutgutXk35A3O08ukGBSA+378G2csDmf9nctGv4kSw/gR6Mdy2LnhcxcnPA5IP39Buvkdp2eqXOnY1zWxTiUdLtfAb81rFpwMudtaK1w== rsa 2048-041619</span></span><br><span class="line"><span class="attr">EOF</span></span><br><span class="line"><span class="attr">chmod</span> <span class="string">600 /root/.ssh/authorized_keys</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">stop firewalld</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">disable firewalld.service</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">stop NetworkManager</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">disable NetworkManager</span></span><br><span class="line"><span class="attr">sed</span> <span class="string">-i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config</span></span><br><span class="line"><span class="attr">mkdir</span> <span class="string">/etc/yum.repo.d/bak</span></span><br><span class="line"><span class="attr">mv</span> <span class="string">/etc/yum.repos.d/*.repo /etc/yum.repos.d/bak/</span></span><br><span class="line"><span class="attr">cat</span> <span class="string">&gt; /etc/yum.repos.d/Centos-Base.repo &lt;&lt;EOF</span></span><br><span class="line"><span class="attr">[development]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">CentOS-$releasever - Base - mirrors.aliyun.com</span></span><br><span class="line"><span class="attr">failovermethod</span>=<span class="string">priority</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">http://mirrors.aliyun.com/centos/$releasever/os/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.aliyuncs.com/centos/$releasever/os/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.cloud.aliyuncs.com/centos/$releasever/os/$basearch/</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#released updates </span></span><br><span class="line"><span class="attr">[updates]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">CentOS-$releasever - Updates - mirrors.aliyun.com</span></span><br><span class="line"><span class="attr">failovermethod</span>=<span class="string">priority</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.aliyuncs.com/centos/$releasever/updates/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that may be useful</span></span><br><span class="line"><span class="attr">[extras]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">CentOS-$releasever - Extras - mirrors.aliyun.com</span></span><br><span class="line"><span class="attr">failovermethod</span>=<span class="string">priority</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.aliyuncs.com/centos/$releasever/extras/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.cloud.aliyuncs.com/centos/$releasever/extras/$basearch/</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that extend functionality of existing packages</span></span><br><span class="line"><span class="attr">[centosplus]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">CentOS-$releasever - Plus - mirrors.aliyun.com</span></span><br><span class="line"><span class="attr">failovermethod</span>=<span class="string">priority</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.cloud.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="string">0</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#contrib - packages by Centos Users</span></span><br><span class="line"><span class="attr">[contrib]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">CentOS-$releasever - Contrib - mirrors.aliyun.com</span></span><br><span class="line"><span class="attr">failovermethod</span>=<span class="string">priority</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">http://mirrors.aliyun.com/centos/$releasever/contrib/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.aliyuncs.com/centos/$releasever/contrib/$basearch/</span></span><br><span class="line">        <span class="attr">http</span>:<span class="string">//mirrors.cloud.aliyuncs.com/centos/$releasever/contrib/$basearch/</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="string">0</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line"><span class="attr">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cat</span> <span class="string">&gt; /etc/yum.repos.d/epel.repo &lt;&lt; EOF</span></span><br><span class="line"><span class="attr">[epel]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">Extra Packages for Enterprise Linux 7 - $basearch</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">http://mirrors.aliyun.com/epel/7/$basearch</span></span><br><span class="line"><span class="attr">failovermethod</span>=<span class="string">priority</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">0</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[epel-debuginfo]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">Extra Packages for Enterprise Linux 7 - $basearch - Debug</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">http://mirrors.aliyun.com/epel/7/$basearch/debug</span></span><br><span class="line"><span class="attr">failovermethod</span>=<span class="string">priority</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="string">0</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[epel-source]</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">Extra Packages for Enterprise Linux 7 - $basearch - Source</span></span><br><span class="line"><span class="attr">baseurl</span>=<span class="string">http://mirrors.aliyun.com/epel/7/SRPMS</span></span><br><span class="line"><span class="attr">failovermethod</span>=<span class="string">priority</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="string">0</span></span><br><span class="line"><span class="attr">gpgkey</span>=<span class="string">file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="string">0</span></span><br><span class="line"><span class="attr">EOF</span></span><br><span class="line"><span class="attr">%end</span></span><br><span class="line"></span><br><span class="line"><span class="attr">%packages</span></span><br><span class="line"><span class="attr">@base</span></span><br><span class="line"><span class="attr">@network-tools</span></span><br><span class="line"></span><br><span class="line"><span class="attr">%end</span></span><br></pre></td></tr></table></figure><h2 id="web管理"><a href="#web管理" class="headerlink" title="web管理"></a>web管理</h2><h3 id="阿里云太新会出错，用搜狐"><a href="#阿里云太新会出错，用搜狐" class="headerlink" title="阿里云太新会出错，用搜狐"></a>阿里云太新会出错，用搜狐</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/yum.repos.d/epel.repo</span><br><span class="line">[epel]</span><br><span class="line"><span class="attribute">name</span>=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span></span><br><span class="line"><span class="attribute">baseurl</span>=http://mirrors.sohu.com/fedora-epel/7/x86_64/</span><br><span class="line"><span class="attribute">enabled</span>=1</span><br><span class="line"><span class="attribute">gpgcheck</span>=0</span><br><span class="line">[root@localhost ~]# yum clean all</span><br><span class="line">[root@localhost network-scripts]# yum install cobbler-web</span><br><span class="line">[root@localhost network-scripts]#<span class="built_in"> service </span>httpd restart</span><br><span class="line">[root@localhost network-scripts]# htdigest /etc/cobbler/users.digest Cobbler cobbleradmin(添加新管理用户)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cobbler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建PXE无人值守自动化安装系统，支持多系统</title>
      <link href="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/%E6%90%AD%E5%BB%BAPXE%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%94%AF%E6%8C%81%E5%A4%9A%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/%E6%90%AD%E5%BB%BAPXE%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F%EF%BC%8C%E6%94%AF%E6%8C%81%E5%A4%9A%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="需要的服务"><a href="#需要的服务" class="headerlink" title="需要的服务"></a>需要的服务</h2><a id="more"></a><h2 id="1httpd"><a href="#1httpd" class="headerlink" title="1httpd"></a>1httpd</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install -y httpd</span></span><br><span class="line">systemctl <span class="keyword">start</span> httpd </span><br><span class="line">systemctl <span class="keyword">enable</span> httpd</span><br></pre></td></tr></table></figure><h2 id="2-DHCP"><a href="#2-DHCP" class="headerlink" title="2 DHCP"></a>2 DHCP</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/doc/dhcp<span class="number">-4.2</span><span class="number">.5</span>/dhcpd.conf.example /etc/dhcp/dhcpd.conf</span><br><span class="line"></span><br><span class="line">vim  /etc/dhcp/dhcpd.conf</span><br><span class="line">option domain-name <span class="string">"QH.org"</span>;</span><br><span class="line">option domain-name-servers <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>, <span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span>;</span><br><span class="line"><span class="section">default</span>-lease-time <span class="number">86400</span>;</span><br><span class="line">max-lease-time <span class="number">864000</span>;</span><br><span class="line">subnet <span class="number">192.168</span><span class="number">.64</span><span class="number">.0</span> netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> &#123;</span><br><span class="line">  range <span class="number">192.168</span><span class="number">.64</span><span class="number">.200</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.250</span>;</span><br><span class="line">  option routers <span class="number">192.168</span><span class="number">.64</span><span class="number">.254</span>;</span><br><span class="line">  next-server <span class="number">192.168</span><span class="number">.64</span><span class="number">.132</span>;</span><br><span class="line">  filename <span class="string">"pxelinux.0"</span></span><br><span class="line">&#125;</span><br><span class="line">[root@localhost ~]# systemctl start dhcpd</span><br><span class="line">systemctl enable dhcpd</span><br></pre></td></tr></table></figure><h2 id="3-tftp"><a href="#3-tftp" class="headerlink" title="3 tftp"></a>3 tftp</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> tftp-<span class="keyword">server</span></span><br><span class="line">systemctl <span class="keyword">start</span> tftp</span><br><span class="line">systemctl <span class="keyword">enable</span>  tftp</span><br></pre></td></tr></table></figure><h2 id="4光盘挂载"><a href="#4光盘挂载" class="headerlink" title="4光盘挂载"></a>4光盘挂载</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mkdir <span class="regexp">/var/</span>www<span class="regexp">/html/</span>centos<span class="regexp">/&#123;6,7&#125;/</span>os<span class="regexp">/x86_64/</span> -pv</span><br></pre></td></tr></table></figure><blockquote><p>/dev/sr1 11G 11G 0 100% /var/www/html/centos/7/os/x86_64<br>/dev/sr0 3.8G 3.8G 0 100% /var/www/html/centos/6/os/x86_64</p></blockquote><h2 id="5准备启动文件"><a href="#5准备启动文件" class="headerlink" title="5准备启动文件"></a>5准备启动文件</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@localhost</span> network-scripts]# yum install syslinux</span><br><span class="line">[root<span class="meta">@localhost</span> network-scripts]# mkdir /<span class="keyword">var</span>/lib/tftpboot/kernel&#123;<span class="number">6</span>,<span class="number">7</span>&#125;</span><br><span class="line">[root<span class="meta">@localhost</span> network-scripts]# cp /<span class="keyword">var</span>/www/html/centos/<span class="number">6</span>/os/x86_64/isolinux/vmlinuz /<span class="keyword">var</span>/lib/tftpboot/kernel6/</span><br><span class="line">[root<span class="meta">@localhost</span> network-scripts]# cp /<span class="keyword">var</span>/www/html/centos/<span class="number">6</span>/os/x86_64/isolinux/initrd.img /<span class="keyword">var</span>/lib/tftpboot/kernel6/</span><br><span class="line">[root<span class="meta">@localhost</span> network-scripts]# cp /<span class="keyword">var</span>/www/html/centos/<span class="number">7</span>/os/x86_64/isolinux/vmlinuz /<span class="keyword">var</span>/lib/tftpboot/kernel7/</span><br><span class="line">[root<span class="meta">@localhost</span> network-scripts]# cp /<span class="keyword">var</span>/www/html/centos/<span class="number">7</span>/os/x86_64/isolinux/initrd.img /<span class="keyword">var</span>/lib/tftpboot/kernel7/</span><br><span class="line">[root<span class="meta">@localhost</span> network-scripts]# mkdir /<span class="keyword">var</span>/lib/tftpboot/pxelinux.cfg/</span><br><span class="line">[root<span class="meta">@localhost</span> network-scripts]# cp /<span class="keyword">var</span>/www/html/centos/<span class="number">7</span>/os/x86_64/isolinux/isolinux.cfg /<span class="keyword">var</span>/lib/tftpboot/pxelinux.cfg/<span class="keyword">default</span></span><br></pre></td></tr></table></figure><h2 id="6准备启动菜单文件"><a href="#6准备启动菜单文件" class="headerlink" title="6准备启动菜单文件"></a>6准备启动菜单文件</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">default menu.c32</span><br><span class="line">timeout 60</span><br><span class="line">menu title Auto Install CentOS </span><br><span class="line">label local</span><br><span class="line">  menu default</span><br><span class="line">  menu label Boot <span class="keyword">from</span> ^local drive</span><br><span class="line">  localboot 0xffff</span><br><span class="line">label centos6</span><br><span class="line">  menu label Install CentOS ^Mini 6</span><br><span class="line">  kernel kernel6/vmlinuz</span><br><span class="line">  append <span class="attribute">initrd</span>=kernel6/initrd.img <span class="attribute">ks</span>=http://192.168.64.132/ks6mini.cfg</span><br><span class="line">label centos7</span><br><span class="line">  menu label Install CentOS Mini 7</span><br><span class="line">  kernel kernel7/vmlinuz</span><br><span class="line">  append <span class="attribute">initrd</span>=kernel7/initrd.img <span class="attribute">ks</span>=http://192.168.64.132/ks7mini.cfg</span><br></pre></td></tr></table></figure><h1 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h1>]]></content>
      
      
      <categories>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建DNS主从服务器实现反向解析,子域,转发,智能DNS及排错</title>
      <link href="/2020/03/10/%E7%BD%91%E7%BB%9C/%E6%90%AD%E5%BB%BADNS%E4%B8%BB%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0%E5%8F%8D%E5%90%91%E8%A7%A3%E6%9E%90-%E5%AD%90%E5%9F%9F-%E8%BD%AC%E5%8F%91-%E6%99%BA%E8%83%BDDNS%E5%8F%8A%E6%8E%92%E9%94%99/"/>
      <url>/2020/03/10/%E7%BD%91%E7%BB%9C/%E6%90%AD%E5%BB%BADNS%E4%B8%BB%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0%E5%8F%8D%E5%90%91%E8%A7%A3%E6%9E%90-%E5%AD%90%E5%9F%9F-%E8%BD%AC%E5%8F%91-%E6%99%BA%E8%83%BDDNS%E5%8F%8A%E6%8E%92%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h2 id="1基本知识点"><a href="#1基本知识点" class="headerlink" title="1基本知识点"></a>1基本知识点</h2><h3 id="DNS服务"><a href="#DNS服务" class="headerlink" title="DNS服务"></a>DNS服务</h3><blockquote><p>DNS：Domain Name System 应用层协议<br>C/S,53/udp, 53/tcp<br>BIND：Bekerley Internat Name Domain<br>ISC （<a href="http://www.isc.org）" target="_blank" rel="noopener">www.isc.org）</a><br>本地名称解析配置文件：hosts</p></blockquote><a id="more"></a><p>### DNS域名</p><blockquote><p>根域<br>一级域名：Top Level Domain: tld<br>com, edu, mil, gov, net, org, int,arpa<br>三类：组织域、国家域(.cn, .ca, .hk, .tw)、反向域<br>二级域名<br>三级域名<br>最多127级域名<br>ICANN（The Internet Corporation for Assigned Names and Numbers）<br>互联网名称与数字地址分配机构，负责在全球范围内对互联网通用顶级域名<br>（gTLD）以及国家和地区顶级域名（ccTLD）系统的管理、以及根服务器系统<br>的管理</p></blockquote><h3 id="DNS域名结构"><a href="#DNS域名结构" class="headerlink" title="DNS域名结构"></a>DNS域名结构</h3><p><img src="https://s1.51cto.com/images/blog/201904/22/b4fe36f93ae998b887f6c6144b45dce6.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><h3 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h3><blockquote><p>DNS查询类型：<br>递归查询<br>迭代查询<br>名称服务器：域内负责解析本域内的名称的主机<br>根服务器：13组服务器<br>解析类型：<br>FQDN –&gt; IP<br>IP –&gt; FQDN<br>注意：正反向解析是两个不同的名称空间，是两棵不同的解析树</p></blockquote><h3 id="DNS服务器类型"><a href="#DNS服务器类型" class="headerlink" title="DNS服务器类型"></a>DNS服务器类型</h3><blockquote><p>DNS服务器的类型：<br>主DNS服务器<br>从DNS服务器<br>缓存DNS服务器（转发器）<br>* 主DNS服务器：管理和维护所负责解析的域内解析库的服务器<br>* 从DNS服务器：从主服务器或从服务器“复制”（区域传输）解析库副本<br>序列号：解析库版本号，主服务器解析库变化时，其序列递增<br>刷新时间间隔：从服务器从主服务器请求同步解析的时间间隔<br>重试时间间隔：从服务器请求同步失败时，再次尝试时间间隔<br>过期时长：从服务器联系不到主服务器时，多久后停止服务<br>* “通知”机制：主服务器解析库发生变化时，会主动通知从服务器</p></blockquote><h3 id="资源记录"><a href="#资源记录" class="headerlink" title="资源记录"></a>资源记录</h3><blockquote><p>区域解析库：由众多RR组成：<br>资源记录：Resource Record, RR<br>记录类型：A, AAAA, PTR, SOA, NS, CNAME, MX<br>SOA：Start Of Authority，起始授权记录；一个区域解析库有且仅能有一个<br>SOA记录，必须位于解析库的第一条记录<br>A：internet Address，作用，FQDN –&gt; IP<br>AAAA：FQDN –&gt; IPv6<br>PTR：PoinTeR，IP –&gt; FQDN<br>NS：Name Server，专用于标明当前区域的DNS服务器<br>CNAME ： Canonical Name，别名记录<br>MX：Mail eXchanger，邮件交换器<br>TXT：对域名进行标识和说明的一种方式，一般做验证记录时会使用此项，如：<br>SPF（反垃圾邮件）记录，https验证等<br>示例：_dnsauth TXT 2012011200000051qgs69bwoh4h6nht4n1h0lr038x</p></blockquote><h2 id="2基本环境安装"><a href="#2基本环境安装" class="headerlink" title="2基本环境安装"></a>2基本环境安装</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install -y bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vim /etc/named.conf</span></span><br></pre></td></tr></table></figure><ul><li>修改这两行,让所有主机都可访问<br>&gt;listen-on port 53 { localhost; };<br>allow-query { any; }<br><img src="https://s1.51cto.com/images/blog/201904/22/4e86fcf1e80d982ec9ce6a28102b0466.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/etc/</span>named <span class="meta"># systemctl start named.service</span></span><br></pre></td></tr></table></figure><h2 id="3主从服务器搭建"><a href="#3主从服务器搭建" class="headerlink" title="3主从服务器搭建"></a>3主从服务器搭建</h2><h3 id="搭建主服务器"><a href="#搭建主服务器" class="headerlink" title="搭建主服务器"></a>搭建主服务器</h3><ul><li>修改bind 配置文件</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="meta-keyword">/etc/</span>named.conf</span><br><span class="line"><span class="comment">//  listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//  allow-query     &#123; localhost; &#125;;  </span></span><br><span class="line">allow-<span class="class">transfer </span>&#123;从服务器IP;&#125;;          <span class="meta">#只允许从服务器同步</span></span><br><span class="line"></span><br><span class="line">vim <span class="meta-keyword">/etc/</span>named.rfc1912.zones</span><br><span class="line">添加</span><br><span class="line">zone <span class="string">"qh.com"</span> <span class="class">IN </span>&#123;</span><br><span class="line">        type master;</span><br><span class="line">        file <span class="string">"qh.com.zone"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编辑DNS区域数据库文件</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root:/etc/named # cp -p /var/named/named.localhost /var/named/qh.com.zone</span><br><span class="line">root:/var/named $ vi /var/named/qh.com.zone</span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@       IN SOA  master qh.com. (</span><br><span class="line">                                        <span class="number">2019042210</span>      ; serial</span><br><span class="line">                                        <span class="number">1</span>D      ; <span class="built_in">ref</span>resh</span><br><span class="line">                                        <span class="number">1</span>H      ; retry</span><br><span class="line">                                        <span class="number">1</span>W      ; expire</span><br><span class="line">                                        <span class="number">3</span>H )    ; minimum</span><br><span class="line">                NS       master</span><br><span class="line">master      A    <span class="number">192.168</span><span class="number">.64</span><span class="number">.151</span></span><br><span class="line">dbserver1   A    <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">dbserver2   A    <span class="number">2.2</span><span class="number">.2</span><span class="number">.2</span></span><br></pre></td></tr></table></figure><blockquote><p>root:~ # systemctl restart named.service #重启服务</p></blockquote><ul><li>测试</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root:~ $ dig dbserver1.qh.com @<span class="number">192.168</span><span class="number">.64</span><span class="number">.151</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.51cto.com/images/blog/201904/22/1d0a28182ede6778530a71413a50b67a.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><h3 id="搭建从服务器"><a href="#搭建从服务器" class="headerlink" title="搭建从服务器"></a>搭建从服务器</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum install bind </span><br><span class="line">vim <span class="meta-keyword">/etc/</span>named.conf</span><br><span class="line"><span class="comment">//  listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//  allow-query     &#123; localhost; &#125;;  </span></span><br><span class="line">allow-<span class="class">transfer </span>&#123;none;&#125;;                                        <span class="meta">#不允许任何机器同步</span></span><br><span class="line">vim <span class="meta-keyword">/etc/</span>named.rfc1912.zones</span><br><span class="line">zone <span class="string">"qh.com"</span> &#123;</span><br><span class="line">    type slave;</span><br><span class="line">    <span class="class">masters </span>&#123;主服务器IP;&#125;;                                                                                         </span><br><span class="line">    file <span class="string">"slaves/qh.com.slave"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># systemctl start named.service</span></span><br></pre></td></tr></table></figure><ul><li>从服务器进行同步</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># cp -p /var/named/named.localhost /var/named/slave/qh.com.slave</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># cd slaves/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># chmod g+w qh.com.slave </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># rndc reload</span></span><br><span class="line">server reload successful</span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># ll</span></span><br><span class="line">total <span class="number">4</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> root named <span class="number">152</span> Jun <span class="number">21</span>  <span class="number">2007</span> qh.com.slave</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ $ vi <span class="meta-keyword">/etc/</span>sysconfig<span class="meta-keyword">/network-scripts/</span>ifcfg-ens33</span><br></pre></td></tr></table></figure><p><img src="https://s1.51cto.com/images/blog/201904/22/4eed3d8d198a32f39759109218eb2e22.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root:~ $<span class="built_in"> service network </span>restart </span><br><span class="line">Restarting<span class="built_in"> network </span>(via systemctl):                        [  OK  ]</span><br><span class="line">root:~ $ cat /etc/resolv.conf</span><br><span class="line">; generated by /usr/sbin/dhclient-script</span><br><span class="line">search localdomain</span><br><span class="line">nameserver 192.168.64.151</span><br><span class="line">nameserver 192.168.64.152</span><br></pre></td></tr></table></figure><ul><li>断开151网卡</li><li>在客户机测试<br><img src="https://s1.51cto.com/images/blog/201904/22/3c8a9445e755a53997f29ee9970499dc.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>说明是从从服务器解析地址的，主从服务器已成功</li></ul><h2 id="4搭建反向主服务器"><a href="#4搭建反向主服务器" class="headerlink" title="4搭建反向主服务器"></a>4搭建反向主服务器</h2><ul><li>配置文件</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"64.168.192.in-addr.arpa"</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">       <span class="built_in"> type </span>master;    </span><br><span class="line">        file <span class="string">"192.168.64.zone"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>区域数据库文件</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root:/var/named $ cp -p qh.com.zone <span class="number">192.168</span><span class="number">.64</span>.zone</span><br><span class="line">root:/var/named $ vim <span class="number">192.168</span><span class="number">.64</span>.zone</span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@ IN SOA master qh.com. ( <span class="number">1</span> <span class="number">1</span>H <span class="number">10</span>M <span class="number">12</span>H <span class="number">1</span>D )</span><br><span class="line">     NS  master</span><br><span class="line">master A <span class="number">192.168</span><span class="number">.64</span><span class="number">.151</span></span><br><span class="line"><span class="number">7</span>    PTR websrv.qh.com.</span><br><span class="line"><span class="number">6</span>    PTR  websrv.qh.com.</span><br><span class="line"><span class="number">100</span>  PTR mail.qh.com.</span><br><span class="line">root:~ $ rndc reload</span><br><span class="line">root:~ $ systemctl restart named.service</span><br></pre></td></tr></table></figure><ul><li>测试<br><img src="https://s1.51cto.com/images/blog/201904/22/44669b66622a2d2b03a2aed7ea6ae253.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"><br><img src="https://s1.51cto.com/images/blog/201904/22/ae037053228097fa0e98cab90a77b66a.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li></ul><h2 id="5父域委派子域到另一台服务器上"><a href="#5父域委派子域到另一台服务器上" class="headerlink" title="5父域委派子域到另一台服务器上"></a>5父域委派子域到另一台服务器上</h2><ul><li>主服务器</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">yum</span> <span class="string">install</span> <span class="string">bind</span> </span><br><span class="line"><span class="string">vim</span> <span class="string">/etc/named.conf</span></span><br><span class="line"><span class="string">//</span>  <span class="string">listen-on</span> <span class="string">port</span> <span class="number">53</span> <span class="string">&#123;</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">;</span> <span class="string">&#125;;</span></span><br><span class="line"><span class="string">//</span>  <span class="string">allow-query</span>     <span class="string">&#123;</span> <span class="string">localhost;</span> <span class="string">&#125;;</span></span><br></pre></td></tr></table></figure><ul><li>在子域的DNS服务器上192.168.64.153</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">root</span>:<span class="string">/var/named # vi /etc/named.rfc1912.zones </span></span><br><span class="line"><span class="attr">zone</span> <span class="string">"beijing.qh.com" IN &#123;</span></span><br><span class="line">        <span class="attr">type</span> <span class="string">master;</span></span><br><span class="line">        <span class="attr">file</span> <span class="string">"beijing.qh.com.zone";</span></span><br><span class="line"><span class="attr">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">root</span>:<span class="string">/var/named # cp -p named.empty beijing.qh.com.zone</span></span><br><span class="line"><span class="attr">root</span>:<span class="string">/var/named # chmod g+w beijing.qh.com.zone</span></span><br><span class="line"><span class="attr">root</span>:<span class="string">~ $ vim /var/named/beijing.qh.com.zone</span></span><br><span class="line"><span class="meta">$TTL</span> <span class="string">1D</span></span><br><span class="line"><span class="meta">@</span>   <span class="string">IN SOA  master beijing.qh.com. (</span></span><br><span class="line">                    <span class="attr">2019042214</span>  <span class="string">; serial</span></span><br><span class="line">                    <span class="attr">1D</span>  <span class="string">; refresh</span></span><br><span class="line">                    <span class="attr">1H</span>  <span class="string">; retry</span></span><br><span class="line">                    <span class="attr">1W</span>  <span class="string">; expire</span></span><br><span class="line">                    <span class="attr">3H</span> <span class="string">)    ; minimum</span></span><br><span class="line">            <span class="attr">NS</span>   <span class="string">master</span></span><br><span class="line"><span class="attr">master</span>      <span class="string">A    192.168.64.153</span></span><br><span class="line"><span class="attr">websrv</span>     <span class="string">A    3.3.3.3</span></span><br><span class="line"><span class="attr">www</span>       <span class="string">CNAME  websrv    #此处可使用别名</span></span><br><span class="line"></span><br><span class="line"><span class="attr">root</span>:<span class="string">~ $ systemctl start named.service</span></span><br></pre></td></tr></table></figure><ul><li>测试成功<br><img src="https://s1.51cto.com/images/blog/201904/22/fdccbff2cb487b79c3c3cd9491ff3835.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li></ul><h2 id="6实现智能DNS"><a href="#6实现智能DNS" class="headerlink" title="6实现智能DNS"></a>6实现智能DNS</h2><ul><li>主DNS</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root:~ <span class="comment"># vim /etc/named.conf #三个不同地区网段</span></span><br><span class="line">acl beijingnet&#123;</span><br><span class="line">        192.168.64.0/24;</span><br><span class="line">&#125;;</span><br><span class="line">acl shanghainet&#123;</span><br><span class="line">        192.168.65.0/24;</span><br><span class="line">&#125;;</span><br><span class="line">acl othernet&#123;</span><br><span class="line">        any;</span><br><span class="line">&#125;;</span><br><span class="line">view beijingview&#123;</span><br><span class="line">        match-clients &#123;beijingnet;&#125;;</span><br><span class="line">        include <span class="string">"/etc/named/named.rfc1912.zones.bj"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">view shanghaiview&#123;</span><br><span class="line">        match-clients &#123;shanghainet;&#125;;</span><br><span class="line">        include <span class="string">"/etc/named/named.rfc1912.zones.sh"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">view otherview&#123;</span><br><span class="line">        match-clients &#123;othernet;&#125;;</span><br><span class="line">        include <span class="string">"/etc/named.rfc1912.zones"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">############################## zone开头的记录要放到includ包含的/etc/named.rfc1912.zones文件里</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.51cto.com/images/blog/201904/23/4230821f50b9e5443c956adf71d0b718.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root:/var/named # cp -p qh.com.zone qh.com.bj    ##创建北京与上海数据库</span><br><span class="line">root:/var/named # cp -p qh.com.zone qh.com.sh</span><br><span class="line"></span><br><span class="line">root:/var/named # cat qh.com.bj </span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@   IN  SOA master qh.com ( <span class="number">1</span> <span class="number">1</span>D <span class="number">1</span>H <span class="number">1</span>W <span class="number">3</span>H )</span><br><span class="line">        NS master</span><br><span class="line">master  A  <span class="number">192.168</span><span class="number">.64</span><span class="number">.151</span></span><br><span class="line">www     A  <span class="number">6.6</span><span class="number">.6</span><span class="number">.6</span></span><br><span class="line"></span><br><span class="line">root:/var/named # vi qh.com.sh</span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@   IN  SOA master qh.com ( <span class="number">1</span> <span class="number">1</span>D <span class="number">1</span>H <span class="number">1</span>W <span class="number">3</span>H )</span><br><span class="line">        NS master</span><br><span class="line">master  A  <span class="number">192.168</span><span class="number">.64</span><span class="number">.151</span></span><br><span class="line">www     A  <span class="number">7.7</span><span class="number">.7</span><span class="number">.7</span></span><br><span class="line"></span><br><span class="line">root:/var/named # cp qh.com.sh qh.com.zone  #其他地区数据库</span><br><span class="line">cp: overwrite ‘qh.com.zone’? y</span><br><span class="line"></span><br><span class="line">root:/var/named # vi qh.com.zone </span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@   IN  SOA master qh.com ( <span class="number">1</span> <span class="number">1</span>D <span class="number">1</span>H <span class="number">1</span>W <span class="number">3</span>H )</span><br><span class="line">        NS master</span><br><span class="line">master  A  <span class="number">192.168</span><span class="number">.64</span><span class="number">.151</span></span><br><span class="line">www     A  <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br></pre></td></tr></table></figure><ul><li>共三个数据库，对应不同地区<br><img src="https://s1.51cto.com/images/blog/201904/23/1f95d201c5dc59f0c6f84f9e651b3ed0.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root:~ $ cp -<span class="selector-tag">p</span> /etc/named<span class="selector-class">.rfc1912</span><span class="selector-class">.zones</span> /etc/named/named<span class="selector-class">.rfc1912</span><span class="selector-class">.zones</span>.bj</span><br><span class="line">root:~ $ cp -<span class="selector-tag">p</span> /etc/named<span class="selector-class">.rfc1912</span><span class="selector-class">.zones</span> /etc/named/named<span class="selector-class">.rfc1912</span><span class="selector-class">.zones</span>.sh</span><br></pre></td></tr></table></figure><ul><li>共三个区域数据库文件<br><img src="https://s1.51cto.com/images/blog/201904/23/4ff632af39761cf5bceff4b0ff578e1f.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>开始关联数据库</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/etc/</span>named <span class="meta"># vi named.rfc1912.zones.bj</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.51cto.com/images/blog/201904/23/e82a5ea1fc6bb9c6de7447e0be298470.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/etc/</span>named <span class="meta"># vi named.rfc1912.zones.sh</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.51cto.com/images/blog/201904/23/3eec26a43461935613e0ea1f3f92f7a2.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"><br>原有named.rfc1912.zones配置不变<br><img src="https://s1.51cto.com/images/blog/201904/23/771a3897a1ec14da75e83c8ad1c48f11.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"><br>* 语法检查</p><p><img src="https://s1.51cto.com/images/blog/201904/23/bc7e3d6b4dd96382abf30f3ec388c33c.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"><br>* 重启服务</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#报错</span></span><br><span class="line">root:/var/named # rndc reload</span><br><span class="line">rndc: connect failed: 127.0.0.1#953:<span class="built_in"> connection </span>refused</span><br><span class="line"><span class="comment"># 尝试先重启服务在加载</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.51cto.com/images/blog/201904/23/39427f620ca793894ebdf3c79fde434b.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"><br>* 测试<br>必须把DNS指向所配服务器<br><img src="https://s1.51cto.com/images/blog/201904/23/2a9f6b2327deed8d917370c9a9d3dd95.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"><br>* DNS服务器 有两个ip段<br><img src="https://s1.51cto.com/images/blog/201904/23/cca3d60e96aa4eea8e822fde8317c92b.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"><br>* 以64网段<br><img src="https://s1.51cto.com/images/blog/201904/23/012760a2f70c8aba6ca2168d7ba04de3.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><ul><li>以65网段<br><img src="https://s1.51cto.com/images/blog/201904/23/13b5cf9fbe34d642a0c32ea152efb3ca.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>其他网段</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">临时加一个网段</span><br><span class="line">服务器：ip a a <span class="number">192.168</span><span class="number">.63</span><span class="number">.1</span>/<span class="number">24</span> dev ens33</span><br><span class="line">客户端：ip a a <span class="number">192.168</span><span class="number">.63</span><span class="number">.2</span>/<span class="number">24</span> dev ens33</span><br></pre></td></tr></table></figure><ul><li>测试均已成功<br>![](<a href="https://s1.51cto.com" target="_blank" rel="noopener">https://s1.51cto.com</a><br>/images/blog/201904/23/0c181b664c6773ed2c32d1d336ae799a.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=)</li></ul><h2 id="7互联网DNS架构实验"><a href="#7互联网DNS架构实验" class="headerlink" title="7互联网DNS架构实验"></a>7互联网DNS架构实验</h2><ul><li>架构图<br><img src="https://s1.51cto.com/images/blog/201904/23/37bcfb09b8b8cebde697769102cef9aa.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>共7台主机，联合实现互联网dns架构<br><img src="https://s1.51cto.com/images/blog/201904/23/a0927242123387df4964be9d5edc1c7b.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>1将客户端dns服务器指向本地dns服务器<br><img src="https://s1.51cto.com/images/blog/201904/23/7197edf6388d27da546e825f8d836630.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>2将网站搭建好</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install httpd</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># cd /var/www/html/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>www/html <span class="meta"># echo 192.168.64.57,hello &gt;index.html</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>www/html <span class="meta"># chmod a+r index.html</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>www/html <span class="meta"># service httpd restart</span></span><br></pre></td></tr></table></figure><ul><li>3客户端测试</li></ul><ul><li>4配置主masterDNS</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.conf</span></span><br><span class="line"><span class="comment">//      listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//      allow-query     &#123; localhost; &#125;;</span></span><br><span class="line">allow-<span class="class">transfer </span>&#123;<span class="number">192.168</span><span class="number">.64</span><span class="number">.47</span>;&#125;; </span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.rfc1912.zones</span></span><br><span class="line">zone <span class="string">"qh.com"</span> <span class="class">IN </span>&#123;</span><br><span class="line">        type master;</span><br><span class="line">        file <span class="string">"qh.com.zone"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># cd /var/named/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># vi qh.com.zone</span></span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@ IN SOA ns1 qh.mail.com. ( <span class="number">1</span> <span class="number">1</span>H <span class="number">10</span>M <span class="number">1</span>D <span class="number">3</span>H )</span><br><span class="line">        NS ns1</span><br><span class="line">        NS ns2</span><br><span class="line"></span><br><span class="line">ns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.37</span></span><br><span class="line">ns2 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.47</span></span><br><span class="line">www A <span class="number">192.168</span><span class="number">.64</span><span class="number">.57</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chgrp named qh.com.zone</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chmod 640 qh.com.zone</span></span><br><span class="line"><span class="meta">#### 语法检查</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># named-checkconf</span></span><br><span class="line"><span class="meta">#### 启动服务</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># systemctl start named.service</span></span><br></pre></td></tr></table></figure><ul><li>5客户端测试master服务器<br><img src="https://s1.51cto.com/images/blog/201904/23/bb046f33cee7c3d4cf7d69d7098020d6.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>6搭建从服务器</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.conf</span></span><br><span class="line"><span class="comment">//      listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//      allow-query     &#123; localhost; &#125;;</span></span><br><span class="line">allow-<span class="class">transfer </span>&#123;none;&#125;; </span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.rfc1912.zones</span></span><br><span class="line">zone <span class="string">"qh.com"</span> &#123;</span><br><span class="line">    type slave;</span><br><span class="line">    <span class="class">masters </span>&#123;<span class="number">192.168</span><span class="number">.64</span><span class="number">.37</span>;&#125;;                                              </span><br><span class="line">    file <span class="string">"slaves/qh.com.slave"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># systemctl start named.service </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># rndc reload                   </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># ll</span></span><br><span class="line">total                                  <span class="meta">#已同步</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> named named <span class="number">269</span> Apr <span class="number">23</span> <span class="number">16</span>:<span class="number">34</span> qh.com.slave</span><br></pre></td></tr></table></figure><ul><li>7测试从服务器<br><img src="https://s1.51cto.com/images/blog/201904/23/387ebb426c0f93635ae1dd16195720f9.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>8配置com域服务器</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.conf</span></span><br><span class="line"><span class="comment">//      listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//      allow-query     &#123; localhost; &#125;;</span></span><br><span class="line">allow-<span class="class">transfer </span>&#123;none;&#125;; </span><br><span class="line">------------------------------------------------</span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.rfc1912.zones</span></span><br><span class="line">zone <span class="string">"com"</span> <span class="class">IN </span>&#123;</span><br><span class="line">        type master;</span><br><span class="line">        file <span class="string">"com.zone"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">---------------------------------------------------------</span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># cd /var/named/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># vim com.zone</span></span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@ IN SOA NS1 qh.mail.com. (<span class="number">1</span> <span class="number">1</span>D <span class="number">1</span>H <span class="number">1</span>W <span class="number">3</span>D )</span><br><span class="line">        NS ns1</span><br><span class="line">qh      NS qhns1</span><br><span class="line">qh      NS qhns2</span><br><span class="line">ns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.27</span></span><br><span class="line">qhns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.37</span>   <span class="meta">#主服务器</span></span><br><span class="line">qhns2 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.47</span>   <span class="meta">#从服务器</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chgrp named com.zone </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chmod g+w com.zone </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># systemctl start named.service </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># rndc reload</span></span><br><span class="line">server reload successful</span><br></pre></td></tr></table></figure><ul><li>9测试 （通过父域192.168.64.27测试）<br><img src="https://s1.51cto.com/images/blog/201904/23/ae666cb5b3f78c9e8a3907fb3835ebc7.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>10搭建根DNS</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.conf</span></span><br><span class="line"><span class="comment">//      listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//      allow-query     &#123; localhost; &#125;;</span></span><br><span class="line">zone <span class="string">"."</span> <span class="class">IN </span>&#123;</span><br><span class="line">        type master;          <span class="meta">#改为master自己做根</span></span><br><span class="line">        file <span class="string">"root.zone"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># cd /var/named/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># vim root.zone</span></span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@ IN SOA ns1 qh.mail.com. (<span class="number">1</span> <span class="number">1</span>D <span class="number">1</span>H <span class="number">1</span>W <span class="number">3</span>D )</span><br><span class="line">        NS ns1</span><br><span class="line">com     NS comns1</span><br><span class="line">ns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.17</span></span><br><span class="line">comns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.27</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chgrp named com.zone </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chmod g+w com.zone </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># systemctl start named.service</span></span><br></pre></td></tr></table></figure><ul><li>11测试（通过主根服务器测试）<br><img src="https://s1.51cto.com/images/blog/201904/23/439afc3698b239beee93e66d027ceab1.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li><li>12配置本地dns服务器</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root:~</span> <span class="comment"># yum install bind</span></span><br><span class="line"><span class="string">root:~</span> <span class="comment"># vi /etc/named.conf</span></span><br><span class="line"><span class="string">//</span>      <span class="string">listen-on</span> <span class="string">port</span> <span class="number">53</span> <span class="string">&#123;</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">;</span> <span class="string">&#125;;</span></span><br><span class="line"><span class="string">//</span>      <span class="string">allow-query</span>     <span class="string">&#123;</span> <span class="string">localhost;</span> <span class="string">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="string">root:/etc/sysconfig/network-scripts</span> <span class="comment"># vi /var/named/named.ca #改为下面配置</span></span><br><span class="line"><span class="string">.</span>                       <span class="number">518400</span>  <span class="string">IN</span>      <span class="string">NS</span>      <span class="string">a.root-servers.net.</span></span><br><span class="line"></span><br><span class="line"><span class="string">a.root-servers.net.</span>     <span class="number">3600000</span> <span class="string">IN</span>      <span class="string">A</span>       <span class="number">192.168</span><span class="number">.64</span><span class="number">.17</span></span><br></pre></td></tr></table></figure><ul><li>13清缓存</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># rndc flush #清理所有dns缓存</span></span><br></pre></td></tr></table></figure><ul><li>14在本地dns修改安全配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root:~</span> <span class="comment"># vi /etc/named.conf </span></span><br><span class="line"><span class="string">dnssec-enable</span> <span class="literal">no</span><span class="string">;</span></span><br><span class="line"><span class="string">dnssec-validation</span> <span class="literal">no</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>15测试<br><img src="https://s1.51cto.com/images/blog/201904/23/0c10bdf2abc4cf1c7b3cd301da6c1dd1.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></li></ul><h2 id="一些过程中可能遇到的错误"><a href="#一些过程中可能遇到的错误" class="headerlink" title="一些过程中可能遇到的错误"></a>一些过程中可能遇到的错误</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root:/var/named <span class="comment"># systemctl start named.service</span></span><br><span class="line">Job <span class="keyword">for</span> named.service failed because <span class="keyword">the</span> control <span class="built_in">process</span> exited <span class="keyword">with</span> error code. See <span class="string">"systemctl status named.service"</span> <span class="keyword">and</span> <span class="string">"journalctl -xe"</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><p>一般可以通过systemctl status named.service -l 命令可以查看当前错误类型<br><img src="https://s1.51cto.com/images/blog/201904/23/1f0d9bb330ea28c452b560a7c5842cf7.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="img"></p><blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dig A example.com</span></span><br><span class="line"><span class="string">;</span> <span class="string">&lt;&lt;&gt;&gt;</span> <span class="string">DiG</span> <span class="number">9.9</span><span class="number">.4</span><span class="string">-RedHat-9.9.4-14.el7</span> <span class="string">&lt;&lt;&gt;&gt;</span> <span class="string">A</span> <span class="string">example.com</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">global options:</span> <span class="string">+cmd</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">Got answer:</span></span><br><span class="line"><span class="string">;;</span> <span class="string">-&gt;&gt;HEADER&lt;&lt;-</span> <span class="attr">opcode:</span> <span class="string">QUERY,</span> <span class="attr">status:</span> <span class="string">NOERROR,</span> <span class="attr">id:</span> <span class="number">30523</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">SERVFAIL:The</span> <span class="string">nameserver</span> <span class="string">encountered</span> <span class="string">a</span> <span class="string">problem</span> <span class="string">while</span> <span class="string">processing</span> <span class="string">the</span> <span class="string">query.</span></span><br><span class="line"><span class="string">•</span> <span class="string">可使用dig</span> <span class="string">+trace排错，可能是网络和防火墙导致</span></span><br><span class="line"><span class="string">NXDOMAIN：The</span> <span class="string">queried</span> <span class="string">name</span> <span class="string">does</span> <span class="string">not</span> <span class="string">exist</span> <span class="string">in</span> <span class="string">the</span> <span class="string">zone.</span></span><br><span class="line"><span class="string">•</span> <span class="string">可能是CNAME对应的A记录不存在导致</span></span><br><span class="line"><span class="string">REFUSED：The</span> <span class="string">nameserver</span> <span class="string">refused</span> <span class="string">the</span> <span class="string">client's</span> <span class="string">DNS</span> <span class="string">request</span> <span class="string">due</span> <span class="string">to</span> <span class="string">policy</span></span><br><span class="line"><span class="string">restrictions.</span></span><br><span class="line"><span class="string">•</span> <span class="string">可能是DNS策略导致</span></span><br><span class="line"><span class="string">•</span> <span class="string">NOERROR不代表没有问题，也可以是过时的记录</span></span><br><span class="line"><span class="string">•查看是否为权威记录，flags:aa标记判断</span></span><br><span class="line"><span class="string">•被删除的记录仍能返回结果，可能是因为*记录存在</span></span><br><span class="line"><span class="string">•如：*.example.com．</span> <span class="string">IN</span> <span class="string">A</span> <span class="number">172.25</span><span class="number">.254</span><span class="number">.254</span></span><br><span class="line"><span class="string">•注意“.”的使用</span></span><br><span class="line"><span class="string">•避免CNAME指向CNAME记录，可能产生回环</span></span><br><span class="line"><span class="string">•est.example.com.</span> <span class="string">IN</span> <span class="string">CNAME</span> <span class="string">lab.example.com.</span></span><br><span class="line"><span class="string">•lab.example.com.</span> <span class="string">IN</span> <span class="string">CNAME</span> <span class="string">test.example.com.</span></span><br><span class="line"><span class="string">•正确配置PTR记录，许多服务依赖PTR，如sshd,MTA</span></span><br><span class="line"><span class="string">•正确配置轮询round-robin记录</span></span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      <categories>
          
          <category> DNS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS模拟互联网架构实验</title>
      <link href="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/"/>
      <url>/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="互联网DNS架构实验"><a href="#互联网DNS架构实验" class="headerlink" title="互联网DNS架构实验"></a>互联网DNS架构实验</h2><h2 id="针对系统学习DNS后的一个实验"><a href="#针对系统学习DNS后的一个实验" class="headerlink" title="针对系统学习DNS后的一个实验"></a>针对系统学习DNS后的一个实验</h2><ul><li><p>架构图<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/37bcfb09b8b8cebde697769102cef9aa.png" alt="img"></p><a id="more"></a></li><li><p>共7台主机，联合实现互联网dns架构<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/a0927242123387df4964be9d5edc1c7b.png" alt="img"></p></li><li><p>1将客户端dns服务器指向本地dns服务器<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/7197edf6388d27da546e825f8d836630.png" alt="img"></p></li><li><p>2将网站搭建好</p></li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install httpd</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># cd /var/www/html/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>www/html <span class="meta"># echo 192.168.64.57,hello &gt;index.html</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>www/html <span class="meta"># chmod a+r index.html</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>www/html <span class="meta"># service httpd restart</span></span><br></pre></td></tr></table></figure><ul><li>3客户端测试</li></ul><ul><li>4配置主masterDNS</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.conf</span></span><br><span class="line"><span class="comment">//      listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//      allow-query     &#123; localhost; &#125;;</span></span><br><span class="line">allow-<span class="class">transfer </span>&#123;<span class="number">192.168</span><span class="number">.64</span><span class="number">.47</span>;&#125;; </span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.rfc1912.zones</span></span><br><span class="line">zone <span class="string">"qh.com"</span> <span class="class">IN </span>&#123;</span><br><span class="line">        type master;</span><br><span class="line">        file <span class="string">"qh.com.zone"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># cd /var/named/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># vi qh.com.zone</span></span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@ IN SOA ns1 qh.mail.com. ( <span class="number">1</span> <span class="number">1</span>H <span class="number">10</span>M <span class="number">1</span>D <span class="number">3</span>H )</span><br><span class="line">        NS ns1</span><br><span class="line">        NS ns2</span><br><span class="line"></span><br><span class="line">ns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.37</span></span><br><span class="line">ns2 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.47</span></span><br><span class="line">www A <span class="number">192.168</span><span class="number">.64</span><span class="number">.57</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chgrp named qh.com.zone</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chmod 640 qh.com.zone</span></span><br><span class="line"><span class="meta">#### 语法检查</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># named-checkconf</span></span><br><span class="line"><span class="meta">#### 启动服务</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># systemctl start named.service</span></span><br></pre></td></tr></table></figure><ul><li>5客户端测试master服务器<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/bb046f33cee7c3d4cf7d69d7098020d6.png" alt="img"></li><li>6搭建从服务器</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.conf</span></span><br><span class="line"><span class="comment">//      listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//      allow-query     &#123; localhost; &#125;;</span></span><br><span class="line">allow-<span class="class">transfer </span>&#123;none;&#125;; </span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.rfc1912.zones</span></span><br><span class="line">zone <span class="string">"qh.com"</span> &#123;</span><br><span class="line">    type slave;</span><br><span class="line">    <span class="class">masters </span>&#123;<span class="number">192.168</span><span class="number">.64</span><span class="number">.37</span>;&#125;;                                              </span><br><span class="line">    file <span class="string">"slaves/qh.com.slave"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># systemctl start named.service </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># rndc reload                   </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named/slaves <span class="meta"># ll</span></span><br><span class="line">total                                  <span class="meta">#已同步</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> named named <span class="number">269</span> Apr <span class="number">23</span> <span class="number">16</span>:<span class="number">34</span> qh.com.slave</span><br></pre></td></tr></table></figure><ul><li>7测试从服务器<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/387ebb426c0f93635ae1dd16195720f9.png" alt="img"></li><li>8配置com域服务器</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.conf</span></span><br><span class="line"><span class="comment">//      listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//      allow-query     &#123; localhost; &#125;;</span></span><br><span class="line">allow-<span class="class">transfer </span>&#123;none;&#125;; </span><br><span class="line">------------------------------------------------</span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.rfc1912.zones</span></span><br><span class="line">zone <span class="string">"com"</span> <span class="class">IN </span>&#123;</span><br><span class="line">        type master;</span><br><span class="line">        file <span class="string">"com.zone"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">---------------------------------------------------------</span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># cd /var/named/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># vim com.zone</span></span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@ IN SOA NS1 qh.mail.com. (<span class="number">1</span> <span class="number">1</span>D <span class="number">1</span>H <span class="number">1</span>W <span class="number">3</span>D )</span><br><span class="line">        NS ns1</span><br><span class="line">qh      NS qhns1</span><br><span class="line">qh      NS qhns2</span><br><span class="line">ns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.27</span></span><br><span class="line">qhns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.37</span>   <span class="meta">#主服务器</span></span><br><span class="line">qhns2 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.47</span>   <span class="meta">#从服务器</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chgrp named com.zone </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chmod g+w com.zone </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># systemctl start named.service </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># rndc reload</span></span><br><span class="line">server reload successful</span><br></pre></td></tr></table></figure><ul><li>9测试 （通过父域192.168.64.27测试）<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/ae666cb5b3f78c9e8a3907fb3835ebc7.png" alt="img"></li><li>10搭建根DNS</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># yum install bind</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># vi /etc/named.conf</span></span><br><span class="line"><span class="comment">//      listen-on port 53 &#123; 127.0.0.1; &#125;;</span></span><br><span class="line"><span class="comment">//      allow-query     &#123; localhost; &#125;;</span></span><br><span class="line">zone <span class="string">"."</span> <span class="class">IN </span>&#123;</span><br><span class="line">        type master;          <span class="meta">#改为master自己做根</span></span><br><span class="line">        file <span class="string">"root.zone"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># cd /var/named/</span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># vim root.zone</span></span><br><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@ IN SOA ns1 qh.mail.com. (<span class="number">1</span> <span class="number">1</span>D <span class="number">1</span>H <span class="number">1</span>W <span class="number">3</span>D )</span><br><span class="line">        NS ns1</span><br><span class="line">com     NS comns1</span><br><span class="line">ns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.17</span></span><br><span class="line">comns1 A <span class="number">192.168</span><span class="number">.64</span><span class="number">.27</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chgrp named com.zone </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># chmod g+w com.zone </span></span><br><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># systemctl start named.service</span></span><br></pre></td></tr></table></figure><ul><li>11测试（通过主根服务器测试）<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/439afc3698b239beee93e66d027ceab1.png" alt="img"></li><li>12配置本地dns服务器</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root:~</span> <span class="comment"># yum install bind</span></span><br><span class="line"><span class="string">root:~</span> <span class="comment"># vi /etc/named.conf</span></span><br><span class="line"><span class="string">//</span>      <span class="string">listen-on</span> <span class="string">port</span> <span class="number">53</span> <span class="string">&#123;</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">;</span> <span class="string">&#125;;</span></span><br><span class="line"><span class="string">//</span>      <span class="string">allow-query</span>     <span class="string">&#123;</span> <span class="string">localhost;</span> <span class="string">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="string">root:/etc/sysconfig/network-scripts</span> <span class="comment"># vi /var/named/named.ca #改为下面配置</span></span><br><span class="line"><span class="string">.</span>                       <span class="number">518400</span>  <span class="string">IN</span>      <span class="string">NS</span>      <span class="string">a.root-servers.net.</span></span><br><span class="line"></span><br><span class="line"><span class="string">a.root-servers.net.</span>     <span class="number">3600000</span> <span class="string">IN</span>      <span class="string">A</span>       <span class="number">192.168</span><span class="number">.64</span><span class="number">.17</span></span><br></pre></td></tr></table></figure><ul><li>13清缓存</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span><span class="meta-keyword">/var/</span>named <span class="meta"># rndc flush #清理所有dns缓存</span></span><br></pre></td></tr></table></figure><ul><li>14在本地dns修改安全配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root:~</span> <span class="comment"># vi /etc/named.conf </span></span><br><span class="line"><span class="string">dnssec-enable</span> <span class="literal">no</span><span class="string">;</span></span><br><span class="line"><span class="string">dnssec-validation</span> <span class="literal">no</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>15测试<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/0c10bdf2abc4cf1c7b3cd301da6c1dd1.png" alt="img"></li></ul><h2 id="一些过程中可能遇到的错误"><a href="#一些过程中可能遇到的错误" class="headerlink" title="一些过程中可能遇到的错误"></a>一些过程中可能遇到的错误</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root:/var/named <span class="comment"># systemctl start named.service</span></span><br><span class="line">Job <span class="keyword">for</span> named.service failed because <span class="keyword">the</span> control <span class="built_in">process</span> exited <span class="keyword">with</span> error code. See <span class="string">"systemctl status named.service"</span> <span class="keyword">and</span> <span class="string">"journalctl -xe"</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><p>一般可以通过systemctl status named.service -l 命令可以查看当前错误类型<br><img src="/2020/03/10/%E7%BD%91%E7%BB%9C/DNS%E6%A8%A1%E6%8B%9F%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/1f0d9bb330ea28c452b560a7c5842cf7.png" alt="img"></p><blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dig A example.com</span></span><br><span class="line"><span class="string">;</span> <span class="string">&lt;&lt;&gt;&gt;</span> <span class="string">DiG</span> <span class="number">9.9</span><span class="number">.4</span><span class="string">-RedHat-9.9.4-14.el7</span> <span class="string">&lt;&lt;&gt;&gt;</span> <span class="string">A</span> <span class="string">example.com</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">global options:</span> <span class="string">+cmd</span></span><br><span class="line"><span class="string">;;</span> <span class="attr">Got answer:</span></span><br><span class="line"><span class="string">;;</span> <span class="string">-&gt;&gt;HEADER&lt;&lt;-</span> <span class="attr">opcode:</span> <span class="string">QUERY,</span> <span class="attr">status:</span> <span class="string">NOERROR,</span> <span class="attr">id:</span> <span class="number">30523</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">SERVFAIL:The</span> <span class="string">nameserver</span> <span class="string">encountered</span> <span class="string">a</span> <span class="string">problem</span> <span class="string">while</span> <span class="string">processing</span> <span class="string">the</span> <span class="string">query.</span></span><br><span class="line"><span class="string">•</span> <span class="string">可使用dig</span> <span class="string">+trace排错，可能是网络和防火墙导致</span></span><br><span class="line"><span class="string">NXDOMAIN：The</span> <span class="string">queried</span> <span class="string">name</span> <span class="string">does</span> <span class="string">not</span> <span class="string">exist</span> <span class="string">in</span> <span class="string">the</span> <span class="string">zone.</span></span><br><span class="line"><span class="string">•</span> <span class="string">可能是CNAME对应的A记录不存在导致</span></span><br><span class="line"><span class="string">REFUSED：The</span> <span class="string">nameserver</span> <span class="string">refused</span> <span class="string">the</span> <span class="string">client's</span> <span class="string">DNS</span> <span class="string">request</span> <span class="string">due</span> <span class="string">to</span> <span class="string">policy</span></span><br><span class="line"><span class="string">restrictions.</span></span><br><span class="line"><span class="string">•</span> <span class="string">可能是DNS策略导致</span></span><br><span class="line"><span class="string">•</span> <span class="string">NOERROR不代表没有问题，也可以是过时的记录</span></span><br><span class="line"><span class="string">•查看是否为权威记录，flags:aa标记判断</span></span><br><span class="line"><span class="string">•被删除的记录仍能返回结果，可能是因为*记录存在</span></span><br><span class="line"><span class="string">•如：*.example.com．</span> <span class="string">IN</span> <span class="string">A</span> <span class="number">172.25</span><span class="number">.254</span><span class="number">.254</span></span><br><span class="line"><span class="string">•注意“.”的使用</span></span><br><span class="line"><span class="string">•避免CNAME指向CNAME记录，可能产生回环</span></span><br><span class="line"><span class="string">•est.example.com.</span> <span class="string">IN</span> <span class="string">CNAME</span> <span class="string">lab.example.com.</span></span><br><span class="line"><span class="string">•lab.example.com.</span> <span class="string">IN</span> <span class="string">CNAME</span> <span class="string">test.example.com.</span></span><br><span class="line"><span class="string">•正确配置PTR记录，许多服务依赖PTR，如sshd,MTA</span></span><br><span class="line"><span class="string">•正确配置轮询round-robin记录</span></span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> DNS </tag>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible常用模块</title>
      <link href="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/"/>
      <url>/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<blockquote><h5 id="playbook的模块与在ansible命令行下使用的模块有一些不同。这主要是因为在playbook中会使用到一些facts变量和一些通过setup模块从远程主机上获取到的变量。有些模块没法在命令行下运行，就是因为它们需要这些变量。而且即使那些可以在命令行下工作的模块也可以通过playbook的模块获取一些更高级的功能。"><a href="#playbook的模块与在ansible命令行下使用的模块有一些不同。这主要是因为在playbook中会使用到一些facts变量和一些通过setup模块从远程主机上获取到的变量。有些模块没法在命令行下运行，就是因为它们需要这些变量。而且即使那些可以在命令行下工作的模块也可以通过playbook的模块获取一些更高级的功能。" class="headerlink" title="playbook的模块与在ansible命令行下使用的模块有一些不同。这主要是因为在playbook中会使用到一些facts变量和一些通过setup模块从远程主机上获取到的变量。有些模块没法在命令行下运行，就是因为它们需要这些变量。而且即使那些可以在命令行下工作的模块也可以通过playbook的模块获取一些更高级的功能。"></a>playbook的模块与在ansible命令行下使用的模块有一些不同。这主要是因为在playbook中会使用到一些facts变量和一些通过setup模块从远程主机上获取到的变量。有些模块没法在命令行下运行，就是因为它们需要这些变量。而且即使那些可以在命令行下工作的模块也可以通过playbook的模块获取一些更高级的功能。</h5><a id="more"></a></blockquote><h1 id="1、template"><a href="#1、template" class="headerlink" title="1、template"></a>1、template</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line">在实际应用中，我们的配置文件有些地方可能会根据远程主机的配置的不同而有稍许的不同，template可以使用变量来接</span><br><span class="line"></span><br><span class="line">常用参数：</span><br><span class="line"></span><br><span class="line">backup：如果原目标文件存在，则先备份目标文件</span><br><span class="line"></span><br><span class="line">dest：目标文件路径</span><br><span class="line"></span><br><span class="line">force：是否强制覆盖，默认为<span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">group：目标文件属组</span><br><span class="line"></span><br><span class="line">mode：目标文件的权限</span><br><span class="line"></span><br><span class="line">owner：目标文件属主</span><br><span class="line"></span><br><span class="line">src：源模板文件路径</span><br><span class="line"></span><br><span class="line">validate：在复制之前通过命令验证目标文件，如果验证通过则复制</span><br><span class="line"></span><br><span class="line">官方简单示例：</span><br><span class="line"></span><br><span class="line">- template: <span class="attribute">src</span>=/mytemplates/foo.j2 <span class="attribute">dest</span>=/etc/file.conf <span class="attribute">owner</span>=bin <span class="attribute">group</span>=wheel <span class="attribute">mode</span>=0644</span><br><span class="line">- template: <span class="attribute">src</span>=/mytemplates/foo.j2 <span class="attribute">dest</span>=/etc/file.conf <span class="attribute">owner</span>=bin <span class="attribute">group</span>=wheel <span class="attribute">mode</span>=”u=rw,g=r,o=r”</span><br><span class="line">- template: <span class="attribute">src</span>=/mine/sudoers <span class="attribute">dest</span>=/etc/sudoers <span class="attribute">validate</span>=’visudo -cf %s’</span><br><span class="line">  named.conf配置文件的jinja2模板示例：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">options &#123;</span><br><span class="line">listen-on<span class="built_in"> port </span>53 &#123;</span><br><span class="line">127.0.0.1;</span><br><span class="line">&#123;% <span class="keyword">for</span><span class="built_in"> ip </span><span class="keyword">in</span> ansible_all_ipv4_addresses %&#125;</span><br><span class="line">&#123;&#123;<span class="built_in"> ip </span>&#125;&#125;;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">&#125;;</span><br><span class="line">listen-on-v6<span class="built_in"> port </span>53 &#123; ::1; &#125;;</span><br><span class="line">directory <span class="string">"/var/named"</span>;</span><br><span class="line">dump-file <span class="string">"/var/named/data/cache_dump.db"</span>;</span><br><span class="line">statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</span><br><span class="line">memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">zone <span class="string">"."</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">type hint;</span><br><span class="line">file <span class="string">"named.ca"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">include <span class="string">"/etc/named.rfc1912.zones"</span>;</span><br><span class="line">include <span class="string">"/etc/named.root.key"</span>;</span><br><span class="line">&#123;# Variables <span class="keyword">for</span> zone<span class="built_in"> config </span>#&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> <span class="string">'authorativenames'</span> <span class="keyword">in</span> group_names %&#125;</span><br><span class="line">&#123;% <span class="builtin-name">set</span> zone_type = <span class="string">'master'</span> %&#125;</span><br><span class="line">&#123;% <span class="builtin-name">set</span> zone_dir = <span class="string">'data'</span> %&#125;</span><br><span class="line">&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">&#123;% <span class="builtin-name">set</span> zone_type = <span class="string">'slave'</span> %&#125;</span><br><span class="line">&#123;% <span class="builtin-name">set</span> zone_dir = <span class="string">'slaves'</span> %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">zone <span class="string">"internal.example.com"</span> <span class="keyword">IN</span> &#123;</span><br><span class="line">type &#123;&#123; zone_type &#125;&#125;;</span><br><span class="line">file <span class="string">"&#123;&#123; zone_dir &#125;&#125;/internal.example.com"</span>;</span><br><span class="line">&#123;% <span class="keyword">if</span> <span class="string">'authorativenames'</span> <span class="keyword">not</span> <span class="keyword">in</span> group_names %&#125;</span><br><span class="line">masters &#123; 192.168.2.2; &#125;;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#125;;</span><br><span class="line">playbook的引用该模板配置文件的方法示例：</span><br><span class="line">– name: Setup BIND</span><br><span class="line">host: allnames</span><br><span class="line">tasks:</span><br><span class="line">– name: configure BIND</span><br><span class="line">template: <span class="attribute">src</span>=templates/named.conf.j2 <span class="attribute">dest</span>=/etc/named.conf <span class="attribute">owner</span>=root <span class="attribute">group</span>=named <span class="attribute">mode</span>=0640</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、set_fact</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set_fact模块可以自定义facts，这些自定义的facts可以通过template或者变量的方式在playbook中使用。如果你想要获取一个进程使用的内存的百分比，则必须通过set_fact来进行计算之后得出其值，并将其值在playbook中引用。</span><br><span class="line">下面是一个配置mysql innodb buffer size的示例：</span><br><span class="line">– name: Configure MySQL</span><br><span class="line">hosts: mysqlservers</span><br><span class="line">tasks:</span><br><span class="line">– name: install MySql</span><br><span class="line">yum: <span class="attribute">name</span>=mysql-server <span class="attribute">state</span>=installed</span><br><span class="line">– name: Calculate InnoDB buffer<span class="built_in"> pool </span>size</span><br><span class="line">set_fact: <span class="attribute">innodb_buffer_pool_size_mb</span>=”&#123;&#123; ansible_memtotal_mb / 2 &#125;&#125;”</span><br><span class="line">– name: Configure MySQL</span><br><span class="line">template: <span class="attribute">src</span>=templates/my.cnf <span class="attribute">dest</span>=/etc/my.cnf <span class="attribute">owner</span>=root <span class="attribute">group</span>=root <span class="attribute">mode</span>=0644</span><br><span class="line">notify: restart mysql</span><br><span class="line">– name: Start MySQL</span><br><span class="line">service: <span class="attribute">name</span>=mysqld <span class="attribute">state</span>=started <span class="attribute">enabled</span>=<span class="literal">yes</span></span><br><span class="line">handlers:</span><br><span class="line">– name: restart mysql</span><br><span class="line">service: <span class="attribute">name</span>=mysqld <span class="attribute">state</span>=restarted</span><br><span class="line"></span><br><span class="line">my.cnf的配置示例：</span><br><span class="line"></span><br><span class="line">&#123;&#123; ansible_managed &#125;&#125;</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"><span class="attribute">datadir</span>=/var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="attribute">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">Disabling symbolic-links is recommended <span class="keyword">to</span> prevent assorted</span><br><span class="line"></span><br><span class="line">security risks</span><br><span class="line"></span><br><span class="line"><span class="attribute">symbolic-links</span>=0</span><br><span class="line"></span><br><span class="line">Configure the buffer pool</span><br><span class="line"></span><br><span class="line">innodb_buffer_pool_size = &#123;&#123; innodb_buffer_pool_size_mb|int &#125;&#125;M</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line"></span><br><span class="line"><span class="attribute">log-error</span>=/var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"><span class="attribute">pid-file</span>=/var/run/mysqld/mysqld.pid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 3、pause</span></span><br><span class="line"></span><br><span class="line">在playbook执行的过程中暂停一定时间或者提示用户进行某些操作</span><br><span class="line"></span><br><span class="line">常用参数：</span><br><span class="line"></span><br><span class="line">minutes：暂停多少分钟</span><br><span class="line"></span><br><span class="line">seconds：暂停多少秒</span><br><span class="line"></span><br><span class="line">prompt：打印一串信息提示用户操作</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line">- name: wait on<span class="built_in"> user </span>input</span><br><span class="line"></span><br><span class="line">  pause: <span class="attribute">prompt</span>=”Warning! Detected slight issue. ENTER <span class="keyword">to</span> continue CTRL-C a <span class="keyword">to</span> quit”</span><br><span class="line"></span><br><span class="line">  - name: timed wait</span><br><span class="line"></span><br><span class="line">  pause: <span class="attribute">seconds</span>=30</span><br><span class="line"></span><br><span class="line"><span class="comment">## 4、wait_for</span></span><br><span class="line"></span><br><span class="line">在playbook的执行过程中，等待某些操作完成以后再进行后续操作</span><br><span class="line"></span><br><span class="line">常用参数：</span><br><span class="line"></span><br><span class="line">connect_timeout：在下一个任务执行之前等待连接的超时时间</span><br><span class="line"></span><br><span class="line">delay：等待一个端口或者文件或者连接到指定的状态时，默认超时时间为300秒，在这等待的300s的时间里，wait_for模块会一直轮询指定的对象是否到达指定的状态，delay即为多长时间轮询一次状态。</span><br><span class="line"></span><br><span class="line">host：wait_for模块等待的主机的地址，默认为127.0.0.1</span><br><span class="line"></span><br><span class="line">port：wait_for模块待待的主机的端口</span><br><span class="line"></span><br><span class="line">path：文件路径，只有当这个文件存在时，下一任务才开始执行，即等待该文件创建完成</span><br><span class="line"></span><br><span class="line">state：等待的状态，即等待的文件或端口或者连接状态达到指定的状态时，下一个任务开始执行。当等的对象为端口时，状态有started，stoped，即端口已经监听或者端口已经关闭；当等待的对象为文件时，状态有present或者started，absent，即文件已创建或者删除；当等待的对象为一个连接时，状态有drained，即连接已建立。默认为started</span><br><span class="line"></span><br><span class="line">timeout：wait_for的等待的超时时间,默认为300秒</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line">- wait_for: <span class="attribute">port</span>=8080 <span class="attribute">state</span>=started #等待8080端口已正常监听，才开始下一个任务，直到超时</span><br><span class="line"></span><br><span class="line">- wait_for: <span class="attribute">port</span>=8000 <span class="attribute">delay</span>=10 #等待8000端口正常监听，每隔10s检查一次，直至等待超时</span><br><span class="line"></span><br><span class="line">- wait_for: <span class="attribute">host</span>=0.0.0.0 <span class="attribute">port</span>=8000 <span class="attribute">delay</span>=10 <span class="attribute">state</span>=drained #等待8000端口直至有连接建立</span><br><span class="line"></span><br><span class="line">- wait_for: <span class="attribute">host</span>=0.0.0.0 <span class="attribute">port</span>=8000 <span class="attribute">state</span>=drained <span class="attribute">exclude_hosts</span>=10.2.1.2,10.2.1.3 #等待8000端口有连接建立，如果连接来自10.2.1.2或者10.2.1.3，则忽略。</span><br><span class="line"></span><br><span class="line">- wait_for: <span class="attribute">path</span>=/tmp/foo #等待/tmp/foo文件已创建</span><br><span class="line"></span><br><span class="line">- wait_for: <span class="attribute">path</span>=/tmp/foo <span class="attribute">search_regex</span>=completed #等待/tmp/foo文件已创建，而且该文件中需要包含completed字符串</span><br><span class="line"></span><br><span class="line">- wait_for: <span class="attribute">path</span>=/var/lock/file.lock <span class="attribute">state</span>=absent #等待/var/lock/file.lock被删除</span><br><span class="line"></span><br><span class="line">- wait_for: <span class="attribute">path</span>=/proc/3466/status <span class="attribute">state</span>=absent #等待指定的进程被销毁</span><br><span class="line"></span><br><span class="line">- local_action: wait_for <span class="attribute">port</span>=22 <span class="attribute">host</span>=”&#123;&#123; ansible_ssh_host | default(inventory_hostname) &#125;&#125;” <span class="attribute">search_regex</span>=OpenSSH <span class="attribute">delay</span>=10 #等待openssh启动，10s检查一次</span><br><span class="line"></span><br><span class="line"><span class="comment">## 5、assemble</span></span><br><span class="line"></span><br><span class="line">用于组装文件，即将多个零散的文件，合并一个大文件</span><br><span class="line"></span><br><span class="line">常用参数：</span><br><span class="line"></span><br><span class="line">src：原文件(即零散文件)的路径</span><br><span class="line"></span><br><span class="line">dest：合并后的大文件路径</span><br><span class="line"></span><br><span class="line">group：合并后的大文件的属组</span><br><span class="line"></span><br><span class="line">owner：合并后的大文件的属主</span><br><span class="line"></span><br><span class="line">mode：合并后的大文件的权限</span><br><span class="line"></span><br><span class="line">validate：与template的validate相同，指定命令验证文件</span><br><span class="line"></span><br><span class="line">ignore_hidden：组装时，是否忽略隐藏文件，默认为<span class="literal">no</span>，该参数在2.0版本中新增</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>hosts: all</p><p>tasks:</p><ul><li><p>name: Make a Directory in /opt</p><p>file: path=/opt/sshkeys state=directory owner=root group=root mode=0700</p></li><li><p>name: Copy SSH keys over</p><p>copy: src=keys/.pub dest=/opt/sshkeys/.pub owner=root group=root mode=0600</p><p>with_items:</p><ul><li><p>dan</p></li><li><p>kate</p></li><li><p>mal</p></li></ul></li><li><p>name: Make the root users SSH config directory</p><p>file: path=/root/.ssh state=directory owner=root group=root mode=0700</p></li><li><p>name: Build the authorized_keys file</p><p>assemble: src=/opt/sshkeys/ dest=/root/.ssh/authorized_keys owner=root group=root mode=0700 #将/opt/sshkeys目录里所有的文件合并到/root/.ssh/authorized_keys一个文件中<br>​```</p></li></ul><h2 id="6、add-host"><a href="#6、add-host" class="headerlink" title="6、add_host"></a>6、add_host</h2><p>在playbook执行的过程中，动态的添加主机到指定的主机组中</p><p>常用参数：</p><p>groups：添加主机至指定的组</p><p>name：要添加的主机名或IP地址</p><p>示例：</p><ul><li><p>name: add a host to group webservers</p><p>hosts: webservers</p><p>tasks:</p><ul><li>add_host name= group=webservers foo=42 #添加主机到webservers组中，主机的变量foo的值为42</li></ul></li></ul><h2 id="7、group-by"><a href="#7、group-by" class="headerlink" title="7、group_by"></a>7、group_by</h2><p>在playbook执行的过程中，动态的创建主机组</p><p>示例：</p><ul><li><p>name: Create operating system group</p><p>hosts: all</p><p>tasks:</p><ul><li>group_by: key=os_ #在playbook中设置一个新的主机组</li></ul></li><li><p>name: Run on CentOS hosts only</p><p>hosts: os_CentOS</p><p>tasks:</p><ul><li><p>name: Install Apache</p><p>yum: name=httpd state=latest</p></li></ul></li><li><p>name: Run on Ubuntu hosts only</p><p>hosts: os_Ubuntu</p><p>tasks:</p><ul><li><p>name: Install Apache</p><p>apt: pkg=apache2 state=latest</p></li></ul></li></ul><h2 id="8、debug"><a href="#8、debug" class="headerlink" title="8、debug"></a>8、debug</h2><p>调试模块，用于在调试中输出信息</p><p>常用参数：</p><p>msg：调试输出的消息</p><p>var：将某个任务执行的输出作为变量传递给debug模块，debug会直接将其打印输出</p><p>verbosity：debug的级别</p><p>示例：</p><p>​```<br>Example that prints the loopback address and gateway for each host- debug: msg=”System  has uuid ”</p><ul><li><p>debug: msg=”System  has gateway ”</p><p>when: ansible_default_ipv4.gateway is defined</p></li><li><p>shell: /usr/bin/uptime<br>register: result</p></li><li><p>debug: var=result verbosity=2 #直接将上一条指令的结果作为变量传递给var，由debug打印出result的值</p></li><li><p>name: Display all variables/facts known for a host<br>debug: var=hostvars[inventory_hostname] verbosity=4<br>​```</p></li></ul><h2 id="9、fail"><a href="#9、fail" class="headerlink" title="9、fail"></a>9、fail</h2><p>用于终止当前playbook的执行，通常与条件语句组合使用，当满足条件时，终止当前play的运行。可以直接由failed_when取代。</p><p>选项只有一个：</p><p>msg：终止前打印出信息</p><p>示例：</p><ul><li>fail: msg=”The system may not be provisioned according to the CMDB status.”<br>when: cmdb_status != “to-be-staged”<pre><code></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于YUM安装与源码编译或二进制多实例安装Mariadb.mysql</title>
      <link href="/2020/03/10/Mysql/%E5%9F%BA%E4%BA%8EYUM%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%88%96%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%A4%9A%E5%AE%9E%E4%BE%8B%E5%AE%89%E8%A3%85Mariadb-mysql/"/>
      <url>/2020/03/10/Mysql/%E5%9F%BA%E4%BA%8EYUM%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%88%96%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%A4%9A%E5%AE%9E%E4%BE%8B%E5%AE%89%E8%A3%85Mariadb-mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="基于YUM"><a href="#基于YUM" class="headerlink" title="基于YUM"></a>基于YUM</h2><ul><li>1 安装</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> mariadb</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>2 创建多实例对应的目录结构</li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> /mysql/&#123;<span class="number">3306</span>,<span class="number">3307</span>,<span class="number">3308</span>&#125;/&#123;data,etc,<span class="keyword">socket</span>,<span class="keyword">log</span>,bin,pid&#125; -pv</span><br><span class="line"><span class="keyword">chown</span> -R mysql.mysql /mysql</span><br></pre></td></tr></table></figure><ul><li>3 创建多实例的数据库文件</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> mysql_install_db <span class="attribute">--datadir</span>=/mysql/3306/data/ <span class="attribute">--user</span>=mysql</span><br><span class="line"> mysql_install_db <span class="attribute">--datadir</span>=/mysql/3307/data/ <span class="attribute">--user</span>=mysql</span><br><span class="line"> mysql_install_db <span class="attribute">--datadir</span>=/mysql/3308/data/ <span class="attribute">--user</span>=mysql</span><br><span class="line">`</span><br></pre></td></tr></table></figure><ul><li><p>4 创建对应配置文件 </p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cp <span class="meta-keyword">/etc/</span>my.cnf <span class="meta-keyword">/mysql/</span><span class="number">3306</span>/etc</span><br><span class="line">vim <span class="meta-keyword">/mysql/</span><span class="number">3306</span><span class="meta-keyword">/etc/</span>my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">port=<span class="number">3306</span> 加一行</span><br><span class="line">datadir=<span class="meta-keyword">/mysql/</span><span class="number">3306</span>/data</span><br><span class="line">socket=<span class="meta-keyword">/mysql/</span><span class="number">3306</span><span class="meta-keyword">/socket/</span>mysql.sock</span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=<span class="meta-keyword">/mysql/</span><span class="number">3306</span><span class="meta-keyword">/log/</span>mariadb.log</span><br><span class="line">pid-file=<span class="meta-keyword">/mysql/</span><span class="number">3306</span><span class="meta-keyword">/pid/</span>mariadb.pid</span><br></pre></td></tr></table></figure><p>cp /mysql/3306/etc/my.cnf  /mysql/3307/etc/my.cnf<br>/mysql/3307/etc/my.cnf 修改<br>cp /mysql/3306/etc/my.cnf  /mysql/3308/etc/my.cnf<br>/mysql/3308/etc/my.cnf 修改</p></li><li><p>5 准备各实例的启动脚本<br>vi /mysql/{3306,3307,3308}/bin/mysqld<br>cat /mysq/3306/bin/mysqld<br>#!/bin/bash<br>port=3306<br>mysql_user=”root”<br>mysql_pwd=”centos”<br>cmd_path=”/usr/bin”<br>mysql_basedir=”/mysql”<br>mysql_sock=”${mysql_basedir}/${port}/socket/mysql.sock”</p></li></ul><p>function_start_mysql()<br>{<br>    if [ ! -e “$mysql_sock” ];then<br>      printf “Starting MySQL…\n”<br>      ${cmd_path}/mysqld_safe –defaults-file=${mysql_basedir}/${port}/etc/my.cnf  &amp;&gt; /dev/null  &amp;<br>    else<br>      printf “MySQL is running…\n”<br>      exit<br>    fi<br>}</p><p>function_stop_mysql()<br>{<br>    if [ ! -e “$mysql_sock” ];then<br>       printf “MySQL is stopped…\n”<br>       exit<br>    else<br>       printf “Stoping MySQL…\n”<br>       ${cmd_path}/mysqladmin -u ${mysql_user} -p${mysql_pwd} -S ${mysql_sock} shutdown<br>   fi<br>}</p><p>function_restart_mysql()<br>{<br>    printf “Restarting MySQL…\n”<br>    function_stop_mysql<br>    sleep 2<br>    function_start_mysql<br>}</p><p>case $1 in<br>start)<br>    function_start_mysql<br>;;<br>stop)<br>    function_stop_mysql<br>;;<br>restart)<br>    function_restart_mysql<br>;;<br>*)<br>    printf “Usage: ${mysql_basedir}/${port}/bin/mysqld {start|stop|restart}\n”<br>esac</p><ul><li><p>改权限<br>chmod +x /mysql/{3306,3307,3308}/bin/mysqld </p></li><li><p>6 启动和关闭实例<br>/mysql/{3306,3307,3308}/bin/mysqld start<br>/mysql/{3306,3307,3308}/bin/mysqld stop  </p></li><li><p>7 测试连接<br>mysql -S /mysql/{3306,3307,3308}/socket/mysql.sock</p></li><li><p>8 安全加固<br>mysqladmin  -S /mysql/{3306,3307,3308}/socket/mysql.sock   password ‘centos’<br>vi /mysql/{3306,3307,3308}/bin/mysqld  加上对应centos口令</p></li></ul><h2 id="二进制的安装"><a href="#二进制的安装" class="headerlink" title="二进制的安装"></a>二进制的安装</h2><ul><li>1 准备用户和组<br>groupadd -r -g 336 mysql<br>useradd -r -g mysql -u 336 -s /sbin/nologin -d /data/mysql mysql<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">* 2 准备二进制程序文件和相关文件属性</span><br><span class="line"></span><br><span class="line">tar xvf mariadb-10.2.23-linux-x86_64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;</span><br><span class="line"></span><br><span class="line">cd  &#x2F;usr&#x2F;local&#x2F;</span><br><span class="line"></span><br><span class="line">ln -s mariadb-10.2.23-linux-x86_64&#x2F; mysql</span><br><span class="line"></span><br><span class="line">chown -R root.root &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;</span><br><span class="line">* 3 PATH变量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &#x2F;etc&#x2F;profile.d&#x2F;mysql.sh</span><br><span class="line"></span><br><span class="line">PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin:$PATH</span><br><span class="line">* 4 准备数据库数据目录和数据--改成逻辑卷</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir &#x2F;data&#x2F;mysql -pv</span><br><span class="line"></span><br><span class="line">chown mysql.mysql &#x2F;data&#x2F;mysql&#x2F;</span><br><span class="line"></span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line"></span><br><span class="line">.&#x2F;scripts&#x2F;mysql_install_db --datadir&#x3D;&#x2F;data&#x2F;mysql --user&#x3D;mysql</span><br><span class="line">* 5 准备Mysql的服务器端的配置文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir &#x2F;etc&#x2F;mysql</span><br><span class="line"></span><br><span class="line">cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;my-huge.cnf &#x2F;etc&#x2F;mysql&#x2F;my.cnf</span><br><span class="line">vim &#x2F;etc&#x2F;mysql&#x2F;my.cnf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql 加一行</span><br><span class="line">* 6 准备服务启动脚本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;mysql.server  &#x2F;etc&#x2F;init.d&#x2F;mysqld</span><br><span class="line"></span><br><span class="line">chkconfig --add mysqld</span><br><span class="line"></span><br><span class="line">service mysqld start</span><br><span class="line">* 7 安全加固</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql_secure_installation</span><br><span class="line">* 8 测试连接</span><br><span class="line">mysql -uroot -ppassword</span><br></pre></td></tr></table></figure></li></ul><h2 id="源码编译安装MySQL"><a href="#源码编译安装MySQL" class="headerlink" title="源码编译安装MySQL"></a>源码编译安装MySQL</h2><ul><li>准备编译环境</li></ul><p>×××：<br> <a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><ul><li>创建<code>mysql</code>组与用户</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/groupadd -g 366 -r mysql</span><br><span class="line">/usr/sbin/useradd -c "MySQL" -u 366 -g mysql -s /sbin/nologin -r -d /data/mysql mysql</span><br></pre></td></tr></table></figure><ul><li>准备数据库目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/mysql -pv</span><br><span class="line"> chown mysql.mysql /data/mysql</span><br></pre></td></tr></table></figure><ul><li>准备源码文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xf mariadb-10.2.23.tar.gz</span><br><span class="line">cd mariadb-10.2.23</span><br></pre></td></tr></table></figure><ul><li>预编译</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cmake . \</span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/app/mysql \</span><br><span class="line">-DMYSQL_DATADIR=/data/mysql/ \</span><br><span class="line">-DSYSCONFDIR=/etc/mysql \</span><br><span class="line">-DMYSQL_USER=mysql \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_ARCHIVE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITHOUT_MROONGA_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_DEBUG=0 \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DWITH_ZLIB=system \</span><br><span class="line">-DWITH_LIBWRAP=0 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/data/mysql/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci</span><br></pre></td></tr></table></figure><ul><li>编译安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j 8</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>导出环境变量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 'PATH=/usr/local/mysql/bin:$PATH' &gt; /etc/profile.d/mysql.sh</span><br><span class="line">source /etc/profile.d/mysql.sh</span><br></pre></td></tr></table></figure><ul><li>初始化数据库</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/mysql</span><br><span class="line">scripts/mysql_install_db --user=mysql --datadir=/data/mysql</span><br></pre></td></tr></table></figure><ul><li>准备配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp support-files/my-innodb-heavy-4G.cnf /etc/my.cnf.d/my.cnf</span><br><span class="line">vim /etc/my.cnf.d/my.cnf   #[mysqld] 配置段中中加入如下内容</span><br><span class="line">datadir = /data/mysql</span><br><span class="line">innodb_file_per_table = on</span><br><span class="line">skip_name_resolve = on</span><br></pre></td></tr></table></figure><ul><li>准备服务脚本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp support-files/mysql.server /etc/rc.d/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br></pre></td></tr></table></figure><ul><li>启动服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><ul><li>安全初始化</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mariadb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>percona-xtrabackup实现数据库完全，增量的备份和还原</title>
      <link href="/2020/03/10/Mysql/percona-xtrabackup%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%EF%BC%8C%E5%A2%9E%E9%87%8F%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/"/>
      <url>/2020/03/10/Mysql/percona-xtrabackup%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%EF%BC%8C%E5%A2%9E%E9%87%8F%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="注意：版本变化"><a href="#注意：版本变化" class="headerlink" title="注意：版本变化"></a>注意：版本变化</h3><blockquote><p>xtrabackup版本升级到2.4后，相比之前的2.1有了比较大的变化：<br>innobackupex 功能全部集成到 xtrabackup 里面，只有一个 binary程序，另外为了兼容考虑，innobackupex作为 xtrabackup 的软链接，即xtrabacku现在支持非Innodb表备份，并且 Innobackupex 在下一版本中移除，建议通过xtrabackup替换innobackupex</p></blockquote><a id="more"></a><h2 id="这里mariadb5-5，为centos7默认版本，更高版有很多版本问题很严重"><a href="#这里mariadb5-5，为centos7默认版本，更高版有很多版本问题很严重" class="headerlink" title="这里mariadb5.5，为centos7默认版本，更高版有很多版本问题很严重"></a>这里mariadb5.5，为centos7默认版本，更高版有很多版本问题很严重</h2><h2 id="个人测试数据库版本10以上均无法使用xtrabackup"><a href="#个人测试数据库版本10以上均无法使用xtrabackup" class="headerlink" title="个人测试数据库版本10以上均无法使用xtrabackup"></a>个人测试数据库版本10以上均无法使用xtrabackup</h2><h2 id="本次使用数据库5-5版本恢复主机10-4版本可行"><a href="#本次使用数据库5-5版本恢复主机10-4版本可行" class="headerlink" title="本次使用数据库5.5版本恢复主机10.4版本可行"></a>本次使用数据库5.5版本恢复主机10.4版本可行</h2><h2 id="首先安装xtrabackup"><a href="#首先安装xtrabackup" class="headerlink" title="首先安装xtrabackup"></a>首先安装xtrabackup</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> percona-xtrabackup 在EPEL源中</span><br></pre></td></tr></table></figure><ul><li><blockquote><p>最新版本下载安装：<br><a href="https://www.percona.com/downloads/XtraBackup/LATEST/" target="_blank" rel="noopener">https://www.percona.com/downloads/XtraBackup/LATEST/</a></p></blockquote></li><li><blockquote><p>本次实验使用<strong>2.4</strong>版本<br>下载地址：<a href="https://www.percona.com/downloads/Percona-XtraBackup-2.4/LATEST/" target="_blank" rel="noopener">https://www.percona.com/downloads/Percona-XtraBackup-2.4/LATEST/</a></p></blockquote></li></ul><p><img src="/2020/03/10/Mysql/percona-xtrabackup%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%EF%BC%8C%E5%A2%9E%E9%87%8F%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/9301bcb34ffe7d473755c1d74d46a959.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install /root/percona-xtrabackup<span class="number">-24</span><span class="number">-2.4</span><span class="number">.13</span><span class="number">-1.</span>el7.x86_64.rpm #用yum解决依赖性</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Mysql/percona-xtrabackup%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%EF%BC%8C%E5%A2%9E%E9%87%8F%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/7df9ff685e79bb8f1446378d0723a9d4.png" alt="img"></p><h2 id="使用方法-备份"><a href="#使用方法-备份" class="headerlink" title="使用方法 :备份"></a>使用方法 :备份</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">备份：innobackupex [<span class="keyword">option</span>] BACKUP-ROOT-DIR</span><br></pre></td></tr></table></figure><blockquote><p>选项说明：<br>–user：该选项表示备份账号<br>–password：该选项表示备份的密码<br>–host：该选项表示备份数据库的地址<br>–databases：该选项接受的参数为数据库名，如果要指定多个数据库，彼此间需要以空格隔开；如：”xtra_test dba_test”，同时，在指定某数据库时，也可以只指定其中的某张表。如：”mydatabase.mytable”。该选项对innodb引擎表无效，还是会备份所有innodb表<br>–defaults-file：该选项指定从哪个文件读取MySQL配置，必须放在命令行第一个选项位置<br>–incremental：该选项表示创建一个增量备份，需要指定–incremental-basedir<br>–incremental-basedir：该选项指定为前一次全备份或增量备份的目录，与–incremental同时使用<br>–incremental-dir：该选项表示还原时增量备份的目录<br>–include=name：指定表名，格式：databasename.tablename<br><strong>–apply-log：一般情况下,在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或已经提交但尚未同步至数据文件中的事务。因此，此时数据文件仍处理不一致状态。此选项作用是通过回滚未提交的事务及同步已经提交的事务至数据文件使数据文件处于一致性状态–use-memory：和–apply-log选项一起使用prepare 备份时，做crashrecovery分配的内存大小，单位字节，也可1MB,1M,1G,1GB等，推荐1G</strong><br>–export：表示开启可导出单独的表之后再导入其他Mysql中<br>–redo-only：此选项在prepare base full backup，往其中合并增量备份时候使<br>用，但不包括对最后一个增量备份的合并</p></blockquote><h2 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">还原：innobackupex --<span class="keyword">copy</span><span class="bash">-back [选项] BACKUP-DIR</span></span><br></pre></td></tr></table></figure><p>选项</p><blockquote><p>innobackupex –move-back [选项] [–defaults-group=GROUP-NAME] BACKUP-DIR<br><strong>选项说明：</strong><br>–copy-back：做数据恢复时将备份数据文件拷贝到MySQL服务器的datadir<br>–move-back：这个选项与–copy-back相似，唯一的区别是它不拷贝文件，<br>而是移动文件到目的地。这个选项移除backup文件，用时候必须小心。使用场<br>景：没有足够的磁盘空间同事保留数据文件和Backup副本</p></blockquote><ul><li><p>还原注意事项：</p><blockquote><p>1.<strong>datadir 目录必须为空</strong>。除非指定innobackupex –force-non-emptydirectorires选项指定，否则–copy-backup选不会覆盖<br>2.在restore之前,<strong>必须shutdown MySQL实例</strong>，不能将一个运行中的实例restore到datadir目录中<br>3.由于文件属性会被保留，大部分情况下需要在启动实例之前将文件的属主改为mysql，这些文件将属于创建备份的用户chown -R mysql:mysql /data/mysql以上需要在用户调用innobackupex之前完成<br>4–force-non-empty-directories：指定该参数时候，使得innobackupex –copy-back或–move-back选项转移文件到非空目录，已存在的文件不会被覆盖。如果–copy-back和–move-back文件需要从备份目录拷贝一个在datadir已经存在的文件，会报错失败</p></blockquote></li><li><p>备份生成的相关文件</p></li></ul><blockquote><p>使用innobackupex备份时，其会调用xtrabackup备份所有的InnoDB表，复制所有关于表结构定义的相关文件(.frm)、以及MyISAM、MERGE、CSV和ARCHIVE表的相关文件，同时还会备份触发器和数据库配置信息相关的文件。这些文件会被保存至一个以时间命名的目录中,在备份时，innobackupex还会在备份目录中创建如下文件：</p></blockquote><hr><blockquote><p>(1)xtrabackup_info：innobackupex工具执行时的相关信息，包括版本，备份选项，<br>备份时长，备份LSN(log sequence number日志序列号)，BINLOG的位置</p></blockquote><hr><blockquote><p>(2)xtrabackup_checkpoints：备份类型（如完全或增量）、备份状态（如是否已经为<br>prepared状态）和LSN范围信息,每个InnoDB页(通常为16k大小)都会包含一个日志序<br>列号LSN。LSN是整个数据库系统的系统版本号，每个页面相关的LSN能够表明此页面<br>最近是如何发生改变的</p></blockquote><hr><blockquote><p>(3)xtrabackup_binlog_info：MySQL服务器当前正在使用的二进制日志文件及至备份<br>这一刻为止二进制日志事件的位置，可利用实现基于binlog的恢复</p></blockquote><hr><blockquote><p>(4)backup-my.cnf：备份命令用到的配置选项信息</p></blockquote><hr><blockquote><p>(5)xtrabackup_logfile：备份生成的日志文件</p></blockquote><h2 id="1完全备份还原"><a href="#1完全备份还原" class="headerlink" title="1完全备份还原"></a>1完全备份还原</h2><ul><li>1查看当前数据库列表</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root:~ # mysqlshow </span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">|     Databases      |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| hellodb            |</span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| test               |</span><br><span class="line"><span class="code">+--------------------+</span></span><br></pre></td></tr></table></figure><ul><li>2创建备份文件夹</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># mkdir /xbackup</span></span><br><span class="line"><span class="meta">#备份时确保xbackup文件夹空</span></span><br></pre></td></tr></table></figure><ul><li>3备份</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root:~ # xtrabackup --backup --target-dir=/xbackup</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="number">190506</span> <span class="number">12</span>:<span class="number">38</span>:<span class="number">27</span> Executing UNLOCK TABLES</span><br><span class="line"><span class="number">190506</span> <span class="number">12</span>:<span class="number">38</span>:<span class="number">27</span> All tables unlocked</span><br><span class="line"><span class="number">190506</span> <span class="number">12</span>:<span class="number">38</span>:<span class="number">27</span> Backup created <span class="keyword">in</span> directory <span class="string">'/xbackup/'</span></span><br><span class="line"><span class="number">190506</span> <span class="number">12</span>:<span class="number">38</span>:<span class="number">27</span> [<span class="number">00</span>] Writing /xbackup/backup-my.cnf</span><br><span class="line"><span class="number">190506</span> <span class="number">12</span>:<span class="number">38</span>:<span class="number">27</span> [<span class="number">00</span>]        ...done</span><br><span class="line"><span class="number">190506</span> <span class="number">12</span>:<span class="number">38</span>:<span class="number">27</span> [<span class="number">00</span>] Writing /xbackup/xtrabackup_info</span><br><span class="line"><span class="number">190506</span> <span class="number">12</span>:<span class="number">38</span>:<span class="number">27</span> [<span class="number">00</span>]        ...done</span><br><span class="line">xtrabackup: Transaction log of lsn (<span class="number">1628321</span>) to (<span class="number">1628321</span>) was copied.</span><br><span class="line"><span class="number">190506</span> <span class="number">12</span>:<span class="number">38</span>:<span class="number">27</span> completed OK!</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Mysql/percona-xtrabackup%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%EF%BC%8C%E5%A2%9E%E9%87%8F%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/771aa409a2a53f7570ef7ff1e7dc1ff6.png" alt="img"><br>* 二进制日志位置<br><img src="/2020/03/10/Mysql/percona-xtrabackup%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%EF%BC%8C%E5%A2%9E%E9%87%8F%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/0af1f261c75e713247fb39e0c2e4f9f4.png" alt="img"></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root:~ # mysql -e <span class="emphasis">'show master logs;'</span></span><br><span class="line"><span class="code">+------------------+</span>-----------+</span><br><span class="line">| Log<span class="emphasis">_name         | File_</span>size |</span><br><span class="line"><span class="code">+------------------+</span>-----------+</span><br><span class="line">| mysql-bin.000001 |       245 |</span><br><span class="line"><span class="code">+------------------+</span>-----------+</span><br></pre></td></tr></table></figure><ul><li>开始结束的lsn号<br><img src="/2020/03/10/Mysql/percona-xtrabackup%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%EF%BC%8C%E5%A2%9E%E9%87%8F%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/5dc32207232859a6f24b32a6bf032a39.png" alt="img"></li><li>版本信息</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root:~ # cat /xbackup/xtrabackup_info </span><br><span class="line">uuid = c991e905<span class="number">-6f</span>b9<span class="number">-11e9</span><span class="number">-83</span>d3<span class="number">-000</span>c29f89546</span><br><span class="line">name = </span><br><span class="line">tool_name = xtrabackup</span><br><span class="line">tool_command = --backup --target-dir=/xbackup</span><br><span class="line">tool_version = <span class="number">2.4</span><span class="number">.13</span></span><br><span class="line">ibbackup_version = <span class="number">2.4</span><span class="number">.13</span></span><br><span class="line">server_version = <span class="number">5.5</span><span class="number">.60</span>-MariaDB</span><br><span class="line">start_time = <span class="number">2019</span><span class="number">-05</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">45</span>:<span class="number">33</span></span><br><span class="line">end_time = <span class="number">2019</span><span class="number">-05</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">45</span>:<span class="number">35</span></span><br><span class="line">lock_time = <span class="number">0</span></span><br><span class="line">binlog_pos = filename <span class="string">'mysql-bin.000001'</span>, position <span class="string">'245'</span></span><br><span class="line">innodb_from_lsn = <span class="number">0</span></span><br><span class="line">innodb_to_lsn = <span class="number">1628321</span></span><br><span class="line">partial = N</span><br><span class="line">incremental = N</span><br><span class="line">format = file</span><br><span class="line">compact = N</span><br><span class="line">compressed = N</span><br><span class="line">encrypted = N</span><br></pre></td></tr></table></figure><ul><li>4还原</li></ul><p>注意：还原时必须停止服务<br>在另一台主机上</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root:</span>~ <span class="meta"># systemctl stop  mariadb.service </span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="meta"># rm -rf /var/lib/mysql/*</span></span><br></pre></td></tr></table></figure><ul><li>5把文件拷至目标主机</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root:~ # scp -rp /xbackup/ <span class="number">192.168</span><span class="number">.64</span><span class="number">.141</span>:/data/backup/</span><br><span class="line">​</span><br></pre></td></tr></table></figure><ul><li>6还原<br>1）预准备：确保数据一致，提交完成的事务，回滚未完成的事务<br>​<code>root:~ # xtrabackup --prepare --target-dir=/data/backup/xbackup​</code><br><img src="https://s1.51cto.com/images/blog/201905/06/14266a3c199bcd3504e076ddc8dc2a94.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt></li></ul><p>2）复制到数据库目录<br> 注意：数据库目录必须为空，MySQL服务不能启动</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">root:~ # xtrabackup –copy-back –target-dir=/data/backup/xbackup –datadir=/var/lib/mysql</span><br><span class="line">““</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>7改权限</span><br><span class="line"></span><br><span class="line">![<span class="string">img</span>](<span class="link">percona-xtrabackup实现数据库完全，增量的备份和还原/790999190d5dc02a3ac48eb0e99dbba4.png</span>)</span><br></pre></td></tr></table></figure><p>chown -R mysql:mysql /var/lib/mysql/</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![<span class="string">img</span>](<span class="link">percona-xtrabackup实现数据库完全，增量的备份和还原/6d45b8a48ed776254c0c63eae601c8c1.png</span>)</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>8启动服务</span><br><span class="line"></span><br><span class="line"><span class="section">### 一些高版本备份出现的问题</span></span><br></pre></td></tr></table></figure><p>root:~ # xtrabackup –backup –target-dir=/data/backup/<br>xtrabackup: recognized server arguments:<br>xtrabackup: recognized client arguments: –backup=1 –target-dir=/data/backup/<br>190506 12:07:38  version_check Connecting to MySQL server with DSN ‘dbi:mysql:;mysql_read_default_group=xtrabackup’ (using password: NO).<br>190506 12:07:38  version_check Connected to MySQL server<br>190506 12:07:38  version_check Executing a version check against the server…<br>190506 12:07:38  version_check Done.<br>190506 12:07:38 Connecting to MySQL server host: localhost, user: not set, password: not set, port: not set, socket: not set<br>Using server version 10.4.4-MariaDB<br>xtrabackup version 2.4.13 based on MySQL server 5.7.19 Linux (x86_64) (revision id: 3e7ca7c)<br>xtrabackup: uses posix_fadvise().<br>xtrabackup: cd to /var/lib/mysql/<br>xtrabackup: open files limit requested 0, set to 1024<br>xtrabackup: using the following InnoDB configuration:<br>xtrabackup:   innodb_data_home_dir = .<br>xtrabackup:   innodb_data_file_path = ibdata1:12M:autoextend<br>xtrabackup:   innodb_log_group_home_dir = ./<br>xtrabackup:   innodb_log_files_in_group = 2<br>xtrabackup:   innodb_log_file_size = 50331648<br>InnoDB: Number of pools: 1<br>InnoDB: Unsupported redo log format. The redo log was created with MariaDB 10.4.4. Please follow the instructions at <a href="http://dev.mysql.com/doc/refman/5.7/en/upgrading-downgrading.html" target="_blank" rel="noopener">http://dev.mysql.com/doc/refman/5.7/en/upgrading-downgrading.html</a></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## <span class="number">2</span>增量备份与完全备份组合</span><br><span class="line"></span><br><span class="line">准备：</span><br></pre></td></tr></table></figure><p>root:~ # mkdir /xbackup/{base,inc1,inc2}<br>root:~ # tree /xbackup/<br>/xbackup/<br>├── base  #完全备份<br>├── inc1  #第一次增量备份<br>└── inc2   #第二次增量备份</p><p>3 directories, 0 files</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### <span class="number">1</span>完全备份</span><br></pre></td></tr></table></figure><p>root:~ # xtrabackup –backup –target-dir=/xbackup/base</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### <span class="number">2</span>第一次修改数据，添加两条记录</span><br></pre></td></tr></table></figure><p>insert teachers (name,age)value(‘xiaoming’,30);<br>insert teachers (name,age)value(‘xiaoqiang’,40);</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### <span class="number">3</span>第一次增量备份</span><br></pre></td></tr></table></figure><p>root:~ # xtrabackup –backup –target-dir=/xbackup/inc1 –incremental-basedir=/xbackup/base</p><hr><p>xtrabackup: Transaction log of lsn (1628972) to (1628972) was copied.<br>190506 13:34:40 completed OK!</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### <span class="number">4</span>第二次修改数据，添加两条记录</span><br></pre></td></tr></table></figure><p>insert teachers (name,age)value(‘xiaohong’,20);<br>insert teachers (name,age)value(‘xiaowang’,30);<br>MariaDB [hellodb]&gt; select * from teachers;<br>+—–+—————+—–+——–+<br>| TID | Name          | Age | Gender |<br>+—–+—————+—–+——–+<br>|   1 | Song Jiang    |  45 | M      |<br>|   2 | Zhang Sanfeng |  94 | M      |<br>|   3 | Miejue Shitai |  77 | F      |<br>|   4 | Lin Chaoying  |  93 | F      |<br>|   5 | xiaoming      |  30 | NULL   |<br>|   6 | xiaoqiang     |  40 | NULL   |<br>|   7 | xiaohong      |  20 | NULL   |<br>|   8 | xiaowang      |  30 | NULL   |<br>+—–+—————+—–+——–+</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### <span class="number">5</span>第二次增量备份</span><br></pre></td></tr></table></figure><p>root:~ # xtrabackup –backup –target-dir=/xbackup/inc2 –incremental-basedir=/xbackup/inc1</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### <span class="number">6</span>拷贝文件</span><br></pre></td></tr></table></figure><p>root:~ # scp -r /xbackup/* 192.168.64.141:/data/backup</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### <span class="number">7</span>在目标主机整理文件</span><br><span class="line"></span><br><span class="line">- 关闭mariadb</span><br><span class="line">  <span class="number">1</span>）预准备完全备份，此选项–apply-log-only 阻止回滚未完成的事务</span><br></pre></td></tr></table></figure><p>root:~ # xtrabackup –prepare –apply-log-only –target-dir=/data/backup/base</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">2</span>）合并第<span class="number">1</span>次增量备份到完全备份</span><br></pre></td></tr></table></figure><p>root:~ # xtrabackup –prepare –apply-log-only –target-dir=/data/backup/base –incremental-dir=/data/backup/inc1</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">3</span>）合并第<span class="number">2</span>次增量备份到完全备份：最后一次还原不需要加选项–apply-log-only</span><br></pre></td></tr></table></figure><p>root:~ # xtrabackup –prepare –target-dir=/data/backup/base –incremental-dir=/data/backup/inc2</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">4</span>）将整理好的文件复制到mariadb目录</span><br></pre></td></tr></table></figure><p>root:~ # rm -rf /var/lib/mysql/*<br>root:~ # xtrabackup –copy-back –target-dir=/data/backup/base –datadir=/var/lib/mysql</p><p>```</p><p>5）还原属性：chown -R mysql:mysql /var/lib/mysql<br>6）启动服务：systemctl start mariadb</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> xtrabackup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql中间件应用之使用ProxySQL进行数据库读写分离</title>
      <link href="/2020/03/10/Mysql/Mysql%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BA%94%E7%94%A8%E4%B9%8B%E4%BD%BF%E7%94%A8ProxySQL%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
      <url>/2020/03/10/Mysql/Mysql%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BA%94%E7%94%A8%E4%B9%8B%E4%BD%BF%E7%94%A8ProxySQL%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<ul><li>在拓扑结构中，ProxySQL部署在应用程序和MySQL集群的中间位置。应用程序向ProxySQL发起SQL语句，ProxySQL分析收到的SQL语句，进行匹配、重写等操作，然后路由给后端MySQL集群中的某实例。</li></ul><a id="more"></a><h3 id="各大网站自己的读写分离中间件"><a href="#各大网站自己的读写分离中间件" class="headerlink" title="各大网站自己的读写分离中间件"></a>各大网站自己的读写分离中间件</h3><p>读写分离应用：</p><blockquote><p>mysql-proxy：Oracle，<a href="https://downloads.mysql.com/archives/proxy/" target="_blank" rel="noopener">https://downloads.mysql.com/archives/proxy/</a><br>Atlas:Qihoo,<a href="https://github.com/Qihoo360/Atlas/blob/master/README_ZH.md" target="_blank" rel="noopener">https://github.com/Qihoo360/Atlas/blob/master/README_ZH.md</a><br>dbproxy：美团，<a href="https://github.com/Meituan-Dianping/DBProxy" target="_blank" rel="noopener">https://github.com/Meituan-Dianping/DBProxy</a><br>Cetus：网易乐得，<a href="https://github.com/Lede-Inc/cetus" target="_blank" rel="noopener">https://github.com/Lede-Inc/cetus</a><br>Amoeba：<a href="https://sourceforge.net/projects/amoeba/" target="_blank" rel="noopener">https://sourceforge.net/projects/amoeba/</a><br>Cobar：阿里巴巴，Amoeba的升级版<br>Mycat：基于Cobar， <a href="http://www.mycat.io/" target="_blank" rel="noopener">http://www.mycat.io/</a><br>ProxySQL：<a href="https://proxysql.com/" target="_blank" rel="noopener">https://proxysql.com/</a></p></blockquote><h3 id="这里使用ProxySQL"><a href="#这里使用ProxySQL" class="headerlink" title="这里使用ProxySQL"></a>这里使用ProxySQL</h3><ul><li>两个版本：官方版和percona版，</li><li>percona版是基于官方版基础上修改，C++语言开发，轻量级但性能优异(支持处理千亿级数据)</li><li>具有中间件所需的绝大多数功能，包括：</li></ul><blockquote><p>多种方式的读/写分离<br>定制基于用户、基于schema、基于语句的规则对SQL语句进行路由<br>缓存查询结果<br>后端节点监控<br>官方站点：<a href="https://proxysql.com/" target="_blank" rel="noopener">https://proxysql.com/</a><br>官方手册：<a href="https://github.com/sysown/proxysql/wiki" target="_blank" rel="noopener">https://github.com/sysown/proxysql/wiki</a></p></blockquote><h2 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h2><p><img src="/2020/03/10/Mysql/Mysql%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BA%94%E7%94%A8%E4%B9%8B%E4%BD%BF%E7%94%A8ProxySQL%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/1db967bc51a727153f30d2fb91f78397.png" alt="img"></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li><strong>实现读写分离前，先实现主从复制</strong></li><li><strong>注意：slave节点需要设置read_only=1</strong></li></ul><table><thead><tr><th align="left">主机</th><th align="left">系统</th><th align="left">ip</th></tr></thead><tbody><tr><td align="left">ProxySQL</td><td align="left">centos7</td><td align="left">192.168.64.140</td></tr><tr><td align="left">masterr</td><td align="left">centos7</td><td align="left">192.168.64.142</td></tr><tr><td align="left">slave</td><td align="left">centos7</td><td align="left">192.168.64.143</td></tr></tbody></table><h3 id="1-实现142，143主从复制"><a href="#1-实现142，143主从复制" class="headerlink" title="1.实现142，143主从复制"></a>1.实现142，143主从复制</h3><ul><li>142主</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">修改配置 </span><br><span class="line">vim /etc/my.cnf</span><br><span class="line"><span class="meta">[mysqld]</span></span><br><span class="line">server<span class="emphasis">_id=142                                                                                                  </span></span><br><span class="line"><span class="emphasis">binlog_</span>format=row 建议</span><br><span class="line"></span><br><span class="line">查看位置信息</span><br><span class="line">root:~ # mysql -e "show master logs;"</span><br><span class="line"><span class="code">+------------------+</span>-----------+</span><br><span class="line">| Log<span class="emphasis">_name     | File_</span>size |</span><br><span class="line"><span class="code">+------------------+</span>-----------+</span><br><span class="line">| mysql-bin.000001 |     30343   |</span><br><span class="line">| mysql-bin.000002 |   1038814 |</span><br><span class="line">| mysql-bin.000003 |       245     |</span><br><span class="line">| mysql-bin.000004 |       400     |</span><br><span class="line"><span class="code">+------------------+</span>-----------+</span><br><span class="line"></span><br><span class="line">root:~ # systemctl start mariadb.service </span><br><span class="line">root:~ # mysql -e "grant replication slave on <span class="strong">*.*</span> to repluser@<span class="emphasis">'192.168.64.%'</span> identified by <span class="emphasis">'centos'</span>;"</span><br></pre></td></tr></table></figure><ul><li>143从</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">修改配置 </span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="attribute">server_id</span>=143                                                                                                      </span><br><span class="line">read_only #必须加，ProxySQL通过此来判断谁是读服务器</span><br><span class="line"></span><br><span class="line">配置同步信息</span><br><span class="line">mysql&gt;CHANGE MASTER <span class="keyword">TO</span>   </span><br><span class="line"><span class="attribute">MASTER_HOST</span>=<span class="string">'192.168.64.142'</span>,  </span><br><span class="line"><span class="attribute">MASTER_USER</span>=<span class="string">'repluser'</span>,   </span><br><span class="line"><span class="attribute">MASTER_PASSWORD</span>=<span class="string">'centos'</span>,   </span><br><span class="line"><span class="attribute">MASTER_PORT</span>=3306,   </span><br><span class="line"><span class="attribute">MASTER_LOG_FILE</span>=<span class="string">'mysql-bin.000004'</span>,   </span><br><span class="line"><span class="attribute">MASTER_LOG_POS</span>=400;</span><br><span class="line"></span><br><span class="line">启动复制thread</span><br><span class="line">mysql&gt;start slave;</span><br><span class="line">mysql&gt;show slave status\G</span><br></pre></td></tr></table></figure><ul><li>主从已搭建完毕</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">MariaDB</span> <span class="string">[(none)]&gt;</span> <span class="string">show</span> <span class="string">slave</span> <span class="string">status\G</span></span><br><span class="line"><span class="string">***************************</span> <span class="number">1</span><span class="string">.</span> <span class="string">row</span> <span class="string">***************************</span></span><br><span class="line">               <span class="attr">Slave_IO_State:</span> <span class="string">Waiting</span> <span class="string">for</span> <span class="string">master</span> <span class="string">to</span> <span class="string">send</span> <span class="string">event</span></span><br><span class="line">                  <span class="attr">Master_Host:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.142</span></span><br><span class="line">                  <span class="attr">Master_User:</span> <span class="string">repluser</span></span><br><span class="line">                  <span class="attr">Master_Port:</span> <span class="number">3306</span></span><br><span class="line">                <span class="attr">Connect_Retry:</span> <span class="number">60</span></span><br><span class="line">              <span class="attr">Master_Log_File:</span> <span class="string">mysql-bin.000006</span></span><br><span class="line">          <span class="attr">Read_Master_Log_Pos:</span> <span class="number">245</span></span><br><span class="line">               <span class="attr">Relay_Log_File:</span> <span class="string">localhost-relay-bin.000007</span></span><br><span class="line">                <span class="attr">Relay_Log_Pos:</span> <span class="number">529</span></span><br><span class="line">        <span class="attr">Relay_Master_Log_File:</span> <span class="string">mysql-bin.000006</span></span><br><span class="line">             <span class="attr">Slave_IO_Running:</span> <span class="literal">Yes</span>       <span class="comment">#线程都已开启</span></span><br><span class="line">            <span class="attr">Slave_SQL_Running:</span> <span class="literal">Yes</span></span><br><span class="line">            <span class="string">............</span></span><br><span class="line">             <span class="attr">Master_Server_Id:</span> <span class="number">142</span></span><br><span class="line"><span class="number">1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.00</span> <span class="string">sec)</span></span><br></pre></td></tr></table></figure><h2 id="2-配置ProxySQL"><a href="#2-配置ProxySQL" class="headerlink" title="2.配置ProxySQL"></a>2.配置ProxySQL</h2><h3 id="1-ProxySQL安装（需yum源）"><a href="#1-ProxySQL安装（需yum源）" class="headerlink" title="1.ProxySQL安装（需yum源）"></a>1.ProxySQL安装（需yum源）</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | tee /etc/yum.repos.d/proxysql.repo</span><br><span class="line">[proxysql_repo]</span><br><span class="line">name= ProxySQL YUM repository</span><br><span class="line">baseurl=<span class="symbol">http:</span>/<span class="regexp">/repo.proxysql.com/</span>ProxySQL/proxysql1.<span class="number">4</span>.x/centos/\$releasever</span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=<span class="symbol">http:</span>/<span class="regexp">/repo.proxysql.com/</span>ProxySQL/repo_pub_key</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span>~ <span class="comment"># yum clean all</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="comment"># yum repolist</span></span><br><span class="line">proxysql_repo/<span class="number">7</span>   ProxySQL YUM repository     <span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root:</span>~ <span class="comment"># yum install -y proxysql mariadb</span></span><br><span class="line"><span class="symbol">root:</span>~ <span class="comment"># rpm -ql proxysql</span></span><br><span class="line">/etc/init.d/proxysql   <span class="comment">#启动脚本</span></span><br><span class="line">/etc/proxysql.cnf  <span class="comment">#配置文件</span></span><br><span class="line">/usr/bin/proxysql  <span class="comment">#启动程序</span></span><br><span class="line">/usr/share/proxysql/tools/proxysql_galera_checker.sh</span><br><span class="line">/usr/share/proxysql/tools/proxysql_galera_writer.pl</span><br></pre></td></tr></table></figure><h3 id="2-配置ProxySQL-1"><a href="#2-配置ProxySQL-1" class="headerlink" title="2.配置ProxySQL"></a>2.配置ProxySQL</h3><ul><li><p>数据库说明：</p><blockquote><p>main 是默认的”数据库”名，表里存放后端db实例、用户验证、路由规则等信息。<br>表名以 runtime_开头的表示proxysql当前运行的配置内容，不能通过dml语句修改，<br>只能修改对应的不以 runtime_ 开头的（在内存）里的表，然后 LOAD 使其生效，<br>SAVE 使其存到硬盘以供下次重启加载<br>disk 是持久化到硬盘的配置，sqlite数据文件<br>stats 是proxysql运行抓取的统计信息，包括到后端各命令的执行次数、流量、<br>processlist、查询种类汇总/执行时间，等等<br>monitor 库存储 monitor 模块收集的信息，主要是对后端db的健康/延迟检查</p></blockquote></li><li><p>1.添加监控节点</p></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root:~ # mysql -uadmin -padmin -P6032 -h127<span class="number">.0</span><span class="number">.0</span><span class="number">.1</span>  #连接至本机ProxySQL的数据库</span><br><span class="line">MySQL [(<span class="keyword">none</span>)]&gt; <span class="keyword">insert</span> <span class="keyword">into</span> mysql_servers(hostgroup_id,hostname,port) <span class="keyword">values</span>(<span class="number">10</span>,<span class="string">'192.168.64.142'</span>,<span class="number">3306</span>);</span><br><span class="line">MySQL [(<span class="keyword">none</span>)]&gt; <span class="keyword">insert</span> <span class="keyword">into</span> mysql_servers(hostgroup_id,hostname,port) <span class="keyword">values</span>(<span class="number">10</span>,<span class="string">'192.168.64.143'</span>,<span class="number">3306</span>);</span><br><span class="line">MySQL [(<span class="keyword">none</span>)]&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mysql_servers;</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Mysql/Mysql%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BA%94%E7%94%A8%E4%B9%8B%E4%BD%BF%E7%94%A8ProxySQL%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/3bd4fa3256706b3af6d59485e157432f.png" alt="img"><br>* 2.添加监控后端节点的用户。ProxySQL通过每个节点的read_only值来自动调整它们是属于读组还是写组</p><ul><li>在master142上执行</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySQL&gt; grant replication<span class="built_in"> client </span>on *.* <span class="keyword">to</span> monitor@<span class="string">'192.168.8.%'</span> identified by <span class="string">'centos'</span>;</span><br></pre></td></tr></table></figure><ul><li>ProxySQL上配置监控</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MySQL [(none)]&gt; <span class="builtin-name">set</span> <span class="attribute">mysql-monitor_username</span>=<span class="string">'monitor'</span>;</span><br><span class="line">MySQL [(none)]&gt; <span class="builtin-name">set</span> <span class="attribute">mysql-monitor_password</span>=<span class="string">'centos'</span>;</span><br></pre></td></tr></table></figure><ul><li>加载到RUNTIME，并保存到disk</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MySQL [(none)]&gt; load mysql <span class="keyword">variables</span> to <span class="comment">runtime</span>;</span><br><span class="line">MySQL [(none)]&gt; save mysql <span class="keyword">variables</span> to <span class="comment">disk</span>;</span><br></pre></td></tr></table></figure><p>监控模块的指标保存在monitor库的log表中<br>* 查看监控连接是否正常的 (对connect指标的监控)：(如果connect_error的结果为NULL则表示正常)</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySQL&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mysql_server_connect_log;</span><br></pre></td></tr></table></figure><ul><li>查看监控心跳信息 (对ping指标的监控)：</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySQL&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mysql_server_ping_log;</span><br></pre></td></tr></table></figure><ul><li>查看read_only和replication_lag的监控日志</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MySQL&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mysql_server_read_only_log;</span><br><span class="line">MySQL&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mysql_server_replication_lag_log;</span><br></pre></td></tr></table></figure><h3 id="3-设置分组"><a href="#3-设置分组" class="headerlink" title="3.设置分组"></a>3.设置分组</h3><blockquote><p>需要修改的是main库中的mysql_replication_hostgroups表，该表有3个字段：<br>writer_hostgroup，reader_hostgroup，comment, 指定写组的id为10，读组的id为20</p></blockquote><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MySQL&gt; <span class="keyword">insert</span> <span class="keyword">into</span> mysql_replication_hostgroups <span class="keyword">values</span>(<span class="number">10</span>,<span class="number">20</span>,"test");</span><br><span class="line">将mysql_replication_hostgroups表的修改加载到RUNTIME生效</span><br><span class="line">MySQL&gt; <span class="keyword">load</span> mysql servers <span class="keyword">to</span> runtime;</span><br><span class="line">MySQL&gt; save mysql servers <span class="keyword">to</span> disk;</span><br><span class="line">MySQL [(<span class="keyword">none</span>)]&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mysql_servers;</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Mysql/Mysql%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BA%94%E7%94%A8%E4%B9%8B%E4%BD%BF%E7%94%A8ProxySQL%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/9a2f996fd479bbf444e5860769225b92.png" alt="img"></p><h3 id="4-配置发送SQL语句的用户"><a href="#4-配置发送SQL语句的用户" class="headerlink" title="4.配置发送SQL语句的用户"></a>4.配置发送SQL语句的用户</h3><p>在master节点上创建访问用户</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySQL&gt; <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> sqluser@<span class="string">'192.168.64.%'</span> identified <span class="keyword">by</span> <span class="string">'fscx'</span>;</span><br></pre></td></tr></table></figure><p>在ProxySQL配置，将用户sqluser添加到mysql_users表中， default_hostgroup默认<br>组设置为写组10，当读写分离的路由规则不符合时，会访问默认组的数据库</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MySQL&gt; insert into mysql_users(username,password,default_hostgroup)values(<span class="string">'sqluser'</span>,<span class="string">'fscx'</span>,10);</span><br><span class="line">MySQL&gt; load mysql<span class="built_in"> users </span><span class="keyword">to</span> runtime;</span><br><span class="line">MySQL&gt; save mysql<span class="built_in"> users </span><span class="keyword">to</span> disk;</span><br></pre></td></tr></table></figure><p>使用sqluser用户测试是否能路由到默认的10写组实现读、写数据<br>““<br>mysql -usqluser -pfscx -P6033 -h127.0.0.1 -e ‘select @@server_id’<br>mysql -usqluser -pfscx -P6033 -h127.0.0.1 -e ‘create database testdb’<br>mysql -usqluser -pfscx testdb -P6033 -h127.0.0.1 -e ‘create table t(id int)</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">![](https:<span class="comment">//s1.51cto.com/images/blog/201905/08/fecfdc4024c5497b0959b7f6a76232b4.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=)</span></span><br><span class="line">### <span class="number">5.</span>在proxysql上配置路由规则，实现读写分离</span><br><span class="line">&gt;与规则有关的表：mysql_query_rules和mysql_query_rules_fast_routing，后者是前者的扩展表，<span class="number">1.4</span><span class="number">.7</span>之后支持</span><br><span class="line">插入路由规则：将select语句分离到<span class="number">20</span>的读组，select语句中有一个特殊语句</span><br><span class="line">SELECT...FOR UPDATE它会申请写锁，应路由到<span class="number">10</span>的写组</span><br></pre></td></tr></table></figure><p>MySQL&gt; insert into mysql_query_rules<br>(rule_id,active,match_digest,destination_hostgroup,apply)VALUES<br>(1,1,’^SELECT.*FOR UPDATE$’,10,1),(2,1,’^SELECT’,20,1);<br>MySQL&gt; load mysql query rules to runtime;<br>MySQL&gt; load mysql query rules to runtime;<br>““<br>注意：因ProxySQL根据rule_id顺序进行规则匹配，select … for update规则的<br>rule_id必须要小于普通的select规则的rule_id</p><h3 id="6-客户端测试"><a href="#6-客户端测试" class="headerlink" title="6.客户端测试"></a>6.客户端测试</h3><ul><li>测试读操作是否路由给20的读组<br><img src="/2020/03/10/Mysql/Mysql%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BA%94%E7%94%A8%E4%B9%8B%E4%BD%BF%E7%94%A8ProxySQL%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/fbc2d55726d618c2f729ba16c60527be.png" alt="img"></li><li>测试写操作，以事务方式进行测试</li></ul><p><img src="/2020/03/10/Mysql/Mysql%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BA%94%E7%94%A8%E4%B9%8B%E4%BD%BF%E7%94%A8ProxySQL%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/a98d0b110e39f739d50faafb8944f747.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> proxySQL </tag>
            
            <tag> 读写分离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建MHA实现MySQL高可用集群架构配置过程总结</title>
      <link href="/2020/03/10/Mysql/%E6%9E%84%E5%BB%BAMHA%E5%AE%9E%E7%8E%B0MySQL%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/"/>
      <url>/2020/03/10/Mysql/%E6%9E%84%E5%BB%BAMHA%E5%AE%9E%E7%8E%B0MySQL%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="1-MHA简介："><a href="#1-MHA简介：" class="headerlink" title="1.MHA简介："></a>1.MHA简介：</h2><blockquote><ul><li><p>MHA（Master HighAvailability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本DeNA公司youshimaton（现就职于Facebook公司）开发，是一套优秀的作为MySQL高可用性环境下故障切换和主从提升的高可用软件。在MySQL故障切换过程中，MHA能做到在0~30秒之内自动完成数据库的故障切换操作，并且在进行故障切换的过程中，MHA能在最大程度上保证数据的一致性，以达到真正意义上的高可用。</p><a id="more"></a></li><li><p>MHA Manager可以单独部署在一台独立的机器上管理多个master-slave集群，也可以部署在一台slave节点上。MHA Node运行在每台MySQL服务器上，MHA Manager会定时探测集群中的master节点，当master出现故障时，它可以自动将最新数据的slave提升为新的master，然后将所有其他的slave重新指向新的master。整个故障转移过程对应用程序完全透明。</p></li></ul></blockquote><h2 id="2-MHA工作原理"><a href="#2-MHA工作原理" class="headerlink" title="2.MHA工作原理"></a>2.MHA工作原理</h2><blockquote><ul><li>1 从宕机崩溃的master保存二进制日志事件（binlog events）</li><li>2 识别含有最新更新的slave</li><li>3 应用差异的中继日志（relay log）到其他的slave</li><li>4 应用从master保存的二进制日志事件（binlog events）</li><li>5 提升一个slave为新的master</li><li>6 使其他的slave连接新的master进行复制</li></ul></blockquote><hr><blockquote><ul><li>MHA软件由两部分组成，Manager工具包和Node工具包<br>Manager : 工具包主要包括以下几个工具：<br>masterha_check_ssh :检查MHA的SSH配置状况<br>masterha_check_repl : 检查MySQL复制状况<br>masterha_manger : 启动MHA<br>masterha_check_status : 检测当前MHA运行状态<br>masterha_master_monitor : 检测master是否宕机<br>masterha_master_switch :故障转移（自动或手动）<br>masterha_conf_host :添加或删除配置的server信息</li></ul></blockquote><hr><blockquote><ul><li>Node工具包：这些工具通常由MHA Manager的脚本触发，无需人为操作）主要包括以下几个工具：<br>save_binary_logs 保存和复制master的二进制日志<br>apply_diff_relay_logs 识别差异的中继日志事件并将其差异的事件应用于其他的slave<br>filter_mysqlbinlog 去除不必要的ROLLBACK事件（MHA已不再使用此工具）<br>purge_relay_logs 清除中继日志（不会阻塞SQL线程）<br>注意：为了尽可能的减少主库硬件损坏宕机造成的数据丢失，因此在配置MHA的同时建议配置成MySQL 5.5的半同步复制</li></ul></blockquote><h2 id="3架构图"><a href="#3架构图" class="headerlink" title="3架构图"></a>3架构图</h2><p><img src="/2020/03/10/Mysql/%E6%9E%84%E5%BB%BAMHA%E5%AE%9E%E7%8E%B0MySQL%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/3e02fb90194eaac536eb7f81de824897.png" alt="img"></p><h2 id="4环境搭建"><a href="#4环境搭建" class="headerlink" title="4环境搭建"></a>4环境搭建</h2><ul><li>142为主</li><li>140，143为从</li><li>基于key验证链接</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在MHA上</span><br><span class="line">root:~ # ssh-keygen </span><br><span class="line">root:~ # ssh-copy-id <span class="number">192.168</span><span class="number">.64</span><span class="number">.141</span></span><br><span class="line">root:~ # scp -rp .ssh <span class="number">192.168</span><span class="number">.64</span><span class="number">.140</span>:/root/</span><br><span class="line">root:~ # scp -rp .ssh <span class="number">192.168</span><span class="number">.64</span><span class="number">.142</span>:/root/</span><br><span class="line">root:~ # scp -rp .ssh <span class="number">192.168</span><span class="number">.64</span><span class="number">.143</span>:/root/</span><br></pre></td></tr></table></figure><h2 id="5在master创建账号"><a href="#5在master创建账号" class="headerlink" title="5在master创建账号"></a>5在master创建账号</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> repluser@<span class="string">'192.168.64.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'fscx'</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> mhauser@<span class="string">'192.168.64.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'fscx'</span> ;</span><br></pre></td></tr></table></figure><h2 id="6实现MHA"><a href="#6实现MHA" class="headerlink" title="6实现MHA"></a>6实现MHA</h2><p>安装包在此链接下载</p><blockquote><p><a href="https://github.com/yoshinorim/mha4mysql-manager/releases" target="_blank" rel="noopener">https://github.com/yoshinorim/mha4mysql-manager/releases</a><br><a href="https://github.com/yoshinorim/mha4mysql-node/releases" target="_blank" rel="noopener">https://github.com/yoshinorim/mha4mysql-node/releases</a></p></blockquote><ul><li>安装时用yum安装（解决依赖性）</li></ul><h3 id="1在管理节点上安装两个包"><a href="#1在管理节点上安装两个包" class="headerlink" title="1在管理节点上安装两个包"></a>1在管理节点上安装两个包</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mha4mysql-manager</span><br><span class="line">mha4mysql-<span class="keyword">node</span><span class="title"></span></span><br></pre></td></tr></table></figure><h3 id="2在被管理节点安装："><a href="#2在被管理节点安装：" class="headerlink" title="2在被管理节点安装："></a>2在被管理节点安装：</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mha4mysql-<span class="keyword">node</span><span class="title"></span></span><br></pre></td></tr></table></figure><h2 id="7在管理节点建立配置文件"><a href="#7在管理节点建立配置文件" class="headerlink" title="7在管理节点建立配置文件"></a>7在管理节点建立配置文件</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root:~ # mkdir /data</span><br><span class="line">root:~ # mkdir /etc/mha</span><br><span class="line">root:~ # vim /etc/mha/app1.conf</span><br><span class="line">[server default]</span><br><span class="line"><span class="attribute">user</span>=mhauser</span><br><span class="line"><span class="attribute">password</span>=fscx</span><br><span class="line"><span class="attribute">manager_workdir</span>=/data/mha/app1/</span><br><span class="line"><span class="attribute">manager_log</span>=/data/mha/app1/manager.log</span><br><span class="line"><span class="attribute">remote_workdir</span>=/data/mha/app1/</span><br><span class="line"><span class="attribute">ssh_user</span>=root</span><br><span class="line"><span class="attribute">repl_user</span>=repluser</span><br><span class="line"><span class="attribute">repl_password</span>=fscx</span><br><span class="line"><span class="attribute">ping_interval</span>=1</span><br><span class="line">[server1]</span><br><span class="line"><span class="attribute">hostname</span>=192.168.64.142</span><br><span class="line"><span class="attribute">candidate_master</span>=1</span><br><span class="line">[server2]</span><br><span class="line"><span class="attribute">hostname</span>=192.168.64.140</span><br><span class="line"><span class="attribute">candidate_master</span>=1</span><br><span class="line">[server3]</span><br><span class="line"><span class="attribute">hostname</span>=192.168.64.143</span><br></pre></td></tr></table></figure><h2 id="8在管理节点，mha验证和启动"><a href="#8在管理节点，mha验证和启动" class="headerlink" title="8在管理节点，mha验证和启动"></a>8在管理节点，mha验证和启动</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">roo<span class="variable">t:</span>~ # masterha_check_ssh --<span class="keyword">conf</span>=/etc/mha/app1.<span class="keyword">conf</span>   #秘钥检查</span><br><span class="line">roo<span class="variable">t:</span>~ # masterha_check_repl --<span class="keyword">conf</span>=/etc/mha/app1.<span class="keyword">conf</span>   #复制检查</span><br><span class="line">roo<span class="variable">t:</span>~ # masterha_manager --<span class="keyword">conf</span>=/etc/mha/app1.<span class="keyword">conf</span>     #启动</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Mysql/%E6%9E%84%E5%BB%BAMHA%E5%AE%9E%E7%8E%B0MySQL%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/20de05719b727bc2af4f3bba34101e70.png" alt="img"><br><img src="/2020/03/10/Mysql/%E6%9E%84%E5%BB%BAMHA%E5%AE%9E%E7%8E%B0MySQL%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/06566d6ac4d903cba5df8925438e53d5.png" alt="img"></p><h2 id="9-模拟服务器宕机"><a href="#9-模拟服务器宕机" class="headerlink" title="9.模拟服务器宕机"></a>9.模拟服务器宕机</h2><p><img src="/2020/03/10/Mysql/%E6%9E%84%E5%BB%BAMHA%E5%AE%9E%E7%8E%B0MySQL%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/9bf600f8b6c45456312d719177453e99.png" alt="img"></p><ul><li>查看143</li></ul><p><img src="/2020/03/10/Mysql/%E6%9E%84%E5%BB%BAMHA%E5%AE%9E%E7%8E%B0MySQL%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/c2f89a0bbc07c9d10328815c2a2d32e4.png" alt="img"></p><ul><li>查看140</li></ul><p><img src="/2020/03/10/Mysql/%E6%9E%84%E5%BB%BAMHA%E5%AE%9E%E7%8E%B0MySQL%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/86295f47e4110f5b081b1904a0e90371.png" alt="img"><br>* &gt;可以看到master 的 IP 现在为 192.168.64.140本来是和192.168.64.142同步的，说明 MHA 已经把Candicatemaster(master2)提升为了新的master，IO线程和SQL线程也正确运行，MHA 搭建成功!!!<br>* 注意：MHA为一次性服务，所以必须将提升为主的服务器配置文件read-only去掉，否则机器重启后不能写入数据</p><h2 id="最终主从测试"><a href="#最终主从测试" class="headerlink" title="最终主从测试"></a>最终主从测试</h2><ul><li>在140上新建数据库</li></ul><ul><li>在143查看是否同步</li></ul>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> MHA </tag>
            
            <tag> 集群 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP状态码</title>
      <link href="/2020/03/10/Linux/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/"/>
      <url>/2020/03/10/Linux/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="消息编辑"><a href="#消息编辑" class="headerlink" title="消息编辑"></a>消息编辑</h2><blockquote><p>这一类型的状态码，代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束。由于 HTTP/1.0 协议中没有定义任何 1xx 状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送 1xx 响应。</p><a id="more"></a></blockquote><h3 id="100-Continue"><a href="#100-Continue" class="headerlink" title="100 Continue"></a>100 Continue</h3><blockquote><p>客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。</p></blockquote><h3 id="101-Switching-Protocols"><a href="#101-Switching-Protocols" class="headerlink" title="101 Switching Protocols"></a>101 Switching Protocols</h3><blockquote><p>服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。<br>只有在切换新的协议更有好处的时候才应该采取类似措施。例如，切换到新的HTTP 版本比旧版本更有优势，或者切换到一个实时且同步的协议以传送利用此类特性的资源。</p></blockquote><h3 id="102-Processing"><a href="#102-Processing" class="headerlink" title="102 Processing"></a>102 Processing</h3><blockquote><p>由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。</p></blockquote><h2 id="成功编辑"><a href="#成功编辑" class="headerlink" title="成功编辑"></a>成功编辑</h2><p>这一类型的状态码，代表请求已成功被服务器接收、理解、并接受。</p><h3 id="200-OK"><a href="#200-OK" class="headerlink" title="200 OK"></a>200 OK</h3><blockquote><p>请求已成功，请求所希望的响应头或数据体将随此响应返回。出现此状态码是表示正常状态。</p></blockquote><h3 id="201-Created"><a href="#201-Created" class="headerlink" title="201 Created"></a>201 Created</h3><blockquote><p>请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，且其 URI 已经随Location 头信息返回。假如需要的资源无法及时建立的话，应当返回 ‘202 Accepted’。</p></blockquote><h3 id="202-Accepted"><a href="#202-Accepted" class="headerlink" title="202 Accepted"></a>202 Accepted</h3><blockquote><p>服务器已接受请求，但尚未处理。正如它可能被拒绝一样，最终该请求可能会也可能不会被执行。在异步操作的场合下，没有比发送这个状态码更方便的做法了。<br>返回202状态码的响应的目的是允许服务器接受其他过程的请求（例如某个每天只执行一次的基于批处理的操作），而不必让客户端一直保持与服务器的连接直到批处理操作全部完成。在接受请求处理并返回202状态码的响应应当在返回的实体中包含一些指示处理当前状态的信息，以及指向处理状态监视器或状态预测的指针，以便用户能够估计操作是否已经完成。</p></blockquote><h3 id="203-Non-Authoritative-Information"><a href="#203-Non-Authoritative-Information" class="headerlink" title="203 Non-Authoritative Information"></a>203 Non-Authoritative Information</h3><blockquote><p>服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。例如，包含资源的元数据可能导致原始服务器知道元信息的超集。使用此状态码不是必须的，而且只有在响应不使用此状态码便会返回200 OK的情况下才是合适的。</p></blockquote><h3 id="204-No-Content"><a href="#204-No-Content" class="headerlink" title="204 No Content"></a>204 No Content</h3><blockquote><p>服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。<br>如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。<br>由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。</p></blockquote><h3 id="205-Reset-Content"><a href="#205-Reset-Content" class="headerlink" title="205 Reset Content"></a>205 Reset Content</h3><blockquote><p>服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。<br>与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。<br>206 Partial Content<br>服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。<br>该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。<br>响应必须包含如下的头部域：<br>Content-Range 用以指示本次响应中返回的内容的范围；如果是 Content-Type 为 multipart/byteranges 的多段下载，则每一 multipart 段中都应包含 Content-Range 域用以指示本段的内容范围。假如响应中包含 Content-Length，那么它的数值必须匹配它返回的内容范围的真实字节数。<br>Date<br>ETag 和/或 Content-Location，假如同样的请求本应该返回200响应。<br>Expires, Cache-Control，和/或 Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。<br>假如本响应请求使用了 If-Range 强缓存验证，那么本次响应不应该包含其他实体头；假如本响应的请求使用了 If-Range 弱缓存验证，那么本次响应禁止包含其他实体头；这避免了缓存的实体内容和更新了的实体头信息之间的不一致。否则，本响应就应当包含所有本应该返回200响应中应当返回的所有实体头部域。<br>假如 ETag 或 Last-Modified 头部不能精确匹配的话，则客户端缓存应禁止将206响应返回的内容与之前任何缓存过的内容组合在一起。</p></blockquote><h3 id="207-Multi-Status"><a href="#207-Multi-Status" class="headerlink" title="207 Multi-Status"></a>207 Multi-Status</h3><blockquote><p>由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</p></blockquote><h2 id="重定向编辑"><a href="#重定向编辑" class="headerlink" title="重定向编辑"></a>重定向编辑</h2><blockquote><p>这类状态码代表需要客户端采取进一步的操作才能完成请求。通常，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的 Location 域中指明。<br>当且仅当后续的请求所使用的方法是 GET 或者 HEAD 时，用户浏览器才可以在没有用户介入的情况下自动提交所需要的后续请求。客户端应当自动监测无限循环重定向（例如：A-&gt;A，或者A-&gt;B-&gt;C-&gt;A），因为这会导致服务器和客户端大量不必要的资源消耗。按照 HTTP/1.0 版规范的建议，浏览器不应自动访问超过5次的重定向。</p></blockquote><h3 id="300-Multiple-Choices"><a href="#300-Multiple-Choices" class="headerlink" title="300 Multiple Choices"></a>300 Multiple Choices</h3><blockquote><p>被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。<br>除非这是一个 HEAD 请求，否则该响应应当包括一个资源特性及地址的列表的实体，以便用户或浏览器从中选择最合适的重定向地址。这个实体的格式由 Content-Type 定义的格式所决定。浏览器可能根据响应的格式以及浏览器自身能力，自动作出最合适的选择。当然，RFC 2616规范并没有规定这样的自动选择该如何进行。<br>如果服务器本身已经有了首选的回馈选择，那么在 Location 中应当指明这个回馈的 URI；浏览器可能会将这个 Location 值作为自动重定向的地址。此外，除非额外指定，否则这个响应也是可缓存的。</p></blockquote><h3 id="301-Moved-Permanently"><a href="#301-Moved-Permanently" class="headerlink" title="301 Moved Permanently"></a>301 Moved Permanently</h3><blockquote><p>被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。<br>新的永久性的URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。<br>如果这不是一个 GET 或者 HEAD 请求，因此浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。<br>注意：对于某些使用 HTTP/1.0 协议的浏览器，当它们发送的 POST 请求得到了一个301响应的话，接下来的重定向请求将会变成 GET 方式。</p></blockquote><h3 id="302-Move-Temporarily"><a href="#302-Move-Temporarily" class="headerlink" title="302 Move Temporarily"></a>302 Move Temporarily</h3><blockquote><p>请求的资源临时从不同的 URI响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。<br>上文有提及。<br>如果这不是一个 GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。<br>注意：虽然RFC 1945和RFC 2068规范不允许客户端在重定向时改变请求的方法，但是很多现存的浏览器将302响应视作为303响应，并且使用 GET 方式访问在 Location 中规定的 URI，而无视原先请求的方法。状态码303和307被添加了进来，用以明确服务器期待客户端进行何种反应。</p></blockquote><h3 id="303-See-Other"><a href="#303-See-Other" class="headerlink" title="303 See Other"></a>303 See Other</h3><blockquote><p>对应当前请求的响应可以在另一个 URL 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。这个新的 URI 不是原始资源的替代引用。同时，303响应禁止被缓存。当然，第二个请求（重定向）可能被缓存。<br>注意：许多 HTTP/1.1 版以前的浏览器不能正确理解303状态。如果需要考虑与这些浏览器之间的互动，302状态码应该可以胜任，因为大多数的浏览器处理302响应时的方式恰恰就是上述规范要求客户端处理303响应时应当做的。</p></blockquote><h3 id="304-Not-Modified"><a href="#304-Not-Modified" class="headerlink" title="304 Not Modified"></a>304 Not Modified</h3><blockquote><p>如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。<br>该响应必须包含以下的头信息：<br>Date，除非这个服务器没有时钟。假如没有时钟的服务器也遵守这些规则，那么代理服务器以及客户端可以自行将 Date 字段添加到接收到的响应头中去（正如RFC 2068中规定的一样），缓存机制将会正常工作。<br>ETag 和/或 Content-Location，假如同样的请求本应返回200响应。<br>Expires, Cache-Control，和/或Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。<br>假如本响应请求使用了强缓存验证，那么本次响应不应该包含其他实体头；否则（例如，某个带条件的 GET 请求使用了弱缓存验证），本次响应禁止包含其他实体头；这避免了缓存了的实体内容和更新了的实体头信息之间的不一致。<br>假如某个304响应指明了当前某个实体没有缓存，那么缓存系统必须忽视这个响应，并且重复发送不包含限制条件的请求。<br>假如接收到一个要求更新某个缓存条目的304响应，那么缓存系统必须更新整个条目以反映所有在响应中被更新的字段的值。</p></blockquote><h3 id="305-Use-Proxy"><a href="#305-Use-Proxy" class="headerlink" title="305 Use Proxy"></a>305 Use Proxy</h3><blockquote><p>被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立305响应。<br>注意：RFC 2068中没有明确305响应是为了重定向一个单独的请求，而且只能被原始服务器建立。忽视这些限制可能导致严重的安全后果。</p></blockquote><h3 id="306-Switch-Proxy"><a href="#306-Switch-Proxy" class="headerlink" title="306 Switch Proxy"></a>306 Switch Proxy</h3><blockquote><p>在最新版的规范中，306状态码已经不再被使用。</p></blockquote><h3 id="307-Temporary-Redirect"><a href="#307-Temporary-Redirect" class="headerlink" title="307 Temporary Redirect"></a>307 Temporary Redirect</h3><blockquote><p>请求的资源临时从不同的URI 响应请求。<br>新的临时性的URI 应当在响应的 Location 域中返回。除非这是一个HEAD 请求，否则响应的实体中应当包含指向新的URI 的超链接及简短说明。因为部分浏览器不能识别307响应，因此需要添加上述必要信息以便用户能够理解并向新的 URI 发出访问请求。<br>如果这不是一个GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。</p></blockquote><h2 id="请求错误编辑"><a href="#请求错误编辑" class="headerlink" title="请求错误编辑"></a>请求错误编辑</h2><p>这类的状态码代表了客户端看起来可能发生了错误，妨碍了服务器的处理。除非响应的是一个 HEAD 请求，否则服务器就应该返回一个解释当前错误状况的实体，以及这是临时的还是永久性的状况。这些状态码适用于任何请求方法。浏览器应当向用户显示任何包含在此类错误响应中的实体内容。<br>如果错误发生时客户端正在传送数据，那么使用TCP的服务器实现应当仔细确保在关闭客户端与服务器之间的连接之前，客户端已经收到了包含错误信息的数据包。如果客户端在收到错误信息后继续向服务器发送数据，服务器的TCP栈将向客户端发送一个重置数据包，以清除该客户端所有还未识别的输入缓冲，以免这些数据被服务器上的应用程序读取并干扰后者。</p><h3 id="400-Bad-Request"><a href="#400-Bad-Request" class="headerlink" title="400 Bad Request"></a>400 Bad Request</h3><p>1、语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。<br>2、请求参数有误。</p><h3 id="401-Unauthorized"><a href="#401-Unauthorized" class="headerlink" title="401 Unauthorized"></a>401 Unauthorized</h3><p>当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。参见RFC 2617。</p><h3 id="402-Payment-Required"><a href="#402-Payment-Required" class="headerlink" title="402 Payment Required"></a>402 Payment Required</h3><p>该状态码是为了将来可能的需求而预留的。</p><h3 id="403-Forbidden"><a href="#403-Forbidden" class="headerlink" title="403 Forbidden"></a>403 Forbidden</h3><p>服务器已经理解请求，但是拒绝执行它。与401响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个404响应，假如它不希望让客户端获得任何信息。</p><h3 id="404-Not-Found"><a href="#404-Not-Found" class="headerlink" title="404 Not Found"></a>404 Not Found</h3><p>请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。假如服务器知道情况的话，应当使用410状态码来告知旧资源因为某些内部的配置机制问题，已经永久的不可用，而且没有任何可以跳转的地址。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。出现这个错误的最有可能的原因是服务器端没有这个页面。</p><h3 id="405-Method-Not-Allowed"><a href="#405-Method-Not-Allowed" class="headerlink" title="405 Method Not Allowed"></a>405 Method Not Allowed</h3><p>请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow 头信息用以表示出当前资源能够接受的请求方法的列表。<br>鉴于 PUT，DELETE 方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。</p><h3 id="406-Not-Acceptable"><a href="#406-Not-Acceptable" class="headerlink" title="406 Not Acceptable"></a>406 Not Acceptable</h3><p>请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。<br>除非这是一个 HEAD 请求，否则该响应就应当返回一个包含可以让用户或者浏览器从中选择最合适的实体特性以及地址列表的实体。实体的格式由 Content-Type 头中定义的媒体类型决定。浏览器可以根据格式及自身能力自行作出最佳选择。但是，规范中并没有定义任何作出此类自动选择的标准。</p><h3 id="407-Proxy-Authentication-Required"><a href="#407-Proxy-Authentication-Required" class="headerlink" title="407 Proxy Authentication Required"></a>407 Proxy Authentication Required</h3><p>与401响应类似，只不过客户端必须在代理服务器上进行身份验证。代理服务器必须返回一个 Proxy-Authenticate 用以进行身份询问。客户端可以返回一个 Proxy-Authorization 信息头用以验证。参见RFC 2617。</p><h3 id="408-Request-Timeout"><a href="#408-Request-Timeout" class="headerlink" title="408 Request Timeout"></a>408 Request Timeout</h3><p>请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。客户端可以随时再次提交这一请求而无需进行任何更改。</p><h3 id="409-Conflict"><a href="#409-Conflict" class="headerlink" title="409 Conflict"></a>409 Conflict</h3><p>由于和被请求的资源的当前状态之间存在冲突，请求无法完成。这个代码只允许用在这样的情况下才能被使用：用户被认为能够解决冲突，并且会重新提交新的请求。该响应应当包含足够的信息以便用户发现冲突的源头。<br>冲突通常发生于对 PUT 请求的处理中。例如，在采用版本检查的环境下，某次 PUT 提交的对特定资源的修改请求所附带的版本信息与之前的某个（第三方）请求向冲突，那么此时服务器就应该返回一个409错误，告知用户请求无法完成。此时，响应实体中很可能会包含两个冲突版本之间的差异比较，以便用户重新提交归并以后的新版本。</p><h3 id="410-Gone"><a href="#410-Gone" class="headerlink" title="410 Gone"></a>410 Gone</h3><p>被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。这样的状况应当被认为是永久性的。如果可能，拥有链接编辑功能的客户端应当在获得用户许可后删除所有指向这个地址的引用。如果服务器不知道或者无法确定这个状况是否是永久的，那么就应该使用404状态码。除非额外说明，否则这个响应是可缓存的。<br>410响应的目的主要是帮助网站管理员维护网站，通知用户该资源已经不再可用，并且服务器拥有者希望所有指向这个资源的远端连接也被删除。这类事件在限时、增值服务中很普遍。同样，410响应也被用于通知客户端在当前服务器站点上，原本属于某个个人的资源已经不再可用。当然，是否需要把所有永久不可用的资源标记为’410 Gone’，以及是否需要保持此标记多长时间，完全取决于服务器拥有者。</p><h3 id="411-Length-Required"><a href="#411-Length-Required" class="headerlink" title="411 Length Required"></a>411 Length Required</h3><p>服务器拒绝在没有定义 Content-Length 头的情况下接受请求。在添加了表明请求消息体长度的有效 Content-Length 头之后，客户端可以再次提交该请求。</p><h3 id="412-Precondition-Failed"><a href="#412-Precondition-Failed" class="headerlink" title="412 Precondition Failed"></a>412 Precondition Failed</h3><p>服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。这个状态码允许客户端在获取资源时在请求的元信息（请求头字段数据）中设置先决条件，以此避免该请求方法被应用到其希望的内容以外的资源上。</p><h3 id="413-Request-Entity-Too-Large"><a href="#413-Request-Entity-Too-Large" class="headerlink" title="413 Request Entity Too Large"></a>413 Request Entity Too Large</h3><p>服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。此种情况下，服务器可以关闭连接以免客户端继续发送此请求。<br>如果这个状况是临时的，服务器应当返回一个 Retry-After 的响应头，以告知客户端可以在多少时间以后重新尝试。</p><h3 id="414-Request-URI-Too-Long"><a href="#414-Request-URI-Too-Long" class="headerlink" title="414 Request-URI Too Long"></a>414 Request-URI Too Long</h3><p>请求的URI 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。这比较少见，通常的情况包括：<br>本应使用POST方法的表单提交变成了GET方法，导致查询字符串（Query String）过长。<br>重定向URI “黑洞”，例如每次重定向把旧的 URI 作为新的 URI 的一部分，导致在若干次重定向后 URI 超长。<br>客户端正在尝试利用某些服务器中存在的安全漏洞***服务器。这类服务器使用固定长度的缓冲读取或操作请求的 URI，当 GET 后的参数超过某个数值后，可能会产生缓冲区溢出，导致任意代码被执行[1]。没有此类漏洞的服务器，应当返回414状态码。</p><h3 id="415-Unsupported-Media-Type"><a href="#415-Unsupported-Media-Type" class="headerlink" title="415 Unsupported Media Type"></a>415 Unsupported Media Type</h3><p>对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。</p><h3 id="416-Requested-Range-Not-Satisfiable"><a href="#416-Requested-Range-Not-Satisfiable" class="headerlink" title="416 Requested Range Not Satisfiable"></a>416 Requested Range Not Satisfiable</h3><p>如果请求中包含了 Range 请求头，并且 Range 中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义 If-Range 请求头，那么服务器就应当返回416状态码。<br>假如 Range 使用的是字节范围，那么这种情况就是指请求指定的所有数据范围的首字节位置都超过了当前资源的长度。服务器也应当在返回416状态码的同时，包含一个 Content-Range 实体头，用以指明当前资源的长度。这个响应也被禁止使用 multipart/byteranges 作为其 Content-Type。</p><h3 id="417-Expectation-Failed"><a href="#417-Expectation-Failed" class="headerlink" title="417 Expectation Failed"></a>417 Expectation Failed</h3><p>在请求头 Expect 中指定的预期内容无法被服务器满足，或者这个服务器是一个代理服务器，它有明显的证据证明在当前路由的下一个节点上，Expect 的内容无法被满足。</p><h3 id="418-I’m-a-teapot"><a href="#418-I’m-a-teapot" class="headerlink" title="418 I’m a teapot"></a>418 I’m a teapot</h3><h3 id="421-Too-Many-Connections"><a href="#421-Too-Many-Connections" class="headerlink" title="421 Too Many Connections"></a>421 Too Many Connections</h3><p>There are too many connections from your internet address<br>从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。</p><h3 id="422-Unprocessable-Entity"><a href="#422-Unprocessable-Entity" class="headerlink" title="422 Unprocessable Entity"></a>422 Unprocessable Entity</h3><p>请求格式正确，但是由于含有语义错误，无法响应。（RFC 4918 WebDAV）</p><h3 id="423-Locked"><a href="#423-Locked" class="headerlink" title="423 Locked"></a>423 Locked</h3><p>当前资源被锁定。（RFC 4918 WebDAV）</p><h3 id="424-Failed-Dependency"><a href="#424-Failed-Dependency" class="headerlink" title="424 Failed Dependency"></a>424 Failed Dependency</h3><p>由于之前的某个请求发生的错误，导致当前请求失败，例如 PROPPATCH。（RFC 4918 WebDAV）</p><h3 id="425-Unordered-Collection"><a href="#425-Unordered-Collection" class="headerlink" title="425 Unordered Collection"></a>425 Unordered Collection</h3><p>在WebDav Advanced Collections 草案中定义，但是未出现在《WebDAV 顺序集协议》（RFC 3658）中。</p><h3 id="426-Upgrade-Required"><a href="#426-Upgrade-Required" class="headerlink" title="426 Upgrade Required"></a>426 Upgrade Required</h3><p>客户端应当切换到TLS/1.0。（RFC 2817）</p><h3 id="449-Retry-With"><a href="#449-Retry-With" class="headerlink" title="449 Retry With"></a>449 Retry With</h3><p>由微软扩展，代表请求应当在执行完适当的操作后进行重试。</p><h3 id="451-Unavailable-For-Legal-Reasons"><a href="#451-Unavailable-For-Legal-Reasons" class="headerlink" title="451 Unavailable For Legal Reasons"></a>451 Unavailable For Legal Reasons</h3><p>该请求因法律原因不可用。（RFC 7725）</p><h2 id="服务器错误编辑"><a href="#服务器错误编辑" class="headerlink" title="服务器错误编辑"></a>服务器错误编辑</h2><p>（5、6字头）<br>这类状态码代表了服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。除非这是一个HEAD 请求，否则服务器应当包含一个解释当前错误状态以及这个状况是临时的还是永久的解释信息实体。浏览器应当向用户展示任何在当前响应中被包含的实体。<br>这些状态码适用于任何响应方法。</p><h3 id="500-Internal-Server-Error"><a href="#500-Internal-Server-Error" class="headerlink" title="500 Internal Server Error"></a>500 Internal Server Error</h3><p>服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器端的源代码出现错误时出现。</p><h3 id="501-Not-Implemented"><a href="#501-Not-Implemented" class="headerlink" title="501 Not Implemented"></a>501 Not Implemented</h3><p>服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。</p><h3 id="502-Bad-Gateway"><a href="#502-Bad-Gateway" class="headerlink" title="502 Bad Gateway"></a>502 Bad Gateway</h3><p>作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。</p><h3 id="503-Service-Unavailable"><a href="#503-Service-Unavailable" class="headerlink" title="503 Service Unavailable"></a>503 Service Unavailable</h3><p>由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。如果能够预计延迟时间，那么响应中可以包含一个 Retry-After 头用以标明这个延迟时间。如果没有给出这个 Retry-After 信息，那么客户端应当以处理500响应的方式处理它。<br>注意：503状态码的存在并不意味着服务器在过载的时候必须使用它。某些服务器只不过是希望拒绝客户端的连接。</p><h3 id="504-Gateway-Timeout"><a href="#504-Gateway-Timeout" class="headerlink" title="504 Gateway Timeout"></a>504 Gateway Timeout</h3><p>作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。<br>注意：某些代理服务器在DNS查询超时时会返回400或者500错误</p><h3 id="505-HTTP-Version-Not-Supported"><a href="#505-HTTP-Version-Not-Supported" class="headerlink" title="505 HTTP Version Not Supported"></a>505 HTTP Version Not Supported</h3><p>服务器不支持，或者拒绝支持在请求中使用的 HTTP 版本。这暗示着服务器不能或不愿使用与客户端相同的版本。响应中应当包含一个描述了为何版本不被支持以及服务器支持哪些协议的实体。</p><h3 id="506-Variant-Also-Negotiates"><a href="#506-Variant-Also-Negotiates" class="headerlink" title="506 Variant Also Negotiates"></a>506 Variant Also Negotiates</h3><p>由《透明内容协商协议》（RFC 2295）扩展，代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。</p><h3 id="507-Insufficient-Storage"><a href="#507-Insufficient-Storage" class="headerlink" title="507 Insufficient Storage"></a>507 Insufficient Storage</h3><p>服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。WebDAV (RFC 4918)</p><h3 id="509-Bandwidth-Limit-Exceeded"><a href="#509-Bandwidth-Limit-Exceeded" class="headerlink" title="509 Bandwidth Limit Exceeded"></a>509 Bandwidth Limit Exceeded</h3><p>服务器达到带宽限制。这不是一个官方的状态码，但是仍被广泛使用。</p><h3 id="510-Not-Extended"><a href="#510-Not-Extended" class="headerlink" title="510 Not Extended"></a>510 Not Extended</h3><p>获取资源所需要的策略并没有被满足。（RFC 2774）</p><h3 id="600-Unparseable-Response-Headers"><a href="#600-Unparseable-Response-Headers" class="headerlink" title="600 Unparseable Response Headers"></a>600 Unparseable Response Headers</h3><p>源站没有返回响应头部，只返回实体内容。 [1]</p>]]></content>
      
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> http </tag>
            
            <tag> 状态码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现基于MYSQL验证的vsftpd虚拟用户</title>
      <link href="/2020/03/10/Linux/%E5%AE%9E%E7%8E%B0%E5%9F%BA%E4%BA%8EMYSQL%E9%AA%8C%E8%AF%81%E7%9A%84vsftpd%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/"/>
      <url>/2020/03/10/Linux/%E5%AE%9E%E7%8E%B0%E5%9F%BA%E4%BA%8EMYSQL%E9%AA%8C%E8%AF%81%E7%9A%84vsftpd%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h3><p>两台主机，一台ftp 服务器， 一台mysql server</p><a id="more"></a><hr><p><strong>mysql服务器：</strong><br>* yum源</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@localhost ~]</span><span class="comment">#vim /etc/yum.repos.d/mariadb.repo </span></span><br><span class="line"><span class="section">[mariadb]</span></span><br><span class="line"><span class="attr">name</span> = MariaDB</span><br><span class="line"><span class="attr">baseurl</span> = https://mirrors.ustc.edu.cn/mariadb/yum/<span class="number">10.2</span>/centos7-amd64/</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>安装与数据库建立表</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum clean <span class="keyword">all</span></span><br><span class="line">[root@localhost ~]# yum install -y mariadb mariadb-<span class="keyword">server</span></span><br><span class="line">[root@localhost ~]# systemctl <span class="keyword">start</span> mariadb</span><br><span class="line">[root@localhost ~]# mysql</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; use vsftpd</span><br><span class="line"><span class="keyword">Database</span> changed</span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; <span class="keyword">create</span> <span class="keyword">table</span> vuser (id <span class="type">int</span> auto_increment <span class="keyword">primary key</span>,username <span class="type">char</span>(<span class="number">30</span>),<span class="keyword">password</span> <span class="type">char</span>(<span class="number">50</span>) binary);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; <span class="keyword">insert</span> vuser(username,<span class="keyword">password</span>)<span class="keyword">values</span>(<span class="string">'ftp1'</span>,<span class="keyword">password</span>(<span class="string">'centos'</span>)),(<span class="string">'ftp2'</span>,<span class="keyword">password</span>(<span class="string">'magedu'</span>));</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">Records: <span class="number">2</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; <span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> vsftpd.vuser <span class="keyword">to</span> vsftpd@<span class="string">'192.168.64.%'</span> identified <span class="keyword">by</span> <span class="string">'centos'</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/Linux/%E5%AE%9E%E7%8E%B0%E5%9F%BA%E4%BA%8EMYSQL%E9%AA%8C%E8%AF%81%E7%9A%84vsftpd%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/612bf9afdd352896441e336a663b868e.png" alt="img"></p><hr><p><strong>ftp服务器:</strong><br>* 1编译安装pam_mysql.so</p><blockquote><p>下载地址：<a href="http://prdownloads.sourceforge.net/pam-mysql/pam_mysql-0.7RC1.tar.gz" target="_blank" rel="noopener">http://prdownloads.sourceforge.net/pam-mysql/pam_mysql-0.7RC1.tar.gz</a></p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost ~]# yum install gcc gcc-c++ pam-devel mariadb-devel</span><br><span class="line">[<span class="symbol">root@</span>localhost ~]# tar xf pam_mysql<span class="number">-0.7</span>RC1.tar.gz </span><br><span class="line">[<span class="symbol">root@</span>localhost ~/pam_mysql<span class="number">-0.7</span>RC1]# cd pam_mysql<span class="number">-0.7</span>RC1/</span><br><span class="line">[<span class="symbol">root@</span>localhost ~/pam_mysql<span class="number">-0.7</span>RC1]# ./configure  --with-pam-mods-dir=/lib64/security </span><br><span class="line">[<span class="symbol">root@</span>localhost ~/pam_mysql<span class="number">-0.7</span>RC1]#echo $?</span><br><span class="line"><span class="number">0</span></span><br><span class="line">[<span class="symbol">root@</span>localhost ~/pam_mysql<span class="number">-0.7</span>RC1]# make &amp;&amp; make install</span><br><span class="line">[<span class="symbol">root@</span>localhost ~/pam_mysql<span class="number">-0.7</span>RC1]#echo $?</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>2 创建pam配置文件</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim  /etc/pam.d/vsftpd.mysql </span><br><span class="line">auth required pam_mysql.so <span class="attribute">user</span>=vsftpd <span class="attribute">passwd</span>=centos <span class="attribute">host</span>=192.168.36.17  <span class="attribute">db</span>=vsftpd <span class="attribute">table</span>=vuser <span class="attribute">usercolumn</span>=username <span class="attribute">passwdcolumn</span>=password <span class="attribute">crypt</span>=2</span><br><span class="line">account required pam_mysql.so <span class="attribute">user</span>=vsftpd <span class="attribute">passwd</span>=centos <span class="attribute">host</span>=192.168.36.17 <span class="attribute">db</span>=vsftpd <span class="attribute">table</span>=vuser <span class="attribute">usercolumn</span>=username <span class="attribute">passwdcolumn</span>=password <span class="attribute">crypt</span>=2</span><br></pre></td></tr></table></figure><ul><li>3 修改vsftpd配置，调用pam配置</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># yum install vsftpd</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">pam_service_name=vsftpd.mysql     修改此行   </span><br><span class="line">加下面三行                                                                                 </span><br><span class="line">guest_enable=YES</span><br><span class="line">guest_username=vuser</span><br><span class="line">user_config_dir=<span class="regexp">/etc/vsftpd</span><span class="regexp">/vusers.d/</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># mkdir /etc/vsftpd/vusers.d/</span></span><br></pre></td></tr></table></figure><ul><li>4 创建系统用户</li></ul><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">useradd</span> -r -s /sbin/nologin -d /<span class="class"><span class="keyword">data</span>/ftproot vuser</span></span><br><span class="line"><span class="title">mkdir</span> /<span class="class"><span class="keyword">data</span>/ftproot</span></span><br></pre></td></tr></table></figure><ul><li>5 各个虚拟用户不同的ftp配置</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim  /etc/vsftpd/vusers.d/ftp1 </span><br><span class="line"><span class="attribute">anon_upload_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attribute">anon_mkdir_write_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attribute">anon_other_write_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attribute">local_root</span>=/data/ftp1</span><br><span class="line"></span><br><span class="line">vim /etc/vsftpd/vusers.d/ftp2</span><br><span class="line"><span class="attribute">anon_upload_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attribute">anon_mkdir_write_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attribute">anon_other_write_enable</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attribute">local_root</span>=/data/ftp2</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# mkdir /data/ftp&#123;1,2&#125; -pv</span><br></pre></td></tr></table></figure><ul><li>6禁止匿名用户登录</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@localhost ~]</span><span class="comment"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"><span class="attr">anonymous_enable</span>=<span class="literal">NO</span></span><br></pre></td></tr></table></figure><ul><li>7测试</li></ul>]]></content>
      
      
      <categories>
          
          <category> 存储 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ftp </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible–playbook用法与自己的yml范例总结</title>
      <link href="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E2%80%93playbook%E7%94%A8%E6%B3%95%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%9A%84yml%E8%8C%83%E4%BE%8B%E6%80%BB%E7%BB%93/"/>
      <url>/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E2%80%93playbook%E7%94%A8%E6%B3%95%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%9A%84yml%E8%8C%83%E4%BE%8B%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E2%80%93playbook%E7%94%A8%E6%B3%95%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%9A%84yml%E8%8C%83%E4%BE%8B%E6%80%BB%E7%BB%93/4c29ec0b0b101df9314dd9029da4239f.png" alt="img"></p><a id="more"></a><h2 id="命令用法"><a href="#命令用法" class="headerlink" title="命令用法"></a>命令用法</h2><ul><li>运行playbook的方式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ansible-playbook</span> &lt;<span class="selector-tag">filename</span><span class="selector-class">.yml</span>&gt; ... <span class="selector-attr">[options]</span></span><br></pre></td></tr></table></figure><ul><li>常见选项<br>–check -C 只检测可能会发生的改变，但不真正执行操作<br>–list-hosts 列出运行任务的主机<br>–list-tags 列出tag<br>–list-tasks 列出task<br>–limit 主机列表 只针对主机列表中的主机执行<br>-v -vv -vvv 显示过程</li><li>示例<br>ansible-playbook file.yml –check 只检测<br>ansible-playbook file.yml<br>ansible-playbook file.yml –limit websrvs</li></ul><h2 id="Playbook核心元素"><a href="#Playbook核心元素" class="headerlink" title="Playbook核心元素"></a>Playbook核心元素</h2><ul><li>Hosts 执行的远程主机列表</li><li>Tasks 任务集</li><li>Varniables 内置变量或自定义变量在playbook中调用</li><li>Templates 模板，可替换模板文件中的变量并实现一些简单逻辑的文件</li><li>Handlers 和 notity 结合使用，由特定条件触发的操作，满足条件方才执行，<br>否则不执行</li><li>tags 标签 指定某条任务执行，用于选择运行playbook中的部分代码。ansible<br>具有幂等性，因此会自动跳过没有变化的部分，即便如此，有些代码为测试其<br>确实没有发生变化的时间依然会非常地长。此时，如果确信其没有变化，就可<br>以通过tags跳过此些代码片断</li></ul><h2 id="playbook执行的文件为yml格式"><a href="#playbook执行的文件为yml格式" class="headerlink" title="playbook执行的文件为yml格式"></a>playbook执行的文件为yml格式</h2><ul><li>此为范例</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span>    <span class="comment"># 代表在所有主机执行</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span> <span class="comment">#以root身份执行</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hello</span> <span class="string">world</span> <span class="comment">#标签名</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">/usr/bin/wall</span> <span class="string">hello</span> <span class="string">world</span> <span class="comment">#执行的命令</span></span><br></pre></td></tr></table></figure><h2 id="与shell脚本对比"><a href="#与shell脚本对比" class="headerlink" title="与shell脚本对比"></a>与shell脚本对比</h2><p>SHELL脚本</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 安装Apache</span></span><br><span class="line">yum install --quiet -y httpd</span><br><span class="line"><span class="comment"># 复制配置文件</span></span><br><span class="line">cp /tmp/httpd.conf /etc/httpd/conf/httpd.conf</span><br><span class="line">cp/tmp/vhosts.conf /etc/httpd/conf.d/</span><br><span class="line"><span class="comment"># 启动Apache，并设置开机启动</span></span><br><span class="line">service httpd start</span><br><span class="line">chkconfig httpd on</span><br></pre></td></tr></table></figure><p>Playbook定义</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line"> tasks:</span><br><span class="line"> - name: <span class="string">"安装Apache"</span></span><br><span class="line"> yum: <span class="attribute">name</span>=httpd</span><br><span class="line"> - name: <span class="string">"复制配置文件"</span></span><br><span class="line"> copy: <span class="attribute">src</span>=/tmp/httpd.conf <span class="attribute">dest</span>=/etc/httpd/conf/</span><br><span class="line"> - name: <span class="string">"复制配置文件"</span></span><br><span class="line"> copy: <span class="attribute">src</span>=/tmp/vhosts.conf <span class="attribute">dest</span>=/etc/httpd/conf.cd/</span><br><span class="line"> - name: <span class="string">"启动Apache，并设置开机启动"</span></span><br><span class="line"> service: <span class="attribute">name</span>=httpd <span class="attribute">state</span>=started <span class="attribute">enabled</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure><h2 id="handlers和notify结合使用触发条件"><a href="#handlers和notify结合使用触发条件" class="headerlink" title="handlers和notify结合使用触发条件"></a>handlers和notify结合使用触发条件</h2><blockquote><ul><li>Handlers<br>是task列表，这些task与前述的task并没有本质上的不同,用于当关注的资源发生<br>变化时，才会采取一定的操作</li><li>Notify此action可用于在每个play的最后被触发，这样可避免多次有改变发生<br>时每次都执行指定的操作，仅在所有的变化发生完成后一次性地执行指定操作。<br>在notify中列出的操作称为handler，也即notify中调用handler中定义的操作</li></ul></blockquote><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E2%80%93playbook%E7%94%A8%E6%B3%95%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%9A%84yml%E8%8C%83%E4%BE%8B%E6%80%BB%E7%BB%93/27323280d21ff3571b8f3011a044e12b.png" alt="img"></p><h2 id="自己的yml范例"><a href="#自己的yml范例" class="headerlink" title="自己的yml范例"></a>自己的yml范例</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#install httpd</span></span><br><span class="line">- hosts: appsrvs</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: install package</span><br><span class="line">      yum: <span class="attribute">name</span>=httpd</span><br><span class="line">    - name:<span class="built_in"> config </span>file</span><br><span class="line">      copy: <span class="attribute">src</span>=files/httpd.conf <span class="attribute">dest</span>=/etc/httpd/conf/ <span class="attribute">backup</span>=<span class="literal">yes</span></span><br><span class="line">      notify: restart service</span><br><span class="line">      tags: config</span><br><span class="line">    - name: service</span><br><span class="line">      service: <span class="attribute">name</span>=httpd <span class="attribute">state</span>=started <span class="attribute">enabled</span>=<span class="literal">yes</span></span><br><span class="line">      tags: service</span><br><span class="line">    - name: restart service</span><br><span class="line">      service: <span class="attribute">name</span>=httpd <span class="attribute">state</span>=restarted </span><br><span class="line">      tags: service</span><br><span class="line">  handlers:</span><br><span class="line">    - name: restart service</span><br><span class="line">      service: <span class="attribute">name</span>=httpd <span class="attribute">state</span>=restarted</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E2%80%93playbook%E7%94%A8%E6%B3%95%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%9A%84yml%E8%8C%83%E4%BE%8B%E6%80%BB%E7%BB%93/fae3694d8539a312c50157124b7556d7.png" alt="img"></p><h2 id><a href="#" class="headerlink" title></a></h2><h3 id="item和变量使用"><a href="#item和变量使用" class="headerlink" title="item和变量使用"></a>item和变量使用</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># file var</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">app</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/data/&#123;&#123;item&#125;&#125;&#123;&#123;mark&#125;&#125;&#123;&#123;ansible_hostname&#125;&#125;.log</span> <span class="string">state=touch</span> </span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">abc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">xyz</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">123</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E2%80%93playbook%E7%94%A8%E6%B3%95%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%9A%84yml%E8%8C%83%E4%BE%8B%E6%80%BB%E7%BB%93/3b07c63e0f1afbabc1c306b7bf66edcf.png" alt="img"><br>* item 组</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">- hosts: appsrvs</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: create group</span><br><span class="line">      group: name=&#123;&#123;item&#125;&#125;</span><br><span class="line">      with_items:</span><br><span class="line">        - agroup</span><br><span class="line">        - bgroup</span><br><span class="line">        - cgroup</span><br><span class="line"></span><br><span class="line">    - name: create user</span><br><span class="line">      user: name=&#123;&#123;item.name&#125;&#125;  group=&#123;&#123;item.group&#125;&#125;</span><br><span class="line">      with_items:</span><br><span class="line">        - &#123;name: <span class="string">"aaa"</span>,group: <span class="string">"agroup"</span>&#125;</span><br><span class="line">        - &#123;name: <span class="string">"bbb"</span>,group: <span class="string">"bgroup"</span>&#125;</span><br><span class="line">        - &#123;name: <span class="string">"ccc"</span>,group: <span class="string">"cgroup"</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E2%80%93playbook%E7%94%A8%E6%B3%95%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%9A%84yml%E8%8C%83%E4%BE%8B%E6%80%BB%E7%BB%93/4ce06b7d76c2b70cc96aeef4e1b4cdae.png" alt="img"></p><h2 id="templates使用"><a href="#templates使用" class="headerlink" title="templates使用"></a>templates使用</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">test_ports:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="number">81</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">82</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">83</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">        <span class="attr">template:</span> <span class="string">src=test.conf.j2</span> <span class="string">dest=/data/test.conf</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible%E2%80%93playbook%E7%94%A8%E6%B3%95%E4%B8%8E%E8%87%AA%E5%B7%B1%E7%9A%84yml%E8%8C%83%E4%BE%8B%E6%80%BB%E7%BB%93/72c303ba2ddd3a2c5367ad9187225623.png" alt="img"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;%for</span> <span class="string">i</span> <span class="string">in</span> <span class="string">test_ports</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span>  <span class="string">&#123;&#123;i&#125;&#125;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">www.a.com</span></span><br><span class="line">    <span class="string">root</span>   <span class="string">/app/websitea/</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#123;%endfor%&#125;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># file var</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">appsrvs</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">vars.yml</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">1234</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/data/&#123;&#123;ansible_hostname&#125;&#125;&#123;&#123;mark&#125;&#125;&#123;&#123;port&#125;&#125;.log</span> <span class="string">state=touch</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible-role二进制批量部署mariadb</title>
      <link href="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/"/>
      <url>/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/</url>
      
        <content type="html"><![CDATA[<h2 id="总结构"><a href="#总结构" class="headerlink" title="总结构"></a>总结构</h2><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/c1f0bf54f5e0cf4587331e22812f6d20.png" alt="img"></p><a id="more"></a><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/f2d69972ef2ba98f253737dadd951422.png" alt="img"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- <span class="keyword">include</span>: <span class="keyword">group</span>.yml</span><br><span class="line">- <span class="keyword">include</span>: <span class="keyword">user</span>.yml</span><br><span class="line">- <span class="keyword">include</span>: mkdir.yml</span><br><span class="line">- <span class="keyword">include</span>: data.yml</span><br><span class="line">- <span class="keyword">include</span>: link.yml</span><br><span class="line">- <span class="keyword">include</span>: linkstate.yml</span><br><span class="line">- <span class="keyword">include</span>: conf.yml</span><br><span class="line">- <span class="keyword">include</span>: <span class="keyword">server</span>.yml</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/82595d709bf9d6ccba3546fdf364b00a.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: create group</span><br><span class="line">  group: <span class="attribute">name</span>=mysql <span class="attribute">system</span>=<span class="literal">yes</span> <span class="attribute">gid</span>=306</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/b23f26c6ce68d880fb6fdba3d7d82e8c.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: create user</span><br><span class="line">  user: <span class="attribute">name</span>=mysql <span class="attribute">system</span>=<span class="literal">yes</span> <span class="attribute">uid</span>=306 <span class="attribute">group</span>=306 <span class="attribute">home</span>=/data/mysql</span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/c628193bbe252a6daeaf23347099f1c5.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: mkdir</span><br><span class="line">  file: <span class="attribute">name</span>=/data/mysql <span class="attribute">owner</span>=root <span class="attribute">group</span>=mysql <span class="attribute">state</span>=directory</span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/df696a950abc9f6f72466cf926456b09.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: copy data</span><br><span class="line">  unarchive: <span class="attribute">src</span>=mariadb-10.2.23-linux-x86_64.tar.gz  <span class="attribute">dest</span>=/usr/local</span><br></pre></td></tr></table></figure><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/842e1dec7fb2b08120ecbbdcde9c2477.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: link</span><br><span class="line">  file: <span class="attribute">src</span>=/usr/local/mariadb-10.2.23-linux-x86_64 <span class="attribute">dest</span>=/usr/local/mysql <span class="attribute">state</span>=link</span><br></pre></td></tr></table></figure><h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/0b547aad2e8b61bd5181477e52ab5a47.png" alt="img"></p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: link <span class="keyword">state</span></span><br><span class="line">  file: name=/usr/local/mysql owner=root <span class="keyword">group</span>=mysql</span><br></pre></td></tr></table></figure><h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/b8a7bd8b680b58e033c2f32280a1e279.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- name: mkdir conf </span><br><span class="line">  file: <span class="attribute">path</span>=/etc/mysql <span class="attribute">state</span>=directory</span><br><span class="line">- name: copy conf</span><br><span class="line">  template: <span class="attribute">src</span>=my-large.cnf.j2 <span class="attribute">dest</span>=/etc/mysql/my.cnf</span><br></pre></td></tr></table></figure><h3 id="9"><a href="#9" class="headerlink" title="9"></a>9</h3><p><img src="/2020/03/10/%E8%87%AA%E5%8A%A8%E5%8C%96/ansible-role%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%B9%E9%87%8F%E9%83%A8%E7%BD%B2mariadb/ffd24e2bbcacaf1e2d7cbfe3491164d5.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- name: install</span><br><span class="line">  shell: /usr/local/mysql/scripts/mysql_install_db <span class="attribute">--datadir</span>=/data/mysql <span class="attribute">--user</span>=mysql</span><br><span class="line">- name: copy<span class="built_in"> service </span>conf</span><br><span class="line">  template: <span class="attribute">src</span>=mysql.server.j2 <span class="attribute">dest</span>=/etc/rc.d/init.d/mysqld</span><br><span class="line">- name: <span class="builtin-name">add</span> service</span><br><span class="line">  shell: chkconfig --<span class="builtin-name">add</span> mysqld</span><br><span class="line">- name: chmod</span><br><span class="line">  shell: chmod +x /etc/init.d/mysqld</span><br><span class="line">- name: start server</span><br><span class="line">  shell:<span class="built_in"> service </span>mysqld start</span><br><span class="line">- name: PATH</span><br><span class="line">  shell: echo <span class="attribute">PATH</span>=/usr/local/mysql/bin:$PATH &gt; /etc/profile.d/mysql</span><br><span class="line">- name: source</span><br><span class="line">  shell: source /etc/profile.d/mysql</span><br></pre></td></tr></table></figure><h3 id="10-安全初始化"><a href="#10-安全初始化" class="headerlink" title="10 安全初始化"></a>10 安全初始化</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/expect</span></span><br><span class="line">set timeout <span class="number">60</span></span><br><span class="line"><span class="meta">#set password [lindex $argv 0]</span></span><br><span class="line">spawn mysql_secure_installation</span><br><span class="line">expect &#123;</span><br><span class="line">        <span class="string">"enter for none"</span> &#123; <span class="built_in">send</span> <span class="string">"\r"</span><span class="comment">; exp_continue&#125;</span></span><br><span class="line">        <span class="string">"Change the root password"</span> &#123; <span class="built_in">send</span> <span class="string">"\r"</span><span class="comment">; exp_continue&#125;</span></span><br><span class="line">        <span class="string">"New password"</span> &#123; <span class="built_in">send</span> <span class="string">"new passwd\r"</span><span class="comment">; exp_continue&#125;</span></span><br><span class="line">        <span class="string">"Re-enter new password"</span> &#123; <span class="built_in">send</span> <span class="string">"newpasswd\r"</span><span class="comment">; exp_continue&#125;</span></span><br><span class="line">        <span class="string">"Remove anonymous users"</span> &#123; <span class="built_in">send</span> <span class="string">"\r"</span><span class="comment">; exp_continue&#125;</span></span><br><span class="line">        <span class="string">"Disallow root login remotely"</span> &#123; <span class="built_in">send</span> <span class="string">"n\r"</span><span class="comment">; exp_continue&#125;</span></span><br><span class="line">        <span class="string">"Remove test database and access to it"</span> &#123; <span class="built_in">send</span> <span class="string">"\r"</span><span class="comment">; exp_continue&#125;</span></span><br><span class="line">        <span class="string">"Reload privilege tables now"</span> &#123; <span class="built_in">send</span> <span class="string">"\r"</span><span class="comment">; exp_continue&#125;</span></span><br><span class="line">        <span class="string">"Cleaning up"</span> &#123; <span class="built_in">send</span> <span class="string">"\r"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">interact <span class="string">' &gt; mysql_secure_installation.exp</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keepalived+haproxy简单实现</title>
      <link href="/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/screenshot_20190607_151656.png" alt="img"></p><a id="more"></a><p>Keepalived环境准备<br>• 各节点时间必须同步 tzselect TZ=’Asia/Shanghai’; export TZ<br>• 关闭selinux和防火墙</p><p>• Keepalived安装：</p><p># yum install keepalived (CentOS)<br># apt-get install keepalived (Ubuntu)</p><p>程序环境：<br>• 主配置文件：/etc/keepalived/keepalived.conf<br>• 主程序文件：/usr/sbin/keepalived<br>• Unit File：<br>• /usr/lib/systemd/system/keepalived.service (CentOS)<br>• /lib/systemd/system/keepalived.service (Ubuntu)<br>• Unit File的环境配置文件：<br>• /etc/sysconfig/keepalived</p><p><img src="/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/QQ%E6%88%AA%E5%9B%BE20190607133256.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     <span class="symbol">acassen@</span>firewall.loc</span><br><span class="line">     <span class="symbol">failover@</span>firewall.loc</span><br><span class="line">     <span class="symbol">sysadmin@</span>firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.<span class="symbol">Cassen@</span>firewall.loc</span><br><span class="line">   smtp_server <span class="number">192.168</span><span class="number">.200</span><span class="number">.1</span>   #邮件</span><br><span class="line">   smtp_connect_timeout <span class="number">30</span>    #</span><br><span class="line">   router_id LVS_DEVEL  #虚拟router标识符，一般为当前主机名称，每个节点id不一样</span><br><span class="line">   vrrp_skip_check_adv_addr  #所有报文都检查比较消耗性能，此配置为如果收到的报文和上一个报文是同一个路由器则跳过检查报文中的源地址</span><br><span class="line">   vrrp_strict #严格遵守VRRP协议,不允许状况:<span class="number">1</span>,没有VIP地址,<span class="number">2.</span>单播邻居,<span class="number">3.</span>在VRRP版本<span class="number">2</span>中有IPv6地址. #使用单播时关闭</span><br><span class="line">   vrrp_garp_interval <span class="number">0</span>  #ARP报文发送延迟</span><br><span class="line">   vrrp_gna_interval <span class="number">0</span>  #消息发送延迟</span><br><span class="line">   vrrp_mcast_group4 <span class="number">224.0</span><span class="number">.0</span><span class="number">.18</span> #默认组播IP地址，<span class="number">224.0</span><span class="number">.0</span><span class="number">.0</span>到<span class="number">239.255</span><span class="number">.255</span><span class="number">.255</span></span><br><span class="line">   vrrp_iptables  #禁止生产iptables策略</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/QQ%E6%88%AA%E5%9B%BE20190607134113.png" alt="img"></p><p><img src="/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/QQ%E6%88%AA%E5%9B%BE20190607134752.png" alt="img"></p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance VIP1 &#123;   <span class="comment">#VIP名称，与业务有关</span></span><br><span class="line">    <span class="keyword">state</span> MASTER   <span class="comment">#默认角色，主，背服务器</span></span><br><span class="line">    interface eth0 <span class="comment">#接口</span></span><br><span class="line">    virtual_router_id <span class="number">1</span>  <span class="comment">#路由id 0-255</span></span><br><span class="line">    priority <span class="number">100</span>  <span class="comment">#优先级</span></span><br><span class="line">    advert_int <span class="number">3</span> <span class="comment">#探测时间间隔 秒</span></span><br><span class="line">    authentication &#123;  <span class="comment">#认证方式</span></span><br><span class="line">        auth_type PASS  <span class="comment">#类型：密码</span></span><br><span class="line">        auth_pass linux <span class="comment">#所有keepalived都要一致 只有前8个字符生效</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;   <span class="comment">#虚拟ip地址</span></span><br><span class="line">        <span class="number">192.168</span>.<span class="number">64.200</span>/<span class="number">24</span> dev eth0 <span class="keyword">label</span> eth0:<span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全局配置不加vrrp_iptables会生成iptables规则</p><p><img src="/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/QQ%E6%88%AA%E5%9B%BE20190607133934.png" alt="img"></p><p>到此实现ip漂移</p><h2 id="haproxy配置"><a href="#haproxy配置" class="headerlink" title="haproxy配置"></a>haproxy配置</h2><p>将haproxy监听在keepalived生成的虚拟ip上</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen WEB_PORT_80</span><br><span class="line">        bind 192.168.64.200:80</span><br><span class="line">        mode http</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.64.130:80 weight 2 check<span class="built_in"> port </span>80 inter 3s fall 3 rise 5</span><br><span class="line">       <span class="built_in"> server </span>web2 192.168.64.150:80 weight 1 check<span class="built_in"> port </span>80 inter 3s fall 3 rise 5</span><br><span class="line"><span class="comment">## 110与120两台都要配</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/screenshot_20190607_145511.png" alt="img"></p><p><img src="/2020/03/10/ha+kp/Keepalived-haproxy%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/screenshot_20190607_153314.png" alt="img">开启forward与监听虚拟端口的内核参数</p><p>[root@localhost ~]#sysctl -p<br>net.ipv4.ip_nonlocal_bind = 1<br>net.ipv4.ip_forward = 1</p><p>#sysctl -p<br>net.ipv4.ip_nonlocal_bind = 1<br>net.ipv4.ip_forward = 1</p><p>用户访问192.168.64.200，即可实现负载均衡和高可用</p>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> haproxy </tag>
            
            <tag> keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keeplived单播</title>
      <link href="/2020/03/10/ha+kp/Keeplived%E5%8D%95%E6%92%AD/"/>
      <url>/2020/03/10/ha+kp/Keeplived%E5%8D%95%E6%92%AD/</url>
      
        <content type="html"><![CDATA[<p>[root@localhost ~]#tcpdump -i eth0 host -nn 224.0.0.18</p><a id="more"></a><p><img src="/2020/03/10/ha+kp/Keeplived%E5%8D%95%E6%92%AD/screenshot_20190607_164251.png" alt="img"></p><p><img src="/2020/03/10/ha+kp/Keeplived%E5%8D%95%E6%92%AD/screenshot_20190607_172025.png" alt="img">前提</p><p><img src="/2020/03/10/ha+kp/Keeplived%E5%8D%95%E6%92%AD/screenshot_20190607_170705.png" alt="img">node1配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vrrp_instance</span> <span class="string">VIP1 &#123;</span></span><br><span class="line">    <span class="attr">state</span> <span class="string">MASTER</span></span><br><span class="line">    <span class="attr">interface</span> <span class="string">eth0</span></span><br><span class="line">    <span class="attr">virtual_router_id</span> <span class="string">1</span></span><br><span class="line">    <span class="attr">priority</span> <span class="string">100</span></span><br><span class="line">    <span class="attr">advert_int</span> <span class="string">3</span></span><br><span class="line">    <span class="attr">unicast_src_ip</span> <span class="string">192.168.64.110</span></span><br><span class="line">        <span class="attr">unicast_peer</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="attr">192.168.64.120</span></span><br><span class="line">        <span class="attr">&#125;</span></span><br><span class="line">    <span class="attr">authentication</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="attr">auth_type</span> <span class="string">PASS</span></span><br><span class="line">        <span class="attr">auth_pass</span> <span class="string">linux</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line">    <span class="attr">virtual_ipaddress</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="meta">192.168.64.200/24</span> <span class="string">dev eth0 label eth0:0</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/ha+kp/Keeplived%E5%8D%95%E6%92%AD/screenshot_20190607_170743.png" alt="img">node2配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vrrp_instance</span> <span class="string">VIP1 &#123;</span></span><br><span class="line">    <span class="attr">state</span> <span class="string">BACKUP</span></span><br><span class="line">    <span class="attr">interface</span> <span class="string">eth0</span></span><br><span class="line">    <span class="attr">virtual_router_id</span> <span class="string">1</span></span><br><span class="line">    <span class="attr">priority</span> <span class="string">80</span></span><br><span class="line">    <span class="attr">advert_int</span> <span class="string">3</span></span><br><span class="line">    <span class="attr">unicast_src_ip</span> <span class="string">192.168.64.120</span></span><br><span class="line">        <span class="attr">unicast_peer</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="attr">192.168.64.110</span></span><br><span class="line">        <span class="attr">&#125;</span></span><br><span class="line">    <span class="attr">authentication</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="attr">auth_type</span> <span class="string">PASS</span></span><br><span class="line">        <span class="attr">auth_pass</span> <span class="string">linux</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line">    <span class="attr">virtual_ipaddress</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="meta">192.168.64.200/24</span> <span class="string">dev eth0 label eth0:0</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/ha+kp/Keeplived%E5%8D%95%E6%92%AD/screenshot_20190607_172507.png" alt="img">抓包</p>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keepalived非抢占模式</title>
      <link href="/2020/03/10/ha+kp/keepalived%E9%9D%9E%E6%8A%A2%E5%8D%A0%E6%A8%A1%E5%BC%8F/"/>
      <url>/2020/03/10/ha+kp/keepalived%E9%9D%9E%E6%8A%A2%E5%8D%A0%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<hr><a id="more"></a><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">nopreempt #关闭VIP抢占，需要VIP state都为BACKUP</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">state  BACKUP  ####</span><br><span class="line">interface eth0</span><br><span class="line">virtual_router_id <span class="number">80</span></span><br><span class="line">priority <span class="number">100</span></span><br><span class="line">advert_int <span class="number">1</span></span><br><span class="line">nopreempt   ########## 配在优先级高的机器上</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">state  BACKUP  ######</span><br><span class="line">interface eth0</span><br><span class="line">virtual_router_id <span class="number">80</span></span><br><span class="line">priority <span class="number">90</span></span><br><span class="line">advert_int <span class="number">1</span></span><br><span class="line">nopreempt ##########<span class="number">33</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keepalived双主服务器</title>
      <link href="/2020/03/10/ha+kp/keepalived%E5%8F%8C%E4%B8%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/03/10/ha+kp/keepalived%E5%8F%8C%E4%B8%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>node1：虚拟200，201<br>node2：虚拟202，203</p><a id="more"></a><p>vip1 在node1为主 优先级100 node2为备 优先级80<br>vip2 在node2为主 优先级100 node1为备 优先级80</p><p><img src="/2020/03/10/ha+kp/keepalived%E5%8F%8C%E4%B8%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/screenshot_20190607_180440.png" alt="img">node1</p><p><img src="/2020/03/10/ha+kp/keepalived%E5%8F%8C%E4%B8%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/screenshot_20190607_180453.png" alt="img">node2</p>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keepalived邮件通知</title>
      <link href="/2020/03/10/ha+kp/keepalived%E9%82%AE%E4%BB%B6%E9%80%9A%E7%9F%A5/"/>
      <url>/2020/03/10/ha+kp/keepalived%E9%82%AE%E4%BB%B6%E9%80%9A%E7%9F%A5/</url>
      
        <content type="html"><![CDATA[<p>yum install mailx</p><p>脚本与mail.rc所有keeplive机器都要有</p><a id="more"></a><p>vim /etc/mail.rc<br>set from=1625317303@qq.com<br>set smtp=smtp.qq.com<br>set smtp-auth-user=1625317303@qq.com<br>set smtp-auth-password=ydqwzayxwuupijjav #邮箱授权码<br>set smtp-auth=login<br>set ssl-verify=ignore</p><p>编写通知脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/keepalived/check.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">contact=<span class="string">'1625317303@qq.com'</span></span><br><span class="line"><span class="function"><span class="title">notify</span></span>() &#123;</span><br><span class="line">mailsubject=<span class="string">"<span class="variable">$(hostname)</span> to be <span class="variable">$1</span>, vip  转移"</span></span><br><span class="line">mailbody=<span class="string">"<span class="variable">$(date +'%F %T')</span>: vrrp transition, <span class="variable">$(hostname)</span> changed to be <span class="variable">$1</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$mailbody</span>"</span> | mail -s <span class="string">"<span class="variable">$mailsubject</span>"</span> <span class="variable">$contact</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">master)</span><br><span class="line">notify master</span><br><span class="line">;;</span><br><span class="line">backup)</span><br><span class="line">notify backup</span><br><span class="line">;;</span><br><span class="line">fault)</span><br><span class="line">notify fault</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$(basename $0)</span> &#123;master|backup|fault&#125;"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">notify_master <span class="string">"/etc/keepalived/check.sh master"</span></span><br><span class="line">notify_backup <span class="string">"/etc/keepalived/check.sh backup"</span></span><br><span class="line">notify_fault <span class="string">"/etc/keepalived/check.sh fault"</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/10/ha+kp/keepalived%E9%82%AE%E4%BB%B6%E9%80%9A%E7%9F%A5/screenshot_20190607_200247.png" alt="img"></p><p>systemctl reload keepalived</p>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keepalived在3台或更多主机做高可用</title>
      <link href="/2020/03/10/ha+kp/keepalived%E5%9C%A83%E5%8F%B0%E6%88%96%E6%9B%B4%E5%A4%9A%E4%B8%BB%E6%9C%BA%E5%81%9A%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
      <url>/2020/03/10/ha+kp/keepalived%E5%9C%A83%E5%8F%B0%E6%88%96%E6%9B%B4%E5%A4%9A%E4%B8%BB%E6%9C%BA%E5%81%9A%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>node1</p><a id="more"></a><p><img src="/2020/03/10/ha+kp/keepalived%E5%9C%A83%E5%8F%B0%E6%88%96%E6%9B%B4%E5%A4%9A%E4%B8%BB%E6%9C%BA%E5%81%9A%E9%AB%98%E5%8F%AF%E7%94%A8/image-6.png" alt="img"></p><p><img src="/2020/03/10/ha+kp/keepalived%E5%9C%A83%E5%8F%B0%E6%88%96%E6%9B%B4%E5%A4%9A%E4%B8%BB%E6%9C%BA%E5%81%9A%E9%AB%98%E5%8F%AF%E7%94%A8/screenshot_20190607_204736.png" alt="img"></p><p>node2</p><p><img src="/2020/03/10/ha+kp/keepalived%E5%9C%A83%E5%8F%B0%E6%88%96%E6%9B%B4%E5%A4%9A%E4%B8%BB%E6%9C%BA%E5%81%9A%E9%AB%98%E5%8F%AF%E7%94%A8/image-7.png" alt="img"></p><p><img src="/2020/03/10/ha+kp/keepalived%E5%9C%A83%E5%8F%B0%E6%88%96%E6%9B%B4%E5%A4%9A%E4%B8%BB%E6%9C%BA%E5%81%9A%E9%AB%98%E5%8F%AF%E7%94%A8/screenshot_20190607_204811.png" alt="img"></p><p>node3</p><p><img src="/2020/03/10/ha+kp/keepalived%E5%9C%A83%E5%8F%B0%E6%88%96%E6%9B%B4%E5%A4%9A%E4%B8%BB%E6%9C%BA%E5%81%9A%E9%AB%98%E5%8F%AF%E7%94%A8/image-8.png" alt="img"></p><p><img src="/2020/03/10/ha+kp/keepalived%E5%9C%A83%E5%8F%B0%E6%88%96%E6%9B%B4%E5%A4%9A%E4%B8%BB%E6%9C%BA%E5%81%9A%E9%AB%98%E5%8F%AF%E7%94%A8/screenshot_20190607_204842.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keepalived配合脚本实现服务可用性检测</title>
      <link href="/2020/03/09/ha+kp/keepalived%E9%85%8D%E5%90%88%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%8F%AF%E7%94%A8%E6%80%A7%E6%A3%80%E6%B5%8B/"/>
      <url>/2020/03/09/ha+kp/keepalived%E9%85%8D%E5%90%88%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%8F%AF%E7%94%A8%E6%80%A7%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<p>keepalived调用外部的辅助脚本进行资源监控，并根据监控的结果状态能实现优先动态调整</p><a id="more"></a><p>vrrp_script:自定义资源监控脚本，vrrp实例根据脚本返回值进行下一步操作，脚本可被多个实例调用。<br>track_script:调用vrrp_script定义的脚本去监控资源，定义在实例之内，调用事先定义的vrrp_script<br>• 分两步：(1) 先定义一个脚本；(2) 调用此脚本</p><p>vrrp_script NAME{<br>script |<br>OPTIONS<br>}<br>track_script {<br>SCRIPT_NAME_1<br>SCRIPT_NAME_2<br>}</p><p>vrrp_script { #定义一个检测脚本，在global_defs 之外配置<br>script | # shell命令或脚本路径<br>interval # 间隔时间，单位为秒，默认1秒<br>timeout # 超时时间<br>weight # 权重，监测失败后会执行权重+操作<br>fall #脚本几次失败转换为失败<br>rise # 脚本连续监测成果后，把服务器从失败标记为成功的次数<br>user USERNAME [GROUPNAME] # 执行监测的用户或组<br>init_fail # 设置默认标记为失败状态，监测成功之后再转换为成功状态<br>}</p><p>1.基于ping实现</p><p>vim /etc/keepalived/ping.sh<br>#!/bin/bash<br>ping -c 2 192.168.64.1&gt;/dev/null<br>if [ $? -eq 0 ];then<br>exit 0<br>else<br>exit 2<br>fi</p><p><img src="/2020/03/09/ha+kp/keepalived%E9%85%8D%E5%90%88%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%8F%AF%E7%94%A8%E6%80%A7%E6%A3%80%E6%B5%8B/image-10.png" alt="img">-30</p><p>vrrp_script ping {<br>script /etc/keepalived/ping.sh<br>interval 2<br>weight -30<br>fall 3<br>rise 5<br>timeout 2<br>}</p><p>track_script {<br>ping<br>}</p><p><img src="/2020/03/09/ha+kp/keepalived%E9%85%8D%E5%90%88%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%8F%AF%E7%94%A8%E6%80%A7%E6%A3%80%E6%B5%8B/image-12.png" alt="img"></p><p>测试1，node1现为master，更改脚本ip为ping不通的ip</p><p><img src="/2020/03/09/ha+kp/keepalived%E9%85%8D%E5%90%88%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%8F%AF%E7%94%A8%E6%80%A7%E6%A3%80%E6%B5%8B/screenshot_20190608_132022.png" alt="img"></p><p>将脚本中ip恢复</p><p><img src="/2020/03/09/ha+kp/keepalived%E9%85%8D%E5%90%88%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%8F%AF%E7%94%A8%E6%80%A7%E6%A3%80%E6%B5%8B/screenshot_20190608_132326.png" alt="img"></p><p>2.基于第三方仲裁设备</p><p>vrrp_script chk_down { #基于第三方仲裁设备<br>script “/bin/bash -c ‘[[ -f /etc/keepalived/down ]]’ &amp;&amp; exit 0 || exit 7”<br>interval 1<br>weight -80<br>fall 3<br>rise 5<br>timeout 2<br>}<br>vrrp_instance VI_1 {<br>…<br>track_script {<br>chk_down<br>}<br>}</p><p>测试</p><p><img src="/2020/03/09/ha+kp/keepalived%E9%85%8D%E5%90%88%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%8F%AF%E7%94%A8%E6%80%A7%E6%A3%80%E6%B5%8B/image-13.png" alt="img"></p><p>3.haproxy</p><p>vrrp_script chk_nginx {<br>script “/etc/keepalived/chk_nginx.sh”<br>interval 1<br>weight -80<br>fall 3<br>rise 5<br>timeout 2<br>}<br>track_script {<br>chk_haproxy<br>}<br>[root@s1 ~]# yum install psmisc -y<br>[root@s1 ~]# cat /etc/keepalived/chk_nginx.sh<br>#!/bin/bash<br>/usr/bin/killall -0 nginx #可换haproxy<br>[root@s1 ~]# chmod a+x /etc/keepalived/chk_nginx.sh</p><p>可curl haproxy状态页 判断 haproxy是否存活</p>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> keeplived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ANSIBLE自动化工具</title>
      <link href="/2020/03/09/%E8%87%AA%E5%8A%A8%E5%8C%96/ANSIBLE%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
      <url>/2020/03/09/%E8%87%AA%E5%8A%A8%E5%8C%96/ANSIBLE%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>ANSIBLE自动化工具</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br></pre></td><td class="code"><pre><span class="line">rpm包安装：EPEL源</span><br><span class="line">配置文件</span><br><span class="line">    /etc/ansible/hosts          #管理主机的清单</span><br><span class="line">    /etc/ansible/roles/         #存放角色的目录</span><br><span class="line">    /etc/ansible/ansible.cfg    #主配置文件，配置ansible工作特性，一般默认就好</span><br><span class="line">程序</span><br><span class="line">    /usr/bin/ansible            #主程序，临时命令执行工具</span><br><span class="line">    /usr/bin/ansible-doc        #查看配置文档，模块功能查看工具</span><br><span class="line">    /usr/bin/ansible-galaxy     #下载/上传优秀代码或Roles模块的官网平台</span><br><span class="line">    /usr/bin/ansible-playbook   #定制自动化任务，编排剧本工具/usr/bin/ansible-pull 远程执行命令的工具</span><br><span class="line">    /usr/bin/ansible-vault      #文件加密工具</span><br><span class="line">    /usr/bin/ansible-console    #基于Console界面与用户交互的执行工具</span><br><span class="line"></span><br><span class="line">ansible命令</span><br><span class="line"></span><br><span class="line">ansible-doc:显示模块帮助</span><br><span class="line">    ansible-doc [options][module]</span><br><span class="line">    -a      显示所有模块的文档</span><br><span class="line">    -l      列出可用模块</span><br><span class="line">    -s      显示指定模块的playbook片段</span><br><span class="line">例：    ansible-doc ping   </span><br><span class="line">        ansible-doc -l</span><br><span class="line">        ansible-doc -s ping</span><br><span class="line"></span><br><span class="line">ansible</span><br><span class="line">    --version       #显示版本</span><br><span class="line">    -m module       #指定模块，默认command</span><br><span class="line">    -v              #显示详细过程 -vv -vvv</span><br><span class="line">    --list          #显示主机列表，</span><br><span class="line">    -C              #检查，并不执行</span><br><span class="line">    all             #表示所有清单列表的主机 ansible all -m ping</span><br><span class="line">    *               #通配符 ansible "*" -m ping      ansible 192.168.2.* -m ping</span><br><span class="line">    :               #逻辑或 ansible "web1:web2" --list</span><br><span class="line">    :&amp;              #逻辑与 ansible "web1:&amp;web2" -m ping</span><br><span class="line">    :!   用单引号    #逻辑非 ansible 'web1:&amp;web2' --list</span><br><span class="line"></span><br><span class="line">https://galaxy.ansible.com</span><br><span class="line">ansible-galaxy list                         #列出所有已安装的galaxy</span><br><span class="line">ansible-galaxy install geerlingguy.redis    #下载安装galaxy</span><br><span class="line">ansible-galaxy remove geerlingguy.redis     #删除galaxy</span><br><span class="line">ansible-pull                                #推送至远程，提升效率</span><br><span class="line">ansible-playbook</span><br><span class="line"></span><br><span class="line">ansible-vault</span><br><span class="line">功能：管理加密解密yml文件</span><br><span class="line">ansible-vault [create|decrypt|edit|encrypt|rekey|view]</span><br><span class="line">ansible-vault encrypt hello.yml             #加密</span><br><span class="line">ansible-vault decrypt hello.yml             #解密</span><br><span class="line">ansible-vault view hello.yml                #查看</span><br><span class="line">ansible-vault edit hello.yml                #编辑加密文件</span><br><span class="line">ansible-vault rekey hello.yml               #修改口令</span><br><span class="line">ansible-vault create new.yml                #创建新文件</span><br><span class="line"></span><br><span class="line">ansible常用模块</span><br><span class="line">command:在远程主机执行简单命令（默认是command，可以不用m选项）</span><br><span class="line">[root@localhost ~]# ansible web1 -a 'cat /etc/issue'</span><br><span class="line">[root@localhost ~]# ansible web1 -a 'ls -l /etc/selinux'</span><br><span class="line"></span><br><span class="line">shell：调用bash执行复杂命令（万能模块）</span><br><span class="line">[root@localhost ~]# ansible web1 -m shell -a 'sed -i "s/SELINUX=enforcing/SELINUX=disabled/"  /etc/selinux/config</span><br><span class="line">[root@localhost ~]# ansible web1 -a 'echo $HOSTNAME'</span><br><span class="line">[root@localhost ~]# ansible web1 -m shell -a 'tar -Jcvf /root/boot.tar.xz /boot/'</span><br><span class="line"></span><br><span class="line">script：在远程主机上运行ansible服务器上的脚本</span><br><span class="line">[root@localhost ~]# ansible web1 -m script -a '/data/hello.sh'</span><br><span class="line">copy：从主控端复制文件到远程主机</span><br><span class="line">[root@localhost ~]# ansible-doc -s copy</span><br><span class="line">[root@localhost ~]# ansible web1 -m copy -a ' src=/etc/selinux/config dest=/etc/selinux/config.bak mode=600 owner=huahua group=bin'</span><br><span class="line">[root@localhost ~]# ansible web1 -m copy -a ' src=/etc/selinux/config dest=/etc/selinux/ backup=yes' #默认覆盖，加入backup=yes备份。</span><br><span class="line">[root@localhost ~]# ansible web1 -m copy -a 'content="111\n222\n333" dest=/tmp/text.txt' #content指定内容，直接生成目标文件。</span><br><span class="line">[root@localhost ~]# ansible web1 -m copy -a 'content="[base]\nname=base\nbaseurl=file:///mnt/cdrom\ngpgcheck=0" dest=/etc/yum.repos.d/base.repo'   #批量创建yum源 </span><br><span class="line"></span><br><span class="line">fetch：从远程主机提取文件至主控端，copy相反，目录的话需要tar打包</span><br><span class="line">[root@localhost ~]# ansible-doc -s fetch</span><br><span class="line">[root@localhost ~]# ansible web1 -m fetch -a 'src=/etc/yum.repos.d/base.repo dest=/tmp/'            #将远程base.repo文件抓取放到本机tmp目录下</span><br><span class="line">file：设置文件属性</span><br><span class="line">[root@localhost ~]# ansible-doc -s file</span><br><span class="line">[root@localhost ~]# ansible web1 -m file -a 'path=/tmp/yum.log owner=huahua mode=000'        </span><br><span class="line">[root@localhost ~]# ansible web1 -m file -a 'src=/tmp/yum.log name=/tmp/yum.log.link state=link' </span><br><span class="line">         #创建软连接  </span><br><span class="line">[root@localhost ~]# ansible web1 -m file -a 'src=/tmp/yum.log name=/tmp/yum.log.hard state=hard' </span><br><span class="line">         #创建硬链接</span><br><span class="line">[root@localhost ~]# ansible web1 -m file -a 'path=/tmp/dir1 state=directory'     #创建文件夹</span><br><span class="line">[root@localhost ~]# ansible web1 -m file -a 'path=/tmp/f1.log state=touch'       #创建空文件</span><br><span class="line">[root@localhost ~]# ansible web1 -m file -a 'path=/tmp/f1.log state=absent'      #删除文件（目录）</span><br><span class="line">[root@localhost ~]# ansible web1 -m shell -a 'rm -rf /tmp/*'</span><br><span class="line"></span><br><span class="line">hostname：管理主机名</span><br><span class="line">[root@localhost ~]# ansible-doc -s hostname</span><br><span class="line">[root@localhost ~]# ansible 192.168.2.20 -m hostname -a 'name=centos7.6'    </span><br><span class="line"></span><br><span class="line">cron：计划任务</span><br><span class="line">[root@localhost ~]# ansible-doc -s cron</span><br><span class="line">[root@localhost ~]# ansible web2 -m cron -a 'name=synctime minute=*/5 \</span><br><span class="line">job="/usr/sbin/ntpdate 192.168.2.10 &amp;&gt; /dev/null"'</span><br><span class="line">[root@localhost ~]# ansible web2 -a 'crontab -l'</span><br><span class="line"></span><br><span class="line">yum：管理包</span><br><span class="line">[root@localhost ~]# ansible-doc -s yum</span><br><span class="line">[root@localhost ~]# ansible web1 -m yum -a 'name=httpd state=present'</span><br><span class="line">[root@localhost ~]# ansible web1 -m yum -a 'name=httpd state=absent'</span><br><span class="line"></span><br><span class="line">service：管理服务</span><br><span class="line">[root@localhost ~]# ansible-doc -s service</span><br><span class="line">[root@localhost ~]# ansible web1 -m service -a 'name=named state=started enabled=true'</span><br><span class="line">[root@localhost ~]# ansible web1 -m service -a 'name=named state=stopped'</span><br><span class="line"></span><br><span class="line">user：管理用户</span><br><span class="line">[root@localhost ~]# ansible-doc -s user</span><br><span class="line">[root@localhost ~]# ansible web1 -a 'getent passwd'</span><br><span class="line">[root@localhost ~]# ansible web1 -m user -a 'name=mysql system=yes shell=/sbin/nologin'</span><br><span class="line">[root@localhost ~]# ansible web1 -m user -a 'name=mysql state=absent'</span><br><span class="line">[root@localhost ~]# ansible web1 -m user -a 'name=mysql state=absent remove=yes'  </span><br><span class="line"></span><br><span class="line">YAML语言</span><br><span class="line">1、第一行写“---”       最后一行“...”     (建议不要省略)</span><br><span class="line">2、第二行建议写明功能用#注释</span><br><span class="line">3、缩进必须是统一的，不能空格和tab混用</span><br><span class="line">4、缩进的级别也必须是一致的，同样的缩进代表同样的级别，程序判断配置的级别是通过缩进结合换行来实现的</span><br><span class="line">5、YAML文件内容是区分大小写的,k/v的值均大小写敏感</span><br><span class="line">6、一个完整的代码块功能需要最少元素需包括name和task</span><br><span class="line">7、一个name只能包括一个task</span><br><span class="line">8、YAML文件扩展名通常为yml和yaml</span><br><span class="line"></span><br><span class="line">List：列表，所有元素均使用“-”打头</span><br><span class="line"></span><br><span class="line">Dictionary：字典，由多个key和value组成</span><br><span class="line">            ksy:value</span><br><span class="line"></span><br><span class="line">playbook的核心元素</span><br><span class="line">hosts:playbook配置文件作用的主机</span><br><span class="line">tasks：任务列表</span><br><span class="line">variables：变量</span><br><span class="line">templates：包含模板语法的文本文件</span><br><span class="line">handlers：由特定条件触发的任务</span><br><span class="line">roles：用于层次性、结构化地组织playbook。roles能够根据层次结构自动装载变量文件、tasks以及handlers</span><br><span class="line"></span><br><span class="line">运行playbook的方式</span><br><span class="line">ansible-playbook  ... [options]</span><br><span class="line">常见选项</span><br><span class="line">--check -C          #只检测可能会发生的改变，但不真正执行操作</span><br><span class="line">--list-hosts        #列出运行任务的主机</span><br><span class="line">--list-tags         #列出tag</span><br><span class="line">--list-tasks        #列出task</span><br><span class="line">--limit             #主机列表 只针对主机列表中的主机执行</span><br><span class="line">-v -vv -vvv         #显示过程</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# vim http.yml</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash">install httpd</span></span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: install package</span><br><span class="line">      yum: name=httpd</span><br><span class="line">    - name: cofig file</span><br><span class="line">      copy: src=/tmp/httpd.conf dest=/etc/httpd/conf/ backup=yes</span><br><span class="line">    - name: service</span><br><span class="line">      service: name=httpd state=started enabled=yes</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook -C http.yml</span><br><span class="line">[root@localhost ansible]# ansible-playbook http.yml</span><br><span class="line"></span><br><span class="line">触发handlers（handlers有notify触发）</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash">install httpd</span></span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: install package</span><br><span class="line">      yum: name=httpd</span><br><span class="line">    - name: cofig file</span><br><span class="line">      copy: src=/tmp/httpd.conf dest=/etc/httpd/conf/ backup=yes</span><br><span class="line">      notify: restart service</span><br><span class="line">    - name: service</span><br><span class="line">      service: name=httpd state=started enabled=yes</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">    - name: restart service</span><br><span class="line">      service: name=httpd state=restarted</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook http.yml</span><br><span class="line"></span><br><span class="line">tags标签（根据tags来实现部分功能）</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash">install httpd</span></span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: install package</span><br><span class="line">      yum: name=httpd</span><br><span class="line">    - name: cofig file</span><br><span class="line">      copy: src=/tmp/httpd.conf dest=/etc/httpd/conf/ backup=yes</span><br><span class="line">      notify: restart service</span><br><span class="line">      tags: config</span><br><span class="line">    - name: service</span><br><span class="line">      service: name=httpd state=started enabled=yes</span><br><span class="line">      tags: service</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">    - name: restart service</span><br><span class="line">      service: name=httpd state=restarted</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook -t config http.yml</span><br><span class="line">[root@localhost ansible]# ansible-playbook -t config,service http.yml       #选择多个标签</span><br><span class="line"></span><br><span class="line">ansible初步准备</span><br><span class="line">[root@localhost ~]# yum -y install ansible</span><br><span class="line">[root@localhost ~]# vim /etc/ansible/hosts      #加入清单列表</span><br><span class="line">[web1]</span><br><span class="line">192.168.2.20</span><br><span class="line">192.168.2.30</span><br><span class="line"></span><br><span class="line">[web2]</span><br><span class="line">192.168.2.30</span><br><span class="line">192.168.2.40</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# vim /etc/ansible/ansible.cfg </span><br><span class="line">log_path = /var/log/ansible.log             #开启日志</span><br><span class="line">module_name = shell                         #修改默认模块</span><br><span class="line">host_key_checking = False                   #取消对应服务器host_key的检查</span><br><span class="line"></span><br><span class="line">基于key验证，实现无秘钥登录管理</span><br><span class="line">[root@localhost ~]# ssh-keygen</span><br><span class="line">[root@localhost ~]# ssh-copy-id 192.168.2.20</span><br><span class="line">[root@localhost ~]# ssh-copy-id 192.168.2.30</span><br><span class="line">[root@localhost ~]# ssh-copy-id 192.168.2.40</span><br><span class="line"></span><br><span class="line">测试连通</span><br><span class="line">[root@localhost ~]# ansible web1 -m ping</span><br><span class="line">192.168.2.20 | SUCCESS =&gt; &#123;</span><br><span class="line">    "changed": false,</span><br><span class="line">    "ping": "pong"</span><br><span class="line">&#125;</span><br><span class="line">192.168.2.30 | SUCCESS =&gt; &#123;</span><br><span class="line">    "changed": false, </span><br><span class="line">    "ping": "pong"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ansible web2 -m ping</span><br><span class="line">192.168.2.30 | SUCCESS =&gt; &#123;    "changed": false, </span><br><span class="line">    "ping": "pong"</span><br><span class="line">&#125;</span><br><span class="line">192.168.2.40 | SUCCESS =&gt; &#123;</span><br><span class="line">    "changed": false, </span><br><span class="line">    "ping": "pong"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">playbook变量使用</span><br><span class="line">[root@localhost ansible]# ansible all -m setup  #查看所有变量</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook -e port=6869 file.yml        #命令行指定变量，优先级最高</span><br><span class="line">ansible_hostname</span><br><span class="line">ansible_memtotal_mb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">调用ansible_hostname变量</span></span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> file var</span></span><br><span class="line"> - hosts: web1</span><br><span class="line">   remote_user: root</span><br><span class="line"></span><br><span class="line">   tasks:</span><br><span class="line">     - name: file</span><br><span class="line">       file: name=/tmp/&#123;&#123;ansible_hostname&#125;&#125;.log state=touch     </span><br><span class="line"></span><br><span class="line">在清单里定义变量port和mark</span><br><span class="line">[root@localhost ansible]# vim /etc/ansible/hosts</span><br><span class="line">[web2]</span><br><span class="line">192.168.2.30 port=80</span><br><span class="line">192.168.2.40 port=8080</span><br><span class="line">[web2:vars]                 </span><br><span class="line">mark="_"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">调用变量</span></span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> file var</span></span><br><span class="line"> - hosts: web1</span><br><span class="line">   remote_user: root</span><br><span class="line"></span><br><span class="line">   tasks:</span><br><span class="line">     - name: file</span><br><span class="line">       file: name=/tmp/&#123;&#123; ansible_hostname &#125;&#125;&#123;&#123; mark &#125;&#125;&#123;&#123; port &#125;&#125;.log state=touch</span><br><span class="line"></span><br><span class="line">在playbook定义变量</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> file var</span></span><br><span class="line"> - hosts: web1</span><br><span class="line">   remote_user: root</span><br><span class="line">   vars_files:</span><br><span class="line">     - vars.yml                 #调用vars.yuml变量文件</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> file var</span></span><br><span class="line"> - hosts: web1</span><br><span class="line">   remote_user: root</span><br><span class="line">   vars:</span><br><span class="line">     - port: 1989               #文件内定义</span><br><span class="line"></span><br><span class="line">模板template</span><br><span class="line">文本文件，嵌套有脚本（使用模板编程语言编写）</span><br><span class="line">Jinja2语言，使用字面量，有下面形式</span><br><span class="line">    字符串：使用单引号或双引号</span><br><span class="line">    数字：整数，浮点数</span><br><span class="line">    列表：[item1, item2, ...]</span><br><span class="line">    元组：(item1, item2, ...)</span><br><span class="line">    字典：&#123;key1:value1, key2:value2, ...&#125;</span><br><span class="line">    布尔型：true/false</span><br><span class="line">算术运算：+, -, *, /, //, %, **</span><br><span class="line">比较操作：==, !=, &gt;, &gt;=, &lt;, &lt;=</span><br><span class="line">逻辑运算：and，or，not</span><br><span class="line">流表达式：For，If，When</span><br><span class="line"></span><br><span class="line">template功能：根据模块文件动态生成对应的配置文件</span><br><span class="line">    template文件必须存放于templates目录下，且命名为 .j2 结尾</span><br><span class="line">    yaml/yml 文件需和templates目录平级，目录结构如下：</span><br><span class="line"> ./</span><br><span class="line"> ├── temnginx.yml</span><br><span class="line"> └── templates</span><br><span class="line"> └── nginx.conf.j2</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash">nginx </span></span><br><span class="line">- hosts: web2</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: package</span><br><span class="line">      yum: name=nginx</span><br><span class="line">    - name: config</span><br><span class="line">      template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf</span><br><span class="line">      notify: restart</span><br><span class="line">    - name: service</span><br><span class="line">     service: name=nginx state=started enabled=yes</span><br><span class="line"></span><br><span class="line">   handlers:</span><br><span class="line">     - name: restart</span><br><span class="line">       service: name=nginx state=restarted</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# tree</span><br><span class="line">.</span><br><span class="line">├── nginx.yml</span><br><span class="line">└── templates</span><br><span class="line">    └── nginx.conf.j2  </span><br><span class="line">when条件判断</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash">install httpd</span></span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: install package</span><br><span class="line">      yum: name=httpd</span><br><span class="line">    - name: config file</span><br><span class="line">      template: src=templates/httpd.conf6.j2 dest=/etc/httpd/conf/httpd.conf</span><br><span class="line">      when: ansible_distribution_major_version == "6"</span><br><span class="line">      notify: restart service</span><br><span class="line">    - name: config file</span><br><span class="line">      template: src=templates/httpd.conf7.j2 dest=/etc/httpd/conf/httpd.conf</span><br><span class="line">      when: ansible_distribution_major_version == "7"</span><br><span class="line">    - name: service</span><br><span class="line">      service: name=httpd state=started enabled=yes</span><br><span class="line">      tags: service</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">    - name: restart service</span><br><span class="line">      service: name=httpd state=restarted</span><br><span class="line"></span><br><span class="line">迭代：with_items</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> file var</span></span><br><span class="line"> - hosts: web1</span><br><span class="line">   remote_user: root</span><br><span class="line"></span><br><span class="line">   tasks:</span><br><span class="line">     - name: file</span><br><span class="line">       file: name=/tmp/&#123;&#123;item&#125;&#125;.log state=touch</span><br><span class="line">       with_items:</span><br><span class="line">         - abc</span><br><span class="line">         - qwe</span><br><span class="line">         - 798</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: create user</span><br><span class="line">      user: name=&#123;&#123;item&#125;&#125;</span><br><span class="line">      with_items:</span><br><span class="line">        - huahua</span><br><span class="line">        - lili</span><br><span class="line">        - yangyang</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: create group</span><br><span class="line">      group: name=&#123;&#123;item&#125;&#125;</span><br><span class="line">      with_items:</span><br><span class="line">        - agroup</span><br><span class="line">        - bgroup</span><br><span class="line">        - cgroup</span><br><span class="line"></span><br><span class="line">    - name: create user</span><br><span class="line">      user: name=&#123;&#123;item.name&#125;&#125; group=&#123;&#123;item.group&#125;&#125;</span><br><span class="line">      with_items:</span><br><span class="line">        - &#123;name: "huahua",group: "agroup"&#125;</span><br><span class="line">        - &#123;name: "lili",group: "bgroup"&#125;</span><br><span class="line">        - &#123;name: "yangyang",group: "cgroup"&#125;</span><br><span class="line"></span><br><span class="line">template for if</span><br><span class="line">1</span><br><span class="line">[root@localhost templates]# pwd</span><br><span class="line">/tmp/ansible/templates</span><br><span class="line">[root@localhost templates]# vim test.j2         #模板文件</span><br><span class="line">&#123;%for i in ports  %&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  &#123;&#123;i&#125;&#125;</span><br><span class="line">    server_name www.a.com</span><br><span class="line">    root        /app/log/</span><br><span class="line">&#125;</span><br><span class="line">&#123;%endfor%&#125;</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# pwd</span><br><span class="line">/tmp/ansible</span><br><span class="line">[root@localhost ansible]# vim test.yml      #YAML文件调用</span><br><span class="line">---</span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">    ports:</span><br><span class="line">      - 81</span><br><span class="line">      - 82</span><br><span class="line">      - 83</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: template</span><br><span class="line">      template: src=test.j2 dest=/tmp/test.conf</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook -C test.yml</span><br><span class="line">[root@localhost ansible]# ansible-playbook test.yml </span><br><span class="line">[root@localhost ansible]# ansible web1 -a 'cat /tmp/test.conf'</span><br><span class="line">192.168.2.20 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  81</span><br><span class="line">    server_name www.a.com</span><br><span class="line">    root        /app/log/</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  82</span><br><span class="line">    server_name www.a.com</span><br><span class="line">    root        /app/log/</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  83</span><br><span class="line">    server_name www.a.com</span><br><span class="line">    root        /app/log/</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">2</span><br><span class="line">[root@localhost templates]# pwd</span><br><span class="line">/tmp/ansible/templates</span><br><span class="line">[root@localhost templates]# vim test2.j2 </span><br><span class="line">&#123;%for i in vhosts  %&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  &#123;&#123;i.port&#125;&#125;</span><br><span class="line">    server_name &#123;&#123;i.name&#125;&#125;</span><br><span class="line">    root     &#123;&#123;i.dir&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;%endfor%&#125;</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# pwd</span><br><span class="line">/tmp/ansible</span><br><span class="line">[root@localhost ansible]# vim test2.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">    vhosts:</span><br><span class="line">      - web1:</span><br><span class="line">        port: 81</span><br><span class="line">        name: www.a.com</span><br><span class="line">        dir: /tmp/webs</span><br><span class="line">      - web1:</span><br><span class="line">        port: 82</span><br><span class="line">        name: www.b.com</span><br><span class="line">        dir: /tmp/webs</span><br><span class="line">      - web1:</span><br><span class="line">        port: 83</span><br><span class="line">        name: www.c.com</span><br><span class="line">        dir: /tmp/webs</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: template</span><br><span class="line">      template: src=test2.j2 dest=/tmp/test2.conf</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook -C test2.yml</span><br><span class="line">[root@localhost ansible]# ansible-playbook test2.yml</span><br><span class="line">[root@localhost ansible]# ansible web1 -a "cat /tmp/test2.conf"</span><br><span class="line">192.168.2.30 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  81</span><br><span class="line">    server_name www.a.com</span><br><span class="line">    root     /tmp/webs</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  82</span><br><span class="line">    server_name www.b.com</span><br><span class="line">    root     /tmp/webs</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  83</span><br><span class="line">    server_name www.c.com</span><br><span class="line">    root     /tmp/webs</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">3</span><br><span class="line">[root@localhost templates]# pwd</span><br><span class="line">/tmp/ansible/templates</span><br><span class="line">[root@localhost templates]# vim test3.j2</span><br><span class="line">&#123;%for i in vhosts  %&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  &#123;&#123;i.port&#125;&#125;</span><br><span class="line">&#123;% if i.name is defined %&#125;</span><br><span class="line">    server_name  &#123;&#123;i.name&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">    root  &#123;&#123;i.dir&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;%endfor%&#125;</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# pwd</span><br><span class="line">/tmp/ansible</span><br><span class="line">[root@localhost ansible]# vim test3.yml</span><br><span class="line">---</span><br><span class="line">- hosts: web1</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">    vhosts:</span><br><span class="line">      - web1:</span><br><span class="line">        port: 81</span><br><span class="line">        # name: www.a.com</span><br><span class="line">        dir: /tmp/webs</span><br><span class="line">      - web1:</span><br><span class="line">        port: 82</span><br><span class="line">        name: www.b.com</span><br><span class="line">        dir: /tmp/webs</span><br><span class="line">      - web1:</span><br><span class="line">        port: 83</span><br><span class="line">        #name: www.c.com</span><br><span class="line">        dir: /tmp/webs</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: template</span><br><span class="line">      template: src=test3.j2 dest=/tmp/test3.conf</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook -C test3.yml</span><br><span class="line">[root@localhost ansible]# ansible-playbook test3.yml </span><br><span class="line">[root@localhost ansible]# ansible web1 -a 'cat /tmp/test3.conf'</span><br><span class="line">192.168.2.30 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">server&#123;</span><br><span class="line">    listen  81</span><br><span class="line">    root  /tmp/webs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">    listen  82</span><br><span class="line">    server_name  www.b.com</span><br><span class="line">    root  /tmp/webs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">    listen  83</span><br><span class="line">    root  /tmp/webs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Roles角色</span><br><span class="line">/roles/project/ :项目名称,有以下子目录</span><br><span class="line"></span><br><span class="line">  files/ ：存放由copy或script模块等调用的文件</span><br><span class="line"></span><br><span class="line">  templates/：template模块查找所需要模板文件的目录</span><br><span class="line"></span><br><span class="line">  tasks/：定义task,role的基本元素，至少应该包含一个名为main.yml的文件；</span><br><span class="line">其它的文件需要在此文件中通过include进行包含</span><br><span class="line"></span><br><span class="line">  handlers/：至少应该包含一个名为main.yml的文件；其它的文件需要在此</span><br><span class="line">文件中通过include进行包含</span><br><span class="line"></span><br><span class="line">  vars/：定义变量，至少应该包含一个名为main.yml的文件；其它的文件需要</span><br><span class="line">在此文件中通过include进行包含</span><br><span class="line"></span><br><span class="line">  meta/：定义当前角色的特殊设定及其依赖关系,至少应该包含一个名为</span><br><span class="line">main.yml的文件，其它文件需在此文件中通过include进行包含</span><br><span class="line"></span><br><span class="line">  default/：设定默认变量时使用此目录中的main.yml文件</span><br><span class="line"></span><br><span class="line">创建role的步骤</span><br><span class="line">  (1) 创建以roles命名的目录</span><br><span class="line">  (2) 在roles目录中分别创建以各角色名称命名的目录，如webservers等</span><br><span class="line">  (3) 在每个角色命名的目录中分别创建files、handlers、meta、tasks、</span><br><span class="line">templates和vars目录；用不到的目录可以创建为空目录，也可以不创建</span><br><span class="line">  (4) 在playbook文件中，调用各角色</span><br><span class="line"></span><br><span class="line">安装httpd</span><br><span class="line">目录结构</span><br><span class="line">[root@localhost ansible]# tree</span><br><span class="line">.</span><br><span class="line">├── role-httpd.yml</span><br><span class="line">└── roles</span><br><span class="line">    └── httpd</span><br><span class="line">        ├── files</span><br><span class="line">        │   ├── httpd.conf</span><br><span class="line">        │   └── index.html</span><br><span class="line">        └── tasks</span><br><span class="line">            ├── conf.yml</span><br><span class="line">            ├── data.yml</span><br><span class="line">            ├── install.yml</span><br><span class="line">            ├── main.yml</span><br><span class="line">            └── service.yml</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat conf.yml</span><br><span class="line">- name: config</span><br><span class="line">  copy: src=httpd.conf dest=/etc/httpd/conf/httpd.conf</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat data.yml </span><br><span class="line">- name: copy data file</span><br><span class="line">  copy: src=index.html dest=/var/www/html/index.html</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat install.yml </span><br><span class="line">- name: install package</span><br><span class="line">  yum: name=httpd</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat service.yml </span><br><span class="line">- name: service</span><br><span class="line">  service: name=httpd state=started enabled=yes</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat main.yml </span><br><span class="line">- include: install.yml</span><br><span class="line">- include: conf.yml</span><br><span class="line">- include: data.yml</span><br><span class="line">- include: service.yml</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# cat role-httpd.yml</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">test</span> httpd role</span></span><br><span class="line">- hosts: web1</span><br><span class="line"></span><br><span class="line">  roles:</span><br><span class="line">    - role: httpd</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook role-httpd.yml</span><br><span class="line"></span><br><span class="line">nginx安装</span><br><span class="line">目录结构</span><br><span class="line">[root@localhost ansible]# tree</span><br><span class="line">.</span><br><span class="line">├── role-httpd.yml</span><br><span class="line">├── role-nginx.yml</span><br><span class="line">└── roles</span><br><span class="line">    ├── httpd</span><br><span class="line">    │   ├── files</span><br><span class="line">    │   │   ├── httpd.conf</span><br><span class="line">    │   │   └── index.html</span><br><span class="line">    │   └── tasks</span><br><span class="line">    │       ├── conf.yml</span><br><span class="line">    │       ├── data.yml</span><br><span class="line">    │       ├── install.yml</span><br><span class="line">    │       ├── main.yml</span><br><span class="line">    │       └── service.yml</span><br><span class="line">    └── nginx</span><br><span class="line">        ├── files</span><br><span class="line">        │   └── index.html</span><br><span class="line">        ├── handlers</span><br><span class="line">        │   └── main.yml</span><br><span class="line">        ├── tasks</span><br><span class="line">        │   ├── config.yml</span><br><span class="line">        │   ├── data.yml</span><br><span class="line">        │   ├── group.yml</span><br><span class="line">        │   ├── install.yml</span><br><span class="line">        │   ├── main.yml</span><br><span class="line">        │   ├── service.yml</span><br><span class="line">        │   └── user.yml</span><br><span class="line">        ├── templates</span><br><span class="line">        │   └── nginx.conf.j2</span><br><span class="line">        └── vars</span><br><span class="line">            └── main.yml</span><br><span class="line"></span><br><span class="line">[root@localhost handlers]# cat main.yml</span><br><span class="line">- name: restart service</span><br><span class="line">  service: name=nginx state=restarted</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat config.yml </span><br><span class="line">- name: config</span><br><span class="line">  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf</span><br><span class="line">  notify: restart service</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat data.yml </span><br><span class="line">- name: copy data file</span><br><span class="line">  copy: src=index.html dest=/usr/share/nginx/html/index.html</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat group.yml </span><br><span class="line">- name: group</span><br><span class="line">  group: name=nginx system=yes gid=77 </span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat user.yml </span><br><span class="line">- name: user</span><br><span class="line">  user: name=nginx system=yes uid=77 group=nginx</span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat install.yml </span><br><span class="line">- name: install</span><br><span class="line">  yum: name=nginx </span><br><span class="line"></span><br><span class="line">[root@localhost tasks]# cat service.yml </span><br><span class="line">- name: service</span><br><span class="line">  service: name=nginx state=started enabled=yes</span><br><span class="line"></span><br><span class="line">[root@localhost nginx]# cat tasks/main.yml</span><br><span class="line">- include: group.yml</span><br><span class="line">- include: user.yml</span><br><span class="line">- include: install.yml</span><br><span class="line">- include: config.yml</span><br><span class="line">- include: data.yml</span><br><span class="line">- include: service.yml</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# cat role-nginx.yml </span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">test</span> nginx role</span></span><br><span class="line">- hosts: web2</span><br><span class="line"></span><br><span class="line">  roles:</span><br><span class="line">    - role: nginx</span><br><span class="line"></span><br><span class="line">tags标签和when判断</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">test</span> httpd role</span></span><br><span class="line">- hosts: web1:web3</span><br><span class="line"></span><br><span class="line">  roles:</span><br><span class="line">    - role: httpd</span><br><span class="line">      tags: web</span><br><span class="line">      when: ansible_distribution_major_version == "6"</span><br><span class="line">    - role: nginx</span><br><span class="line">      tags: web2</span><br><span class="line">      when: ansible_distribution_major_version == "7"</span><br><span class="line"></span><br><span class="line">[root@localhost ansible]# ansible-playbook -t web1 role-httpd-nginx.yml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KeepAlived与IPVS</title>
      <link href="/2020/03/09/ha+kp/KeepAlived%E4%B8%8EIPVS/"/>
      <url>/2020/03/09/ha+kp/KeepAlived%E4%B8%8EIPVS/</url>
      
        <content type="html"><![CDATA[<p>KeepAlived与IPVS</p><a id="more"></a><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">虚拟服务器配置参数：</span><br><span class="line">virtual<span class="built_in"> server </span>（虚拟服务）的定义：</span><br><span class="line">virtual_server<span class="built_in"> IP port </span>#定义虚拟主机IP地址及其端口</span><br><span class="line">virtual_server fwmark int #ipvs的防火墙打标，实现基于防火墙的负载均衡集群</span><br><span class="line">virtual_server<span class="built_in"> group </span>string #将多个虚拟服务器定义成组，将组定义成虚拟服务</span><br><span class="line">virtual_server<span class="built_in"> IP </span>port</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line">real_server &#123;</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line">&#125;</span><br><span class="line">…</span><br><span class="line">&#125;</span><br><span class="line">delay_loop &lt;INT&gt;：检查后端服务器的时间间隔</span><br><span class="line">lb_algo rr|wrr|lc|wlc|lblc|sh|dh：定义调度方法</span><br><span class="line">lb_kind NAT|DR|TUN：集群的类型</span><br><span class="line">persistence_timeout &lt;INT&gt;：持久连接时长</span><br><span class="line">protocol TCP|UDP|SCTP：指定服务协议</span><br><span class="line">sorry_server &lt;IPADDR&gt; &lt;PORT&gt;：所有RS故障时，备用服务器地址</span><br><span class="line">real_server &lt;IPADDR&gt; &lt;PORT&gt;</span><br><span class="line">&#123;</span><br><span class="line">weight &lt;INT&gt; RS权重</span><br><span class="line">notify_up &lt;STRING&gt;|&lt;QUOTED-STRING&gt; RS上线通知脚本</span><br><span class="line">notify_down &lt;STRING&gt;|&lt;QUOTED-STRING&gt; RS下线通知脚本</span><br><span class="line">HTTP_GET|SSL_GET|TCP_CHECK|SMTP_CHECK|MISC_CHEC K &#123; <span class="built_in">..</span>. &#125;：定义当前主机的健康状态检测方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/ha+kp/KeepAlived%E4%B8%8EIPVS/image-14.png" alt="img"></p><p><img src="/2020/03/09/ha+kp/KeepAlived%E4%B8%8EIPVS/image-15.png" alt="img"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">virtual_server</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.200</span> <span class="number">80</span> <span class="string">&#123;</span></span><br><span class="line"><span class="string">delay_loop</span> <span class="number">6</span></span><br><span class="line"><span class="string">lb_algo</span> <span class="string">wrr</span></span><br><span class="line"><span class="string">lb_kind</span> <span class="string">DR</span></span><br><span class="line"><span class="comment">#persistence_timeout 120 #会话保持</span></span><br><span class="line"><span class="string">protocol</span> <span class="string">TCP</span></span><br><span class="line"><span class="string">sorry_server</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.160</span> <span class="number">80</span>  <span class="comment">#也需要执行lvs脚本</span></span><br><span class="line"><span class="string">real_server</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.130</span> <span class="number">80</span> <span class="string">&#123;</span></span><br><span class="line"><span class="string">weight</span> <span class="number">1</span></span><br><span class="line"><span class="string">TCP_CHECK</span> <span class="string">&#123;</span></span><br><span class="line"><span class="string">connect_timeout</span> <span class="number">5</span></span><br><span class="line"><span class="string">nb_get_retry</span> <span class="number">3</span></span><br><span class="line"><span class="string">delay_before_retry</span> <span class="number">3</span></span><br><span class="line"><span class="string">connect_port</span> <span class="number">80</span></span><br><span class="line"> <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">real_server</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.150</span> <span class="number">80</span> <span class="string">&#123;</span></span><br><span class="line"><span class="string">weight</span> <span class="number">1</span></span><br><span class="line"><span class="string">TCP_CHECK</span> <span class="string">&#123;</span></span><br><span class="line"><span class="string">connect_timeout</span> <span class="number">5</span></span><br><span class="line"><span class="string">nb_get_retry</span> <span class="number">3</span></span><br><span class="line"><span class="string">delay_before_retry</span> <span class="number">3</span></span><br><span class="line"><span class="string">connect_port</span> <span class="number">80</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"> <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/ha+kp/KeepAlived%E4%B8%8EIPVS/image-17.png" alt="img"></p><p><img src="/2020/03/09/ha+kp/KeepAlived%E4%B8%8EIPVS/image-16.png" alt="img"></p><p>在realserver执行脚本，绑定vip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">vip=192.168.64.200</span><br><span class="line">mask=<span class="string">'255.255.255.255'</span></span><br><span class="line">dev=lo:1</span><br><span class="line"><span class="comment">#rpm -q httpd &amp;&gt; /dev/null || yum -y install httpd &amp;&gt;/dev/null</span></span><br><span class="line">service httpd start &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">"The httpd Server is Ready!"</span></span><br><span class="line"><span class="comment">#echo "&lt;h1&gt;`hostname`&lt;/h1&gt;" &gt; /var/www/html/index.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">    <span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> 2 &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    ifconfig <span class="variable">$dev</span> <span class="variable">$vip</span> netmask <span class="variable">$mask</span> <span class="comment">#broadcast $vip up</span></span><br><span class="line">    <span class="comment">#route add -host $vip dev $dev</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The RS Server is Ready!"</span></span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    ifconfig <span class="variable">$dev</span> down</span><br><span class="line">    <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The RS Server is Canceled!"</span></span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$(basename $0)</span> start|stop"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">测试代码：</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span> curl http://192.168.7.248 &amp;&amp; sleep 1;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="应用层监测"><a href="#应用层监测" class="headerlink" title="应用层监测"></a>应用层监测</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">HTTP_GET|SSL_GET：应用层检测</span></span><br><span class="line"><span class="meta">HTTP_GET|SSL_GET</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">url</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">path</span> <span class="string">&lt;URL_PATH&gt;：定义要监控的URL</span></span><br><span class="line"><span class="attr">status_code</span> <span class="string">&lt;INT&gt;：判断上述检测机制为健康状态的响应码</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"><span class="attr">connect_timeout</span> <span class="string">&lt;INTEGER&gt;：连接请求的超时时长</span></span><br><span class="line"><span class="attr">nb_get_retry</span> <span class="string">&lt;INT&gt;：重试次数</span></span><br><span class="line"><span class="attr">delay_before_retry</span> <span class="string">&lt;INT&gt;：重试之前的延迟时长</span></span><br><span class="line"><span class="attr">connect_ip</span> <span class="string">&lt;IP ADDRESS&gt;：向当前RS哪个IP地址发起健康状态检测请求</span></span><br><span class="line"><span class="attr">connect_port</span> <span class="string">&lt;PORT&gt;：向当前RS的哪个PORT发起健康状态检测请求</span></span><br><span class="line"><span class="attr">bindto</span> <span class="string">&lt;IP ADDRESS&gt;：发出健康状态检测请求时使用的源地址</span></span><br><span class="line"><span class="attr">bind_port</span> <span class="string">&lt;PORT&gt;：发出健康状态检测请求时使用的源端口</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"><span class="attr">real_server</span> <span class="string">192.168.7.103 80 &#123;</span></span><br><span class="line"><span class="attr">weight</span> <span class="string">1</span></span><br><span class="line"><span class="attr">HTTP_GET</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">url</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">path</span> <span class="string">/index.html</span></span><br><span class="line"><span class="attr">status_code</span> <span class="string">200</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"><span class="attr">connect_timeout</span> <span class="string">5</span></span><br><span class="line"><span class="attr">nb_get_retry</span> <span class="string">3</span></span><br><span class="line"><span class="attr">delay_before_retry</span> <span class="string">3</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/ha+kp/KeepAlived%E4%B8%8EIPVS/image-18.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keeplived </tag>
            
            <tag> IPVS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键编译安装mysql</title>
      <link href="/2020/03/09/Mysql/%E4%B8%80%E9%94%AE%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85mysql/"/>
      <url>/2020/03/09/Mysql/%E4%B8%80%E9%94%AE%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85mysql/</url>
      
        <content type="html"><![CDATA[<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum install bison bison-devel zlib-devel libcurl-devel libarchive-devel boost-devel gcc gcc-c++ cmake ncurses-devel gnutls-devel libxml2-devel openssl-devel libevent-devel libaio-devel -y</span><br><span class="line">useradd -r -s /sbin/nologin -d /data/mysql/ mysql</span><br><span class="line">mkdir /data/mysql -pv &gt;/dev/<span class="literal">null</span></span><br><span class="line">chown mysql.mysql /data/mysql</span><br><span class="line">tar xf mariadb-10.2.23.tar.gz</span><br><span class="line">cd mariadb-10.2.23/</span><br><span class="line">cmake . <span class="attribute">-DCMAKE_INSTALL_PREFIX</span>=/app/mysql <span class="attribute">-DMYSQL_DATADIR</span>=/data/mysql/ <span class="attribute">-DSYSCONFDIR</span>=/etc/mysql <span class="attribute">-DMYSQL_USER</span>=mysql <span class="attribute">-DWITH_INNOBASE_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITH_ARCHIVE_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITH_BLACKHOLE_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITH_PARTITION_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITHOUT_MROONGA_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITH_DEBUG</span>=0 <span class="attribute">-DWITH_READLINE</span>=1 <span class="attribute">-DWITH_SSL</span>=system <span class="attribute">-DWITH_ZLIB</span>=system <span class="attribute">-DWITH_LIBWRAP</span>=0 <span class="attribute">-DENABLED_LOCAL_INFILE</span>=1 <span class="attribute">-DMYSQL_UNIX_ADDR</span>=/data/mysql/mysql.sock <span class="attribute">-DDEFAULT_CHARSET</span>=utf8 <span class="attribute">-DDEFAULT_COLLATION</span>=utf8_general_ci</span><br><span class="line">make -j 12 &amp;&amp; make install</span><br><span class="line">echo <span class="string">'PATH=/app/mysql/bin:$PATH'</span> &gt; /etc/profile.d/mysql.sh</span><br><span class="line">source /etc/profile.d/mysql.sh</span><br><span class="line"><span class="comment">#/app/mysql/bin/mysql_secure_installation</span></span><br><span class="line">cp /app/mysql/support-files/mysql.server /etc/rc.d/init.d/mysql</span><br><span class="line">chkconfig --<span class="builtin-name">add</span> mysqld</span><br><span class="line">cat &gt; /etc/my.cnf.d/my.cnf  &lt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-yaml-nginx</title>
      <link href="/2020/03/09/k8s/k8s-yaml-nginx/"/>
      <url>/2020/03/09/k8s/k8s-yaml-nginx/</url>
      
        <content type="html"><![CDATA[<p>nginx</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">linux-nginx-deployment-label</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">linux-nginx-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">linux</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">linux-nginx-selector</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">linux-nginx-selector</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-nginx-container</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.qh.net/linux/nginx-web1:2019-05-03_18_26_52</span></span><br><span class="line">        <span class="comment">#command: ["/apps/tomcat/bin/run_tomcat.sh"]</span></span><br><span class="line">        <span class="comment">#imagePullPolicy: IfNotPresent</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"password"</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"123456"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"age"</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"18"</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">2Gi</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">1Gi</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-images</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/usr/local/nginx/html/webapp/images</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">false</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-static</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/usr/local/nginx/html/webapp/static</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-images</span></span><br><span class="line">        <span class="attr">nfs:</span></span><br><span class="line">          <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.7</span><span class="number">.108</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/k8sdata/linux36/images</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-static</span></span><br><span class="line">        <span class="attr">nfs:</span></span><br><span class="line">          <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.7</span><span class="number">.108</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/k8sdata/linux36/static</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">linux-nginx-service-label</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">linux-nginx-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">linux</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30002</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">linux-nginx-selector</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> yaml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-yaml-tomcat</title>
      <link href="/2020/03/09/k8s/k8s-yaml-tomcat/"/>
      <url>/2020/03/09/k8s/k8s-yaml-tomcat/</url>
      
        <content type="html"><![CDATA[<p>k8s-yaml-tomcat</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">linux-tomcat-app1-deployment-label</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">linux-tomcat-app1-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">linux</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">linux-tomcat-app1-selector</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">linux-tomcat-app1-selector</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-tomcat-app1-container</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">harbor.qh.net/linux36/tomcat-app1:2019-05-03_11-29-30</span> </span><br><span class="line">        <span class="comment">#command: ["/apps/tomcat/bin/run_tomcat.sh"]</span></span><br><span class="line">        <span class="comment">#imagePullPolicy: IfNotPresent</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"password"</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"123456"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"age"</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"18"</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">"2048Mi"</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">"1024Mi"</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-images</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/data/tomcat/webapps/myapp/images</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">false</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-static</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/data/tomcat/webapps/myapp/static</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-images</span></span><br><span class="line">        <span class="attr">nfs:</span></span><br><span class="line">          <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.7</span><span class="number">.108</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/k8sdata/linux/images</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux36-static</span></span><br><span class="line">        <span class="attr">nfs:</span></span><br><span class="line">          <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.7</span><span class="number">.108</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/k8sdata/linux/static</span></span><br><span class="line">      <span class="attr">nodeSelector:</span> <span class="comment">#位置在当前containers参数结束后的部分</span></span><br><span class="line">        <span class="attr">project:</span> <span class="string">linux36</span> <span class="comment">#指定的label标签     </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">linux-tomcat-app1-service-label</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">linux-tomcat-app1-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">linux</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30003</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">linux-tomcat-app1-selector</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yaml </tag>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keepalived架构实验</title>
      <link href="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/"/>
      <url>/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-19.png" alt="img">架构图</p><a id="more"></a><h2 id="110配置"><a href="#110配置" class="headerlink" title="110配置"></a>110配置</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">yum install keepalived haproxy</span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line">vrrp_iptables #开启</span><br><span class="line">vrrp_instance VIP1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">   <span class="built_in"> interface </span>eth0</span><br><span class="line">    virtual_router_id 1</span><br><span class="line">    priority 80</span><br><span class="line">    advert_int 3</span><br><span class="line">    unicast_src_ip 192.168.64.110</span><br><span class="line">        unicast_peer &#123;</span><br><span class="line">            192.168.64.120</span><br><span class="line">        &#125;</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass linux</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.64.200/24 dev eth0 label eth0:0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl start keepalived</span><br><span class="line">yum install haproxy</span><br><span class="line">vim /etc/haproxy/haproxy.cfg</span><br><span class="line"></span><br><span class="line">listen WEB_PORT_80</span><br><span class="line">        bind 192.168.64.200:80</span><br><span class="line">        mode http</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.64.130:80 weight 2 check<span class="built_in"> port </span>80 inter 3s fall 3 rise 5</span><br><span class="line">       <span class="built_in"> server </span>web2 192.168.64.140:80 weight 1 check<span class="built_in"> port </span>80 inter 3s fall 3 rise 5</span><br><span class="line">listen MYSQL_PORT_3306</span><br><span class="line">        bind 192.168.64.200:3306</span><br><span class="line">        mode http</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.64.150:3306 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">systemctl start haproxy</span><br></pre></td></tr></table></figure><h2 id="120配置"><a href="#120配置" class="headerlink" title="120配置"></a>120配置</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">yum install keepalived haproxy</span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line">vrrp_iptables #开启</span><br><span class="line">vrrp_instance VIP1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">   <span class="built_in"> interface </span>eth0</span><br><span class="line">    virtual_router_id 1</span><br><span class="line">    priority 80</span><br><span class="line">    advert_int 3</span><br><span class="line">    unicast_src_ip 192.168.64.120</span><br><span class="line">        unicast_peer &#123;</span><br><span class="line">            192.168.64.110</span><br><span class="line">        &#125;</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass linux</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.64.200/24 dev eth0 label eth0:0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">yum install haproxy</span><br><span class="line">vim /etc/haproxy/haproxy.cfg</span><br><span class="line"></span><br><span class="line">listen WEB_PORT_80</span><br><span class="line">        bind 192.168.64.200:80</span><br><span class="line">        mode http</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.64.130:80 weight 2 check<span class="built_in"> port </span>80 inter 3s fall 3 rise 5</span><br><span class="line">       <span class="built_in"> server </span>web2 192.168.64.140:80 weight 1 check<span class="built_in"> port </span>80 inter 3s fall 3 rise 5</span><br><span class="line">listen MYSQL_PORT_3306</span><br><span class="line">        bind 192.168.64.200:3306</span><br><span class="line">        mode http</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.64.150:3306 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">systemctl start haproxy</span><br></pre></td></tr></table></figure><h2 id="150配置"><a href="#150配置" class="headerlink" title="150配置"></a>150配置</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yy mariadb mariadb-serverv nfs-utils</span><br><span class="line">systemctl <span class="keyword">start</span> mariadb.service</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> wpdb.* <span class="keyword">to</span> <span class="string">'wpuser'</span>@<span class="string">'192.168.64.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'wordpress'</span></span><br><span class="line">mkdir /<span class="keyword">data</span>/nginx</span><br><span class="line"></span><br><span class="line">vim /etc/exports</span><br><span class="line">/<span class="keyword">data</span>/nginx <span class="number">192.168</span><span class="number">.64</span><span class="number">.0</span>/<span class="number">24</span>(rw,<span class="keyword">sync</span>)</span><br><span class="line"></span><br><span class="line">useradd nginx -s /sbin/nologin -u <span class="number">2000</span></span><br><span class="line">chown nginx:nginx /<span class="keyword">data</span>/nginx/ -R</span><br><span class="line">systemctl <span class="keyword">start</span> nfs</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-28.png" alt="img"></p><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-27.png" alt="img"></p><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-20.png" alt="img"></p><p>wordpress配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cd</span> <span class="string">/data/nginx</span></span><br><span class="line"><span class="attr">tar</span> <span class="string">xf wordpress-5.0.3-zh_CN.tar.gz</span></span><br><span class="line"><span class="attr">mv</span> <span class="string">wordpress/* .</span></span><br><span class="line"><span class="attr">rm</span> <span class="string">wordpress/ -rf</span></span><br><span class="line"><span class="attr">cp</span> <span class="string">wp-config-sample.php wp-config.php</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-25.png" alt="img"></p><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-26.png" alt="img"></p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">'AUTH_KEY'</span>,         <span class="string">'--M0bn,;,lc]O8KI+9l mS&gt;U*g[&#123;Sx/KxM-+g|X^?RgkOo&#125;|*&#123;S;*X$qw*,.yyva'</span>);</span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">'SECURE_AUTH_KEY'</span>,  <span class="string">'!YDPc(n_UVfz)q5Vo3&#123;g,vm $aB=-LLTeM.tOdpYtN+nTw!NKzC77w,xW92T;B`.'</span>);</span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">'LOGGED_IN_KEY'</span>,    <span class="string">'*&amp;J.n^q8o4H/F ff;5PA!E7y1k1Y=Lt:KK+7Z2jvW*5xXr ==c-K^t&amp;)jmm5CsQ;'</span>);</span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">'NONCE_KEY'</span>,        <span class="string">'019noHvOs#&#123;I;k?%q&amp;,.n0DzUWfrOV&#125;d^-bvt*HljD[KCB!='</span>);</span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">'SECURE_AUTH_SALT'</span>, <span class="string">'HuCEXpJ|yZVJK$is&gt;PF#XdH&#125;ap+Tie ?$OGL&#125;T+H)*a U5-;%Y/t(!mk$2^`E '</span>);</span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">'LOGGED_IN_SALT'</span>,   <span class="string">'^N&amp;N1LM/&gt;tXsF4KF.2dq9Q8&lt;%&gt;Q`H37-sS^mvMP$svxL|+B?63+SgT(nucvr(cE5'</span>);</span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">'NONCE_SALT'</span>,       <span class="string">'&#123;pg)o-f+yskq#:F])/]G#QMN|8o&#125;S@?b37hA0u-bI)|Ngi(I];6&#123;/kJd|&amp;~xM/'</span>);</span><br></pre></td></tr></table></figure><h2 id="130配置"><a href="#130配置" class="headerlink" title="130配置"></a>130配置</h2><p>一键安装Nginx</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &gt; onenginx.<span class="keyword">sh</span> &lt; /etc/<span class="keyword">profile</span>.d/nginx.<span class="keyword">sh</span></span><br><span class="line">sed -i <span class="string">"s@\/scripts$fastcgi_script_name@$document_root$fastcgi_script_name@g"</span> /apps/nginx/<span class="keyword">conf</span>/nginx.<span class="keyword">conf</span></span><br><span class="line">/apps/nginx/sbin/nginx -V</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>一键安装PHP</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; onephp.sh &lt;&lt; EOF</span><br><span class="line">yum  install -y  wget vim pcre pcre-devel openssl openssl-devel libicu-devel gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses ncurses-devel curl curl-devel krb5-devel libidn libidn-devel openldap openldap-devel nss_ldap jemalloc-devel cmake boost-devel bison automake libevent libevent-devel gd gd-devel libtool* libmcrypt libmcrypt-devel mcrypt mhash libxslt libxslt-devel readline readline-devel gmp gmp-devel libcurl libcurl-devel openjpeg-devel</span><br><span class="line"><span class="keyword">cd</span> <span class="string">/root</span></span><br><span class="line"><span class="comment">#wget https://www.php.net/distributions/php-7.2.19.tar.xz</span></span><br><span class="line">tar xf php-7.1.30.tar.gz</span><br><span class="line"><span class="keyword">cd</span> php-7.1.30/</span><br><span class="line"><span class="string">./configure</span> <span class="params">--prefix=/apps/php</span> <span class="params">--enable-fpm</span> <span class="params">--with-fpm-user=www</span> <span class="params">--with-fpm-group=www</span> <span class="params">--with-pear</span> <span class="params">--with-curl</span> <span class="params">--with-png-dir</span> <span class="params">--with-freetype-dir</span> <span class="params">--with-iconv</span> <span class="params">--with-mhash</span> <span class="params">--with-zlib</span> <span class="params">--with-xmlrpc</span> <span class="params">--with-xsl</span> <span class="params">--with-openssl</span> <span class="params">--with-mysqli</span> <span class="params">--with-pdo-mysql</span> <span class="params">--disable-debug</span> <span class="params">--enable-zip</span> <span class="params">--enable-sockets</span> <span class="params">--enable-soap</span> <span class="params">--enable-inline-optimization</span> <span class="params">--enable-xml</span> <span class="params">--enable-ftp</span> <span class="params">--enable-exif</span> <span class="params">--enable-wddx</span> <span class="params">--enable-bcmath</span> <span class="params">--enable-calendar</span> <span class="params">--enable-shmop</span> <span class="params">--enable-dba</span> <span class="params">--enable-sysvsem</span> <span class="params">--enable-sysvshm</span> <span class="params">--enable-sysvmsg</span></span><br><span class="line">make -j 4 &amp;&amp; make install</span><br><span class="line"><span class="keyword">cd</span> <span class="string">/apps/php/etc/php-fpm.d/</span></span><br><span class="line">cp www.conf.default www.conf</span><br><span class="line">sed -i <span class="string">"s/= www/= nginx/"</span> www.conf</span><br><span class="line"><span class="keyword">cd</span> <span class="string">/apps/php/etc/</span></span><br><span class="line">cp php-fpm.conf.default php-fpm.conf</span><br><span class="line"><span class="string">/apps/php/sbin/php-fpm</span> -t</span><br><span class="line">useradd nginx -s <span class="string">/sbin/nologin</span> -u 2000</span><br><span class="line"><span class="string">/apps/php/sbin/php-fpm</span> -c <span class="string">/apps/php/etc/php.ini</span></span><br><span class="line">ps -ef | grep php-fpm</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>挂载nfs</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nfs-utils</span><br><span class="line">showmount -e <span class="number">192.168</span><span class="number">.64</span><span class="number">.150</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-23.png" alt="img"></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t nfs <span class="number">192.168</span>.<span class="number">64.150</span><span class="symbol">:/data/nginx</span> /apps/nginx/html/</span><br></pre></td></tr></table></figure><p>准备php测试页面</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; <span class="regexp">/apps/</span>nginx<span class="regexp">/html/i</span>ndex.php &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">vim <span class="regexp">/apps/</span>nginx<span class="regexp">/conf/</span>nginx.conf</span><br><span class="line"><span class="variable">$document_root</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-21.png" alt="img"></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nginx</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-22.png" alt="img"></p><h2 id="140同130"><a href="#140同130" class="headerlink" title="140同130"></a>140同130</h2><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-24.png" alt="img"></p><p>页面配置</p><p><img src="/2020/03/09/ha+kp/keepalived%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/image-29.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> haproxy </tag>
            
            <tag> keeplived </tag>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键安装Nginx</title>
      <link href="/2020/03/09/Nginx/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Nginx/"/>
      <url>/2020/03/09/Nginx/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Nginx/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vim lrzsz tree screen psmisc lsof tcpdump wget ntpdate gcc gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel net-tools iotop bc zip unzip zlib-devel bash-completion nfs-utils automake libxml2 libxml2-devel libxslt libxslt-devel perl perl-ExtUtils-Embed</span><br><span class="line">useradd nginx -s /sbin/nologin -u 2000</span><br><span class="line">cd /root</span><br><span class="line">wget https://nginx.org/download/nginx-1.15.12.tar.gz</span><br><span class="line">tar xvf nginx-1.15.12.tar.gz</span><br><span class="line">cd nginx-1.15.12/</span><br><span class="line">./configure --prefix=/apps/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">echo 'PATH=/apps/nginx/sbin:$PATH' &gt; /etc/profile.d/nginx.sh</span><br><span class="line">sed -i "s@\/scripts$fastcgi_script_name@$document_root$fastcgi_script_name@g" /apps/nginx/conf/nginx.conf</span><br><span class="line">/apps/nginx/sbin/nginx -V</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键安装php</title>
      <link href="/2020/03/09/php/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85php/"/>
      <url>/2020/03/09/php/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85php/</url>
      
        <content type="html"><![CDATA[<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">yum  install -y  wget vim pcre pcre-devel openssl openssl-devel libicu-devel gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses ncurses-devel curl curl-devel krb5-devel libidn libidn-devel openldap openldap-devel nss_ldap jemalloc-devel cmake boost-devel bison automake libevent libevent-devel gd gd-devel libtool* libmcrypt libmcrypt-devel mcrypt mhash libxslt libxslt-devel readline readline-devel gmp gmp-devel libcurl libcurl-devel openjpeg-devel</span><br><span class="line"><span class="keyword">cd</span> <span class="string">/root</span></span><br><span class="line"><span class="comment">#wget https://www.php.net/distributions/php-7.2.19.tar.xz</span></span><br><span class="line">tar xf php-7.1.30.tar.gz</span><br><span class="line"><span class="keyword">cd</span> php-7.1.30/</span><br><span class="line"><span class="string">./configure</span> <span class="params">--prefix=/apps/php</span> <span class="params">--enable-fpm</span> <span class="params">--with-fpm-user=www</span> <span class="params">--with-fpm-group=www</span> <span class="params">--with-pear</span> <span class="params">--with-curl</span> <span class="params">--with-png-dir</span> <span class="params">--with-freetype-dir</span> <span class="params">--with-iconv</span> <span class="params">--with-mhash</span> <span class="params">--with-zlib</span> <span class="params">--with-xmlrpc</span> <span class="params">--with-xsl</span> <span class="params">--with-openssl</span> <span class="params">--with-mysqli</span> <span class="params">--with-pdo-mysql</span> <span class="params">--disable-debug</span> <span class="params">--enable-zip</span> <span class="params">--enable-sockets</span> <span class="params">--enable-soap</span> <span class="params">--enable-inline-optimization</span> <span class="params">--enable-xml</span> <span class="params">--enable-ftp</span> <span class="params">--enable-exif</span> <span class="params">--enable-wddx</span> <span class="params">--enable-bcmath</span> <span class="params">--enable-calendar</span> <span class="params">--enable-shmop</span> <span class="params">--enable-dba</span> <span class="params">--enable-sysvsem</span> <span class="params">--enable-sysvshm</span> <span class="params">--enable-sysvmsg</span></span><br><span class="line">make -j 4 &amp;&amp; make install</span><br><span class="line"><span class="keyword">cd</span> <span class="string">/apps/php/etc/php-fpm.d/</span></span><br><span class="line">cp www.conf.default www.conf</span><br><span class="line">sed -i <span class="string">"s/= www/= nginx/"</span> www.conf</span><br><span class="line"><span class="keyword">cd</span> <span class="string">/apps/php/etc/</span></span><br><span class="line">cp php-fpm.conf.default php-fpm.conf</span><br><span class="line"><span class="string">/apps/php/sbin/php-fpm</span> -t</span><br><span class="line"><span class="comment">#useradd nginx -s /sbin/nologin -u 2000</span></span><br><span class="line"><span class="string">/apps/php/sbin/php-fpm</span> -c <span class="string">/apps/php/etc/php.ini</span></span><br><span class="line">ps -ef | grep php-fpm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis缓存基本概念</title>
      <link href="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
      <url>/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="一-：-缓存-概念-："><a href="#一-：-缓存-概念-：" class="headerlink" title="一 ： 缓存 概念 ："></a>一 ： 缓存 概念 ：</h2><p>缓存是为了调节速度不一致的两个或多个不同的物质的速度，在中间对速度较快的一方起到一个加<br>速访问速度较慢的一方的作用，比如 CPU 的一级、二级缓存是保存了 CPU 最近经常访问的数据，内存是保存 CPU 经常访问硬盘的数据，而且硬盘也有大小不一的缓存，甚至是物理服务器的 raid 卡有也缓存，都是为了起到加速 CPU 访问硬盘数据的目的，因为 CPU 的速度太快了，CPU 需要的数据硬盘往往不能在短时间内满足 CPU 的需求，因此 PCU 缓存、内存、Raid 卡以及硬盘缓存就在一定程度上满足了 CPU 的数据需求，即 CPU 从缓存读取数据可以大幅提高 CPU 的工作效率。</p><a id="more"></a><p><img src="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/image-30-1024x575.png" alt="img"></p><h2 id="1-1-：-系统缓存"><a href="#1-1-：-系统缓存" class="headerlink" title="1 .1 ： 系统缓存"></a>1 .1 ： 系统缓存</h2><h3 id="1-1-1：buffer-与-cache："><a href="#1-1-1：buffer-与-cache：" class="headerlink" title="1.1.1：buffer 与 cache："></a>1.1.1：buffer 与 cache：</h3><p>buffer：缓冲也叫写缓冲，一般用于写操作，可以将数据先写入内存在写入磁盘，buffer 一般用于写缓冲，用于解决不同介质的速度不一致的缓冲，先将数据临时写入到里自己最近的地方，以提高写入速度，CPU 会把数据线写到内存的磁盘缓冲区，然后就认为数据已经写入完成看，然后内核的线程在后面的时间在写入磁盘，所以服务器突然断电会丢失内存中的部分数据。<br>cache：缓存也叫读缓存，一般用于读操作，CPU 读文件从内存读，如果内存没有就先从硬盘读到内存再读到 CPU，将需要频繁读取的数据放在里自己最近的缓存区域，下次读取的时候即可快速读取。</p><h3 id="1-1-2：cache-的保存位置："><a href="#1-1-2：cache-的保存位置：" class="headerlink" title="1.1.2：cache 的保存位置："></a>1.1.2：cache 的保存位置：</h3><p>客户端：浏览器<br>内存：本地服务器、远程服务器<br>硬盘：本机硬盘、远程服务器硬盘</p><h3 id="1-1-3：cache-的特性："><a href="#1-1-3：cache-的特性：" class="headerlink" title="1.1.3：cache 的特性："></a>1.1.3：cache 的特性：</h3><p>自动过期：给缓存的数据加上有效时间，超出时间后自动过期删除<br>过期时间：强制过期，源网站更新图片后 CDN 是不会更新的，需要强制是图片缓存过期<br>命中率：即缓存的读取命中率</p><h2 id="1-2-：-用户层缓存："><a href="#1-2-：-用户层缓存：" class="headerlink" title="1.2 ： 用户层缓存："></a>1.2 ： 用户层缓存：</h2><h3 id="1-2-1：DNS-缓存："><a href="#1-2-1：DNS-缓存：" class="headerlink" title="1.2.1：DNS 缓存："></a>1.2.1：DNS 缓存：</h3><p>默认为 60 秒，即 60 秒之内在访问同一个域名就不在进行 DNS 解析：<br>查看 chrome 浏览器的 DNS 缓存：<br>chrome://net-internals/#dns</p><p><img src="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/image-31.png" alt="img"></p><h3 id="1-2-2：火狐浏览器缓存："><a href="#1-2-2：火狐浏览器缓存：" class="headerlink" title="1.2.2：火狐浏览器缓存："></a>1.2.2：火狐浏览器缓存：</h3><p><img src="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/image-32.png" alt="img"></p><h3 id="1-2-3：浏览器缓存过期机制："><a href="#1-2-3：浏览器缓存过期机制：" class="headerlink" title="1.2.3：浏览器缓存过期机制："></a>1.2.3：浏览器缓存过期机制：</h3><h4 id="1-2-3-1-：-最后修改时间："><a href="#1-2-3-1-：-最后修改时间：" class="headerlink" title="1.. 2. 3.1 ： 最后修改时间："></a>1.. 2. 3.1 ： 最后修改时间：</h4><p>系统调用会获取文件的最后修改时间，如果没有发生变化就返回给浏览器 304 的状态码，表示没有发生变化，然后浏览器就使用的本地的缓存展示资源，</p><p><img src="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/image-33.png" alt="img"></p><h4 id="1-2-3-2-：Etag-标记"><a href="#1-2-3-2-：Etag-标记" class="headerlink" title="1. 2. 3.2 ：Etag 标记"></a>1. 2. 3.2 ：Etag 标记</h4><p>基于 Etag 标记是否一致做判断页面是否发生过变化，比如基于 Nginx 的 etag on 来实现</p><p><img src="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/image-34.png" alt="img"></p><h4 id="1-2-3-3-：-过期时间："><a href="#1-2-3-3-：-过期时间：" class="headerlink" title="1.. 2. 3.3 ： 过期时间："></a>1.. 2. 3.3 ： 过期时间：</h4><p>以上两种都需要发送请求，即不管资源是否过期都要发送请求进行协商，这样会消耗不必要的时间，因此有了缓存的过期时间，即第一次请求资源的时候带一个资源的过期时间，默认为 30 天，当前这种方式使用的比表较多，但是无法保证客户的时间都是准确并且一致的，因此假如一个最大生存周期，使用用户本地的时间计算缓存数据是否超过多少天，下面的过期时间为 2027 年，但是缓存的最大生存周期计算为天等于 3650 天即 10 年，过期时间如下：</p><p><img src="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/image-35.png" alt="img"></p><h2 id="1-3-：-CDN-缓存"><a href="#1-3-：-CDN-缓存" class="headerlink" title="1.3 ： CDN 缓存"></a>1.3 ： CDN 缓存</h2><h3 id="1-3-1：什么是-CND："><a href="#1-3-1：什么是-CND：" class="headerlink" title="1.3.1：什么是 CND："></a>1.3.1：什么是 CND：</h3><p>内容分发网络（Content Delivery Network），通过将服务内容分发至全网加速节点，利用全球调度系统使用户能够就近获取，有效降低访问延迟，提升服务可用性，CDN 第一降低机房的使用带宽，因为很多资源通过 CDN 就直接返回用户了，第二解决不同运营商之间的互联，因为可以让联通的网络访问联通让电信的网络访问电信，起到加速用户访问的目的， 第三：解决用户访问的地域问题，就近返回用户资源。<br>百度 CDN：<a href="https://cloud.baidu.com/product/cdn.html" target="_blank" rel="noopener">https://cloud.baidu.com/product/cdn.html</a><br>阿里 CDN：<a href="https://www.aliyun.com/product/cdn?spm=5176.8269123.416540.50.728y8n" target="_blank" rel="noopener">https://www.aliyun.com/product/cdn?spm=5176.8269123.416540.50.728y8n</a><br>腾讯 CDN：<a href="https://www.qcloud.com/product/cdn" target="_blank" rel="noopener">https://www.qcloud.com/product/cdn</a></p><h3 id="1-3-2：用户请求-CDN-流程："><a href="#1-3-2：用户请求-CDN-流程：" class="headerlink" title="1.3.2：用户请求 CDN 流程："></a>1.3.2：用户请求 CDN 流程：</h3><p>提前对静态内容进行预缓存，避免大量的请求回源，导致主站网络带宽被打满而导致数据无法更新，另外 CDN 可以将数据根据访问的热度不同而进行不同级别的缓存，例如访问量最高的资源访问 CDN边缘节点的内存，其次的放在 SSD 或者 SATA，再其次的放在云存储，这样兼顾了速度与成本。</p><p><img src="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/image-36.png" alt="img"></p><h3 id="1-3-3：CDN-主要优势："><a href="#1-3-3：CDN-主要优势：" class="headerlink" title="1.3.3：CDN 主要优势："></a>1.3.3：CDN 主要优势：</h3><p>提前对静态内容进行预缓存，避免大量的请求回源，导致主站网络带宽被打满而导致数据无法更新，另外 CDN 可以将数据根据访问的热度不同而进行不同级别的缓存，例如访问量最高的资源访问 CDN边缘节点的内存，其次的放在 SSD 或者 SATA，再其次的放在云存储，这样兼顾了速度与成本。缓存-缓存到最快的地方如内存，缓存的数据准确命中率高，访问速度就快<br>调度准确-将用户调度到最近的边缘节点<br>性能优化-CDN 专门用于缓存响应速度快<br>安全相关-抵御攻击<br>节省带宽：由于用户请求由边缘节点响应，因此大幅降低到源站带宽。</p><h2 id="1-4-：应用层缓存："><a href="#1-4-：应用层缓存：" class="headerlink" title="1.4 ：应用层缓存："></a>1.4 ：应用层缓存：</h2><p>Nginx、PHP 等 web 服务可以设置应用缓存以加速响应用户请求，另外有些解释性语言比如 PHP/Python不能直接运行，需要先编译成字节码，但字节码需要解释器解释为机器码之后才能执行，因此字节码也是一种缓存，有时候会出现程序代码上线后字节码没有更新的现象。</p><h2 id="1-5-：-其他层面缓存"><a href="#1-5-：-其他层面缓存" class="headerlink" title="1.5 ： 其他层面缓存"></a>1.5 ： 其他层面缓存</h2><p>CPU 缓存(L1 的数据缓存和 L1 的指令缓存)、二级缓存、三级缓存</p><p><img src="/2020/03/09/redis/Redis%E7%BC%93%E5%AD%98%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/image-37.png" alt="img"></p><p>磁盘缓存<br>RAID 卡<br>分布式缓存：redis、memcache</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># MegaCli64 -LDinfo -Lall -aAll</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis对比memcached</title>
      <link href="/2020/03/09/redis/redis%E5%AF%B9%E6%AF%94memcached/"/>
      <url>/2020/03/09/redis/redis%E5%AF%B9%E6%AF%94memcached/</url>
      
        <content type="html"><![CDATA[<p>支持数据的持久化：可以将内存中的数据保持在磁盘中，重启 redis 服务或者服务器之后可以从备份文件中恢复数据到内存继续使用。</p><a id="more"></a><p>支持更多的数据类型：支持 string(字符串)、hash(哈希数据)、list(列表)、set(集合)、zet(有序集合)支持数据的备份：可以实现类似于数据的 master-slave 模式的数据备份，另外也支持使用快照+AOF。支持更大的 value 数据：memcache 单个 key value 最大只支持 1MB，而 redis 最大支持 512MB。Redis 是单线程，而 memcache 是多线程，所以单机情况下没有 memcache 并发高，但 redis 支持分布式集群以实现更高的并发，单 Redis 实例可以实现数万并发。</p><p>支持集群横向扩展：基于 redis cluster 的横向扩展，可以实现分布式集群，大幅提升性能和数据安全性。<br>都是基于 C 语言开发。</p><h3 id="redis-典型应用场景："><a href="#redis-典型应用场景：" class="headerlink" title="redis 典型应用场景："></a>redis 典型应用场景：</h3><p>Session 共享：常见于 web 集群中的 Tomcat 或者 PHP 中多 web 服务器 session 共享<br>消息队列：ELK 的日志缓存、部分业务的订阅发布系统<br>计数器：访问排行榜、商品浏览数等和次数相关的数值统计场景<br>缓存：数据查询、电商网站商品信息、新闻内容<br>微博/微信社交场合：共同好友、点赞评论等</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> redis </tag>
            
            <tag> memcached </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis安装及使用</title>
      <link href="/2020/03/09/redis/Redis%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/03/09/redis/Redis%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>官方下载地址：<a href="http://download.redis.io/releases/" target="_blank" rel="noopener">http://download.redis.io/releases/</a></p><a id="more"></a><h3 id="yum-安装-redis："><a href="#yum-安装-redis：" class="headerlink" title="yum 安装 redis："></a>yum 安装 redis：</h3><p>在 centos 系统上需要安装 epel 源。</p><p>安装 redis</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">yum</span> <span class="selector-tag">install</span> <span class="selector-tag">redis</span> –<span class="selector-tag">y</span></span><br><span class="line"># <span class="selector-tag">systemctl</span> <span class="selector-tag">start</span> <span class="selector-tag">redis</span> &amp;&amp; <span class="selector-tag">systemctl</span> <span class="selector-tag">enable</span> <span class="selector-tag">redis</span></span><br><span class="line"><span class="selector-attr">[root@redis-s3 ~]</span># <span class="selector-tag">redis-cli</span></span><br><span class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">info</span></span><br><span class="line"># <span class="selector-tag">Server</span></span><br><span class="line"><span class="selector-tag">redis_version</span><span class="selector-pseudo">:3.2.12</span></span><br><span class="line"><span class="selector-tag">redis_git_sha1</span><span class="selector-pseudo">:00000000</span></span><br><span class="line"><span class="selector-tag">redis_git_dirty</span><span class="selector-pseudo">:0</span></span><br><span class="line"><span class="selector-tag">redis_build_id</span><span class="selector-pseudo">:7897e7d0e13773f</span></span><br><span class="line"><span class="selector-tag">redis_mode</span><span class="selector-pseudo">:standalone</span></span><br><span class="line"><span class="selector-tag">os</span><span class="selector-pseudo">:Linux</span> 3<span class="selector-class">.10</span><span class="selector-class">.0-862</span><span class="selector-class">.el7</span><span class="selector-class">.x86_64</span> <span class="selector-tag">x86_64</span></span><br><span class="line"><span class="selector-tag">arch_bits</span><span class="selector-pseudo">:64</span></span><br></pre></td></tr></table></figure><h3 id="编译安装-redis："><a href="#编译安装-redis：" class="headerlink" title="编译安装 redis："></a>编译安装 redis：</h3><p>下载当前最新 release 版本 redis 源码包：</p><p><a href="https://redis.io/download" target="_blank" rel="noopener">https://redis.io/download</a></p><p><img src="/2020/03/09/redis/Redis%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/image-39.png" alt="img"></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">官方的安装命令：</span><br><span class="line"><span class="meta"># pwd</span></span><br><span class="line">/usr/local/src</span><br><span class="line"><span class="meta"># tar xf redis-5.0.3.tar.gz</span></span><br><span class="line"><span class="meta"># cd redis-5.0.3</span></span><br><span class="line"><span class="meta"># make PREFIX=/usr/local/redis install</span></span><br><span class="line"><span class="meta"># ll /usr/local/redis/</span></span><br><span class="line">total <span class="number">0</span></span><br><span class="line">drwxr-xr-x <span class="number">2</span> root root <span class="number">134</span> Dec <span class="number">13</span> <span class="number">09</span>:<span class="number">21</span> bin</span><br><span class="line"><span class="meta"># mkdir /usr/local/redis/etc</span></span><br><span class="line"><span class="meta"># cp redis.conf /usr/local/redis/etc/</span></span><br></pre></td></tr></table></figure><h3 id="前台启动-redis"><a href="#前台启动-redis" class="headerlink" title="前台启动 redis"></a>前台启动 redis</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /usr/local/redis/bin/redis-server </span></span><br><span class="line">  <span class="regexp">/usr/</span>local<span class="regexp">/redis/</span>etc<span class="regexp">/redis.conf</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/Redis%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/image-40.png" alt="img"></p><p>解决 当前的警告 提示 ：</p><p>tcp-backlog ：<br>The backlog argument defines the maximum length。。。。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">backlog 参数控制的是三次握手的时候<span class="built_in"> server </span>端收到<span class="built_in"> client </span>ack 确认号之后的队列值。</span><br><span class="line">net.core.somaxconn = 512</span><br></pre></td></tr></table></figure><p>vm.overcommit_memory</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>、表示内核将检查是否有足够的可用内存供应用进程使用；如果有足够的可用内存，内存申请允许；</span><br><span class="line">否则，内存申请失败，并把错误返回给应用进程。</span><br><span class="line"><span class="number">1</span>、表示内核允许分配所有的物理内存，而不管当前的内存状态如何。</span><br><span class="line"><span class="number">2</span>、表示内核允许分配超过所有物理内存和交换空间总和的内存</span><br><span class="line">vm.overcommit_memory = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>transparent hugepage ：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">开启大页内存动态分配，需要关闭让 redis 负责内存管理。</span><br><span class="line">echo never &gt; <span class="regexp">/sys/</span>kernel<span class="regexp">/mm/</span>transparent_hugepage<span class="regexp">/enabled</span></span><br></pre></td></tr></table></figure><h3 id="编辑-redis-服务启动脚本"><a href="#编辑-redis-服务启动脚本" class="headerlink" title="编辑 redis 服务启动脚本:"></a>编辑 redis 服务启动脚本:</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@s1 ~]</span><span class="comment"># cat /usr/lib/systemd/system/redis.service</span></span><br><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Redis persistent key-value database</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"><span class="attr">After</span>=network-<span class="literal">on</span>line.target</span><br><span class="line"><span class="attr">Wants</span>=network-<span class="literal">on</span>line.target</span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="comment">#ExecStart=/usr/bin/redis-server /etc/redis.conf --supervised systemd</span></span><br><span class="line"><span class="attr">ExecStart</span>=/apps/redis/bin/redis-server /apps/redis/etc/redis.conf --supervised systemd</span><br><span class="line"><span class="attr">ExecReload</span>=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attr">ExecStop</span>=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attr">Type</span>=notify</span><br><span class="line"><span class="attr">User</span>=root</span><br><span class="line"><span class="attr">Group</span>=root</span><br><span class="line"><span class="attr">RuntimeDirectory</span>=redis</span><br><span class="line"><span class="attr">RuntimeDirectoryMode</span>=<span class="number">0755</span></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="创建-redis-用户-和数据目录："><a href="#创建-redis-用户-和数据目录：" class="headerlink" title="创建 redis 用户 和数据目录："></a>创建 redis 用户 和数据目录：</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># groupadd -g 1000 redis &amp;&amp; useradd -u 1000 -g 1000 redis -s /sbin/nologin</span></span><br><span class="line"><span class="meta"># mkdir -pv /usr/local/redis/&#123;etc,logs,data,run&#125;</span></span><br><span class="line"><span class="meta"># chown redis.redis -R /usr/local/redis/</span></span><br></pre></td></tr></table></figure><h3 id="验证-redis-启动"><a href="#验证-redis-启动" class="headerlink" title="验证 redis 启动"></a>验证 redis 启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> useradd redis -s /sbin/nologin</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chown redis.redis /usr/<span class="built_in">local</span>/redis/ -R</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chown redis.redis /usr/<span class="built_in">local</span>/redis/ -R <span class="comment">#注意目录权限</span></span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/Redis%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/image-41.png" alt="img"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">使用客户端连接  redis ：</span><br><span class="line"><span class="comment">#/usr/local/redis/bin/redis-cli -h IP/HOSTNAME -p PORT -a PASSWORD</span></span><br><span class="line">创建命令软连接：</span><br><span class="line"><span class="comment"># ln -sv /usr/local/redis/bin/redis-* /usr/bin/</span></span><br><span class="line">‘<span class="regexp">/usr/</span>bin<span class="regexp">/redis-benchmark’ -&gt; ‘/u</span>sr<span class="regexp">/local/</span>redis<span class="regexp">/bin/</span>redis-benchmark’</span><br><span class="line">‘<span class="regexp">/usr/</span>bin<span class="regexp">/redis-check-aof’ -&gt; ‘/u</span>sr<span class="regexp">/local/</span>redis<span class="regexp">/bin/</span>redis-check-aof’</span><br><span class="line">‘<span class="regexp">/usr/</span>bin<span class="regexp">/redis-check-rdb’ -&gt; ‘/u</span>sr<span class="regexp">/local/</span>redis<span class="regexp">/bin/</span>redis-check-rdb’</span><br><span class="line">‘<span class="regexp">/usr/</span>bin<span class="regexp">/redis-cli’ -&gt; ‘/u</span>sr<span class="regexp">/local/</span>redis<span class="regexp">/bin/</span>redis-cli’</span><br><span class="line">‘<span class="regexp">/usr/</span>bin<span class="regexp">/redis-sentinel’ -&gt; ‘/u</span>sr<span class="regexp">/local/</span>redis<span class="regexp">/bin/</span>redis-sentinel’</span><br><span class="line">‘<span class="regexp">/usr/</span>bin<span class="regexp">/redis-server’ -&gt; ‘/u</span>sr<span class="regexp">/local/</span>redis<span class="regexp">/bin/</span>redis-server’</span><br><span class="line">编译安装后的命令：</span><br><span class="line">[root@redis-s1 ~]<span class="comment"># ll /usr/local/redis/bin/</span></span><br><span class="line">total <span class="number">32656</span></span><br><span class="line">-rwxr-xr-x <span class="number">1</span> redis redis <span class="number">4365488</span> Dec <span class="number">13</span> <span class="number">09</span>:<span class="number">21</span> redis-benchmark <span class="comment">#redis 性能测试工具</span></span><br><span class="line">-rwxr-xr-x <span class="number">1</span> redis redis <span class="number">8088920</span> Dec <span class="number">13</span> <span class="number">09</span>:<span class="number">21</span> redis-check-aof <span class="comment">#AOF 文件检查工具</span></span><br><span class="line">-rwxr-xr-x <span class="number">1</span> redis redis <span class="number">8088920</span> Dec <span class="number">13</span> <span class="number">09</span>:<span class="number">21</span> redis-check-rdb <span class="comment">#RDB 文件检查工具</span></span><br><span class="line">-rwxr-xr-x <span class="number">1</span> redis redis <span class="number">4800752</span> Dec <span class="number">13</span> <span class="number">09</span>:<span class="number">21</span> redis-cli <span class="comment">#redis #客户端工具</span></span><br><span class="line">lrwxrwxrwx <span class="number">1</span> redis redis <span class="number">12</span> Dec <span class="number">13</span> <span class="number">09</span>:<span class="number">21</span> redis-sentinel -&gt; redis-server <span class="comment">#哨兵，软连接到</span></span><br><span class="line">server</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> redis redis <span class="number">8088920</span> Dec <span class="number">13</span> <span class="number">09</span>:<span class="number">21</span> <span class="comment">#redis-server #redis 服务端</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键安装redis</title>
      <link href="/2020/03/09/redis/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85redis/"/>
      <url>/2020/03/09/redis/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85redis/</url>
      
        <content type="html"><![CDATA[<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum install gcc wget jemalloc-devel libhif-devel -y </span><br><span class="line"><span class="comment">#wget http://download.redis.io/releases/redis-4.0.14.tar.gz</span></span><br><span class="line">tar xf redis-4.0.14.tar.gz</span><br><span class="line">cd redis-4.0.14</span><br><span class="line">mkdir /apps/redis -pv</span><br><span class="line">make <span class="attribute">PREFIX</span>=/apps/redis install</span><br><span class="line">mkdir /apps/redis/etc</span><br><span class="line">cp redis.conf /apps/redis/etc/</span><br><span class="line">/apps/redis/bin/redis-server /apps/redis/etc/redis.conf</span><br><span class="line"></span><br><span class="line">cat &gt; /usr/lib/systemd/system/redis.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Redis persistent key-value database</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"><span class="attribute">After</span>=network-online.target</span><br><span class="line"><span class="attribute">Wants</span>=network-online.target</span><br><span class="line">[Service]</span><br><span class="line"><span class="comment">#ExecStart=/apps/redis/bin/redis-server /apps/redis/etc/redis.conf --supervised systemd</span></span><br><span class="line"><span class="attribute">ExecStart</span>=/apps/redis/bin/redis-server /apps/redis/etc/redis.conf --supervised systemd</span><br><span class="line"><span class="attribute">ExecReload</span>=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attribute">ExecStop</span>=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attribute">Type</span>=notify</span><br><span class="line"><span class="attribute">User</span>=root</span><br><span class="line"><span class="attribute">Group</span>=root</span><br><span class="line"><span class="attribute">RuntimeDirectory</span>=redis</span><br><span class="line"><span class="attribute">RuntimeDirectoryMode</span>=0755</span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">groupadd -g 1000 redis &amp;&amp; useradd -u 1000 -g 1000 redis -s /sbin/nologin</span><br><span class="line">mkdir -pv /apps/redis/&#123;etc,logs,data,run&#125;</span><br><span class="line">chown redis.redis -R /apps/redis/</span><br><span class="line">ln -sv /apps/redis/bin/redis-* /usr/bin/</span><br><span class="line"></span><br><span class="line">echo <span class="string">" systemctl start redis.service\n"</span></span><br><span class="line"></span><br><span class="line">echo -e <span class="string">"redis-benchmark #redis 性能测试工具 \n redis-check-aof #AOF 文件检查工具 \n redis-check-rdb #RDB 文件检查工具 \n redis-cli #redis #客户端工具 \n redis-server #哨兵，软连接到server \n redis-server #redis 服务端"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis配置文件</title>
      <link href="/2020/03/09/redis/redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/redis/redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>redis配置文件</p><a id="more"></a><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">bind 0.0.0.0 #监听地址，可以用空格隔开后多个监听 IP</span><br><span class="line">protected-mode <span class="literal">yes</span> #redis3.2 之后加入的新特性，在没有设置 bind<span class="built_in"> IP </span>和密码的时候只允许访问</span><br><span class="line">127.0.0.1:6379</span><br><span class="line">port 6379 #监听端口</span><br><span class="line">tcp-backlog 511 #三次握手的时候<span class="built_in"> server </span>端收到<span class="built_in"> client </span>ack 确认号之后的队列值。</span><br><span class="line">timeout 0 #客户端和 Redis 服务端的连接超时时间，默认是 0，表示永不超时。</span><br><span class="line">tcp-keepalive 300 #tcp 会话保持时间</span><br><span class="line">daemonize <span class="literal">no</span> #认情况下 redis 不是作为守护进程运行的，如果你想让它在后台运行，你就把它改成</span><br><span class="line"><span class="literal">yes</span>,当 redis 作为守护进程运行的时候，它会写一个 pid 到 /var/run/redis.pid 文件里面</span><br><span class="line">supervised <span class="literal">no</span> #和操作系统相关参数，可以设置通过 upstart 和 systemd 管理 Redis 守护进程，centos 7以后都使用 </span><br><span class="line">systemdpidfile /var/run/redis_6379.pid #pid 文件路径</span><br><span class="line">loglevel notice #日志级别</span><br><span class="line">logfile <span class="string">""</span> #日志路径</span><br><span class="line">databases 16 #设置 db 库数量，默认 16 个库</span><br><span class="line">always-show-logo <span class="literal">yes</span> #在启动 redis 时是否显示 log</span><br><span class="line">save 900 1 #在 900 秒内有一个键内容发生更改就出就快照机制</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-<span class="builtin-name">error</span> <span class="literal">no</span> #快照出错时是否禁止 redis 写入操作</span><br><span class="line">rdbcompression <span class="literal">yes</span> #持久化到 RDB 文件时，是否压缩，<span class="string">"yes"</span>为压缩，<span class="string">"no"</span>则反之</span><br><span class="line">rdbchecksum <span class="literal">yes</span> #是否开启 RC64 校验，默认是开启</span><br><span class="line">dbfilename dump.rdb #快照文件名</span><br><span class="line">dir ./ #快照文件保存路径</span><br><span class="line">dir ./ #快照文件保存路径</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-42.png" alt="img"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">replica</span>-serve-stale-data yes #当从库同主库失去连接或者复制正在进行，从机库有两种运行方式：<span class="number">1</span>) 如</span><br><span class="line">果 <span class="keyword">replica</span>-serve-stale-data 设置为 yes(默认设置)，从库会继续响应客户端的读请求。<span class="number">2</span>) 如果 <span class="keyword">replica</span>-</span><br><span class="line">serve-stale-data 设置为 <span class="keyword">no</span>，除去指定的命令之外的任何请求都会返回一个错误"SYNC with master in</span><br><span class="line">progress"。</span><br><span class="line"><span class="keyword">replica</span>-<span class="keyword">read</span>-<span class="keyword">only</span> yes #是否设置从库只读</span><br><span class="line">repl-diskless-sync <span class="keyword">no</span> #是否使用 socket 方式复制数据，目前 redis 复制提供两种方式，disk 和 socket，如</span><br><span class="line">果新的 slave 连上来或者重连的 slave 无法部分同步，就会执行全量同步，master 会生成 rdb 文件，有</span><br><span class="line"><span class="number">2</span> 种方式：disk 方式是 master 创建一个新的进程把 rdb 文件保存到磁盘，再把磁盘上的 rdb 文件传递给 slave，socket 是 master 创建一个新的进程，直接把 rdb 文件以 socket 的方式发给 slave，disk 方式的时候，当一个 rdb 保存的过程中，多个 slave 都能共享这个 rdb 文件，socket 的方式就是一个个 slave顺序复制，只有在磁盘速度缓慢但是网络相对较快的情况下才使用 socket 方式，否则使用默认的 disk方式</span><br><span class="line">repl-diskless-sync-delay <span class="number">30</span> #diskless 复制的延迟时间，设置 <span class="number">0</span> 为关闭，一旦复制开始还没有结束之前，</span><br><span class="line">master 节点不会再接收新 slave 的复制请求，直到下一次开始</span><br><span class="line">repl-ping-slave-period <span class="number">10</span> #slave 根据 master 指定的时间进行周期性的 PING 监测</span><br><span class="line">repl-timeout <span class="number">60</span> #复制链接超时时间，需要大于 repl-ping-slave-period，否则会经常报超时</span><br><span class="line">repl-<span class="keyword">disable</span>-tcp-nodelay <span class="keyword">no</span> #在 socket 模式下是否在 slave 套接字发送 SYNC 之后禁用 TCP_NODELAY，如果你选择“yes”Redis 将使用更少的 TCP 包和带宽来向 slaves 发送数据。但是这将使数据传输到 slave上有延迟，Linux 内核的默认配置会达到 <span class="number">40</span> 毫秒，如果你选择了 "no" 数据传输到 salve 的延迟将会减少但要使用更多的带宽</span><br><span class="line">repl-backlog-size <span class="number">1</span>mb #复制缓冲区大小，只有在 slave 连接之后才分配内存。</span><br><span class="line">repl-backlog-ttl <span class="number">3600</span> #多次时间 master 没有 slave 连接，就清空 backlog 缓冲区。</span><br><span class="line"><span class="keyword">replica</span>-priority <span class="number">100</span> #当 master 不可用，Sentinel 会根据 slave 的优先级选举一个 master。最低的优先级</span><br><span class="line">的 slave，当选 master。而配置成 <span class="number">0</span>，永远不会被选举。</span><br><span class="line">requirepass foobared #设置 redis 连接密码</span><br><span class="line"><span class="keyword">rename</span>-command #重命名一些高危命令</span><br><span class="line">maxclients <span class="number">10000</span> #最大连接客户端</span><br><span class="line">maxmemory #最大内存，单位为bytes 字节，<span class="number">8</span>G内存的计算方式 <span class="number">8</span>(G)*<span class="number">1024</span>(MB)*<span class="number">1024</span>(KB)*<span class="number">1024</span>(Kbyte)，</span><br><span class="line">需要注意的是 slave 的输出缓冲区是不计算在 maxmemory 内。</span><br><span class="line">appendonly <span class="keyword">no</span> #是否开启 AOF 日志记录， 默认 redis 使用的是 rdb 方式持久化，这种方式在许多应用中已</span><br><span class="line">经足够用了。但是 redis 如果中途宕机，会导致可能有几分钟的数据丢失，根据 save 来策略进行持久化，</span><br><span class="line">Append <span class="keyword">Only</span> File 是另一种持久化方式，可以提供更好的持久化特性。Redis 会把每次写入的数据在接收后</span><br><span class="line">都写入 appendonly.aof 文件，每次启动时 Redis 都会先把这个文件的数据读入内存里，先忽略 RDB 文件。</span><br><span class="line">appendfilename "appendonly.aof" #AOF 文件名</span><br><span class="line">appendfsync everysec #aof 持久化策略的配置 , <span class="keyword">no</span> 表示不执行 fsync,由操作系统保证数据同步到磁盘,<span class="keyword">always</span> 表示每次写入都执行 fsync，以保证数据同步到磁盘,everysec 表示每秒执行一次 fsync，可能会导致丢失这 <span class="number">1</span>s 数据。</span><br><span class="line"><span class="keyword">no</span>-appendfsync-<span class="keyword">on</span>-rewrite <span class="keyword">no</span> 在 aof rewrite 期间,是否对 aof 新记录的 append 暂缓使用文件同步策</span><br><span class="line">略,主要考虑磁盘 IO 开支和请求阻塞时间。默认为 <span class="keyword">no</span>,表示"不暂缓",新的 aof 记录仍然会被立即同步，Linux 的默认 fsync 策略是 <span class="number">30</span> 秒，如果为 yes 可能丢失 <span class="number">30</span> 秒数据，但由于 yes 性能较好而且会避免出现阻塞因此比较推荐。</span><br><span class="line">auto-aof-rewrite-percentage <span class="number">100</span> # 当 Aof <span class="keyword">log</span> 增长超过指定百分比例时，重写 <span class="keyword">log</span> file， 设置为 <span class="number">0</span> 表示不自动重写 Aof 日志，重写是为了使 aof 体积保持最小，而确保保存最完整的数据。</span><br><span class="line">auto-aof-rewrite-min-size <span class="number">64</span>mb #触发 aof rewrite 的最小文件大小</span><br><span class="line">aof-<span class="keyword">load</span>-truncated yes #是否加载由于其他原因导致的末尾异常的 AOF 文件(主进程被 kill/断电等)</span><br><span class="line">aof-use-rdb-preamble yes #redis4<span class="number">.0</span> 新增 RDB-AOF 混合持久化格式，在开启了这个功能之后，AOF 重写产生的文件将同时包含 RDB 格式的内容和 AOF 格式的内容，其中 RDB 格式的内容用于记录已有的数据，而 AOF 格式的内存则用于记录最近发生了变化的数据，这样 Redis 就可以同时兼有 RDB 持久化和AOF 持久化的优点（既能够快速地生成重写文件，也能够在出现问题时，快速地载入数据）。</span><br><span class="line">lua-<span class="type">time</span>-<span class="keyword">limit</span> <span class="number">5000</span> #lua 脚本的最大执行时间，单位为毫秒</span><br><span class="line"><span class="keyword">cluster</span>-enabled yes #是否开启集群模式，默认是单机模式</span><br><span class="line"><span class="keyword">cluster</span>-config-file nodes<span class="number">-6379.</span>conf #由 node 节点自动生成的集群配置文件</span><br><span class="line"><span class="keyword">cluster</span>-node-timeout <span class="number">15000</span> #集群中 node 节点连接超时时间</span><br><span class="line"><span class="keyword">cluster</span>-<span class="keyword">replica</span>-validity-factor <span class="number">10</span> #在执行故障转移的时候可能有些节点和 master 断开一段时间数据比较旧，这些节点就不适用于选举为 master，超过这个时间的就不会被进行故障转移</span><br><span class="line"><span class="keyword">cluster</span>-migration-barrier <span class="number">1</span> #一个主节点拥有的至少正常工作的从节点，即如果主节点的 slave 节点故障后会将多余的从节点分配到当前主节点成为其新的从节点。</span><br><span class="line"><span class="keyword">cluster</span>-require-<span class="keyword">full</span>-coverage <span class="keyword">no</span> #集群槽位覆盖，如果一个主库宕机且没有备库就会出现集群槽位不全，那么 yes 情况下 redis 集群槽位验证不全就不再对外提供服务，而 <span class="keyword">no</span> 则可以继续使用但是会出现查询数据查不到的情况(因为有数据丢失)。</span><br><span class="line"><span class="meta">#Slow log 是 Redis 用来记录查询执行时间的日志系统，slow log 保存在内存里面，读写速度非常快，因此你可以放心地使用它，不必担心因为开启 slow log 而损害 Redis 的速度。</span></span><br><span class="line">slowlog-<span class="keyword">log</span>-slower-than <span class="number">10000</span> #以微秒为单位的慢日志记录，为负数会禁用慢日志，为 <span class="number">0</span> 会记录每个命令操作。</span><br><span class="line">slowlog-max-len <span class="number">128</span> #记录多少条慢日志保存在队列，超出后会删除最早的，以此滚动删除</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; slowlog len</span><br><span class="line">(<span class="type">integer</span>) <span class="number">14</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; slowlog <span class="keyword">get</span></span><br><span class="line"><span class="number">1</span>) <span class="number">1</span>) (<span class="type">integer</span>) <span class="number">14</span></span><br><span class="line"><span class="number">2</span>) (<span class="type">integer</span>) <span class="number">1544690617</span></span><br><span class="line"><span class="number">3</span>) (<span class="type">integer</span>) <span class="number">4</span></span><br><span class="line"><span class="number">4</span>) <span class="number">1</span>) "slowlog"</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SLOWLOG <span class="keyword">reset</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis持久化模式</title>
      <link href="/2020/03/09/redis/redis%E6%8C%81%E4%B9%85%E5%8C%96%E6%A8%A1%E5%BC%8F/"/>
      <url>/2020/03/09/redis/redis%E6%8C%81%E4%B9%85%E5%8C%96%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>redis 虽然是一个内存级别的缓存程序，即 redis 是使用内存进行数据的缓存的，但是其可以将内存的数据按照一定的策略保存到硬盘上，从而实现数据持久保存的目的，redis 支持两种不同方式的数据持久化保存机制，分别是 RDB 和 AOF</p><a id="more"></a><h3 id="RDB-模式"><a href="#RDB-模式" class="headerlink" title="RDB 模式"></a>RDB 模式</h3><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><p>-RDB快照保存了某个时间点的数据，可以通过脚本执行bgsave(非阻塞)或者save(阻塞)命令自定义时间点北备份，可以保留多个备份，当出现问题可以恢复到不同时间点的版本。</p><p>可以最大化o的性能，因为父进程在保存RDB 文件的时候唯一要做的是fork出一个子进程，然后的-操作都会有这个子进程操作，父进程无需任何的IO操作</p><p>RDB在大量数据比如几个G的数据，恢复的速度比AOF的快</p><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><p>-不能时时的保存数据，会丢失自上一次执行RDB备份到当前的内存数据</p><p>-数据量非常大的时候，从父进程fork的时候需要一点时间，可能是毫秒或者秒</p><h2 id="AOF模式："><a href="#AOF模式：" class="headerlink" title="AOF模式："></a>AOF模式：</h2><h4 id="优缺点："><a href="#优缺点：" class="headerlink" title="优缺点："></a>优缺点：</h4><p>AOF的文件大小要大于RDB格式的文件</p><p>根据所使用的fsync策略(fsync是同步内存中redis所有已经修改的文件到存储设备)，默认是appendfsync everysec即每秒执行一次fsync</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis数据类型</title>
      <link href="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>字符串(string)：</p><p>字符串是所有编程语言中最常见的和最常用的数据类型，而且也是redis最基本的数据类型之一，而且redis中所有的key的类型都是字符串。</p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-43.png" alt="img"></p><a id="more"></a><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-44.png" alt="img">获取MGET</p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-45.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-46.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-47.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-48.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-49.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-50.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-51.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-52.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-53.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-54.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-55.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-56.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/image-57.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis主从</title>
      <link href="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/"/>
      <url>/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/</url>
      
        <content type="html"><![CDATA[<p>虽然 Redis 可以实现单机的数据持久化，但无论是 RDB 也好或者 AOF 也好，都解决不了单点宕机问题，即一旦 redis 服务器本身出现系统故障、硬件故障等问题后，就会直接造成数据的丢失，因此需要使用另外的技术来解决单点问题。</p><a id="more"></a><p>配置 reids 主从：</p><p>主备模式，可以实现 Redis 数据的跨主机备份。<br>程序端连接到高可用负载的 VIP，然后连接到负载服务器设置的 Redis 后端 real server，此模式不需要在程序里面配置 Redis 服务器的真实 IP 地址，当后期 Redis 服务器 IP 地址发生变更只需要更改 redis相应的后端 real server 即可，可避免更改程序中的 IP 地址设置。</p><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/image-58.png" alt="img"></p><p>从服务器</p><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/image-61.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/image-60.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/image-62.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/image-64.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/image-65.png" alt="img">主</p><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/image-66.png" alt="img"></p><h2 id="Slave-节点-再有-Slave-："><a href="#Slave-节点-再有-Slave-：" class="headerlink" title="Slave 节点 再有 Slave ："></a>Slave 节点 再有 Slave ：</h2><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E/image-67.png" alt="img"></p><p>中间开启注释bind，最后slave一样</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis主从同步优化</title>
      <link href="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E4%BC%98%E5%8C%96/"/>
      <url>/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Redis 在 <span class="number">2.8</span> 版本之前没有提供增量部分复制的功能，当网络闪断或者 <span class="literal">slave</span> Redis 重启之后会导致主从之间的全量同步，即从 <span class="number">2.8</span> 版本开始增加了部分复制的功能。</span><br><span class="line">repl-diskless-sync yes   </span><br><span class="line"><span class="comment">#yes 为支持 disk，master 将 RDB 文件先保存到磁盘在发送给 slave，no 为 maste接将 RDB 文件发送给 slave，默认即为使用 no，Master RDB 文件不需要与磁盘交互。</span></span><br><span class="line">repl-diskless-sync-delay <span class="number">5</span> </span><br><span class="line"><span class="comment">#Master 准备好 RDB 文件后等等待传输时间</span></span><br><span class="line">repl-ping-<span class="literal">slave</span>-period <span class="number">10</span> </span><br><span class="line"><span class="comment">#slave 端向 server 端发送 ping 的时间区间设置，默认为 10 秒</span></span><br><span class="line">repl-timeout <span class="number">60</span> </span><br><span class="line"><span class="comment">#设置超时时间</span></span><br><span class="line">repl-disable-tcp-nodelay no </span><br><span class="line"><span class="comment">#是否启用 TCP_NODELAY，如设置成 yes，则 redis 会合并小的 TCP 包从而节省带宽，但会增加同步延迟（40ms），造成 master 与 slave 数据不一致，假如设置成 no，则 redis master会立即发送同步数据，没有延迟，前者关注性能，后者关注一致性</span></span><br><span class="line">repl-backlog-size <span class="number">1m</span>b </span><br><span class="line"><span class="comment">#master 的写入数据缓冲区，用于记录自上一次同步后到下一次同步过程中</span></span><br><span class="line">间的写入命令，计算公式：b repl-backlog-size = 允许从节点最大中断时长 * 主实例 offset 每秒写入量，比如 <span class="keyword">master</span> <span class="title">每秒最大写入 64mb</span>，最大允许 <span class="number">60</span> 秒，那么就要设置为 <span class="number">64m</span>b*<span class="number">60</span> 秒=<span class="number">3840m</span>b(<span class="number">3.8</span>G)=repl-backlog-ttl <span class="number">3600</span> <span class="comment">#如果一段时间后没有 slave 连接到 master，则 backlog size 的内存将会被释放。如果值为 0 则表示永远不释放这部份内存。</span></span><br><span class="line"><span class="literal">slave</span>-priority <span class="number">100</span> </span><br><span class="line"><span class="comment">#slave 端的优先级设置，值是一个整数，数字越小表示优先级越高。当 master 故障时将会按照优先级来选择 slave 端进行恢复，如果值设置为 0，则表示该 slave 永远不会被选择。</span></span><br><span class="line"><span class="comment">#min-slaves-to-write 0 #</span></span><br><span class="line"><span class="comment">#min-slaves-max-lag 10 #设置当一个 master 端的可用 slave 少于 N 个，延迟时间大于 M 秒时，不接收写操作。</span></span><br><span class="line"><span class="keyword">Master</span> <span class="title">的重启会导致 master_replid</span> 发生变化，<span class="literal">slave</span> 之前的 master_replid 就和 <span class="keyword">master</span> <span class="title">不一致从而会引发所有 slave</span> 的全量同步。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis主从复制过程</title>
      <link href="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E8%BF%87%E7%A8%8B/"/>
      <url>/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Redis 支持主从复制分为全量同步和增量同步，首次同步是全量同步</span><br><span class="line">主从同步可以让从服务器从主服务器备份数据，而且从服务器还可与有从服务器，即另外一台 redis 服务器可以从一台从服务器进行数据同步，</span><br><span class="line">redis 的主从同步是非阻塞的，其收到从服务器的 <span class="keyword">sync(2.8 </span>版本之前是 PSYNC)命令会fork 一个子进程在后台执行 <span class="keyword">bgsave </span>命令，并将新写入的数据写入到一个缓冲区里面，<span class="keyword">bgsave </span>执行完成之后并生成的将 RDB 文件发送给客户端，客户端将收到后的 RDB 文件载入自己的内存，然后主 redis将缓冲区的内容在全部发送给从 redis，之后的同步从服务器会发送一个 offset 的位置(等同于 MySQL的 <span class="keyword">binlog </span>的位置)给主服务器，主服务器检查后位置没有错误将此位置之后的数据包括写在缓冲区的积压数据发送给 redis 从服务器，从服务器将主服务器发送的挤压数据写入内存，这样一次完整的数据同步，再之后再同步的时候从服务器只要发送当前的 offset 位 置给主服务器，然后主服务器根据响应的位置将之后的数据发送给从服务器保存到其内存即可。</span><br></pre></td></tr></table></figure><a id="more"></a><p>Redis 全量复制一般发生在 Slave 初始化阶段，这时 Slave 需要将Master 上的所有数据都复制一份。</p><p>具体步骤如下：</p><p>1）从服务器连接主服务器，发送 SYNC 命令；<br>2）主服务器接收到 SYNC 命名后，开始执行 BGSAVE 命令生成 RDB 快照文件并使用缓冲区记录此后执行的所有写命令；<br>3）主服务器 BGSAVE 执行完后，向所有从服务器发送快照文件，并在发送期间继续记录被执行的写命令；<br>4）从服务器收到快照文件后丢弃所有旧数据，载入收到的快照；<br>5）主服务器快照发送完毕后开始向从服务器发送缓冲区中的写命令；<br>6）从服务器完成对快照的载入，开始接收命令请求，并执行来自主服务器缓冲区的写命令；<br>7）后期同步会先发送自己 slave_repl_offset 位置，只同步新增加的数据，不再全量同步。</p><p><img src="/2020/03/09/redis/redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E8%BF%87%E7%A8%8B/image-68.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis集群</title>
      <link href="/2020/03/09/redis/redis%E9%9B%86%E7%BE%A4/"/>
      <url>/2020/03/09/redis/redis%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">上一个步骤的主从架构无法实现 <span class="keyword">master</span> <span class="title">和 slave</span> 角色的自动切换，即当 <span class="keyword">master</span> <span class="title">出现redis</span> 服务异常、主机断电、磁盘损坏等问题导致 <span class="keyword">master</span> <span class="title">无法使用，而 redis</span> 高可用无法实现自故障转移(将 <span class="literal">slave</span> 提升为 <span class="literal">master</span>)，需要手动改环境配置才能切换到 <span class="literal">slave</span> redis 服务器，另外也无法横向扩展 Redis 服务的并</span><br><span class="line">行写入性能，当单台 Redis 服务器性能无法满足业务写入需求的时候就必须需要一种方式解决以上的两个核心问题，即：<span class="number">1</span>.<span class="keyword">master</span> <span class="title">和 slave</span> 角色的无缝切换，让业务无感知从而不影响业务使用 <span class="number">2</span>.可以横向动态扩展 Redis 服务器，从而实现多台服务器并行写入以实现更高并发的目的。</span><br></pre></td></tr></table></figure><p>Redis 集群实现方式：客户端分片 代理分片 Redis Cluster</p><a id="more"></a><h2 id="Sentinel-哨兵-："><a href="#Sentinel-哨兵-：" class="headerlink" title="Sentinel(哨兵)："></a>Sentinel(哨兵)：</h2><p>Sentinel 进程是用于监控 redis 集群中 Master 主服务器工作的状态，在 Master 主服务器发生故障的时候，可以实现 Master 和 Slave 服务器的切换，保证系统的高可用，其已经被集成在 redis2.6+的版本中，Redis 的哨兵模式到了 2.8 版本之后就稳定了下来。一般在生产环境也建议使用 Redis 的 2.8 版本的以后版本。哨兵(Sentinel) 是一个分布式系统，你可以在一个架构中运行多个哨兵(sentinel) 进程，这些进程使用流言协议(gossipprotocols)来接收关于 Master 主服务器是否下线的信息，并使用投票协议(Agreement Protocols)来决定是否执行自动故障迁移,以及选择哪个 Slave 作为新的 Master。每个哨兵(Sentinel)进程会向其它哨兵(Sentinel)、Master、Slave 定时发送消息，以确认对方是否”活”着，如果发现对方在指定配置时间(可配置的)内未得到回应，则暂时认为对方已掉线，也就是所谓的”主观认为宕机” ，英文名称：Subjective Down，简称 SDOWN。有主观宕机，肯定就有客观宕机。当“哨兵群”中的多数 Sentinel 进程在对 Master 主服务器做出 SDOWN 的判断，并且通过 SENTINEL is-master-down-by-addr 命令互相交流之后，得出的 Master Server 下线判断，这种方式就是“客观宕机”，英文名称是：Objectively Down， 简称 ODOWN。通过一定的 vote 算法，从剩下的 slave 从服务器节点中，选一台提升为 Master 服务器节点，然后自动修改相关配置，并开启故障转移（failover）。</p><p>Sentinel 机制可以解决 master 和 slave 角色的切换问题。</p><p>两台从服务器指向主服务器</p><p><img src="/2020/03/09/redis/redis%E9%9B%86%E7%BE%A4/image-71.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx负载均衡5种配置方式</title>
      <link href="/2020/03/09/Nginx/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A15%E7%A7%8D%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F/"/>
      <url>/2020/03/09/Nginx/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A15%E7%A7%8D%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>1、轮询（默认）   </p><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。  </p><a id="more"></a><p>2、weight<br>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。<br>例如： </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream bakend &#123; </span><br><span class="line">server 192.168.0.14 <span class="attribute">weight</span>=10; </span><br><span class="line">server 192.168.0.15 <span class="attribute">weight</span>=10; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、ip_hash<br>每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。<br>例如： </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream bakend &#123; </span><br><span class="line">ip_hash; </span><br><span class="line">server 192.168.0.14:88; </span><br><span class="line">server 192.168.0.15:80; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、fair（第三方）<br>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backend &#123;</span><br><span class="line">server server1; </span><br><span class="line">server server2; </span><br><span class="line">fair; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、url_hash（第三方）   </p><p>按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。  </p><p>例：在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法  </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream backend &#123; </span><br><span class="line">server squid1:3128; </span><br><span class="line">server squid2:3128; </span><br><span class="line">hash <span class="variable">$request_uri</span>; </span><br><span class="line">hash_method crc32; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tips:  </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">upstream bakend&#123;#定义负载均衡设备的Ip及设备状态 </span><br><span class="line">ip_hash; </span><br><span class="line">server 127.0.0.1:9090 down; </span><br><span class="line">server 127.0.0.1:8080 <span class="attribute">weight</span>=2; </span><br><span class="line">server 127.0.0.1:6060; </span><br><span class="line">server 127.0.0.1:7070 backup; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在需要使用负载均衡的server中增加<br>proxy_pass <a href="http://bakend/" target="_blank" rel="noopener">http://bakend/</a>;  </p><p>每个设备的状态设置为:<br>1.down 表示单前的server暂时不参与负载<br>2.weight 默认为1.weight越大，负载的权重就越大。<br>3.max_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误<br>4.fail_timeout:max_fails次失败后，暂停的时间。<br>5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。  </p><p>nginx支持同时设置多组的负载均衡，用来给不用的server来使用。  </p><p>client_body_in_file_only 设置为On 可以讲client post过来的数据记录到文件中用来做debug<br>client_body_temp_path 设置记录文件的目录 可以设置最多3层目录  </p><p>location 对URL进行匹配.可以进行重定向或者进行新的代理 负载均衡</p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>七层与四层负载</title>
      <link href="/2020/03/09/Linux/%E4%B8%83%E5%B1%82%E4%B8%8E%E5%9B%9B%E5%B1%82%E8%B4%9F%E8%BD%BD/"/>
      <url>/2020/03/09/Linux/%E4%B8%83%E5%B1%82%E4%B8%8E%E5%9B%9B%E5%B1%82%E8%B4%9F%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<p>在常规运维工作中，经常会运用到负载均衡服务。负载均衡分为四层负载和七层负载，那么这两者之间有什么不同？</p><a id="more"></a><p><strong>一.  什么是负载均衡</strong><br>1）负载均衡（Load Balance）建立在现有网络结构之上，它提供了一种廉价有效透明的方法扩展网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性。负载均衡有两方面的含义：首先，大量的并发访问或数据流量分担到多台节点设备上分别处理，减少用户等待响应的时间；其次，单个重负载的运算分担到多台节点设备上做并行处理，每个节点设备处理结束后，将结果汇总，返回给用户，系统处理能力得到大幅度提高。</p><p>2）简单来说就是：其一是将大量的并发处理转发给后端多个节点处理，减少工作响应时间；其二是将单个繁重的工作转发给后端多个节点处理，处理完再返回给负载均衡中心，再返回给用户。目前负载均衡技术大多数是用于提高诸如在Web服务器、FTP服务器和其它关键任务服务器上的Internet服务器程序的可用性和可伸缩性。</p><p><strong>二. 负载均衡分类</strong><br>1）二层负载均衡（mac）<br>根据OSI模型分的二层负载，一般是用虚拟mac地址方式，外部对虚拟MAC地址请求，负载均衡接收后分配后端实际的MAC地址响应.<br>2）三层负载均衡（ip）<br>一般采用虚拟IP地址方式，外部对虚拟的ip地址请求，负载均衡接收后分配后端实际的IP地址响应. (即一个ip对一个ip的转发, 端口全放开)<br>3）四层负载均衡（tcp）<br>在三次负载均衡的基础上，即从第四层”传输层”开始, 使用”ip+port”接收请求，再转发到对应的机器。<br>4）七层负载均衡（http）<br>从第七层”应用层”开始, 根据虚拟的url或IP，主机名接收请求，再转向相应的处理服务器。</p><p>我们运维中最常见的四层和七层负载均衡，这里重点说下这两种负载均衡。<br>1）四层的负载均衡就是基于IP+端口的负载均衡：在三层负载均衡的基础上，通过发布三层的IP地址（VIP），然后加四层的端口号，来决定哪些流量需要做负载均衡，对需要处理的流量进行NAT处理，转发至后台服务器，并记录下这个TCP或者UDP的流量是由哪台服务器处理的，后续这个连接的所有流量都同样转发到同一台服务器处理。<br>对应的负载均衡器称为四层交换机（L4 switch），主要分析IP层及TCP/UDP层，实现四层负载均衡。此种负载均衡器不理解应用协议（如HTTP/FTP/MySQL等等）。</p><p>实现四层负载均衡的软件有：<br>F5：硬件负载均衡器，功能很好，但是成本很高。<br>lvs：重量级的四层负载软件<br>nginx：轻量级的四层负载软件，带缓存功能，正则表达式较灵活<br>haproxy：模拟四层转发，较灵活</p><p>2）七层的负载均衡就是基于虚拟的URL或主机IP的负载均衡：在四层负载均衡的基础上（没有四层是绝对不可能有七层的），再考虑应用层的特征，比如同一个Web服务器的负载均衡，除了根据VIP加80端口辨别是否需要处理的流量，还可根据七层的URL、浏览器类别、语言来决定是否要进行负载均衡。举个例子，如果你的Web服务器分成两组，一组是中文语言的，一组是英文语言的，那么七层负载均衡就可以当用户来访问你的域名时，自动辨别用户语言，然后选择对应的语言服务器组进行负载均衡处理。</p><p>对应的负载均衡器称为七层交换机（L7 switch），除了支持四层负载均衡以外，还有分析应用层的信息，如HTTP协议URI或Cookie信息，实现七层负载均衡。此种负载均衡器能理解应用协议。<br>实现七层负载均衡的软件有：<br>haproxy：天生负载均衡技能，全面支持七层代理，会话保持，标记，路径转移；<br>nginx：只在http协议和mail协议上功能比较好，性能与haproxy差不多；<br>apache：功能较差<br>Mysql proxy：功能尚可。</p><p>总的来说，一般是lvs做4层负载；nginx做7层负载(也能做4层负载, 通过stream模块)；haproxy比较灵活，4层和7层负载均衡都能做</p><p><strong>三. 四层和七层负载均衡之间的区别</strong><br><strong>1) 从技术原理上分析</strong><br><strong>所谓四层负载均衡</strong>，也就是主要通过报文中的目标地址和端口，再加上负载均衡设备设置的服务器选择方式，决定最终选择的内部服务器。</p><p>以常见的TCP为例，负载均衡设备在接收到第一个来自客户端的SYN 请求时，即通过上述方式选择一个最佳的服务器，并对报文中目标IP地址进行修改(改为后端服务器IP），直接转发给该服务器。TCP的连接建立，即三次握手是客户端和服务器直接建立的，负载均衡设备只是起到一个类似路由器的转发动作。在某些部署情况下，为保证服务器回包可以正确返回给负载均衡设备，在转发报文的同时可能还会对报文原来的源地址进行修改。</p><p><img src="/2020/03/09/Linux/%E4%B8%83%E5%B1%82%E4%B8%8E%E5%9B%9B%E5%B1%82%E8%B4%9F%E8%BD%BD/image-72.png" alt="img"></p><p><strong>所谓七层负载均衡</strong>，也称为“内容交换”，也就是主要通过报文中的真正有意义的应用层内容，再加上负载均衡设备设置的服务器选择方式，决定最终选择的内部服务器。</p><p>以常见的TCP为例，负载均衡设备如果要根据真正的应用层内容再选择服务器，只能先代理最终的服务器和客户端建立连接(三次握手)后，才可能接受到客户端发送的真正应用层内容的报文，然后再根据该报文中的特定字段，再加上负载均衡设备设置的服务器选择方式，决定最终选择的内部服务器。负载均衡设备在这种情况下，更类似于一个代理服务器。负载均衡和前端的客户端以及后端的服务器会分别建立TCP连接。所以从这个技术原理上来看，七层负载均衡明显的对负载均衡设备的要求更高，处理七层的能力也必然会低于四层模式的部署方式。</p><p><img src="/2020/03/09/Linux/%E4%B8%83%E5%B1%82%E4%B8%8E%E5%9B%9B%E5%B1%82%E8%B4%9F%E8%BD%BD/image-73.png" alt="img"></p><p><strong>四层负载均衡</strong>在中间传输层执行，它处理消息的传递，但不考虑消息的内容。例如TCP是网络上Hypertext Transfer Protocol（HTTP）流量的第四层协议。在这一过程中，4层负载均衡会将网络数据包转发到上游服务器，但不会检查数据包的内容，只能通过检查TCP流中的前几个包来做出有限的路由决策。</p><p><strong>七层负载均衡</strong>不同于四层负载均衡，它在高级应用层上执行，会处理每个消息的实际内容。HTTP是网络上网站流量的主要7层协议。七层负载均衡以比四层负载均衡更复杂的方式路由网络流量，尤其适用于基于TCP的流量（如HTTP）。七层负载均衡会终止网络流量并读取器中消息，它可以根据消息内容（如URL或cookie）做出负载均衡决策。随后，七层负载均衡与选定上有服务器建立新的TCP连接并将请求写入服务器。</p><p><strong>简单来说，二者之间的区别</strong><br><strong>–</strong>  <strong>七层负载均衡</strong>基本都是<strong>基于http协议的</strong>，适用于web服务器的负载均衡。（nginx）<br><strong>–</strong>  <strong>四层负载均衡</strong>主要是<strong>基于tcp协议报文</strong>，可以做任何基于tcp/ip协议的软件的负载均衡。(haproxy、LVS)<br><strong>–</strong>  两者主要区别在于利用的报文所在的层面是不同的，各有各的好处。<br><strong>–</strong>  七层应用负载的好处，是使得整个网络更”智能化“。例如访问一个网站的用户流量，可以通过七层的方式，将对图片类的请求转发到特定的图片服务器并可以使用缓存技术；将对文字类的请求可以转发到特定的文字服务器并可以使用压缩技术。当然这只是七层应用的一个小案例，从技术原理上，这种方式可以对客户端的请求和服务器的响应进行任意意义上的修改，极大的提升了应用系统在网络层的灵活性。很多在后台，例如Nginx或者Apache上部署的功能可以前移到负载均衡设备上，例如客户请求中的Header重写，服务器响应中的关键字过滤或者内容插入等功能。<br><strong>–</strong>  四层负载均衡主要是较为灵活，可以作为多种软件的负载均衡器。</p><p>举个例子形象的说明：四层负载均衡就像银行的自助排号机，每一个达到银行的客户根据排号机的顺序，选择对应的窗口接受服务；而七层负载均衡像银行大堂经理，先确认客户需要办理的业务，再安排排号。这样办理理财、存取款等业务的客户，会根据银行内部资源得到统一协调处理，加快客户业务办理流程。</p><p><img src="/2020/03/09/Linux/%E4%B8%83%E5%B1%82%E4%B8%8E%E5%9B%9B%E5%B1%82%E8%B4%9F%E8%BD%BD/image-74.png" alt="img"></p><p><strong>七层负载均衡的好处</strong><br>七层负载均衡比基于数据包的四层负载均衡更占CPU，但很少会导致服务器性能下降。七层负载均衡可以让负载均衡器做出更明智的决策，并可以对内容进行优化和更改，如压缩、加密等等。七层负载均衡还可以利用buffering来卸载上游服务器的慢速连接，从而提高性能。</p><p>执行七层负载平衡的组件通常被称为反向代理服务器。</p><p><strong>七层负载均衡示例</strong><br>举个简单的例子，假设用户访问高流量网站，在会话期间，它可能会请求静态内容（例如图像或视频）、动态内容（例如新闻订阅源）或者交易信息（例如订单状态）等等。7层负载平衡允许负载均衡器根据请求本身中的消息（如内容类型）来路由请求。也就是说，我们可以将对图像或视频的请求路由到存储它的服务器，并进行高度优化以提供多媒体内容；可以将诸如折扣价之类的交易信息请求路由到负责管理定价的应用服务器。借助7层负载平衡，网络和应用程序架构师可以创建高度优化的服务器基础架构或应用交付网络，在保障可靠性的同时进行有效扩展。</p><p><strong>简单总结</strong><br>从上面的对比看来四层负载与七层负载最大的区别就是效率与功能的区别。四层负载架构设计比较简单，无需解析具体的消息内容，在网络吞吐量及处理能力上会相对比较高，而七层负载均衡的优势则体现在功能多，控制灵活强大。在具体业务架构设计时，使用七层负载或者四层负载还得根据具体的情况综合考虑。</p><p>负载均衡时的数据流都经过负载均衡器，如何解决负载均衡器成为瓶颈的问题？<br>通过修改tcp报文的源地址和目的地址，使从web服务器中返回的数据直接返回到客户端，这是七层负载均衡无法做到的，因为tcp三次握手建立在客户端与负载均衡服务器之间，http协议基于tcp协议，建立好tcp链接后才传送http报文，收到http报文说明负载均衡器和客户端已经建立了tcp连接，而web服务器和客户端的tcp链接都没建立，怎么回传数据给客户端呢。以上的办法会出现问题：所有集群里的主机都是内网ip，无法跟外界联系。<br><strong>解决方案1：</strong><br>如果能买到那么多外网Ip地址来用，然后在tcp链接要建立时负载均衡给真正的web服务器，让客户端和服务器建立tcp链接<br><strong>解决方案2：</strong><br>引用一句话：计算机所有的问题都可以通过建立一层虚拟层解决。<br>可以通过将所有服务器主机ip虚拟化成负载均衡服务器的ip，这样服务器集群的所有主机都可以访问外界网络，因为ip地址（网络层，三层）都是相同，所以只能通过第二层来分辨数据流向，修改数据链路层（二层）目的主机的MAC地址，使请求发到web服务器上，然后才真正建立起tcp连接，然后web服务器因为可以联网，所以可以直接返回数据给客户端</p><p><strong>2）从应用场景的需求上分析</strong><br>七层应用负载的好处，是使得整个网络更”智能化”。例如访问一个网站的用户流量，可以通过七层的方式，将对图片类的请求转发到特定的图片服务器并可以使用缓存技术；将对文字类的请求可以转发到特定的文字服务器并可以使用压缩技术。当然这只是七层应用的一个小案例，从技术原理上，这种方式可以对客户端的请求和服务器的响应进行任意意义上的修改，极大的提升了应用系统在网络层的灵活性。很多在后台，例如Nginx或者Apache上部署的功能可以前移到负载均衡设备上，例如客户请求中的Header重写，服务器响应中的关键字过滤或者内容插入等功能。</p><p>另外一个常常被提到功能就是安全性。网络中最常见的SYN Flood攻击，即黑客控制众多源客户端，使用虚假IP地址对同一目标发送SYN攻击，通常这种攻击会大量发送SYN报文，耗尽服务器上的相关资源，以达到Denial of Service(DoS)的目的。从技术原理上也可以看出，四层模式下这些SYN攻击都会被转发到后端的服务器上；而七层模式下这些SYN攻击自然在负载均衡设备上就截止，不会影响后台服务器的正常运营。另外负载均衡设备可以在七层层面设定多种策略，过滤特定报文，例如SQL Injection等应用层面的特定攻击手段，从应用层面进一步提高系统整体安全。</p><p>现在的七层负载均衡，主要还是着重于应用HTTP协议，所以其应用范围主要是众多的网站或者内部信息平台等基于B/S开发的系统。 4层负载均衡则对应其他TCP应用，例如基于C/S开发的ERP等系统。</p><p><strong>3）七层应用需要考虑的问题</strong><br>3.1) 是否真的必要。七层应用的确可以提高流量智能化，同时必不可免的带来设备配置复杂，负载均衡压力增高以及故障排查上的复杂性等问题。在设计系统时需要考虑四层七层同时应用的混杂情况。</p><p>3.2) 是否真的可以提高安全性。例如SYN Flood攻击，七层模式的确将这些流量从服务器屏蔽，但负载均衡设备本身要有强大的抗DDoS能力，否则即使服务器正常而作为中枢调度的负载均衡设备故障也会导致整个应用的崩溃。</p><p>3.3) 是否有足够的灵活度。七层应用的优势是可以让整个应用的流量智能化，但是负载均衡设备需要提供完善的七层功能，满足客户根据不同情况的基于应用的调度。最简单的一个考核就是能否取代后台Nginx或者Apache等服务器上的调度功能。能够提供一个七层应用开发接口的负载均衡设备，可以让客户根据需求任意设定功能，才真正有可能提供强大的灵活性和智能性。</p><p><strong>4）总体对比</strong><br>4.1) 智能性<br>七层负载均衡由于具备OIS七层的所有功能，所以在处理用户需求上能更加灵活，从理论上讲，七层模型能对用户的所有跟服务端的请求进行修改。例如对文件header添加信息，根据不同的文件类型进行分类转发。四层模型仅支持基于网络层的需求转发，不能修改用户请求的内容。</p><p>4.2) 安全性<br>七层负载均衡由于具有OSI模型的全部功能，能更容易抵御来自网络的攻击；四层模型从原理上讲，会直接将用户的请求转发给后端节点，无法直接抵御网络攻击。</p><p>4.3) 复杂度<br>四层模型一般比较简单的架构，容易管理，容易定位问题；七层模型架构比较复杂，通常也需要考虑结合四层模型的混用情况，出现问题定位比较复杂。</p><p>4.4) 效率比<br>四层模型基于更底层的设置，通常效率更高，但应用范围有限；七层模型需要更多的资源损耗，在理论上讲比四层模型有更强的功能，现在的实现更多是基于http应用。</p><p><strong>四、负载均衡技术方案说明</strong></p><p><strong>1）软/硬件负载均衡</strong><br>软件负载均衡解决方案是指在一台或多台服务器相应的操作系统上安装一个或多个附加软件来实现负载均衡，如DNS Load Balance，CheckPoint Firewall-1 ConnectControl，Keepalive+ipvs等，它的优点是基于特定环境，配置简单，使用灵活，成本低廉，可以满足一般的负载均衡需求。软件解决方案缺点也较多，因为每台服务器上安装额外的软件运行会消耗系统不定量的资源，越是功能强大的模块，消耗得越多，所以当连接请求特别大的时候，软件本身会成为服务器工作成败的一个关键；软件可扩展性并不是很好，受到操作系统的限制；由于操作系统本身的Bug，往往会引起安全问题。</p><p>硬件负载均衡解决方案是直接在服务器和外部网络间安装负载均衡设备，这种设备通常是一个独立于系统的硬件，我们称之为负载均衡器。由于专门的设备完成专门的任务，独立于操作系统，整体性能得到大量提高，加上多样化的负载均衡策略，智能化的流量管理，可达到最佳的负载均衡需求。负载均衡器有多种多样的形式，除了作为独立意义上的负载均衡器外，有些负载均衡器集成在交换设备中，置于服务器与Internet链接之间，有些则以两块网络适配器将这一功能集成到PC中，一块连接到Internet上，一块连接到后端服务器群的内部网络上。</p><p><strong>软件负载均衡与硬件负载均衡的对比：</strong><br>软件负载均衡的优点是需求环境明确，配置简单，操作灵活，成本低廉，效率不高，能满足普通的企业需求；缺点是依赖于系统，增加资源开销；软件的优劣决定环境的性能；系统的安全，软件的稳定性均会影响到整个环境的安全。<br>硬件负载均衡优点是独立于系统，整体性能大量提升，在功能、性能上优于软件方式；智能的流量管理，多种策略可选，能达到最佳的负载均衡效果；缺点是价格昂贵。</p><p><strong>2）本地/全局负载均衡</strong><br>负载均衡从其应用的地理结构上分为本地负载均衡(Local Load Balance)和全局负载均衡(Global Load Balance，也叫地域负载均衡)，本地负载均衡是指对本地的服务器群做负载均衡，全局负载均衡是指对分别放置在不同的地理位置、有不同网络结构的服务器群间作负载均衡。</p><p>本地负载均衡能有效地解决数据流量过大、网络负荷过重的问题，并且不需花费昂贵开支购置性能卓越的服务器，充分利用现有设备，避免服务器单点故障造成数据流量的损失。其有灵活多样的均衡策略把数据流量合理地分配给服务器群内的服务器共同负担。即使是再给现有服务器扩充升级，也只是简单地增加一个新的服务器到服务群中，而不需改变现有网络结构、停止现有的服务。</p><p>全局负载均衡主要用于在一个多区域拥有自己服务器的站点，为了使全球用户只以一个IP地址或域名就能访问到离自己最近的服务器，从而获得最快的访问速度，也可用于子公司分散站点分布广的大公司通过Intranet（企业内部互联网）来达到资源统一合理分配的目的。</p><p><strong>3）网络层次上的负载均衡</strong><br>针对网络上负载过重的不同瓶颈所在，从网络的不同层次入手，我们可以采用相应的负载均衡技术来解决现有问题。<br>随着带宽增加，数据流量不断增大，网络核心部分的数据接口将面临瓶颈问题，原有的单一线路将很难满足需求，而且线路的升级又过于昂贵甚至难以实现，这时就可以考虑采用链路聚合（Trunking）技术。<br>链路聚合技术（第二层负载均衡）将多条物理链路当作一条单一的聚合逻辑链路使用，网络数据流量由聚合逻辑链路中所有物理链路共同承担，由此在逻辑上增大了链路的容量，使其能满足带宽增加的需求。<br>现代负载均衡技术通常操作于网络的第四层或第七层。第四层负载均衡将一个Internet上合法注册的IP地址映射为多个内部服务器的IP地址，对每次 TCP连接请求动态使用其中一个内部IP地址，达到负载均衡的目的。在第四层交换机中，此种均衡技术得到广泛的应用，一个目标地址是服务器群VIP（虚拟 IP，Virtual IP address）连接请求的数据包流经交换机，交换机根据源端和目的IP地址、TCP或UDP端口号和一定的负载均衡策略，在服务器IP和VIP间进行映射，选取服务器群中最好的服务器来处理连接请求。</p><p>七层负载均衡控制应用层服务的内容，提供了一种对访问流量的高层控制方式，适合对HTTP服务器群的应用。第七层负载均衡技术通过检查流经的HTTP报头，根据报头内的信息来执行负载均衡任务。</p><p>七层负载均衡优点表现在如下几个方面：<br>1）通过对HTTP报头的检查，可以检测出HTTP400、500和600系列的错误信息，因而能透明地将连接请求重新定向到另一台服务器，避免应用层故障。<br>2）可根据流经的数据类型（如判断数据包是图像文件、压缩文件或多媒体文件格式等），把数据流量引向相应内容的服务器来处理，增加系统性能。<br>3）能根据连接请求的类型，如是普通文本、图象等静态文档请求，还是asp、cgi等的动态文档请求，把相应的请求引向相应的服务器来处理，提高系统的性能及安全性。</p><p>七层负载均衡缺点表现在如下几个方面：<br>1）七层负载均衡受到其所支持的协议限制（一般只有HTTP），这样就限制了它应用的广泛性。<br>2）七层负载均衡检查HTTP报头会占用大量的系统资源，势必会影响到系统的性能，在大量连接请求的情况下，负载均衡设备自身容易成为网络整体性能的瓶颈。</p><p><strong>五、负载均衡策略</strong><br>在实际应用中，我们可能不想仅仅是把客户端的服务请求平均地分配给内部服务器，而不管服务器是否宕机。而是想使Pentium III服务器比Pentium II能接受更多的服务请求，一台处理服务请求较少的服务器能分配到更多的服务请求，出现故障的服务器将不再接受服务请求直至故障恢复等等。选择合适的负载均衡策略，使多个设备能很好的共同完成任务，消除或避免现有网络负载分布不均、数据流量拥挤反应时间长的瓶颈。在各负载均衡方式中，针对不同的应用需求，在OSI参考模型的第二、三、四、七层的负载均衡都有相应的负载均衡策略。</p><p>负载均衡策略的优劣及其实现的难易程度有两个关键因素：负载均衡算法；对网络系统状况的检测方式和能力。<br>负载均衡算法<br>1）轮循均衡（Round Robin）：每一次来自网络的请求轮流分配给内部中的服务器，从1至N然后重新开始。此种均衡算法适合于服务器组中的所有服务器都有相同的软硬件配置并且平均服务请求相对均衡的情况。<br>2）权重轮循均衡（Weighted Round Robin）：根据服务器的不同处理能力，给每个服务器分配不同的权值，使其能够接受相应权值数的服务请求。例如：服务器A的权值被设计成1，B的权值是 3，C的权值是6，则服务器A、B、C将分别接受到10%、30％、60％的服务请求。此种均衡算法能确保高性能的服务器得到更多的使用率，避免低性能的服务器负载过重。<br>3）随机均衡（Random）：把来自网络的请求随机分配给内部中的多个服务器。<br>4）权重随机均衡（Weighted Random）：此种均衡算法类似于权重轮循算法，不过在处理请求分担时是个随机选择的过程。<br>5）响应速度均衡（Response Time）：负载均衡设备对内部各服务器发出一个探测请求（例如Ping），然后根据内部中各服务器对探测请求的最快响应时间来决定哪一台服务器来响应客户端的服务请求。此种均衡算法能较好的反映服务器的当前运行状态，但这最快响应时间仅仅指的是负载均衡设备与服务器间的最快响应时间，而不是客户端与服务器间的最快响应时间。<br>6）最少连接数均衡（Least Connection）：客户端的每一次请求服务在服务器停留的时间可能会有较大的差异，随着工作时间加长，如果采用简单的轮循或随机均衡算法，每一台服务器上的连接进程可能会产生极大的不同，并没有达到真正的负载均衡。最少连接数均衡算法对内部中需负载的每一台服务器都有一个数据记录，记录当前该服务器正在处理的连接数量，当有新的服务连接请求时，将把当前请求分配给连接数最少的服务器，使均衡更加符合实际情况，负载更加均衡。此种均衡算法适合长时处理的请求服务，如FTP。<br>7）处理能力均衡：此种均衡算法将把服务请求分配给内部中处理负荷（根据服务器CPU型号、CPU数量、内存大小及当前连接数等换算而成）最轻的服务器，由于考虑到了内部服务器的处理能力及当前网络运行状况，所以此种均衡算法相对来说更加精确，尤其适合运用到第七层（应用层）负载均衡的情况下。<br>8）DNS响应均衡（Flash DNS）：在Internet上，无论是HTTP、FTP或是其它的服务请求，客户端一般都是通过域名解析来找到服务器确切的IP地址的。在此均衡算法下，分处在不同地理位置的负载均衡设备收到同一个客户端的域名解析请求，并在同一时间内把此域名解析成各自相对应服务器的IP地址（即与此负载均衡设备在同一位地理位置的服务器的IP地址）并返回给客户端，则客户端将以最先收到的域名解析IP地址来继续请求服务，而忽略其它的IP地址响应。在种均衡策略适合应用在全局负载均衡的情况下，对本地负载均衡是没有意义的。</p>]]></content>
      
      
      <categories>
          
          <category> 负载均衡 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> lvs </tag>
            
            <tag> haproxy </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis哨兵</title>
      <link href="/2020/03/09/redis/redis%E5%93%A8%E5%85%B5/"/>
      <url>/2020/03/09/redis/redis%E5%93%A8%E5%85%B5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/apps/redis/etc/sentinel.conf</span></span><br><span class="line"><span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="string">port</span> <span class="number">26379</span></span><br><span class="line"><span class="string">daemonize</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">pidfile</span> <span class="string">"/apps/redis/redis-sentinel.pid"</span></span><br><span class="line"><span class="string">logfile</span> <span class="string">"/apps/redis/sentinel_26379.log"</span></span><br><span class="line"><span class="string">dir</span> <span class="string">"/apps/redis"</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">deny-scripts-reconfig</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">monitor</span> <span class="string">mymaster</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.110</span> <span class="number">6379</span> <span class="number">2</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">auth-pass</span> <span class="string">mymaster</span> <span class="number">123456</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">down-after-milliseconds</span> <span class="string">mymaster</span> <span class="number">10000</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">parallel-syncs</span> <span class="string">mymaster</span> <span class="number">1</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">failover-timeout</span> <span class="string">mymaster</span> <span class="number">180000</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>三台都一样</p><p>启动哨兵：</p><p>三台哨兵都要启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/apps/</span>redis<span class="regexp">/bin/</span>redis-sentinel <span class="regexp">/apps/</span>redis<span class="regexp">/etc/</span>sentinel.conf</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/redis%E5%93%A8%E5%85%B5/image-75.png" alt="img"></p><p><img src="/2020/03/09/redis/redis%E5%93%A8%E5%85%B5/image-76.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis-cluster</title>
      <link href="/2020/03/09/redis/Redis-cluster/"/>
      <url>/2020/03/09/redis/Redis-cluster/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/03/09/redis/Redis-cluster/image-77.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster/image-79.png" alt="img">手动切换slave状态</p><a id="more"></a><p><img src="/2020/03/09/redis/Redis-cluster/image-80.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster/image-81.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>s1 ~]# yum install ruby rubygems -y</span><br><span class="line">[<span class="symbol">root@</span>s1 ~]# find / -name redis-trib.rb</span><br><span class="line">/usr/local/src/redis<span class="number">-4.0</span><span class="number">.14</span>/src/redis-trib.rb</span><br><span class="line">[<span class="symbol">root@</span>s1 ~]# cp /usr/local/src/redis<span class="number">-4.0</span><span class="number">.14</span>/src/redis-trib.rb /usr/bin/</span><br><span class="line">[<span class="symbol">root@</span>s1 src]# gem install redis</span><br><span class="line">Fetching: redis<span class="number">-4.1</span><span class="number">.0</span>.gem (<span class="number">100</span>%)</span><br><span class="line">ERROR: Error installing redis:</span><br><span class="line">redis requires Ruby version &gt;= <span class="number">2.2</span><span class="number">.2</span>.</span><br><span class="line">#解决 ruby 版本较低问题：</span><br><span class="line">[<span class="symbol">root@</span>s1 src]# yum remove ruby rubygems -y</span><br><span class="line">[<span class="symbol">root@</span>s1 src]# wget https:<span class="comment">//cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.6.tar.gz</span></span><br><span class="line">[<span class="symbol">root@</span>s1 src]# tar xf ruby<span class="number">-2.2</span><span class="number">.6</span>.tar.gz</span><br><span class="line">[<span class="symbol">root@</span>s1 src]# cd ruby<span class="number">-2.2</span><span class="number">.6</span></span><br><span class="line">[<span class="symbol">root@</span>s1 ruby<span class="number">-2.2</span><span class="number">.6</span>]# ./configure</span><br><span class="line">[<span class="symbol">root@</span>s1 ruby<span class="number">-2.2</span><span class="number">.6</span>]# make –j <span class="number">4</span></span><br><span class="line">[<span class="symbol">root@</span>s1 ruby<span class="number">-2.2</span><span class="number">.6</span>]# make install</span><br><span class="line">[<span class="symbol">root@</span>s5 ruby<span class="number">-2.2</span><span class="number">.6</span>]# ln -sv /usr/local/src/ruby<span class="number">-2.2</span><span class="number">.6</span>/bin/gem /usr/bin/</span><br><span class="line">[<span class="symbol">root@</span>s5 ruby<span class="number">-2.2</span><span class="number">.6</span>]# ln -sv /usr/local/src/ruby<span class="number">-2.2</span><span class="number">.6</span>/ruby /usr/bin/</span><br><span class="line">[<span class="symbol">root@</span>s1 ruby<span class="number">-2.2</span><span class="number">.6</span>]# gem install redis</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/Redis-cluster/image-82.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster/image-83.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>s1 ruby<span class="number">-2.5</span><span class="number">.4</span>]# vim /usr/local/lib/ruby/gems/<span class="number">2.5</span><span class="number">.0</span>/gems/redis<span class="number">-4.1</span><span class="number">.0</span>/lib/redis/client.rb #修改密码为</span><br><span class="line">redis 登录密码</span><br><span class="line">/root/redis<span class="number">-4.0</span><span class="number">.14</span>/src/redis-trib.rb create --replicas <span class="number">1</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.110</span>:<span class="number">6379</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.120</span>:<span class="number">6379</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.130</span>:<span class="number">6379</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.140</span>:<span class="number">6379</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.150</span>:<span class="number">6379</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.160</span>:<span class="number">6379</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/Redis-cluster/image-84-1024x355.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster/image-86-1024x139.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster/image-85.png" alt="img"></p><p>slave 可以更换master</p><p><img src="/2020/03/09/redis/Redis-cluster/image-87.png" alt="img">要在130才能写入</p><p><img src="/2020/03/09/redis/Redis-cluster/image-88.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster/image-89.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster/image-90.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis-cluster集群节点维护</title>
      <link href="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/"/>
      <url>/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/</url>
      
        <content type="html"><![CDATA[<p>集群运行时间长久之后，难免由于硬件故障、网络规划、业务增长等原因对已有集群进行相应的调整，<br>比如增加 Redis node 节点、减少节点、节点迁移、更换服务器等。<br>增加节点和删除节点会涉及到已有的槽位重新分配及数据迁移。</p><a id="more"></a><h2 id="集群-维护-之动态-添加节点-："><a href="#集群-维护-之动态-添加节点-：" class="headerlink" title="集群 维护 之动态 添加节点 ："></a>集群 维护 之动态 添加节点 ：</h2><p>增加 Redis node 节点，需要与之前的 Redis node 版本相同、配置一致，然后分别启动两台 Redis node，因为一主一从。</p><p>案例：<br>因公司业务发展迅猛，现有的三主三从 redis cluster 架构可能无法满足现有业务的并发写入需求，因此公司紧急采购一台服务器 192.168.7.104，需要将其动态添加到集群当中其不能影响业务使用和数据丢失，则添加过程如下:</p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-91-1024x387.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-92.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-93.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-94.png" alt="img"></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-trib.rb<span class="built_in"> add-node </span>192.168.64.170:6379 192.168.64.110:6379</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-95.png" alt="img"></p><p>使用命令对新加的主机重新分配槽位:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -a <span class="number">123456</span> --cluster reshard <span class="number">192.168</span><span class="number">.64</span><span class="number">.170</span>:<span class="number">6379</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-96.png" alt="img"></p><p>为新的 master 添加 slave</p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-97.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-98.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-99.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-100-1024x161.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-101-1024x249.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-102.png" alt="æ­¤å¾åçaltå±æ§ä¸ºç©ºï¼æä»¶åä¸ºimage-102.png"></p><h2 id="集群-维护-之动态删除-节点："><a href="#集群-维护-之动态删除-节点：" class="headerlink" title="集群 维护 之动态删除 节点："></a>集群 维护 之动态删除 节点：</h2><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-103.png" alt="img"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">被迁移 <span class="selector-tag">Redis</span> 服务器必须保证没有数据</span><br><span class="line"><span class="selector-attr">[root@s1 ~]</span># <span class="selector-tag">redis-trib</span><span class="selector-class">.rb</span> <span class="selector-tag">reshard</span> 172<span class="selector-class">.18</span><span class="selector-class">.64</span><span class="selector-class">.170</span><span class="selector-pseudo">:6379</span></span><br><span class="line"><span class="selector-attr">[root@s1 ~]</span># <span class="selector-tag">redis-trib</span><span class="selector-class">.rb</span> <span class="selector-tag">fix</span> 172<span class="selector-class">.18</span><span class="selector-class">.64</span><span class="selector-class">.170</span><span class="selector-pseudo">:6379</span> #迁移失败需要修复集群</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-104.png" alt="img"></p><p>验证槽位迁移完成</p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-105.png" alt="img"></p><p>从集群删除服务器</p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-106.png" alt="img"></p><p>集群维护之导入现有 Redis</p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-107.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-108.png" alt="img"></p><p><img src="/2020/03/09/redis/Redis-cluster%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/image-109.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack基础配置</title>
      <link href="/2020/03/09/openstack/openstack%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/03/09/openstack/openstack%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/03/09/openstack/openstack%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/screenshot_20190619_124855-1024x574.png" alt="img"></p><a id="more"></a><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>docs.openstack.org<span class="regexp">/ocata/</span>zh_CN<span class="regexp">/install-guide-rdo/</span> 中文手册</span><br></pre></td></tr></table></figure><p>管理端</p><p>ocata yum源</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@controller1 ~]#cat &gt;/etc/yum.repos.d/ocata.repo &lt;&lt;EOF</span><br><span class="line">[ocata]</span><br><span class="line"><span class="attribute">name</span>=ocata</span><br><span class="line"><span class="attribute">baseurl</span>=https://mirrors.aliyun.com/centos/7/cloud/x86_64/openstack-ocata/</span><br><span class="line"><span class="attribute">gpgcheck</span>=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>安装 openstack 客户端 在控制节点和计算节点。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@node1</span> ~]<span class="meta">#yum install -y python-openstackclient</span></span><br></pre></td></tr></table></figure><p>安装 mariadb+mem：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">控制节点安装yum <span class="keyword">install</span> -y python2-PyMySQL</span><br></pre></td></tr></table></figure><p>数据库服务器</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@linux-host4 ~</span>]<span class="meta"># yum install mariadb mariadb-server </span></span><br><span class="line">配置数据库：</span><br><span class="line">[<span class="meta">root@linux-host4 ~</span>]<span class="meta"># vim /etc/my.cnf.d/openstack.cnf</span></span><br><span class="line">[<span class="meta">mysqld</span>]</span><br><span class="line">bind-address = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="meta">#指定监听地址</span></span><br><span class="line"><span class="keyword">default</span>-storage-engine = innodb <span class="meta">#默认引擎</span></span><br><span class="line">innodb_file_per_table = <span class="keyword">on</span> <span class="meta">#开启每个表都有独立表空间</span></span><br><span class="line">max_connections = <span class="number">4096</span> <span class="meta">#最大连接数</span></span><br><span class="line">collation-server = utf8_general_ci <span class="meta">#不区分大小写排序</span></span><br><span class="line">character-<span class="keyword">set</span>-server = utf8 <span class="meta">#设置编码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl enable mariadb.service</span><br><span class="line">systemctl start mariadb.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></table></figure><p>安装 消息队列</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">安全并配置组件</span><br><span class="line">安装包：</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install rabbitmq-server</span></span><br><span class="line">启动消息队列服务并将其配置为随系统启动：</span><br><span class="line"><span class="comment"># systemctl start rabbitmq-server.service</span></span><br><span class="line"><span class="comment"># systemctl enable rabbitmq-server.service</span></span><br><span class="line"><span class="string">hostnamectl </span><span class="built_in">set-hostname</span> <span class="string">rabbitmq-server1.</span><span class="string">qh.</span><span class="string">net</span></span><br><span class="line"><span class="string">vim </span>/<span class="string">etc/</span><span class="string">hosts</span></span><br><span class="line"><span class="string">192.</span><span class="string">168.</span><span class="string">50.</span><span class="string">102 </span><span class="string">rabbitmq-server1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">rabbitmq-</span><span class="string">plugins </span><span class="string">enable </span><span class="string">rabbitmq_management </span><span class="comment">#开启web管理界面插件  node12都要开</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">http:</span>//<span class="string">192.</span><span class="string">168.</span><span class="string">50.</span><span class="string">102:15672/</span></span><br><span class="line"><span class="string">guest </span> <span class="string">suest</span></span><br><span class="line"><span class="string">#</span><span class="comment">##将rabbitMQ的节点添加到集群：</span></span><br><span class="line">将启动服务的1的<span class="string">cookie </span>发送到 2的节点</span><br><span class="line">[<span class="string">root@</span><span class="string">rabbitmq-server1 </span>~]<span class="comment">#scp /var/lib/rabbitmq/.erlang.cookie 192.168.50.102:/var/lib/rabbitmq/</span></span><br><span class="line">1服务启动 2服务停止</span><br><span class="line">[<span class="string">root@</span><span class="string">rabbitmq-server1 </span>~]<span class="comment"># rabbitmqctl  stop_app #停止应程序  node1关 node2不关</span></span><br><span class="line">[<span class="string">root@</span><span class="string">rabbitmq-server1 </span>~]<span class="comment"># rabbitmqctl   reset #清空元数据</span></span><br><span class="line">[<span class="string">root@</span><span class="string">rabbitmq-server1 </span>~]<span class="comment"># rabbitmqctl  join_cluster rabbit@rabbitmq-server2 --ram　＃将rabbitmq-server1添加到集群当中，并成为内存节点，不加--ram默认是磁盘节点</span></span><br><span class="line"><span class="string">Clustering </span><span class="string">node </span><span class="string">'rabbit@rabbitmq-server1'</span> <span class="string">with </span><span class="string">'rabbit@rabbitmq-server2'</span> ...</span><br><span class="line">...<span class="string">done.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="string">root@</span><span class="string">rabbitmq-server1 </span>~]<span class="comment">#rabbitmqctl  join_cluster rabbit@rabbitmq-server2 --ram</span></span><br><span class="line"><span class="string">Clustering </span><span class="string">node </span><span class="string">'rabbit@rabbitmq-server1'</span> <span class="string">with </span><span class="string">'rabbit@rabbitmq-server2'</span> ...</span><br><span class="line">[<span class="string">root@</span><span class="string">rabbitmq-server1 </span>~]<span class="comment">#rabbitmqctl  cluster_status</span></span><br><span class="line"><span class="string">Cluster </span><span class="string">status </span><span class="string">of </span><span class="string">node </span><span class="string">'rabbit@rabbitmq-server1'</span> ...</span><br><span class="line">[&#123;<span class="string">nodes,</span>[&#123;<span class="string">disc,</span>[<span class="string">'rabbit@rabbitmq-server2'</span>]&#125;,</span><br><span class="line">         &#123;<span class="string">ram,</span>[<span class="string">'rabbit@rabbitmq-server1'</span>]&#125;]&#125;,</span><br><span class="line"> &#123;<span class="string">alarms,</span>[&#123;<span class="string">'rabbit@rabbitmq-server2'</span>,[]&#125;]&#125;]</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/openstack%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/screenshot_20190619_152750-1024x238.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">更改为镜像模式：</span><br><span class="line">2.6.1：只要在其中一台节点执行以下命令即可：</span><br><span class="line"></span><br><span class="line">[root@rabbitmq-server1 ~]# rabbitmqctl set_policy  ha-all <span class="string">"#"</span>  <span class="string">'&#123;"ha-mode":"all"&#125;'</span> #<span class="string">"#"</span>为任意0个或多个即为所有，也可以使用<span class="string">"^test"</span>匹配开头，还可以使用其他正则匹配</span><br><span class="line">Setting<span class="built_in"> policy </span><span class="string">"ha-all"</span> <span class="keyword">for</span> pattern <span class="string">"#"</span> <span class="keyword">to</span> <span class="string">"&#123;\"ha-mode\":\"all\"&#125;"</span> with priority <span class="string">"0"</span> <span class="built_in">..</span>.</span><br><span class="line"><span class="built_in">..</span>.done.</span><br></pre></td></tr></table></figure><p>添加 openstack 用户：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rabbitmq-server1 ~]#rabbitmqctl add_user openstack openstack123</span><br><span class="line">Creating<span class="built_in"> user </span><span class="string">"openstack"</span> <span class="built_in">..</span>.</span><br></pre></td></tr></table></figure><p>给“openstack“用户配置写和读权限：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rabbitmq-server1 ~]#rabbitmqctl set_permissions openstack <span class="string">".*"</span> <span class="string">".*"</span> <span class="string">".*"</span></span><br><span class="line">Setting permissions <span class="keyword">for</span><span class="built_in"> user </span><span class="string">"openstack"</span> <span class="keyword">in</span> vhost <span class="string">"/"</span> <span class="built_in">..</span></span><br></pre></td></tr></table></figure><p>验证</p><p><img src="/2020/03/09/openstack/openstack%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/screenshot_20190619_153622.png" alt="img"></p><p>memcache配置</p><p>两个节点都安装memcache</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum install memcached</span><br><span class="line">控制节点安装yum install python-memcached -y</span><br><span class="line">vim /etc/sysconfig/memcached</span><br><span class="line">PORT=<span class="string">"11211"</span></span><br><span class="line">USER=<span class="string">"memcached"</span></span><br><span class="line">MAXCONN=<span class="string">"4096"</span></span><br><span class="line">CACHESIZE=<span class="string">"1024"</span></span><br><span class="line">OPTIONS=<span class="string">"-l 0.0.0.0,::1"</span></span><br><span class="line"></span><br><span class="line">scp /etc/sysconfig/memcached <span class="number">192.168</span>.<span class="number">50.102</span><span class="symbol">:/etc/sysconfig/memcached</span></span><br><span class="line">[root<span class="variable">@rabbitmq</span>-server1 ~]<span class="comment">#systemctl start memcached.service</span></span><br><span class="line">[root<span class="variable">@rabbitmq</span>-server1 ~]<span class="comment">#systemctl enable memcached.service</span></span><br></pre></td></tr></table></figure><p>haproxy</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line">root@ubuntu:~# sysctl -p</span><br><span class="line">net.ipv4.ip_nonlocal_bind = 1</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">root@ubuntu:~# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">listen MYSQL_PORT_3306</span><br><span class="line">        bind 192.168.220.248:3306</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.50.102:3306 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">listen OPENSTACK_RABBIT</span><br><span class="line">        bind 192.168.220.248:5672</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.50.102:5672 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.50.101:5672 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5 backup</span><br><span class="line"></span><br><span class="line">listen OPENSTACK_memcache</span><br><span class="line">        bind 192.168.220.248:11211</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.50.101:11211 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.50.102:11211 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5 backup</span><br></pre></td></tr></table></figure><p>测试</p><p><img src="/2020/03/09/openstack/openstack%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/screenshot_20190619_163651.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keystone认证</title>
      <link href="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/"/>
      <url>/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><a id="more"></a><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">用数据库连接客户端以 root 用户连接到数据库服务器：</span><br><span class="line"></span><br><span class="line">$ mysql -u root -p</span><br><span class="line">创建 keystone 数据库：</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> keystone;</span><br><span class="line">对``keystone``数据库授予恰当的权限：</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> keystone.* <span class="keyword">TO</span> <span class="string">'keystone'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">'keystone123'</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> keystone.* <span class="keyword">TO</span> <span class="string">'keystone'</span>@<span class="string">'%'</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">'keystone123'</span>;</span><br></pre></td></tr></table></figure><p>在管理节点安装mysq客户端</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> mysql -y</span><br></pre></td></tr></table></figure><p>在 管理节点安装包</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">运行以下命令来安装包。</span><br><span class="line"><span class="meta"># yum install openstack-keystone httpd mod_wsgi</span></span><br></pre></td></tr></table></figure><p>编辑文件 /etc/keystone/keystone.conf 并完成如下动作：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在 <span class="string">[database]</span> 部分，配置数据库访问：</span><br><span class="line"><span class="string">[database]</span></span><br><span class="line"># ...</span><br><span class="line">connection = mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone</span><br><span class="line">+hosts</span><br><span class="line"><span class="number">192.168.220.248</span> openstack-vip.qh.net</span><br><span class="line">connection = mysql+pymysql://keystone:<span class="number">123456</span>@openstack-vip.qh.net/keystone</span><br></pre></td></tr></table></figure><p>在<code>[token]</code>部分，配置Fernet UUID令牌的提供者。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[token]</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="attr">provider</span> = fernet</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_172135.png" alt="img"></p><p>管理端[DEFAULT]生成admin token</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>controller1 ~]#openssl rand -hex <span class="number">10</span></span><br><span class="line"><span class="number">2587</span>bdc190c8de5235ea</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_173625.png" alt="img"></p><p>验证</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">su</span> -s /bin/<span class="keyword">sh</span> -c <span class="string">"keystone-manage db_sync"</span> keystone</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_174709.png" alt="img"></p><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_190055.png" alt="img"></p><p>初始化Fernet key：</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span> <span class="comment">keystone</span><span class="literal">-</span><span class="comment">manage</span> <span class="comment">fernet_setup</span> --<span class="comment">keystone</span><span class="literal">-</span><span class="comment">user</span> <span class="comment">keystone</span> --<span class="comment">keystone</span><span class="literal">-</span><span class="comment">group</span> <span class="comment">keystone</span></span><br><span class="line"><span class="comment">#</span> <span class="comment">keystone</span><span class="literal">-</span><span class="comment">manage</span> <span class="comment">credential_setup</span> --<span class="comment">keystone</span><span class="literal">-</span><span class="comment">user</span> <span class="comment">keystone</span> --<span class="comment">keystone</span><span class="literal">-</span><span class="comment">group</span> <span class="comment">keystone</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_200004.png" alt="img"></p><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_190347.png" alt="img"></p><h2 id="配置-Apache-HTTP-服务器"><a href="#配置-Apache-HTTP-服务器" class="headerlink" title="配置 Apache HTTP 服务器"></a>配置 Apache HTTP 服务器</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建一个链接到``<span class="regexp">/usr/</span>share<span class="regexp">/keystone/</span>wsgi-keystone.conf``文件</span><br><span class="line"></span><br><span class="line"># ln -s <span class="regexp">/usr/</span>share<span class="regexp">/keystone/</span>wsgi-keystone.conf <span class="regexp">/etc/</span>httpd<span class="regexp">/conf.d/</span></span><br><span class="line">启动 Apache HTTP 服务并配置其随系统启动：</span><br><span class="line"></span><br><span class="line"># systemctl enable httpd.service</span><br><span class="line"># systemctl start httpd.service</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_192229.png" alt="img">有355357</p><p>开启一个新tty窗口，开始测试和创建用户</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_TOKEN</span>=2587bdc190c8de5235ea</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_URL</span>=http://192.168.220.202:35357/v3</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_IDENTITY_API_VERSION</span>=3</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_195825.png" alt="img"></p><p>创建默认域：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack domain create --description <span class="string">"Default Domain"</span> default</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">| Field       | Value                            |</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">| description |<span class="built_in"> Default </span>Domain                   |</span><br><span class="line">| enabled     | <span class="literal">True</span>                             |</span><br><span class="line">| id          | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span><br><span class="line">| name        |<span class="built_in"> default </span>                         |</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">[root@controller2 ~]#openstack domain list</span><br><span class="line">+----------------------------------+---------+---------+----------------+</span><br><span class="line">| ID                               | Name    | Enabled | Description    |</span><br><span class="line">+----------------------------------+---------+---------+----------------+</span><br><span class="line">| f9a9c4f4cd2647e8a5d6fe012ec07788 |<span class="built_in"> default </span>| <span class="literal">True</span>    |<span class="built_in"> Default </span>Domain |</span><br><span class="line">+----------------------------------+---------+---------+----------------+</span><br><span class="line"></span><br><span class="line">[root@controller2 ~]#openstack domain delete f9a9c4f4cd2647e8a5d6fe012ec07788  #删除域</span><br></pre></td></tr></table></figure><h2 id="创建一个-admin-的项目"><a href="#创建一个-admin-的项目" class="headerlink" title="创建一个 admin 的项目"></a>创建一个 admin 的项目</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">openstack project create --domain default --description "Admin Project" admin</span><br><span class="line"><span class="code">+-------------+</span>----------------------------------+</span><br><span class="line">| Field       | Value                            |</span><br><span class="line"><span class="code">+-------------+</span>----------------------------------+</span><br><span class="line">| description | Admin Project                    |</span><br><span class="line">| domain<span class="emphasis">_id   | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span></span><br><span class="line"><span class="emphasis">| enabled     | True                             |</span></span><br><span class="line"><span class="emphasis">| id          | 1f04e20d276c405bb1fd49d1bf09946e |</span></span><br><span class="line"><span class="emphasis">| is_</span>domain   | False                            |</span><br><span class="line">| name        | admin                            |</span><br><span class="line">| parent<span class="emphasis">_id   | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span></span><br><span class="line"><span class="emphasis">+-------------+----------------------------------+</span></span><br></pre></td></tr></table></figure><p>创建 admin 用户并设置密码为 admin：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">openstack<span class="built_in"> user </span>create --domain<span class="built_in"> default </span>--password-prompt admin</span><br><span class="line">User Password:admin</span><br><span class="line">Repeat<span class="built_in"> User </span>Password:admin</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| Field               | Value                            |</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| domain_id           | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span><br><span class="line">| enabled             | <span class="literal">True</span>                             |</span><br><span class="line">| id                  | 8f7d37d54641497889f23eb3b0f2eed8 |</span><br><span class="line">| name                | admin                            |</span><br><span class="line">| options             | &#123;&#125;                               |</span><br><span class="line">| password_expires_at | None                             |</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">[root@controller2 ~]#openstack<span class="built_in"> user </span>list</span><br><span class="line">+----------------------------------+-------+</span><br><span class="line">| ID                               | Name  |</span><br><span class="line">+----------------------------------+-------+</span><br><span class="line">| 8f7d37d54641497889f23eb3b0f2eed8 | admin |</span><br><span class="line">+----------------------------------+-------+</span><br></pre></td></tr></table></figure><p>创建 admin 角色：<br>一个项目里面可以有多个角色，目前角色只能创建在/etc/keystone/policy.json 文件中定义好的角色：</p><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_201758.png" alt="img"></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack role create admin</span></span><br><span class="line">+-----------+----------------------------------+</span><br><span class="line">|<span class="string"> Field     </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+-----------+----------------------------------+</span><br><span class="line">|<span class="string"> domain_id </span>|<span class="string"> None                             </span>|</span><br><span class="line">|<span class="string"> id        </span>|<span class="string"> 8e3790e764544b19ad89852948c9e077 </span>|</span><br><span class="line">|<span class="string"> name      </span>|<span class="string"> admin                            </span>|</span><br><span class="line">+-----------+----------------------------------+</span><br><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack role list</span></span><br><span class="line">+----------------------------------+-------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Name  </span>|</span><br><span class="line">+----------------------------------+-------+</span><br><span class="line">|<span class="string"> 8e3790e764544b19ad89852948c9e077 </span>|<span class="string"> admin </span>|</span><br><span class="line">+----------------------------------+-------+</span><br></pre></td></tr></table></figure><p>给 admin 用户授权：</p><p>将 admin 用户授予 admin 项目的 admin 角色，即给 admin 项目添加一个用户叫 admin，并将其添加至 admin 角色，角色是权限的一种集合：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project admin --user admin admin</span></span><br></pre></td></tr></table></figure><h2 id="创建-o-demo-项目："><a href="#创建-o-demo-项目：" class="headerlink" title="创建 o demo 项目："></a>创建 o demo 项目：</h2><p>该项目可用于演示和测试等</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack project create --domain default --description "Demo Project" demo</span></span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field       </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> description </span>|<span class="string"> Demo Project                     </span>|</span><br><span class="line">|<span class="string"> domain_id   </span>|<span class="string"> f9a9c4f4cd2647e8a5d6fe012ec07788 </span>|</span><br><span class="line">|<span class="string"> enabled     </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id          </span>|<span class="string"> 389fbbfa451742dbb4989f6f4e857aed </span>|</span><br><span class="line">|<span class="string"> is_domain   </span>|<span class="string"> False                            </span>|</span><br><span class="line">|<span class="string"> name        </span>|<span class="string"> demo                             </span>|</span><br><span class="line">|<span class="string"> parent_id   </span>|<span class="string"> f9a9c4f4cd2647e8a5d6fe012ec07788 </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br></pre></td></tr></table></figure><p>创建 demo 用户并设置密码为 demo</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack<span class="built_in"> user </span>create --domain<span class="built_in"> default </span>--password-prompt demo</span><br><span class="line">User Password: demo</span><br><span class="line">Repeat<span class="built_in"> User </span>Password:demo</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| Field               | Value                            |</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| domain_id           | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span><br><span class="line">| enabled             | <span class="literal">True</span>                             |</span><br><span class="line">| id                  | 1b4610763476402c9195650b54b9b551 |</span><br><span class="line">| name                | demo                             |</span><br><span class="line">| options             | &#123;&#125;                               |</span><br><span class="line">| password_expires_at | None                             |</span><br><span class="line">+---------------------+----------------------------------+</span><br></pre></td></tr></table></figure><p>创建一个 user 角色：</p><p>角色目前有 user 和 admin：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack role create user</span><br><span class="line">+-----------+----------------------------------+</span><br><span class="line">| Field     | Value                            |</span><br><span class="line">+-----------+----------------------------------+</span><br><span class="line">| domain_id | None                             |</span><br><span class="line">| id        | 1d5ed3e1be4f4f15acc67d1040cccc55 |</span><br><span class="line">| name      |<span class="built_in"> user </span>                            |</span><br><span class="line">+-----------+----------------------------------+</span><br></pre></td></tr></table></figure><p>把 demo 用户添加到 demo 项目：然后赋予 user 权限：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project demo --user demo user</span></span><br></pre></td></tr></table></figure><h2 id="创建一个-service-项目："><a href="#创建一个-service-项目：" class="headerlink" title="创建一个 service 项目："></a>创建一个 service 项目：</h2><p>各服务之间与 keystone 进行访问和认证，service 用于给服务创建用户</p><p>创建 service 项目：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack project create --domain<span class="built_in"> default </span>--description <span class="string">"Service Project"</span> service</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">| Field       | Value                            |</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">| description |<span class="built_in"> Service </span>Project                  |</span><br><span class="line">| domain_id   | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span><br><span class="line">| enabled     | <span class="literal">True</span>                             |</span><br><span class="line">| id          | cac1d2794af34a9990ea8ede036e1250 |</span><br><span class="line">| is_domain   | <span class="literal">False</span>                            |</span><br><span class="line">| name        |<span class="built_in"> service </span>                         |</span><br><span class="line">| parent_id   | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span><br><span class="line">+-------------+----------------------------------+</span><br></pre></td></tr></table></figure><p>创建 glance 用户并设置密码为 glance</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack<span class="built_in"> user </span>create --domain<span class="built_in"> default </span>--password-prompt glance</span><br><span class="line">User Password:</span><br><span class="line">Repeat<span class="built_in"> User </span>Password:</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| Field               | Value                            |</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| domain_id           | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span><br><span class="line">| enabled             | <span class="literal">True</span>                             |</span><br><span class="line">| id                  | b44be253b32c4c01b9d6529e01391be0 |</span><br><span class="line">| name                | glance                           |</span><br><span class="line">| options             | &#123;&#125;                               |</span><br><span class="line">| password_expires_at | None                             |</span><br><span class="line">+---------------------+----------------------------------+</span><br></pre></td></tr></table></figure><p>对 glance 用户授权：把 glance 和 neutron 用户添加到 service 项目并授予 admin 角色</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack role <span class="builtin-name">add</span> --project<span class="built_in"> service </span>--user glance admin</span><br></pre></td></tr></table></figure><h2 id="按照以上-步骤操作-a-nova-和-neutron-用户："><a href="#按照以上-步骤操作-a-nova-和-neutron-用户：" class="headerlink" title="按照以上 步骤操作 a nova 和 neutron 用户："></a>按照以上 步骤操作 a nova 和 neutron 用户：</h2><p>将 nova 用户添加到 service 项目并授予 admin 权限</p><p>创建 nova 用户并设置 密码为 为 nova</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack<span class="built_in"> user </span>create --domain<span class="built_in"> default </span>--password-prompt nova</span><br><span class="line">User Password:</span><br><span class="line">Repeat<span class="built_in"> User </span>Password:</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| Field               | Value                            |</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| domain_id           | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span><br><span class="line">| enabled             | <span class="literal">True</span>                             |</span><br><span class="line">| id                  | 7be49e0adbd24743836b022f99d7b4f3 |</span><br><span class="line">| name                | nova                             |</span><br><span class="line">| options             | &#123;&#125;                               |</span><br><span class="line">| password_expires_at | None                             |</span><br><span class="line">+---------------------+----------------------------------+</span><br></pre></td></tr></table></figure><p>创建 neutron 用户并 设置 密码为 neutron ：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack<span class="built_in"> user </span>create --domain<span class="built_in"> default </span>--password-prompt neutron</span><br><span class="line">User Password:</span><br><span class="line">Repeat<span class="built_in"> User </span>Password:</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| Field               | Value                            |</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| domain_id           | f9a9c4f4cd2647e8a5d6fe012ec07788 |</span><br><span class="line">| enabled             | <span class="literal">True</span>                             |</span><br><span class="line">| id                  | 55cd53a5f8cd4027a677074aa299e85f |</span><br><span class="line">| name                | neutron                          |</span><br><span class="line">| options             | &#123;&#125;                               |</span><br><span class="line">| password_expires_at | None                             |</span><br><span class="line">+---------------------+----------------------------------+</span><br></pre></td></tr></table></figure><p>将 nova 和 neutron 用户授权为 service 项目的 admi 权限</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@controller2 ~]#openstack role <span class="builtin-name">add</span> --project<span class="built_in"> service </span>--user nova admin</span><br><span class="line">[root@controller2 ~]#openstack role <span class="builtin-name">add</span> --project<span class="built_in"> service </span>--user neutron admin</span><br></pre></td></tr></table></figure><h2 id="服务注册："><a href="#服务注册：" class="headerlink" title="服务注册："></a>服务注册：</h2><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_203539.png" alt="img">查看当前的服务</p><p>将 keystone 服务地址注册到 openstack：</p><p>创建一个 keystone 认证服务：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack service create --name keystone --description "OpenStack Identity" identity</span></span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field       </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> description </span>|<span class="string"> OpenStack Identity               </span>|</span><br><span class="line">|<span class="string"> enabled     </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id          </span>|<span class="string"> 69db4257102b4f55b17166b40a386f76 </span>|</span><br><span class="line">|<span class="string"> name        </span>|<span class="string"> keystone                         </span>|</span><br><span class="line">|<span class="string"> type        </span>|<span class="string"> identity                         </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack service list</span></span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Name     </span>|<span class="string"> Type     </span>|</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">|<span class="string"> 69db4257102b4f55b17166b40a386f76 </span>|<span class="string"> keystone </span>|<span class="string"> identity </span>|</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#cat /etc/hosts</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.220.201 controller1.qh.net</span><br><span class="line">192.168.220.202 controller2.qh.net</span><br><span class="line">192.168.50.248 openstack-vip.qh.net  <span class="comment">###</span></span><br><span class="line">openstack endpoint create --region RegionOne identity public http://openstack-vip.qh.net:5000/v3  <span class="comment">#公共端点</span></span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne identity internal http://openstack-vip.qh.net:5000/v3 <span class="comment">#私有端点</span></span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne identity admin http://openstack-vip.qh.net:35357/v3 <span class="comment">#管理端点</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">####替换成vip</span></span><br><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack endpoint create --region RegionOne identity public http://openstack-vip.qh.net:5000/v3</span></span><br><span class="line">+--------------+-------------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                               </span>|</span><br><span class="line">+--------------+-------------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                                </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 17c797c8b7604b84ad0bf9a887652a24    </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> public                              </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                           </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                           </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 69db4257102b4f55b17166b40a386f76    </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> keystone                            </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> identity                            </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.qh.net:5000/v3 </span>|</span><br><span class="line">+--------------+-------------------------------------+</span><br><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack endpoint create --region RegionOne identity internal http://openstack-vip.qh.net:5000/v3</span></span><br><span class="line">+--------------+-------------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                               </span>|</span><br><span class="line">+--------------+-------------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                                </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 413681a81dac4769809d8fe4ab009261    </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> internal                            </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                           </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                           </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 69db4257102b4f55b17166b40a386f76    </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> keystone                            </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> identity                            </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.qh.net:5000/v3 </span>|</span><br><span class="line">+--------------+-------------------------------------+</span><br><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack endpoint create --region RegionOne identity admin http://openstack-vip.qh.net:35357/v3</span></span><br><span class="line">+--------------+--------------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                                </span>|</span><br><span class="line">+--------------+--------------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                                 </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> fe66690d5a224a85ae07ae3a00db303a     </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> admin                                </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                            </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                            </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 69db4257102b4f55b17166b40a386f76     </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> keystone                             </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> identity                             </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.qh.net:35357/v3 </span>|</span><br><span class="line">+--------------+--------------------------------------+</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack endpoint list</span></span><br><span class="line">+-------------------+-----------+--------------+--------------+---------+-----------+--------------------+</span><br><span class="line">|<span class="string"> ID                </span>|<span class="string"> Region    </span>|<span class="string"> Service Name </span>|<span class="string"> Service Type </span>|<span class="string"> Enabled </span>|<span class="string"> Interface </span>|<span class="string"> URL                </span>|</span><br><span class="line">+-------------------+-----------+--------------+--------------+---------+-----------+--------------------+</span><br><span class="line">|<span class="string"> 17c797c8b7604b84a </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> public    </span>|<span class="string"> http://openstack-  </span>|</span><br><span class="line">|<span class="string"> d0bf9a887652a24   </span>|<span class="string">           </span>|<span class="string">              </span>|<span class="string">              </span>|<span class="string">         </span>|<span class="string">           </span>|<span class="string"> vip.qh.net:5000/v3 </span>|</span><br><span class="line">|<span class="string"> 413681a81dac47698 </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> internal  </span>|<span class="string"> http://openstack-  </span>|</span><br><span class="line">|<span class="string"> 09d8fe4ab009261   </span>|<span class="string">           </span>|<span class="string">              </span>|<span class="string">              </span>|<span class="string">         </span>|<span class="string">           </span>|<span class="string"> vip.qh.net:5000/v3 </span>|</span><br><span class="line">|<span class="string"> fe66690d5a224a85a </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> admin     </span>|<span class="string"> http://openstack-v </span>|</span><br><span class="line">|<span class="string"> e07ae3a00db303a   </span>|<span class="string">           </span>|<span class="string">              </span>|<span class="string">              </span>|<span class="string">         </span>|<span class="string">           </span>|<span class="string"> ip.qh.net:35357/v3 </span>|</span><br><span class="line">+-------------------+-----------+--------------+--------------+---------+-----------+--------------------+</span><br></pre></td></tr></table></figure><p>配置haproxy代理管理ip</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/haproxy/haproxy.cfg</span><br><span class="line"></span><br><span class="line">listen openstack_keystone_5000</span><br><span class="line">        bind 192.168.220.248:5000</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.50.202:5000 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">listen openstack_keystone_35357</span><br><span class="line">        bind 192.168.220.248:35357</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>web1 192.168.50.202:35357 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_210114.png" alt="img"></p><p>测试</p><p><img src="/2020/03/09/openstack/keystone%E8%AE%A4%E8%AF%81/screenshot_20190619_210152.png" alt="img"></p><h2 id="测试-keystone-是否可以做用户验证："><a href="#测试-keystone-是否可以做用户验证：" class="headerlink" title="测试 keystone 是否可以做用户验证："></a>测试 keystone 是否可以做用户验证：</h2><p>验证 admin 用户，密码 admin，新打开一个窗口并进行以下操作：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">export OS<span class="emphasis">_IDENTITY_</span>API<span class="emphasis">_VERSION=3</span></span><br><span class="line"><span class="emphasis">[root@controller2 ~]#keystone-manage db_</span>sync</span><br><span class="line">[root@controller2 ~]#openstack --os-auth-url http://192.168.220.202:35357/v3 --os-project-domain-name default --os-user-domain-name default --os-project-name admin --os-username admin token issue</span><br><span class="line">Password: admin</span><br><span class="line"><span class="code">+------------+</span>-------------------------------------------------------------------------------------------+</span><br><span class="line">| Field      | Value                                                                                     |</span><br><span class="line"><span class="code">+------------+</span>-------------------------------------------------------------------------------------------+</span><br><span class="line">| expires    | 2019-06-19T14:17:29+0000                                                                  |</span><br><span class="line">| id         | gAAAAABdCjXqL1Le5-YQi9N6FYEz3ovx5CRJp5aoHRNyeVNQ1UjshmX2QXIt-                             |</span><br><span class="line">|            | hzu0CRdJjSclN9xT08DStgHdSbi<span class="emphasis">_RQJv3bh0ryUm_</span>thzF1GUmS8Ta8BL-                                 |</span><br><span class="line">|            | tgC4ZkBlqMjOn1v8hxYURWAs5dAkvELWFLe56NIhWNgeuLD4-<span class="emphasis">_R8ao2LYqldka0u4                         |</span></span><br><span class="line"><span class="emphasis">| project_</span>id | 1f04e20d276c405bb1fd49d1bf09946e                                                          |</span><br><span class="line">| user<span class="emphasis">_id    | 8f7d37d54641497889f23eb3b0f2eed8                                                          |</span></span><br><span class="line"><span class="emphasis">+------------+-------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="emphasis">[root@controller2 ~]#openstack --os-auth-url http://192.168.220.202:35357/v3 --os-project-domain-name default --os-user-domain-name default --os-project-name demo --os-username demo token issue</span></span><br><span class="line"><span class="emphasis">Password: </span></span><br><span class="line"><span class="emphasis">+------------+-------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="emphasis">| Field      | Value                                                                                     |</span></span><br><span class="line"><span class="emphasis">+------------+-------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="emphasis">| expires    | 2019-06-19T14:20:21+0000                                                                  |</span></span><br><span class="line"><span class="emphasis">| id         | gAAAAABdCjaV3R7LbNyRV7ltTRR8c6nHrLgOdqlMQKPScfoCvTo_</span>O6LZ7do<span class="emphasis">_q8u3R5qc0rR5AAEZbEPrG6j4x52QH |</span></span><br><span class="line"><span class="emphasis">|            | RZMTQgH9oRMddjvw5-IYGMUxwuGHfWnIu2HyfLj2zq_</span>kJEpnQFzUcJmMn5QzF5XjAAnQtFB3CJX8qiXGOX0GNN6f7 |</span><br><span class="line">|            | JiLuQ                                                                                     |</span><br><span class="line">| project<span class="emphasis">_id | 389fbbfa451742dbb4989f6f4e857aed                                                          |</span></span><br><span class="line"><span class="emphasis">| user_</span>id    | 1b4610763476402c9195650b54b9b551                                                          |</span><br><span class="line"><span class="code">+------------+</span>-------------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h2 id="使用脚本设置环境变量："><a href="#使用脚本设置环境变量：" class="headerlink" title="使用脚本设置环境变量："></a>使用脚本设置环境变量：</h2><p>Admin 用户脚本内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-host1 ~]<span class="comment"># chmod a+x admin-ocata.sh</span></span><br><span class="line">[root@controller2 ~]<span class="comment">#source admin-ocata.sh</span></span><br><span class="line">[root@linux-host1 ~]<span class="comment"># cat admin-ocata.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_DOMAIN_NAME=default</span><br><span class="line"><span class="built_in">export</span> OS_USER_DOMAIN_NAME=default</span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_NAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_USERNAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_PASSWORD=admin</span><br><span class="line"><span class="built_in">export</span> OS_AUTH_URL=http://192.168.220.202:35357/v3</span><br><span class="line"><span class="built_in">export</span> OS_IDENTITY_API_VERSION=3</span><br><span class="line"><span class="built_in">export</span> OS_IMAGE_API_VERSION=2</span><br><span class="line">Demo 用户脚本内容：</span><br><span class="line">[root@linux-host1 ~]<span class="comment"># chmod a+x demo-ocata.sh</span></span><br><span class="line">[root@controller2 ~]<span class="comment">#source demo-ocata.sh</span></span><br><span class="line">[root@linux-host1 ~]<span class="comment"># cat demo-ocata.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_DOMAIN_NAME=default</span><br><span class="line"><span class="built_in">export</span> OS_USER_DOMAIN_NAME=default</span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_NAME=demo</span><br><span class="line"><span class="built_in">export</span> OS_USERNAME=demo</span><br><span class="line"><span class="built_in">export</span> OS_PASSWORD=demo</span><br><span class="line"><span class="built_in">export</span> OS_AUTH_URL=http://192.168.220.202:5000/v3</span><br><span class="line"><span class="built_in">export</span> OS_IDENTITY_API_VERSION=3</span><br><span class="line"><span class="built_in">export</span> OS_IMAGE_API_VERSION=2</span><br><span class="line">[root@controller2 ~]<span class="comment">#openstack --os-auth-url http://192.168.220.202:35357/v3 --os-project-domain-name default --os-user-domain-name default --os-project-name admin --os-username admin token issue</span></span><br><span class="line">+------------+-------------------------------------------------------------------------------------------+</span><br><span class="line">| Field      | Value                                                                                     |</span><br><span class="line">+------------+-------------------------------------------------------------------------------------------+</span><br><span class="line">| expires    | 2019-06-19T14:26:16+0000                                                                  |</span><br><span class="line">| id         | gAAAAABdCjf4xSv7V-zQyj9eu7uIvDGw-5JwHtLHoV9vjhWLKyVfKrJT8nu0zh9fiOA-sZ8aXSccPjIZPukiwh5-4 |</span><br><span class="line">|            | OE3pEtR7EpX440Klo3_cD6fNhIPtk8qxIglODhXa6XIjvDoVFCo5jsiSO9RHMe6y_H1Xw93ZRUBtqIPrB7qISMlZH |</span><br><span class="line">|            | IeqAg                                                                                     |</span><br><span class="line">| project_id | 1f04e20d276c405bb1fd49d1bf09946e                                                          |</span><br><span class="line">| user_id    | 8f7d37d54641497889f23eb3b0f2eed8                                                          |</span><br><span class="line">+------------+-------------------------------------------------------------------------------------------+</span><br><span class="line"><span class="comment">###无需输入密码验证</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>镜像服务部署glance</title>
      <link href="/2020/03/09/openstack/%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2glance/"/>
      <url>/2020/03/09/openstack/%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2glance/</url>
      
        <content type="html"><![CDATA[<p>Glance是OpenStack镜像服务组件，glance服务默认监听在9292端口，其接受REST API请求，然后通过其他模块（glance-registry及image store）来完成诸如镜像的获取、上传、删除等操作。Glance提供restful API可以查询虚拟机镜像的metadata，并且可以获得镜像，通过Glance，虚拟机镜像可以被存储到多种存储上，比如简单的文件存储或者 对象存储（OpenStack中swift项目）是在创建虚拟机的时候，需要先把镜像上传到glance，对镜像的列出镜像、删除镜像和上传镜像都是通过glance进行处理。glance有两个主要的服务，一个是glance-api接受镜像的删除和读取，一个是glance-Registry。</p><a id="more"></a><p>glance-registy负责与mysql数据交互，用于存储或获取镜像的元数据（metadata），提供镜像元数据相关的REST接口，通过glance-registry可以向数据库中写入或获取镜像的各种数据，glance-registry监听的端口是9191，glance数据库中有两张表，一张是glance表，一张是imane property表，image表保存了镜像格式、大小等信息，image property表保存了镜像的定制化信息。</p><p>image store 是一个存储的接口层，通过这个接口glance可以获取镜像，image store支持的存储有Amazon的S3、本身的swift、还有ceph、glusterFS、sheepdog等分布式存储，image store是镜像保存与读取的接口，但是它只是一个接口，具体的实现需要外部的支持，glance不需要配置消息队列，但是需要配置数据库和keystone。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">官方文档</span><br><span class="line">https://docs.openstack.org/ocata/zh_CN/install-guide-rdo/glance-install.html</span><br><span class="line"><span class="number">1</span>、登录数据库 </span><br><span class="line">[root@mysql1 ~]# mysql -uroot -p </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、创建glance数据库 </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> glance;</span><br><span class="line"> Query OK, <span class="number">1</span> <span class="keyword">row</span> affected (<span class="number">0.011</span> sec)  </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、创建glance账号并授权glance数据库 </span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> glance.* <span class="keyword">TO</span> <span class="string">'glance'</span>@<span class="string">'%'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'glance123'</span>;</span><br><span class="line"> Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.016</span> sec) </span><br><span class="line"> <span class="number">4</span>、测试是否可以使用glance连接数据库 </span><br><span class="line">mysql -uglance -pglance123 -hopenstack-vip.qh.com</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2glance/glance1.png" alt="img"></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">5、使用admin管理员账号创建glance账号</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack user create --domain default --password-prompt glance</span></span><br><span class="line">User Password:</span><br><span class="line">Repeat User Password:</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field               </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">|<span class="string"> domain_id           </span>|<span class="string"> 463ba193c3164cf2b0d278198bb424cd </span>|</span><br><span class="line">|<span class="string"> enabled             </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id                  </span>|<span class="string"> ffab9b49c1b94aa3ad70a109f8c38140 </span>|</span><br><span class="line">|<span class="string"> name                </span>|<span class="string"> glance                           </span>|</span><br><span class="line">|<span class="string"> options             </span>|<span class="string"> &#123;&#125;                               </span>|</span><br><span class="line">|<span class="string"> password_expires_at </span>|<span class="string"> None                             </span>|</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack user list</span></span><br><span class="line">+----------------------------------+--------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Name   </span>|</span><br><span class="line">+----------------------------------+--------+</span><br><span class="line">|<span class="string"> 28bcd9dc73be4443bc88f23b57c4d3b6 </span>|<span class="string"> demp   </span>|</span><br><span class="line">|<span class="string"> 95e7ef69ef254533b0aa913b45381aa9 </span>|<span class="string"> admin  </span>|</span><br><span class="line">|<span class="string"> ffab9b49c1b94aa3ad70a109f8c38140 </span>|<span class="string"> glance </span>|</span><br><span class="line">+----------------------------------+--------+</span><br><span class="line"></span><br><span class="line">6、将glance用户加入service项目，并赋予admin角色的权限</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack role add --project service --user glance admin</span></span><br><span class="line"></span><br><span class="line">7、创建glance服务实体</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack service create --name glance \</span></span><br><span class="line">--description <span class="string">"OpenStack Image"</span> image</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field       </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> description </span>|<span class="string"> OpenStack Image                  </span>|</span><br><span class="line">|<span class="string"> enabled     </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id          </span>|<span class="string"> 7e3ab1a609bf4944a8ffcf01c3ae3d7a </span>|</span><br><span class="line">|<span class="string"> name        </span>|<span class="string"> glance                           </span>|</span><br><span class="line">|<span class="string"> type        </span>|<span class="string"> image                            </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">查看创建服务实体</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack service list</span></span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Name     </span>|<span class="string"> Type     </span>|</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">|<span class="string"> 3b1ba4d6a5f645fb883f86ce806ac087 </span>|<span class="string"> keystone </span>|<span class="string"> identity </span>|</span><br><span class="line">|<span class="string"> 7e3ab1a609bf4944a8ffcf01c3ae3d7a </span>|<span class="string"> glance   </span>|<span class="string"> image    </span>|</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line"></span><br><span class="line">8、注册glance服务实体API端点</span><br><span class="line">openstack endpoint create --region RegionOne  image public http://openstack-vip.qh.com:9292 </span><br><span class="line">openstack endpoint create --region RegionOne  image internal http://openstack-vip.qh.com:9292</span><br><span class="line">openstack endpoint create --region RegionOne  image admin http://openstack-vip.qh.com:9292 </span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne  image public http://openstack-vip.qh.com:9292</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 03005b03299a48608158e44365b079ba </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> public                           </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 7e3ab1a609bf4944a8ffcf01c3ae3d7a </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> glance                           </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> image                            </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:9292    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne  image internal http://openstack-vip.qh.com:9292</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 05cca4d6ae5a4110aa6345284d7f7b7a </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> internal                         </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 7e3ab1a609bf4944a8ffcf01c3ae3d7a </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> glance                           </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> image                            </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:9292    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne  image admin http://openstack-vip.qh.com:9292</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 2c2de07fdbe04f3aa3f7e6113cf28b3f </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> admin                            </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 7e3ab1a609bf4944a8ffcf01c3ae3d7a </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> glance                           </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> image                            </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:9292    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br></pre></td></tr></table></figure><p><strong>查看注册结果</strong></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># openstack endpoint list</span></span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+-----------------------------------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Region    </span>|<span class="string"> Service Name </span>|<span class="string"> Service Type </span>|<span class="string"> Enabled </span>|<span class="string"> Interface </span>|<span class="string"> URL                               </span>|</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+-----------------------------------+</span><br><span class="line">|<span class="string"> 03005b03299a48608158e44365b079ba </span>|<span class="string"> RegionOne </span>|<span class="string"> glance       </span>|<span class="string"> image        </span>|<span class="string"> True    </span>|<span class="string"> public    </span>|<span class="string"> http://openstack-vip.net:9292     </span>|</span><br><span class="line">|<span class="string"> 05cca4d6ae5a4110aa6345284d7f7b7a </span>|<span class="string"> RegionOne </span>|<span class="string"> glance       </span>|<span class="string"> image        </span>|<span class="string"> True    </span>|<span class="string"> internal  </span>|<span class="string"> http://openstack-vip.net:9292     </span>|</span><br><span class="line">|<span class="string"> 2c2de07fdbe04f3aa3f7e6113cf28b3f </span>|<span class="string"> RegionOne </span>|<span class="string"> glance       </span>|<span class="string"> image        </span>|<span class="string"> True    </span>|<span class="string"> admin     </span>|<span class="string"> http://openstack-vip.net:9292     </span>|</span><br><span class="line">|<span class="string"> 3a5cc4f279f5482990e77261ba57e80f </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> internal  </span>|<span class="string"> http://openstack-vip.net:5000/v3  </span>|</span><br><span class="line">|<span class="string"> c5649de3650e4fdeb262ab3acb71819c </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> public    </span>|<span class="string"> http://openstack-vip.net:5000/v3  </span>|</span><br><span class="line">|<span class="string"> f3ac230871b2478f8e4ec1bfd471f90b </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> admin     </span>|<span class="string"> http://openstack-vip.net:35357/v3 </span>|</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+-----------------------------------+</span><br><span class="line"></span><br><span class="line">=======================================================================</span><br></pre></td></tr></table></figure><h3 id="安装并配置组件"><a href="#安装并配置组件" class="headerlink" title="安装并配置组件"></a><strong>安装并配置组件</strong></h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1、安装软件包</span><br><span class="line">[root@OpenStack1 ~]<span class="comment"># yum install openstack-glance -y</span></span><br><span class="line"></span><br><span class="line">2、编辑配置文件api</span><br><span class="line">[root@OpenStack1 ~]<span class="comment"># vim /etc/glance/glance-api.conf</span></span><br><span class="line">[database]                    <span class="comment">#配置数据库访问</span></span><br><span class="line">connection = mysql+pymysql://glance:glance123@openstack-vip.qh.com/glance</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]          <span class="comment">#配置认证服务访问</span></span><br><span class="line">auth_uri = http:// openstack-vip.qh.com :5000</span><br><span class="line">auth_url = http:// openstack-vip.qh.com :35357</span><br><span class="line">memcached_servers =  openstack-vip.qh.com :11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = glance</span><br><span class="line">password = glance</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line">flavor = keystone</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[glance_store]                 <span class="comment">#配置本地文件系统存储和镜像文件位置，可使用NFS</span></span><br><span class="line">stores = file,http</span><br><span class="line">default_store = file</span><br><span class="line">filesystem_store_datadir = /var/lib/glance/images/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、编辑配置文件registry</span><br><span class="line">[root@OpenStack1 ~]<span class="comment"># vim /etc/glance/glance-registry.conf</span></span><br><span class="line">[database]                    <span class="comment">#配置数据库访问</span></span><br><span class="line">connection = mysql+pymysql://glance:glance123@openstack-vip.qh.com/glance</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]          <span class="comment">#配置认证服务访问</span></span><br><span class="line">auth_uri = http:// openstack-vip.qh.com :5000</span><br><span class="line">auth_url = http:// openstack-vip.qh.com :35357</span><br><span class="line">memcached_servers =  openstack-vip.qh.com :11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = glance</span><br><span class="line">password = glance</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line">flavor = keystone</span><br></pre></td></tr></table></figure><h3 id="4、初始化数据库，写入数据"><a href="#4、初始化数据库，写入数据" class="headerlink" title="4、初始化数据库，写入数据"></a><strong>4、初始化数据库，写入数据</strong></h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@OpenStack1</span> ~]<span class="meta"># su -s /bin/sh -c <span class="string">"glance-manage db_sync"</span> glance</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2glance/glance2.png" alt="img"></p><p><img src="/2020/03/09/openstack/%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2glance/glance3.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span>、配置haproxy</span><br><span class="line"><span class="symbol">root@</span>LB1:~# vim /etc/haproxy/haproxy.cfg </span><br><span class="line">listen openstack_glance_port_9292</span><br><span class="line">  bind <span class="number">10.20</span><span class="number">.0</span><span class="number">.40</span>:<span class="number">9292</span></span><br><span class="line">  mode tcp</span><br><span class="line">  log global</span><br><span class="line">  server <span class="number">10.20</span><span class="number">.0</span><span class="number">.60</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.60</span>:<span class="number">9292</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">  server <span class="number">10.20</span><span class="number">.0</span><span class="number">.70</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.70</span>:<span class="number">9292</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span> backup</span><br><span class="line"><span class="symbol">root@</span>LB1:~# systemctl restart haproxy</span><br><span class="line"> ss -nlt确认监听<span class="number">9292</span>端口</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、启动镜像服务</span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# systemctl start openstack-glance-api.service openstack-glance-registry.service</span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# systemctl enable openstack-glance-api.service openstack-glance-registry.service</span><br><span class="line"></span><br><span class="line">查看images目录是否正常生成</span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# ll /var/lib/glance</span><br><span class="line">total <span class="number">0</span></span><br><span class="line">drwxr-x--- <span class="number">2</span> glance glance <span class="number">6</span> Jun <span class="number">21</span> <span class="number">09</span>:<span class="number">38</span> images</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、在另一个服务器安装NFS服务，实现共享</span><br><span class="line">[<span class="symbol">root@</span>mysql2 ~]# yum -y install nfs-utils</span><br><span class="line">[<span class="symbol">root@</span>mysql2 ~]# mkdir /openstack/glance -p       #注意权限</span><br><span class="line">[<span class="symbol">root@</span>mysql2 ~]# vim /etc/exports</span><br><span class="line">/openstack/glance *(rw,no_root_squash)</span><br><span class="line">[<span class="symbol">root@</span>mysql2 ~]# systemctl restart nfs</span><br><span class="line">[<span class="symbol">root@</span>mysql2 ~]# systemctl enable nfs</span><br><span class="line">[<span class="symbol">root@</span>mysql2 ~]# exportfs -r        #重新加载，无需重启服务</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>、挂载</span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# showmount -e <span class="number">10.20</span><span class="number">.0</span><span class="number">.110</span></span><br><span class="line">Export list <span class="keyword">for</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.110</span>:</span><br><span class="line">/openstack/glance *</span><br><span class="line"></span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# mount -t nfs <span class="number">10.20</span><span class="number">.0</span><span class="number">.110</span>:/openstack/glance /var/lib/glance/images</span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# vim /etc/fstab</span><br><span class="line"><span class="number">10.20</span><span class="number">.0</span><span class="number">.110</span>:/openstack/glance /var/lib/glance/images nfs defaults,_netdev <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">9</span>、下载测试镜像</span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# wget http:<span class="comment">//download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img</span></span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# systemctl restart openstack-glance-api.service openstack-glance-registry.service</span><br><span class="line"></span><br><span class="line">使用QCOW2磁盘格式，bare容器格式上传镜像到镜像服务并设置公共可见，这样所有的项目都可以访问它</span><br><span class="line"></span><br><span class="line">[<span class="symbol">root@</span>OpenStack1 ~]# openstack image create <span class="string">"cirros-0.3.4"</span> \</span><br><span class="line">--file cirros<span class="number">-0.3</span><span class="number">.4</span>-x86_64-disk.img \</span><br><span class="line">--disk-format qcow2 --container-format bare \</span><br><span class="line">--<span class="keyword">public</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2glance/glance4.png" alt="img"></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">查看镜像</span><br><span class="line">[root@OpenStack1 ~]# openstack image list</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------<span class="code">+--------+</span></span><br><span class="line">| ID                                   | Name         | Status |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------<span class="code">+--------+</span></span><br><span class="line">| f5d00b1e-aa71-4c46-86c5-bf12d0bcd21f | cirros-0.3.5 | active |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------<span class="code">+--------+</span></span><br><span class="line"></span><br><span class="line">[root@OpenStack1 ~]# ll /var/lib/glance/images/</span><br><span class="line">total 12960</span><br><span class="line">-rw-r----- 1 glance glance 13267968 Jun 21 10:14 f5d00b1e-aa71-4c46-86c5-bf12d0bcd21f</span><br><span class="line"></span><br><span class="line">同步数据</span><br><span class="line">rsync -avlopg /openstack/glance/* 10.20.0.110:/openstack/glance/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenStack计算服务部署nova</title>
      <link href="/2020/03/09/openstack/OpenStack%E8%AE%A1%E7%AE%97%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2nova/"/>
      <url>/2020/03/09/openstack/OpenStack%E8%AE%A1%E7%AE%97%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2nova/</url>
      
        <content type="html"><![CDATA[<p>nova是OpenStack最早的组件之一，nova分为控制节点和计算节点，计算节点通过nova computer进行虚拟机创建，通过libvirt调用kvm创建虚拟机，nova之间通信通过rabbitMQ队列进行通信。</p><a id="more"></a><ul><li><p><strong>API：</strong>负责接收和响应外部请求。</p></li><li><p><strong>Scheduler</strong>：负责调度虚拟机所在的物理机。</p></li><li><p><strong>Conductor</strong>：计算节点访问数据库的中间件。</p></li><li><p><strong>Consoleauth：</strong>用于控制台的授权认证。</p></li><li><p><strong>Novncproxy：</strong>VNC代理，用于显示虚拟机终端操作。</p></li></ul><p><strong>Nova-API的功能：</strong> Nova-API组件实现了restful API的功能，接收和响应来自最终用户的计算API请求，接收外部的请求并通过message queue将请求发送给其他服务组件，同时也兼容EC2 API，所以也可以使用EC2的管理工具对nova进行日常管理。</p><p><strong>nova scheduler:</strong> nova scheduler模式在OpenStack中的作用是决策虚拟机创建在哪个主机（计算节点）上。决策一个虚拟机应该调度到某物理节点，需要分为两个步骤：</p><p>过滤（filter），过滤出可以创建虚拟机的主机</p><p><img src="/2020/03/09/openstack/OpenStack%E8%AE%A1%E7%AE%97%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2nova/nova1.png" alt="img"></p><p>计算权值（weight），根据权重大进行分配，默认根据资源可用空间进行权重排序。</p><p><img src="/2020/03/09/openstack/OpenStack%E8%AE%A1%E7%AE%97%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2nova/nova2.png" alt="img"></p><p><strong>=============================================================================================</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">nova控制端服务及高可用</span><br><span class="line"></span><br><span class="line">  安装并配置nova控制节点</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、创建数据库</span><br><span class="line">[root@mysql1 ~]# mysql -uroot -p</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova_api;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova_cell0;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、创建nova账户并对nova数据库进行授权</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_api.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'nova123'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'nova123'</span>;</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_cell0.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'nova123'</span>;</span><br><span class="line"><span class="number">3</span>、测试</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/OpenStack%E8%AE%A1%E7%AE%97%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2nova/nova3.png" alt="img"></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br></pre></td><td class="code"><pre><span class="line">4、在管理端使用admin管理员账号创建nova用户</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack user create --domain default --password-prompt nova</span></span><br><span class="line">User Password:</span><br><span class="line">Repeat User Password:</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field               </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">|<span class="string"> domain_id           </span>|<span class="string"> 463ba193c3164cf2b0d278198bb424cd </span>|</span><br><span class="line">|<span class="string"> enabled             </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id                  </span>|<span class="string"> cc642044eabd438b9a67ef9548a5a5a3 </span>|</span><br><span class="line">|<span class="string"> name                </span>|<span class="string"> nova                             </span>|</span><br><span class="line">|<span class="string"> options             </span>|<span class="string"> &#123;&#125;                               </span>|</span><br><span class="line">|<span class="string"> password_expires_at </span>|<span class="string"> None                             </span>|</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack user list</span></span><br><span class="line">+----------------------------------+--------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Name   </span>|</span><br><span class="line">+----------------------------------+--------+</span><br><span class="line">|<span class="string"> 28bcd9dc73be4443bc88f23b57c4d3b6 </span>|<span class="string"> demp   </span>|</span><br><span class="line">|<span class="string"> 95e7ef69ef254533b0aa913b45381aa9 </span>|<span class="string"> admin  </span>|</span><br><span class="line">|<span class="string"> cc642044eabd438b9a67ef9548a5a5a3 </span>|<span class="string"> nova   </span>|</span><br><span class="line">|<span class="string"> ffab9b49c1b94aa3ad70a109f8c38140 </span>|<span class="string"> glance </span>|</span><br><span class="line">+----------------------------------+--------+</span><br><span class="line"></span><br><span class="line">5、将nova用户加入service项目，并赋予admin角色的权限</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack role add --project service --user nova admin</span></span><br><span class="line"></span><br><span class="line">6、创建nova服务实体</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack service create --name nova \</span></span><br><span class="line">--description <span class="string">"OpenStack Compute"</span> compute</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field       </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> description </span>|<span class="string"> OpenStack Compute                </span>|</span><br><span class="line">|<span class="string"> enabled     </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id          </span>|<span class="string"> cccd4f84faf74cdeb5e8493a3573e0b2 </span>|</span><br><span class="line">|<span class="string"> name        </span>|<span class="string"> nova                             </span>|</span><br><span class="line">|<span class="string"> type        </span>|<span class="string"> compute                          </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">查看创建的服务实体</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack service list</span></span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Name     </span>|<span class="string"> Type     </span>|</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line">|<span class="string"> 3b1ba4d6a5f645fb883f86ce806ac087 </span>|<span class="string"> keystone </span>|<span class="string"> identity </span>|</span><br><span class="line">|<span class="string"> 7e3ab1a609bf4944a8ffcf01c3ae3d7a </span>|<span class="string"> glance   </span>|<span class="string"> image    </span>|</span><br><span class="line">|<span class="string"> cccd4f84faf74cdeb5e8493a3573e0b2 </span>|<span class="string"> nova     </span>|<span class="string"> compute  </span>|</span><br><span class="line">+----------------------------------+----------+----------+</span><br><span class="line"></span><br><span class="line">7、注册nova服务实体API端点</span><br><span class="line">openstack endpoint create --region RegionOne compute public http://openstack-vip.qh.com:8774/v2.1 </span><br><span class="line">openstack endpoint create --region RegionOne compute internal http://openstack-vip.qh.com:8774/v2.1 </span><br><span class="line">openstack endpoint create --region RegionOne compute admin http://openstack-vip.qh.com:8774/v2.1 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne compute public http://openstack-vip.qh.com:8774/v2.1</span></span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                              </span>|</span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                               </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 85630d2827794726abd51ba8f6c39f76   </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> public                             </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                          </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                          </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> cccd4f84faf74cdeb5e8493a3573e0b2   </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> nova                               </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> compute                            </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:8774/v2.1 </span>|</span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne compute internal http://openstack-vip.qh.com:8774/v2.1</span></span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                              </span>|</span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                               </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> d8ae3de7f8cc4ae3bc9169831ecb1e04   </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> internal                           </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                          </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                          </span>|<span class="string"> </span></span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> cccd4f84faf74cdeb5e8493a3573e0b2   </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> nova                               </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> compute                            </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:8774/v2.1 </span>|</span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne compute admin http://openstack-vip.qh.com:8774/v2.1</span></span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                              </span>|</span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                               </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> e218e523fd61492f953f3b37f1c3ddc9   </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> admin                              </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                          </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                          </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> cccd4f84faf74cdeb5e8493a3573e0b2   </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> nova                               </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> compute                            </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:8774/v2.1 </span>|</span><br><span class="line">+--------------+------------------------------------+</span><br><span class="line">8、验证注册</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint list</span></span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+------------------------------------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Region    </span>|<span class="string"> Service Name </span>|<span class="string"> Service Type </span>|<span class="string"> Enabled </span>|<span class="string"> Interface </span>|<span class="string"> URL                                </span>|</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+------------------------------------+</span><br><span class="line">|<span class="string"> 03005b03299a48608158e44365b079ba </span>|<span class="string"> RegionOne </span>|<span class="string"> glance       </span>|<span class="string"> image        </span>|<span class="string"> True    </span>|<span class="string"> public    </span>|<span class="string"> http://openstack-vip.net:9292      </span>|</span><br><span class="line">|<span class="string"> 05cca4d6ae5a4110aa6345284d7f7b7a </span>|<span class="string"> RegionOne </span>|<span class="string"> glance       </span>|<span class="string"> image        </span>|<span class="string"> True    </span>|<span class="string"> internal  </span>|<span class="string"> http://openstack-vip.net:9292      </span>|</span><br><span class="line">|<span class="string"> 2c2de07fdbe04f3aa3f7e6113cf28b3f </span>|<span class="string"> RegionOne </span>|<span class="string"> glance       </span>|<span class="string"> image        </span>|<span class="string"> True    </span>|<span class="string"> admin     </span>|<span class="string"> http://openstack-vip.net:9292      </span>|</span><br><span class="line">|<span class="string"> 3a5cc4f279f5482990e77261ba57e80f </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> internal  </span>|<span class="string"> http://openstack-vip.net:5000/v3   </span>|</span><br><span class="line">|<span class="string"> 85630d2827794726abd51ba8f6c39f76 </span>|<span class="string"> RegionOne </span>|<span class="string"> nova         </span>|<span class="string"> compute      </span>|<span class="string"> True    </span>|<span class="string"> public    </span>|<span class="string"> http://openstack-vip.net:8774/v2.1 </span>|</span><br><span class="line">|<span class="string"> c5649de3650e4fdeb262ab3acb71819c </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> public    </span>|<span class="string"> http://openstack-vip.net:5000/v3   </span>|</span><br><span class="line">|<span class="string"> d8ae3de7f8cc4ae3bc9169831ecb1e04 </span>|<span class="string"> RegionOne </span>|<span class="string"> nova         </span>|<span class="string"> compute      </span>|<span class="string"> True    </span>|<span class="string"> internal  </span>|<span class="string"> http://openstack-vip.net:8774/v2.1 </span>|</span><br><span class="line">|<span class="string"> e218e523fd61492f953f3b37f1c3ddc9 </span>|<span class="string"> RegionOne </span>|<span class="string"> nova         </span>|<span class="string"> compute      </span>|<span class="string"> True    </span>|<span class="string"> admin     </span>|<span class="string"> http://openstack-vip.net:8774/v2.1 </span>|</span><br><span class="line">|<span class="string"> f3ac230871b2478f8e4ec1bfd471f90b </span>|<span class="string"> RegionOne </span>|<span class="string"> keystone     </span>|<span class="string"> identity     </span>|<span class="string"> True    </span>|<span class="string"> admin     </span>|<span class="string"> http://openstack-vip.net:35357/v3  </span>|</span><br><span class="line">+----------------------------------+-----------+--------------+--------------+---------+-----------+------------------------------------+</span><br><span class="line">9、创建placement用户</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack user create --domain default --password-prompt placement</span></span><br><span class="line">User Password:</span><br><span class="line">Repeat User Password:</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field               </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">|<span class="string"> domain_id           </span>|<span class="string"> 463ba193c3164cf2b0d278198bb424cd </span>|</span><br><span class="line">|<span class="string"> enabled             </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id                  </span>|<span class="string"> a59dc6359de040d7a1adea4d2f60f257 </span>|</span><br><span class="line">|<span class="string"> name                </span>|<span class="string"> placement                        </span>|</span><br><span class="line">|<span class="string"> options             </span>|<span class="string"> &#123;&#125;                               </span>|</span><br><span class="line">|<span class="string"> password_expires_at </span>|<span class="string"> None                             </span>|</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack user list</span></span><br><span class="line">+----------------------------------+-----------+</span><br><span class="line">|<span class="string"> ID                               </span>|<span class="string"> Name      </span>|</span><br><span class="line">+----------------------------------+-----------+</span><br><span class="line">|<span class="string"> 28bcd9dc73be4443bc88f23b57c4d3b6 </span>|<span class="string"> demp      </span>|</span><br><span class="line">|<span class="string"> 95e7ef69ef254533b0aa913b45381aa9 </span>|<span class="string"> admin     </span>|</span><br><span class="line">|<span class="string"> a59dc6359de040d7a1adea4d2f60f257 </span>|<span class="string"> placement </span>|</span><br><span class="line">|<span class="string"> cc642044eabd438b9a67ef9548a5a5a3 </span>|<span class="string"> nova      </span>|</span><br><span class="line">|<span class="string"> ffab9b49c1b94aa3ad70a109f8c38140 </span>|<span class="string"> glance    </span>|</span><br><span class="line">+----------------------------------+-----------+</span><br><span class="line"></span><br><span class="line">10、将placement用户加入service项目，并赋予admin角色的权限</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack role add --project service --user placement admin</span></span><br><span class="line"></span><br><span class="line">11、创建placement服务</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack service create --name placement --description "Placement API" placement</span></span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field       </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> description </span>|<span class="string"> Placement API                    </span>|</span><br><span class="line">|<span class="string"> enabled     </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id          </span>|<span class="string"> 329ea6dc9e7b4cc8b5797f5c0d7f5d88 </span>|</span><br><span class="line">|<span class="string"> name        </span>|<span class="string"> placement                        </span>|</span><br><span class="line">|<span class="string"> type        </span>|<span class="string"> placement                        </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">12、注册placement API服务</span><br><span class="line">openstack endpoint create --region RegionOne placement public http://openstack-vip.qh.com:8778 </span><br><span class="line">openstack endpoint create --region RegionOne placement internal http://openstack-vip.qh.com:8778 </span><br><span class="line">openstack endpoint create --region RegionOne placement admin http://openstack-vip.qh.com:8778 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne placement public http:// openstack-vip.qh.com :8778</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 4d392925b4b54c56ac96d4563fe6a7a7 </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> public                           </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 329ea6dc9e7b4cc8b5797f5c0d7f5d88 </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> placement                        </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> placement                        </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:8778    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne placement internal http:// openstack-vip.qh.com :8778</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> da1ed4a922ef43f8b4484cb1ea547e6b </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> internal                         </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 329ea6dc9e7b4cc8b5797f5c0d7f5d88 </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> placement                        </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> placement                        </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:8778    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># openstack endpoint create --region RegionOne placement admin http:// openstack-vip.qh.com :8778</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> f31dff31de284ba38fec69b00bf48e5e </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> admin                            </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 329ea6dc9e7b4cc8b5797f5c0d7f5d88 </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> placement                        </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> placement                        </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:8778    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">13、配置负载均衡</span><br><span class="line">root<span class="meta">@LB1:~#</span> vim /etc/haproxy/haproxy.cfg </span><br><span class="line">listen openstack_nova_port_8774</span><br><span class="line">  bind 10.20.0.40:8774</span><br><span class="line">  mode tcp</span><br><span class="line">  log global</span><br><span class="line">  server 10.20.0.60 10.20.0.60:8774 check inter 3000 fall 2 rise 5</span><br><span class="line">  server 10.20.0.70 10.20.0.70:8774 check inter 3000 fall 2 rise 5 backup</span><br><span class="line"></span><br><span class="line">listen openstack_nova_port_8778</span><br><span class="line">  bind 10.20.0.40:8778</span><br><span class="line">  mode tcp</span><br><span class="line">  log global</span><br><span class="line">  server 10.20.0.60 10.20.0.60:8778 check inter 3000 fall 2 rise 5</span><br><span class="line">  server 10.20.0.70 10.20.0.70:8778 check inter 3000 fall 2 rise 5 backup</span><br><span class="line"></span><br><span class="line">listen openstack_nova_port_6080</span><br><span class="line">  bind 10.20.0.40:6080</span><br><span class="line">  mode tcp</span><br><span class="line">  log global</span><br><span class="line">  server 10.20.0.60 10.20.0.60:6080 check inter 3000 fall 2 rise 5</span><br><span class="line">  server 10.20.0.70 10.20.0.70:6080 check inter 3000 fall 2 rise 5 backup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root<span class="meta">@LB1:~#</span> systemctl restart haproxy</span><br><span class="line">root<span class="meta">@LB1:~#</span> ss -nlt          <span class="comment">#确认监听8774、8778、6080端口</span></span><br><span class="line">14、在控制端，安装并配置组件</span><br><span class="line">配置yum源，</span><br><span class="line">[centos-openstack-ocata]</span><br><span class="line">name=CentOS-7 - OpenStack ocata</span><br><span class="line"><span class="comment">#baseurl=http://mirror.centos.org/centos/7/cloud/$basearch/openstack-ocata/</span></span><br><span class="line"><span class="comment">#baseurl=https://mirrors.aliyun.com/centos/7/cloud/x86_64/openstack-ocata/</span></span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/7/cloud/x86_64/openstack-stein/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Cloud</span><br><span class="line">exclude=sip,PyQt4</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># yum install openstack-nova-api openstack-nova-conductor openstack-nova-console openstack-nova-novncproxy openstack-nova-scheduler openstack-nova-placement-api -y</span></span><br><span class="line">编辑配置文件nova.conf</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># vim /etc/nova/nova.conf</span></span><br><span class="line">[DEFAULT]    </span><br><span class="line">enabled_apis = osapi_compute,metadata          <span class="comment">#只启用计算和元数据API</span></span><br><span class="line">use_neutron = True</span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line">transport_url = rabbit://openstack:openstack123<span class="meta">@rabbitmq.qh.com</span></span><br><span class="line"></span><br><span class="line">[api_database]                          <span class="comment">#配置数据库连接</span></span><br><span class="line">connection = mysql+pymysql://nova:nova123<span class="meta">@openstack-vip.qh.com/nova_api</span></span><br><span class="line"></span><br><span class="line">[database]                              <span class="comment">#配置数据库连接</span></span><br><span class="line">connection=mysql+pymysql://nova:nova123<span class="meta">@openstack-vip.qh.com/nova</span></span><br><span class="line"></span><br><span class="line">[api]</span><br><span class="line">auth_strategy=keystone</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]                     <span class="comment">#认证</span></span><br><span class="line">auth_uri = http://openstack-vip.qh.com:5000</span><br><span class="line">auth_url = http://openstack-vip.qh.com:35357</span><br><span class="line">memcached_servers = openstack-vip.qh.com:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = nova</span><br><span class="line"></span><br><span class="line">[vnc]                             <span class="comment"># 配置VNC代理使用控制节点的管理接口IP地址</span></span><br><span class="line">enabled = true</span><br><span class="line">vncserver_listen = 0.0.0.0</span><br><span class="line">vncserver_proxyclient_address =  openstack-vip.qh.com </span><br><span class="line"></span><br><span class="line">[glance]                          <span class="comment">#配置镜像服务 API 的位置</span></span><br><span class="line">api_servers = http://openstack-vip.qh.com:9292</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]                <span class="comment">#配置锁路径</span></span><br><span class="line">lock_path = /var/lib/nova/tmp</span><br><span class="line"></span><br><span class="line">[placement]</span><br><span class="line">os_region_name = RegionOne</span><br><span class="line">project_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">auth_type = password</span><br><span class="line">user_domain_name = Default</span><br><span class="line">auth_url = http://openstack-vip.qh.com:35357/v3</span><br><span class="line">username = placement</span><br><span class="line">password = placement</span><br><span class="line">编辑配置文件00-nova-placement-api.conf</span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># vim /etc/httpd/conf.d/00-nova-placement-api.conf</span></span><br><span class="line"><span class="variable">&lt;Directory /usr/bin&gt;</span>              <span class="comment">#在底部加入</span></span><br><span class="line">   <span class="variable">&lt;IfVersion &gt;</span>= 2.4&gt;</span><br><span class="line">      Require all granted</span><br><span class="line">   <span class="variable">&lt;/IfVersion&gt;</span></span><br><span class="line">   <span class="variable">&lt;IfVersion &lt; 2.4&gt;</span></span><br><span class="line">      Order allow,deny</span><br><span class="line">      Allow from all</span><br><span class="line">   <span class="variable">&lt;/IfVersion&gt;</span></span><br><span class="line"><span class="variable">&lt;/Directory&gt;</span></span><br><span class="line"></span><br><span class="line">[root<span class="meta">@OpenStack1</span> ~]<span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/OpenStack%E8%AE%A1%E7%AE%97%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2nova/image-119.png" alt="img"></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">15</span>、初始化数据库</span><br><span class="line">nova-api database</span><br><span class="line">[root<span class="symbol">@OpenStack1</span> ~]<span class="meta"># su -s /bin/sh -c <span class="string">"nova-manage api_db sync"</span> nova</span></span><br><span class="line"></span><br><span class="line">cell0 database</span><br><span class="line">[root<span class="symbol">@OpenStack1</span> ~]<span class="meta"># su -s /bin/sh -c <span class="string">"nova-manage cell_v2 map_cell0"</span> nova</span></span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@OpenStack1</span> ~]<span class="meta"># su -s /bin/sh -c <span class="string">"nova-manage cell_v2 create_cell --name=cell1 --verbose"</span> nova</span></span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@OpenStack1</span> ~]<span class="meta"># su -s /bin/sh -c <span class="string">"nova-manage db sync"</span> nova</span></span><br><span class="line"></span><br><span class="line">验证</span><br><span class="line">[root<span class="symbol">@OpenStack1</span> ~]<span class="meta"># nova-manage cell_v2 list_cells</span></span><br><span class="line"></span><br><span class="line"><span class="number">16</span>、启动服务</span><br><span class="line">[root<span class="symbol">@OpenStack1</span> ~]<span class="meta"># systemctl enable openstack-nova-api.service \</span></span><br><span class="line">openstack-nova-consoleauth.service openstack-nova-scheduler.service \</span><br><span class="line">openstack-nova-conductor.service openstack-nova-novncproxy.service</span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@OpenStack1</span> ~]<span class="meta"># systemctl start openstack-nova-api.service \</span></span><br><span class="line">openstack-nova-consoleauth.service openstack-nova-scheduler.service \</span><br><span class="line">openstack-nova-conductor.service openstack-nova-novncproxy.service</span><br></pre></td></tr></table></figure><p><strong>=============================================================</strong></p><h2 id="nova计算节点服务"><a href="#nova计算节点服务" class="headerlink" title="nova计算节点服务"></a>nova计算节点服务</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">  在计算节点服务器部署</span><br><span class="line">安装nova计算服务</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http:<span class="comment">//mirrors.aliyun.com/repo/Centos-7.repo   #安装阿里最新base源 </span></span><br><span class="line">yum update</span><br><span class="line"></span><br><span class="line"> /etc/yum.repos.d/CentOS-Base.repo文件里添加如下内容 </span><br><span class="line">[<span class="meta">Virt</span>]</span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line"><span class="meta">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os&amp;infra=$infra</span></span><br><span class="line">baseurl=http:<span class="comment">//mirrors.sohu.com/centos/7.5.1804/virt/x86_64/kvm-common/</span></span><br><span class="line"><span class="meta">#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">gpgkey=file:<span class="comment"><span class="doctag">///</span>etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">root@note1 ~</span>]<span class="meta"># yum install openstack-nova-compute </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">修改配置文件</span><br><span class="line">[<span class="meta">root@note1 ~</span>]<span class="meta"># vim /etc/nova/nova.conf </span></span><br><span class="line">[<span class="meta">DEFAULT</span>]</span><br><span class="line">enabled_apis = osapi_compute,metadata</span><br><span class="line">transport_url = rabbit:<span class="comment">//openstack:openstack123@rabbitmq.qh.com</span></span><br><span class="line">use_neutron = True</span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line"></span><br><span class="line">[<span class="meta">api</span>]</span><br><span class="line">auth_strategy=keystone</span><br><span class="line"></span><br><span class="line">[<span class="meta">keystone_authtoken</span>]</span><br><span class="line">auth_uri = http:<span class="comment">//openstack-vip.qh.com:5000</span></span><br><span class="line">auth_url = http:<span class="comment">//openstack-vip.qh.com:35357</span></span><br><span class="line">memcached_servers = openstack-vip.qh.com:<span class="number">11211</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = nova</span><br><span class="line"></span><br><span class="line">[<span class="meta">vnc</span>]</span><br><span class="line">enabled = True</span><br><span class="line">vncserver_listen = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">vncserver_proxyclient_address = node1(本机地址)</span><br><span class="line">novncproxy_base_url = http:<span class="comment">//openstack-vip.qh.com:6080/vnc_auto.html</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">glance</span>]</span><br><span class="line">api_servers = http:<span class="comment">//openstack-vip.qh.com:9292</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">oslo_concurrency</span>]</span><br><span class="line">lock_path = /<span class="keyword">var</span>/lib/nova/tmp</span><br><span class="line"></span><br><span class="line">[<span class="meta">placement</span>]</span><br><span class="line">os_region_name = RegionOne</span><br><span class="line">project_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">auth_type = password</span><br><span class="line">user_domain_name = Default</span><br><span class="line">auth_url = http:<span class="comment">//openstack-vip.qh.com:35357/v3</span></span><br><span class="line">username = placement</span><br><span class="line">password = placement</span><br><span class="line"></span><br><span class="line">确认你的计算节点是否支持虚拟机硬件加速</span><br><span class="line">[<span class="meta">root@note1 ~</span>]<span class="meta"># egrep -c '(vmx|svm)' /proc/cpuinfo</span></span><br><span class="line"></span><br><span class="line">启动服务</span><br><span class="line">[<span class="meta">root@note1 ~</span>]<span class="meta"># systemctl enable libvirtd.service openstack-nova-compute.service</span></span><br><span class="line">[<span class="meta">root@note1 ~</span>]<span class="meta"># systemctl start libvirtd.service openstack-nova-compute.service</span></span><br><span class="line"></span><br><span class="line">=================================================================================</span><br><span class="line"></span><br><span class="line">在控制节点上测试</span><br><span class="line">[<span class="meta">root@OpenStack1 ~</span>]<span class="meta"># openstack hypervisor list</span></span><br><span class="line">+----+---------------------+-----------------+--------------+-------+</span><br><span class="line">| ID | Hypervisor Hostname | Hypervisor Type | Host IP      | State |</span><br><span class="line">+----+---------------------+-----------------+--------------+-------+</span><br><span class="line">| <span class="number">1</span>  | note1               | QEMU            | <span class="number">10.20</span><span class="number">.0</span><span class="number">.80</span>   | up    |</span><br><span class="line">+----+---------------------+-----------------+--------------+-------</span><br><span class="line">  定期主动发现计算节点</span><br><span class="line">[<span class="meta">root@OpenStack1 ~</span>]<span class="meta"># vim /etc/nova/nova.conf</span></span><br><span class="line">[<span class="meta">scheduler</span>]</span><br><span class="line">discover_hosts_in_cells_interval = <span class="number">300</span></span><br><span class="line"></span><br><span class="line">验证计算节点</span><br><span class="line">[<span class="meta">root@OpenStack1 ~</span>]<span class="meta"># nova host-list</span></span><br><span class="line">[<span class="meta">root@OpenStack1 ~</span>]<span class="meta"># nova service-list</span></span><br><span class="line">[<span class="meta">root@OpenStack1 ~</span>]<span class="meta"># nova image-list</span></span><br><span class="line"></span><br><span class="line">列出服务组件是否注册成功</span><br><span class="line">[<span class="meta">root@OpenStack1 ~</span>]<span class="meta"># openstack compute service list</span></span><br><span class="line">手动发现计算节点</span><br><span class="line">su -s /bin/sh -c <span class="string">"nova-manage cell_v2 discover_hosts --verbose"</span> nova</span><br><span class="line">检查cells和placement API是否工作正常</span><br><span class="line">[<span class="meta">root@OpenStack1 ~</span>]<span class="meta"># nova-status upgrade check</span></span><br><span class="line"></span><br><span class="line">列出keystone服务中的端点</span><br><span class="line">[<span class="meta">root@OpenStack1 ~</span>]<span class="meta"># openstack catalog list</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/OpenStack%E8%AE%A1%E7%AE%97%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2nova/image-118.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenStack网络服务部署neutron</title>
      <link href="/2020/03/09/openstack/OpenStack%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2neutron/"/>
      <url>/2020/03/09/openstack/OpenStack%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2neutron/</url>
      
        <content type="html"><![CDATA[<p>neutron是openstack的网络组件，是OpenStack的网络服务</p><a id="more"></a><p>网络类型：</p><p>提供者网络：虚拟机桥接到物理机，并且虚拟机必须和物理机在同一个网络范围内。</p><p>自服务网络：可以自己创建网络，最终会通过虚拟路由器连接外网</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">1、创建数据库并授权</span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE neutron;</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON neutron.<span class="symbol">*</span> TO 'neutron'<span class="meta">@'%'</span> IDENTIFIED BY 'neutron123';</span><br><span class="line">2、测试连接数据库</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># mysql -uneutron -pneutron123 -h10.20.0.100</span></span><br><span class="line">Welcome to the MariaDB monitor. Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 3088</span><br><span class="line">Server version: 10.1.20-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> Database           </span>|</span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> information_schema </span>|</span><br><span class="line">|<span class="string"> neutron            </span>|</span><br><span class="line">|<span class="string"> test               </span>|</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows in set (0.02 sec)</span><br><span class="line">3、创建neutron用户</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># openstack user create --domain default --password-prompt neutron</span></span><br><span class="line">User Password:</span><br><span class="line">Repeat User Password:</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field               </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">|<span class="string"> domain_id           </span>|<span class="string"> e07d0a220bf64db69c68fb128486472a </span>|</span><br><span class="line">|<span class="string"> enabled             </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id                  </span>|<span class="string"> 9a35bc9f0add4decbed162b3314d0146 </span>|</span><br><span class="line">|<span class="string"> name                </span>|<span class="string"> neutron                          </span>|</span><br><span class="line">|<span class="string"> options             </span>|<span class="string"> &#123;&#125;                               </span>|</span><br><span class="line">|<span class="string"> password_expires_at </span>|<span class="string"> None                             </span>|</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">4、将neutron用户加入service项目，并赋予admin角色的权限</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># openstack role add --project service --user neutron admin</span></span><br><span class="line"></span><br><span class="line">5、创建neutron服务实体</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># openstack service create --name neutron \</span></span><br><span class="line">--description <span class="string">"OpenStack Networking"</span> network</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field       </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|<span class="string"> description </span>|<span class="string"> OpenStack Networking             </span>|</span><br><span class="line">|<span class="string"> enabled     </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id          </span>|<span class="string"> 5528cd69d011463ea81281fe0182a654 </span>|</span><br><span class="line">|<span class="string"> name        </span>|<span class="string"> neutron                          </span>|</span><br><span class="line">|<span class="string"> type        </span>|<span class="string"> network                          </span>|</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">6、注册neutron服务API端点</span><br><span class="line">openstack endpoint create --region RegionOne network public http://openstack-vip.qh.com:9696 </span><br><span class="line">openstack endpoint create --region RegionOne network internal http://openstack-vip.qh.com:9696 </span><br><span class="line">openstack endpoint create --region RegionOne network admin http://openstack-vip.qh.com:9696 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># openstack endpoint create --region RegionOne network public http://openstack-vip.qh.com:9696</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> a930b5f0ee0e44439e211afe67a7a3a2 </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> public                           </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 5528cd69d011463ea81281fe0182a654 </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> neutron                          </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> network                          </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:9696    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># openstack endpoint create --region RegionOne network internal http://openstack-vip.qh.com:9696</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 37c14697e2da46a5960defff9ccdd729 </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> internal                         </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 5528cd69d011463ea81281fe0182a654 </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> neutron                          </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> network                          </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:9696    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># openstack endpoint create --region RegionOne network admin http://openstack-vip.qh.com:9696</span></span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> Field        </span>|<span class="string"> Value                            </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line">|<span class="string"> enabled      </span>|<span class="string"> True                             </span>|</span><br><span class="line">|<span class="string"> id           </span>|<span class="string"> 04b9771687924f25b0f8b8dc89d3232e </span>|</span><br><span class="line">|<span class="string"> interface    </span>|<span class="string"> admin                            </span>|</span><br><span class="line">|<span class="string"> region       </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> region_id    </span>|<span class="string"> RegionOne                        </span>|</span><br><span class="line">|<span class="string"> service_id   </span>|<span class="string"> 5528cd69d011463ea81281fe0182a654 </span>|</span><br><span class="line">|<span class="string"> service_name </span>|<span class="string"> neutron                          </span>|</span><br><span class="line">|<span class="string"> service_type </span>|<span class="string"> network                          </span>|</span><br><span class="line">|<span class="string"> url          </span>|<span class="string"> http://openstack-vip.net:9696    </span>|</span><br><span class="line">+--------------+----------------------------------+</span><br><span class="line"></span><br><span class="line">7、在控制端安装提供者网络的组件</span><br><span class="line"><span class="comment">###安装阿里源</span></span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># yum install openstack-neutron openstack-neutron-ml2 \</span></span><br><span class="line">openstack-neutron-linuxbridge ebtables</span><br><span class="line"></span><br><span class="line">8、编辑neutron.conf配置文件</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># vim /etc/neutron/neutron.conf</span></span><br><span class="line">[DEFAULT]</span><br><span class="line">core_plugin = ml2                  <span class="comment">#启用ml2插件</span></span><br><span class="line">service_plugins =                  <span class="comment">#禁用其他插件</span></span><br><span class="line">transport_url = rabbit://openstack:openstack123<span class="meta">@rabbitmq.qh.com</span>      <span class="comment">#消息队列</span></span><br><span class="line">auth_strategy = keystone</span><br><span class="line">notify_nova_on_port_status_changes = true</span><br><span class="line">notify_nova_on_port_data_changes = true</span><br><span class="line"></span><br><span class="line">[database]                        <span class="comment">#配置数据库访问</span></span><br><span class="line">connection = mysql+pymysql://neutron:neutron123<span class="meta">@openstack-vip.qh.com/neutron</span></span><br><span class="line"></span><br><span class="line">[keystone_authtoken]              <span class="comment">#认证服务</span></span><br><span class="line">auth_uri = http://openstack-vip.qh.com:5000</span><br><span class="line">auth_url = http://openstack-vip.qh.com:35357</span><br><span class="line">memcached_servers = openstack-vip.qh.com:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = neutron</span><br><span class="line"></span><br><span class="line">[nova]                   <span class="comment">#配置网络服务来通知计算节点的网络拓扑变化</span></span><br><span class="line">auth_url = http://openstack-vip.qh.com:35357</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = nova</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]              <span class="comment">#配置锁路径</span></span><br><span class="line">lock_path = /var/lib/neutron/tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9、配置桥接配置</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># vim /etc/neutron/plugins/ml2/ml2_conf.ini</span></span><br><span class="line">[ml2]</span><br><span class="line">type_drivers = flat,vlan             <span class="comment">#启用flat和vlan</span></span><br><span class="line">tenant_network_types =               <span class="comment">#禁用私有网络</span></span><br><span class="line">mechanism_drivers = linuxbridge      <span class="comment">#启用linuxbridge机制</span></span><br><span class="line">extension_drivers = port_security    <span class="comment">#启用端口安全</span></span><br><span class="line"></span><br><span class="line">[ml2_type_flat]                      <span class="comment">#配置共有虚拟网络为flat</span></span><br><span class="line">flat_networks = linux36          <span class="comment">#名称，可以更改不加网卡名</span></span><br><span class="line"></span><br><span class="line">[securitygroup]                      <span class="comment">#启用ipset增加安全组的方便性</span></span><br><span class="line">enable_security_group = true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">10、配置DHCP代理</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># vim /etc/neutron/dhcp_agent.ini</span></span><br><span class="line">[DEFAULT]</span><br><span class="line">interface_driver = linuxbridge</span><br><span class="line">dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq</span><br><span class="line">enable_isolated_metadata = true</span><br><span class="line"></span><br><span class="line">11、配置元数据代理</span><br><span class="line">添加控制端的IP或域名，密码一般填写年月日</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># vim /etc/neutron/metadata_agent.ini</span></span><br><span class="line">[DEFAULT]                             </span><br><span class="line">nova_metadata_ip = openstack-vip.qh.com</span><br><span class="line">metadata_proxy_shared_secret = 20190621</span><br><span class="line"></span><br><span class="line">12、在nova配置文件中配置认证账号密码，告诉nova如何找neutron做认证</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># vim /etc/nova/nova.conf </span></span><br><span class="line">[neutron]                        <span class="comment">#配置访问参数，启用元数据代理，并设置密码</span></span><br><span class="line">url = http://openstack-vip.qh.com:9696</span><br><span class="line">auth_url = http://openstack-vip.qh.com:35357</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = neutron</span><br><span class="line">service_metadata_proxy = true</span><br><span class="line">metadata_proxy_shared_secret = 20190621    <span class="comment">#密码是上一步的元数据代理设置的密码</span></span><br><span class="line"></span><br><span class="line">13、创建一个软连接</span><br><span class="line">网络服务初始化脚本需要一个软链接，创建出软连接</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</span></span><br><span class="line"></span><br><span class="line">14、定义映射关系</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># vim /etc/neutron/plugins/ml2/linuxbridge_agent.ini</span></span><br><span class="line">[linux_bridge]                 <span class="comment">#将公共虚拟网络和公共物理网络接口对应起来</span></span><br><span class="line">physical_interface_mappings = mylinux:br0      <span class="comment">#第9步配置的名称</span></span><br><span class="line"> 与/etc/neutron/plugins/ml2/ml2_conf.ini 中网卡名一样</span><br><span class="line">[vxlan]                        <span class="comment">#禁用vxlan</span></span><br><span class="line">enable_vxlan = false</span><br><span class="line"></span><br><span class="line">[securitygroup]                <span class="comment">#启用安全组并配置linux桥接iptables防火墙</span></span><br><span class="line">enable_security_group = true</span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line">15、初始化数据库</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \</span></span><br><span class="line">--config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head<span class="string">" neutron</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/OpenStack%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2neutron/neutron1.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查看数据库生成的数据</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/OpenStack%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2neutron/neutron3.png" alt="img"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">16、重启计算<span class="selector-tag">API</span>服务</span><br><span class="line"><span class="selector-attr">[root@openstack ~]</span># <span class="selector-tag">systemctl</span> <span class="selector-tag">restart</span> <span class="selector-tag">openstack-nova-api</span><span class="selector-class">.service</span></span><br><span class="line"></span><br><span class="line">17、启动<span class="selector-tag">neutron</span>并设置为开机启动</span><br><span class="line"><span class="selector-attr">[root@openstack ~]</span># <span class="selector-tag">systemctl</span> <span class="selector-tag">enable</span> <span class="selector-tag">neutron-server</span><span class="selector-class">.service</span> \</span><br><span class="line"><span class="selector-tag">neutron-linuxbridge-agent</span><span class="selector-class">.service</span> <span class="selector-tag">neutron-dhcp-agent</span><span class="selector-class">.service</span> \</span><br><span class="line"><span class="selector-tag">neutron-metadata-agent</span><span class="selector-class">.service</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[root@openstack ~]</span># <span class="selector-tag">systemctl</span> <span class="selector-tag">start</span> <span class="selector-tag">neutron-server</span><span class="selector-class">.service</span> \</span><br><span class="line"><span class="selector-tag">neutron-linuxbridge-agent</span><span class="selector-class">.service</span> <span class="selector-tag">neutron-dhcp-agent</span><span class="selector-class">.service</span> \</span><br><span class="line"><span class="selector-tag">neutron-metadata-agent</span><span class="selector-class">.service</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/OpenStack%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2neutron/neutron4.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">18</span>、配置负载均衡</span><br><span class="line">listen openstack_neutron_port_9696</span><br><span class="line">  bind <span class="number">10.20</span><span class="number">.0</span><span class="number">.40</span>:<span class="number">9696</span></span><br><span class="line">  mode tcp</span><br><span class="line">  log global</span><br><span class="line">  server <span class="number">10.20</span><span class="number">.0</span><span class="number">.60</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.60</span>:<span class="number">9696</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">  server <span class="number">10.20</span><span class="number">.0</span><span class="number">.70</span> <span class="number">10.20</span><span class="number">.0</span><span class="number">.70</span>:<span class="number">9696</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span> backup</span><br></pre></td></tr></table></figure><p><strong>===========================================================================</strong></p><h2 id="配置计算节点"><a href="#配置计算节点" class="headerlink" title="配置计算节点"></a>配置计算节点</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">1、安装neutron组件</span><br><span class="line">[root<span class="meta">@note1</span> ~]<span class="comment"># yum install openstack-neutron-linuxbridge ebtables ipset</span></span><br><span class="line"></span><br><span class="line">2、修改配置文件</span><br><span class="line">[root<span class="meta">@note1</span> ~]<span class="comment"># vim /etc/neutron/neutron.conf</span></span><br><span class="line">[DEFAULT]</span><br><span class="line">transport_url = rabbit://openstack:openstack123<span class="meta">@rabbitmq.qh.com</span></span><br><span class="line">auth_strategy = keystone</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">auth_uri = http://openstack-vip.qh.com:5000</span><br><span class="line">auth_url = http://openstack-vip.qh.com:35357</span><br><span class="line">memcached_servers = openstack-vip.qh.com:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = neutron</span><br><span class="line"></span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /var/lib/neutron/tmp</span><br><span class="line"></span><br><span class="line">3、提供者网络配置linuxbridge</span><br><span class="line">[root<span class="meta">@note1</span> ~]<span class="comment"># vim /etc/neutron/plugins/ml2/linuxbridge_agent.ini</span></span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings = linux36:bond0    <span class="comment">#mylinux和控制端设置的保持一致</span></span><br><span class="line"></span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = false</span><br><span class="line"></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = true</span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"></span><br><span class="line">4、配置nova</span><br><span class="line">[root<span class="meta">@note1</span> ~]<span class="comment"># vim /etc/nova/nova.conf </span></span><br><span class="line">[neutron]</span><br><span class="line">url = http://openstack-vip.qh.com:9696</span><br><span class="line">auth_url = http://openstack-vip.qh.com:35357</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = neutron</span><br><span class="line">service_metadata_proxy = true</span><br><span class="line">metadata_proxy_shared_secret = 20190621</span><br><span class="line"></span><br><span class="line">5、重启计算节点服务</span><br><span class="line">[root<span class="meta">@note1</span> ~]<span class="comment"># systemctl restart openstack-nova-compute.service</span></span><br><span class="line"></span><br><span class="line">6、启动Linuxbridge代理并配置它开机自启动</span><br><span class="line">[root<span class="meta">@Host1</span> ~]<span class="comment"># systemctl start neutron-linuxbridge-agent.service</span></span><br><span class="line">[root<span class="meta">@Host1</span> ~]<span class="comment"># systemctl enable neutron-linuxbridge-agent.service</span></span><br><span class="line"></span><br><span class="line">7、控制节点测试:确认alive为笑脸存活</span><br><span class="line">[root<span class="meta">@openstack</span> ~]<span class="comment"># neutron agent-list</span></span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+------------------+------------------+-----------+-------------------+-------+----------------+---------------------+</span><br><span class="line">|<span class="string"> id               </span>|<span class="string"> agent_type       </span>|<span class="string"> host      </span>|<span class="string"> availability_zone </span>|<span class="string"> alive </span>|<span class="string"> admin_state_up </span>|<span class="string"> binary              </span>|</span><br><span class="line">+------------------+------------------+-----------+-------------------+-------+----------------+---------------------+</span><br><span class="line">|<span class="string"> a0f301e2-2ed0-43 </span>|<span class="string"> DHCP agent       </span>|<span class="string"> openstack </span>|<span class="string"> nova              </span>|<span class="string"> :-)   </span>|<span class="string"> True           </span>|<span class="string"> neutron-dhcp-agent  </span>|</span><br><span class="line">|<span class="string"> 42-a005-f71b9d23 </span>|<span class="string">                  </span>|<span class="string">           </span>|<span class="string">                   </span>|<span class="string">       </span>|<span class="string">                </span>|<span class="string">                     </span>|</span><br><span class="line">|<span class="string"> e543             </span>|<span class="string">                  </span>|<span class="string">           </span>|<span class="string">                   </span>|<span class="string">       </span>|<span class="string">                </span>|<span class="string">                     </span>|</span><br><span class="line">|<span class="string"> dc88fa1e-f79e-   </span>|<span class="string"> Metadata agent   </span>|<span class="string"> openstack </span>|<span class="string">                   </span>|<span class="string"> :-)   </span>|<span class="string"> True           </span>|<span class="string"> neutron-metadata-   </span>|</span><br><span class="line">|<span class="string"> 4fb7-89ed-       </span>|<span class="string">                  </span>|<span class="string">           </span>|<span class="string">                   </span>|<span class="string">       </span>|<span class="string">                </span>|<span class="string"> agent               </span>|</span><br><span class="line">|<span class="string"> 0dc592fb3058     </span>|<span class="string">                  </span>|<span class="string">           </span>|<span class="string">                   </span>|<span class="string">       </span>|<span class="string">                </span>|<span class="string">                     </span>|</span><br><span class="line">|<span class="string"> f0416b07-78b5-4b </span>|<span class="string"> Linux bridge     </span>|<span class="string"> openstack </span>|<span class="string">                   </span>|<span class="string"> :-)   </span>|<span class="string"> True           </span>|<span class="string"> neutron-            </span>|</span><br><span class="line">|<span class="string"> 56-8ee1-1f5ab1ba </span>|<span class="string"> agent            </span>|<span class="string">           </span>|<span class="string">                   </span>|<span class="string">       </span>|<span class="string">                </span>|<span class="string"> linuxbridge-agent   </span>|</span><br><span class="line">|<span class="string"> caa8             </span>|<span class="string">                  </span>|<span class="string">           </span>|<span class="string">                   </span>|<span class="string">       </span>|<span class="string">                </span>|<span class="string">                     </span>|</span><br><span class="line">+------------------+------------------+-----------+-------------------+-------+----------------+---------------------+</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenStack仪表盘</title>
      <link href="/2020/03/09/openstack/OpenStack%E4%BB%AA%E8%A1%A8%E7%9B%98/"/>
      <url>/2020/03/09/openstack/OpenStack%E4%BB%AA%E8%A1%A8%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<p>控制节点</p><a id="more"></a><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、安装仪表盘软件包</span><br><span class="line">[root<span class="symbol">@openstack</span> ~]<span class="meta"># yum install openstack-dashboard -y</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、编辑配置文件</span><br><span class="line">[root<span class="symbol">@openstack</span> ~]<span class="meta"># vim /etc/openstack-dashboard/local_settings</span></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">'*'</span>,]</span><br><span class="line"></span><br><span class="line">OPENSTACK_HOST = <span class="string">"openstack-vip.qh.com"</span></span><br><span class="line">OPENSTACK_KEYSTONE_URL = <span class="string">"http://%s:5000/v3"</span> % OPENSTACK_HOST    <span class="meta">#启用3版API认证</span></span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_ROLE = <span class="string">"user"</span>            <span class="meta">#通过仪表盘创建的用户默认角色</span></span><br><span class="line"></span><br><span class="line">ESSION_ENGINE = <span class="string">'django.contrib.sessions.backends.cache'</span></span><br><span class="line">                             <span class="meta">#配置memcached会话存储服务</span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">         <span class="string">'BACKEND'</span>: <span class="string">'django.core.cache.backends.memcached.MemcachedCache'</span>,</span><br><span class="line">         <span class="string">'LOCATION'</span>: <span class="string">'openstack-vip.qh.com:11211'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = <span class="literal">True</span>     <span class="meta">#启用对域的支持</span></span><br><span class="line"></span><br><span class="line">OPENSTACK_API_VERSIONS = &#123;                        <span class="meta">#配置API版本</span></span><br><span class="line"><span class="meta">#    <span class="string">"data-processing"</span>: 1.1,</span></span><br><span class="line">    <span class="string">"identity"</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">"image"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">"volume"</span>: <span class="number">2</span>,</span><br><span class="line"><span class="meta">#    <span class="string">"compute"</span>: 2,</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = <span class="string">'Default'</span></span><br><span class="line"></span><br><span class="line">OPENSTACK_NEUTRON_NETWORK = &#123;                  <span class="meta">#禁止支持三层网络服务</span></span><br><span class="line">    <span class="string">'enable_router'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_quotas'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_ipv6'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_distributed_router'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_ha_router'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_lb'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_firewall'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_vpn'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_fip_topology_check'</span>: <span class="literal">False</span>,</span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">"Asia/Shanghai"</span>                  <span class="meta">#配置时区</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、重启httpd和memcached</span><br><span class="line">[root<span class="symbol">@openstack</span> ~]<span class="meta"># systemctl restart httpd</span></span><br><span class="line">[root<span class="symbol">@mysql</span> ~]<span class="meta"># systemctl restart memcached</span></span><br><span class="line">http://openstack-vip.qh.com/dashboard</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/OpenStack%E4%BB%AA%E8%A1%A8%E7%9B%98/screenshot_20190623_142014-1024x666.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建提供者虚拟网络</title>
      <link href="/2020/03/09/openstack/%E5%88%9B%E5%BB%BA%E6%8F%90%E4%BE%9B%E8%80%85%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C/"/>
      <url>/2020/03/09/openstack/%E5%88%9B%E5%BB%BA%E6%8F%90%E4%BE%9B%E8%80%85%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p>根据你在网络选项中的选择来创建虚拟网络。如果你选择选项1，只需创建一个公有网络。</p><p>如果你选择选项2，同时创建一个公有网络和一个私有网络</p><a id="more"></a><h2 id="提供者网络"><a href="#提供者网络" class="headerlink" title="提供者网络"></a>提供者网络</h2><p>在启动实例之前，您必须创建必须的虚拟机网络设施。对于网络选项1，实例使用提供者（外部）网络，提供者网络通过L2（桥/交换机）设备连接到物理网络。这个网络包括为实例提供IP地址的DHCP服务器。</p><p><a href="https://docs.openstack.org/ocata/zh_CN/install-guide-rdo/launch-instance-networks-provider.html#id1" target="_blank" rel="noopener">“</a>admin“或者其他权限用户必须创建这个网络，因为它直接连接到物理网络设施。</p><p><img src="/2020/03/09/openstack/%E5%88%9B%E5%BB%BA%E6%8F%90%E4%BE%9B%E8%80%85%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C/image-114.png" alt="img"></p><p><img src="/2020/03/09/openstack/%E5%88%9B%E5%BB%BA%E6%8F%90%E4%BE%9B%E8%80%85%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C/image-116.png" alt="img"></p><h3 id="创建桥接网络："><a href="#创建桥接网络：" class="headerlink" title="创建桥接网络："></a>创建桥接网络：</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#openstack network create --在项目之间共享 --外部网络 --provider-physical-network --配置文件名称 --provider-network-type flat --自定义网络名称</span></span><br><span class="line"></span><br><span class="line">openstack<span class="built_in"> network </span>create --share --external --provider-physical-network linux36 --provider-network-type flat network-wai</span><br><span class="line"></span><br><span class="line">ml2_conf.ini:</span><br><span class="line">[ml2_type_flat] flat_networks =  linux36, linux37    #一样</span><br><span class="line"></span><br><span class="line"> linuxbridge_agent.ini:</span><br><span class="line">[linux_bridge] physical_interface_mappings =  linux36:bond0,linux37:bond1</span><br></pre></td></tr></table></figure><h3 id="创建子网："><a href="#创建子网：" class="headerlink" title="创建子网："></a>创建子网：</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># openstack subnet create --network 上一步定义的网络名称 --allocation-pool start=开始IP,end=结束 IP --dns-nameserver DNS --gateway 网关 --subnet-range IP/掩码 自定义名称</span><br><span class="line"></span><br><span class="line">openstack subnet create --network network-wai --allocation-pool start=<span class="number">192.168</span><span class="number">.220</span><span class="number">.55</span>,end=<span class="number">192.168</span><span class="number">.220</span><span class="number">.70</span>  --dns-nameserver  <span class="number">202.106</span><span class="number">.0</span><span class="number">.20</span>  --gateway <span class="number">192.168</span><span class="number">.220</span><span class="number">.2</span> --subnet-range <span class="number">192.168</span><span class="number">.220</span><span class="number">.0</span>/<span class="number">24</span> <span class="built_in">int</span>ernal</span><br><span class="line">验证网络：</span><br><span class="line">[<span class="symbol">root@</span>controller2 ~]#openstack network list</span><br><span class="line">+--------------------------------------+-------------+--------------------------------------+</span><br><span class="line">| ID                                   | Name        | Subnets                              |</span><br><span class="line">+--------------------------------------+-------------+--------------------------------------+</span><br><span class="line">| <span class="number">112765</span>cd<span class="number">-17e9</span><span class="number">-41</span>ac<span class="number">-96</span>b4-c496a4634aef | network-wai | <span class="number">4</span>b657097-b4e5<span class="number">-491</span>c<span class="number">-8</span>a77<span class="number">-805</span>c8d674ff0 |</span><br><span class="line">+--------------------------------------+-------------+--------------------------------------+</span><br><span class="line">[<span class="symbol">root@</span>controller2 ~]#openstack subnet list</span><br><span class="line"> +--------------------------------------+----------+--------------------------------------+------------------+</span><br><span class="line"> | ID                                   | Name     | Network                              | Subnet           |</span><br><span class="line"> +--------------------------------------+----------+--------------------------------------+------------------+</span><br><span class="line"> | <span class="number">4</span>b657097-b4e5<span class="number">-491</span>c<span class="number">-8</span>a77<span class="number">-805</span>c8d674ff0 | <span class="built_in">int</span>ernal | <span class="number">112765</span>cd<span class="number">-17e9</span><span class="number">-41</span>ac<span class="number">-96</span>b4-c496a4634aef | <span class="number">192.168</span><span class="number">.220</span><span class="number">.0</span>/<span class="number">24</span> |</span><br><span class="line"> +--------------------------------------+----------+--------------------------------------+------------------+</span><br><span class="line">[<span class="symbol">root@</span>controller2 ~]#neutron net-list</span><br><span class="line"> neutron CLI <span class="keyword">is</span> deprecated <span class="keyword">and</span> will be removed <span class="keyword">in</span> the future. Use openstack CLI instead.</span><br><span class="line"> +--------------------------------------+-------------+----------------------------------+-------------------------------------------------------+</span><br><span class="line"> | id                                   | name        | tenant_id                        | subnets                                               |</span><br><span class="line"> +--------------------------------------+-------------+----------------------------------+-------------------------------------------------------+</span><br><span class="line"> | <span class="number">112765</span>cd<span class="number">-17e9</span><span class="number">-41</span>ac<span class="number">-96</span>b4-c496a4634aef | network-wai | <span class="number">1f</span>04e20d276c405bb1fd49d1bf09946e | <span class="number">4</span>b657097-b4e5<span class="number">-491</span>c<span class="number">-8</span>a77<span class="number">-805</span>c8d674ff0 <span class="number">192.168</span><span class="number">.220</span><span class="number">.0</span>/<span class="number">24</span> |</span><br><span class="line"> +--------------------------------------+-------------+----------------------------------+-------------------------------------------------------+</span><br><span class="line">[<span class="symbol">root@</span>controller2 ~]#neutron subnet-list</span><br><span class="line"> neutron CLI <span class="keyword">is</span> deprecated <span class="keyword">and</span> will be removed <span class="keyword">in</span> the future. Use openstack CLI instead.</span><br><span class="line"> +--------------------------------------+----------+----------------------------------+------------------+------------------------------------------------------+</span><br><span class="line"> | id                                   | name     | tenant_id                        | cidr             | allocation_pools                                     |</span><br><span class="line"> +--------------------------------------+----------+----------------------------------+------------------+------------------------------------------------------+</span><br><span class="line"> | <span class="number">4</span>b657097-b4e5<span class="number">-491</span>c<span class="number">-8</span>a77<span class="number">-805</span>c8d674ff0 | <span class="built_in">int</span>ernal | <span class="number">1f</span>04e20d276c405bb1fd49d1bf09946e | <span class="number">192.168</span><span class="number">.220</span><span class="number">.0</span>/<span class="number">24</span> | &#123;<span class="string">"start"</span>: <span class="string">"192.168.220.55"</span>, <span class="string">"end"</span>: <span class="string">"192.168.220.70"</span>&#125; |</span><br><span class="line"> +--------------------------------------+----------+----------------------------------+------------------+------------------------------------------------------+</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/openstack/%E5%88%9B%E5%BB%BA%E6%8F%90%E4%BE%9B%E8%80%85%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C/image-117-1024x502.png" alt="img"></p><h2 id="创建内网"><a href="#创建内网" class="headerlink" title="创建内网"></a>创建内网</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">neutron net-create --shared --provider:physical_network 网卡名(配置文件中) \</span><br><span class="line">--provider:network_type flat network-nei(自定义网络名)</span><br><span class="line"></span><br><span class="line">neutron net-create --shared --provider:physical_network linux37 \</span><br><span class="line">--provider:network_type flat network-nei</span><br><span class="line"></span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new network:</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">|<span class="string"> Field                     </span>|<span class="string"> Value                                </span>|</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">|<span class="string"> admin_state_up            </span>|<span class="string"> True                                 </span>|</span><br><span class="line">|<span class="string"> availability_zone_hints   </span>|<span class="string">                                      </span>|</span><br><span class="line">|<span class="string"> availability_zones        </span>|<span class="string">                                      </span>|</span><br><span class="line">|<span class="string"> created_at                </span>|<span class="string"> 2019-06-23T11:40:59Z                 </span>|</span><br><span class="line">|<span class="string"> description               </span>|<span class="string">                                      </span>|</span><br><span class="line">|<span class="string"> id                        </span>|<span class="string"> d68f6c71-e865-40f8-a98a-e77cf89dc77c </span>|</span><br><span class="line">|<span class="string"> ipv4_address_scope        </span>|<span class="string">                                      </span>|</span><br><span class="line">|<span class="string"> ipv6_address_scope        </span>|<span class="string">                                      </span>|</span><br><span class="line">|<span class="string"> mtu                       </span>|<span class="string"> 1500                                 </span>|</span><br><span class="line">|<span class="string"> name                      </span>|<span class="string"> network-nei                          </span>|</span><br><span class="line">|<span class="string"> port_security_enabled     </span>|<span class="string"> True                                 </span>|</span><br><span class="line">|<span class="string"> project_id                </span>|<span class="string"> 1f04e20d276c405bb1fd49d1bf09946e     </span>|</span><br><span class="line">|<span class="string"> provider:network_type     </span>|<span class="string"> flat                                 </span>|</span><br><span class="line">|<span class="string"> provider:physical_network </span>|<span class="string"> linux37                              </span>|</span><br><span class="line">|<span class="string"> provider:segmentation_id  </span>|<span class="string">                                      </span>|</span><br><span class="line">|<span class="string"> revision_number           </span>|<span class="string"> 3                                    </span>|</span><br><span class="line">|<span class="string"> router:external           </span>|<span class="string"> False                                </span>|</span><br><span class="line">|<span class="string"> shared                    </span>|<span class="string"> True                                 </span>|</span><br><span class="line">|<span class="string"> status                    </span>|<span class="string"> ACTIVE                               </span>|</span><br><span class="line">|<span class="string"> subnets                   </span>|<span class="string">                                      </span>|</span><br><span class="line">|<span class="string"> tags                      </span>|<span class="string">                                      </span>|</span><br><span class="line">|<span class="string"> tenant_id                 </span>|<span class="string"> 1f04e20d276c405bb1fd49d1bf09946e     </span>|</span><br><span class="line">|<span class="string"> updated_at                </span>|<span class="string"> 2019-06-23T11:40:59Z                 </span>|</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">neutron subnet-create --name 自定义字网名 --allocation-pool \</span><br><span class="line">start=192.168.50.190,end=192.168.50.200 (--dns-nameserver 223.5.5.5)可不写 network-nei(上一步的自定义网络名) 192.168.50.0/24</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">neutron subnet-create --name selfnet --allocation-pool \</span><br><span class="line">start=192.168.50.190,end=192.168.50.200 --dns-nameserver 223.5.5.5 network-nei 192.168.50.0/24</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new subnet:</span><br><span class="line">+-------------------+------------------------------------------------------+</span><br><span class="line">|<span class="string"> Field             </span>|<span class="string"> Value                                                </span>|</span><br><span class="line">+-------------------+------------------------------------------------------+</span><br><span class="line">|<span class="string"> allocation_pools  </span>|<span class="string"> &#123;"start": "192.168.50.190", "end": "192.168.50.200"&#125; </span>|</span><br><span class="line">|<span class="string"> cidr              </span>|<span class="string"> 192.168.50.0/24                                      </span>|</span><br><span class="line">|<span class="string"> created_at        </span>|<span class="string"> 2019-06-23T11:42:59Z                                 </span>|</span><br><span class="line">|<span class="string"> description       </span>|<span class="string">                                                      </span>|</span><br><span class="line">|<span class="string"> dns_nameservers   </span>|<span class="string"> 223.5.5.5                                            </span>|</span><br><span class="line">|<span class="string"> enable_dhcp       </span>|<span class="string"> True                                                 </span>|</span><br><span class="line">|<span class="string"> gateway_ip        </span>|<span class="string"> 192.168.50.1                                         </span>|</span><br><span class="line">|<span class="string"> host_routes       </span>|<span class="string">                                                      </span>|</span><br><span class="line">|<span class="string"> id                </span>|<span class="string"> 9b5226f0-84a7-4538-95f4-d63331a78b9f                 </span>|</span><br><span class="line">|<span class="string"> ip_version        </span>|<span class="string"> 4                                                    </span>|</span><br><span class="line">|<span class="string"> ipv6_address_mode </span>|<span class="string">                                                      </span>|</span><br><span class="line">|<span class="string"> ipv6_ra_mode      </span>|<span class="string">                                                      </span>|</span><br><span class="line">|<span class="string"> name              </span>|<span class="string"> selfnet                                              </span>|</span><br><span class="line">|<span class="string"> network_id        </span>|<span class="string"> d68f6c71-e865-40f8-a98a-e77cf89dc77c                 </span>|</span><br><span class="line">|<span class="string"> project_id        </span>|<span class="string"> 1f04e20d276c405bb1fd49d1bf09946e                     </span>|</span><br><span class="line">|<span class="string"> revision_number   </span>|<span class="string"> 2                                                    </span>|</span><br><span class="line">|<span class="string"> service_types     </span>|<span class="string">                                                      </span>|</span><br><span class="line">|<span class="string"> subnetpool_id     </span>|<span class="string">                                                      </span>|</span><br><span class="line">|<span class="string"> tags              </span>|<span class="string">                                                      </span>|</span><br><span class="line">|<span class="string"> tenant_id         </span>|<span class="string"> 1f04e20d276c405bb1fd49d1bf09946e                     </span>|</span><br><span class="line">|<span class="string"> updated_at        </span>|<span class="string"> 2019-06-23T11:42:59Z                                 </span>|</span><br><span class="line">+-------------------+------------------------------------------------------+</span><br><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack network list</span></span><br><span class="line"> +--------------------------------------+-------------+--------------------------------------+</span><br><span class="line"> |<span class="string"> ID                                   </span>|<span class="string"> Name        </span>|<span class="string"> Subnets                              </span>|</span><br><span class="line"> +--------------------------------------+-------------+--------------------------------------+</span><br><span class="line"> |<span class="string"> d68f6c71-e865-40f8-a98a-e77cf89dc77c </span>|<span class="string"> network-nei </span>|<span class="string"> 9b5226f0-84a7-4538-95f4-d63331a78b9f </span>|</span><br><span class="line"> |<span class="string"> e272aea4-a33f-4de5-a66f-8902436a52c1 </span>|<span class="string"> network-wai </span>|<span class="string"> 063cbca6-72fa-4d0f-9e5b-720ca19ffcf8 </span>|</span><br><span class="line"> +--------------------------------------+-------------+--------------------------------------+</span><br><span class="line">[root<span class="meta">@controller2</span> ~]<span class="comment">#openstack subnet list</span></span><br><span class="line"> +--------------------------------------+----------+--------------------------------------+------------------+</span><br><span class="line"> |<span class="string"> ID                                   </span>|<span class="string"> Name     </span>|<span class="string"> Network                              </span>|<span class="string"> Subnet           </span>|</span><br><span class="line"> +--------------------------------------+----------+--------------------------------------+------------------+</span><br><span class="line"> |<span class="string"> 063cbca6-72fa-4d0f-9e5b-720ca19ffcf8 </span>|<span class="string"> internal </span>|<span class="string"> e272aea4-a33f-4de5-a66f-8902436a52c1 </span>|<span class="string"> 192.168.220.0/24 </span>|</span><br><span class="line"> |<span class="string"> 9b5226f0-84a7-4538-95f4-d63331a78b9f </span>|<span class="string"> selfnet  </span>|<span class="string"> d68f6c71-e865-40f8-a98a-e77cf89dc77c </span>|<span class="string"> 192.168.50.0/24  </span>|</span><br><span class="line"> +--------------------------------------+----------+--------------------------------------+------------------+</span><br><span class="line"> [root<span class="meta">@controller2</span> ~]<span class="comment">#neutron net-list</span></span><br><span class="line"> neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line"> +--------------------------------------+-------------+----------------------------------+-------------------------------------------------------+</span><br><span class="line"> |<span class="string"> id                                   </span>|<span class="string"> name        </span>|<span class="string"> tenant_id                        </span>|<span class="string"> subnets                                               </span>|</span><br><span class="line"> +--------------------------------------+-------------+----------------------------------+-------------------------------------------------------+</span><br><span class="line"> |<span class="string"> d68f6c71-e865-40f8-a98a-e77cf89dc77c </span>|<span class="string"> network-nei </span>|<span class="string"> 1f04e20d276c405bb1fd49d1bf09946e </span>|<span class="string"> 9b5226f0-84a7-4538-95f4-d63331a78b9f 192.168.50.0/24  </span>|</span><br><span class="line"> |<span class="string"> e272aea4-a33f-4de5-a66f-8902436a52c1 </span>|<span class="string"> network-wai </span>|<span class="string"> 1f04e20d276c405bb1fd49d1bf09946e </span>|<span class="string"> 063cbca6-72fa-4d0f-9e5b-720ca19ffcf8 192.168.220.0/24 </span>|</span><br><span class="line"> +--------------------------------------+-------------+----------------------------------+-------------------------------------------------------+</span><br><span class="line"> [root<span class="meta">@controller2</span> ~]<span class="comment">#neutron subnet-list</span></span><br><span class="line"> neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line"> +--------------------------------------+----------+----------------------------------+------------------+------------------------------------------------------+</span><br><span class="line"> |<span class="string"> id                                   </span>|<span class="string"> name     </span>|<span class="string"> tenant_id                        </span>|<span class="string"> cidr             </span>|<span class="string"> allocation_pools                                     </span>|</span><br><span class="line"> +--------------------------------------+----------+----------------------------------+------------------+------------------------------------------------------+</span><br><span class="line"> |<span class="string"> 063cbca6-72fa-4d0f-9e5b-720ca19ffcf8 </span>|<span class="string"> internal </span>|<span class="string"> 1f04e20d276c405bb1fd49d1bf09946e </span>|<span class="string"> 192.168.220.0/24 </span>|<span class="string"> &#123;"start": "192.168.220.55", "end": "192.168.220.70"&#125; </span>|</span><br><span class="line"> |<span class="string"> 9b5226f0-84a7-4538-95f4-d63331a78b9f </span>|<span class="string"> selfnet  </span>|<span class="string"> 1f04e20d276c405bb1fd49d1bf09946e </span>|<span class="string"> 192.168.50.0/24  </span>|<span class="string"> &#123;"start": "192.168.50.190", "end": "192.168.50.200"&#125; </span>|</span><br><span class="line"> +--------------------------------------+----------+----------------------------------+------------------+------------------------------------------------------+</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>haproxy配置文件</title>
      <link href="/2020/03/09/openstack/haproxy%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/openstack/haproxy%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>haproxy配置文件</p><a id="more"></a><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">listen MYSQL_PORT_3306</span><br><span class="line">        bind 192.168.220.248:3306</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>mysql 192.168.50.102:3306 weight 1 check<span class="built_in"> port </span>3306 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">listen OPENSTACK_RABBIT</span><br><span class="line">        bind 192.168.220.248:5672</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>rabbie 192.168.50.102:5672 weight 1 check<span class="built_in"> port </span>5672 inter 3s fall 3 rise 5</span><br><span class="line"><span class="comment">#        server web1 192.168.50.101:5672 weight 1 check port 3306 inter 3s fall 3 rise 5 backup</span></span><br><span class="line"></span><br><span class="line">listen OPENSTACK_RABBIT_15672</span><br><span class="line">        bind 192.168.220.248:15672</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>rabbie 192.168.50.102:15672 weight 1 check<span class="built_in"> port </span>15672 inter 3s fall 3 rise 5</span><br><span class="line">listen OPENSTACK_RABBIT_25672</span><br><span class="line">        bind 192.168.220.248:25672</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>rabbie 192.168.50.102:25672 weight 1 check<span class="built_in"> port </span>25672 inter 3s fall 3 rise 5</span><br><span class="line">listen OPENSTACK_memcache</span><br><span class="line">        bind 192.168.220.248:11211</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line"><span class="comment">#        server web1 192.168.50.101:11211 weight 1 check port 3306 inter 3s fall 3 rise 5</span></span><br><span class="line">       <span class="built_in"> server </span>mem 192.168.50.102:11211 weight 1 check<span class="built_in"> port </span>11211 inter 3s fall 3 rise 5</span><br><span class="line">listen openstack_keystone_5000</span><br><span class="line">        bind 192.168.220.248:5000</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>keystone5000 192.168.50.202:5000 weight 1 check<span class="built_in"> port </span>5000 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">listen openstack_keystone_35357</span><br><span class="line">        bind 192.168.220.248:35357</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>keystone1 192.168.50.202:35357 weight 1 check<span class="built_in"> port </span>35357 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listen openstack_glance_api</span><br><span class="line">        bind 192.168.220.248:9292</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>api1 192.168.50.202:9292 weight 1 check<span class="built_in"> port </span>9292 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listen openstack_glance</span><br><span class="line">        bind 192.168.220.248:9191</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>glance1 192.168.50.202:9191 weight 1 check<span class="built_in"> port </span>9191 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listen openstack_nova_8774</span><br><span class="line">        bind 192.168.220.248:8774</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>glance1 192.168.50.202:8774 weight 1 check<span class="built_in"> port </span>8774 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listen openstack_nova_8775</span><br><span class="line">        bind 192.168.220.248:8775</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>glance1 192.168.50.202:8775 weight 1 check<span class="built_in"> port </span>8775 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">listen openstack_nova_8778</span><br><span class="line">        bind 192.168.220.248:8778</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>glance1 192.168.50.202:8778 weight 1 check<span class="built_in"> port </span>8778 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listen openstack_vnc</span><br><span class="line">        bind 192.168.220.248:6080</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>glance1 192.168.50.202:6080 weight 1 check<span class="built_in"> port </span>6080 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">listen openstack_nova_9696</span><br><span class="line">        bind 192.168.220.248:9696</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>glance1 192.168.50.202:9696 weight 1 check<span class="built_in"> port </span>9696 inter 3s fall 3 rise 5</span><br><span class="line"></span><br><span class="line">listen openstack_dashboard</span><br><span class="line">        bind 192.168.220.248:80</span><br><span class="line">        mode tcp</span><br><span class="line">        balance roundrobin</span><br><span class="line">       <span class="built_in"> server </span>glance1 192.168.50.202:80 weight 1 check<span class="built_in"> port </span>80 inter 3s fall 3 rise 5</span><br><span class="line">root@ubuntu:~# cat /etc/sysctl.conf </span><br><span class="line">net.ipv4.ip_nonlocal_bind = 1</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">cp /usr/share/doc/keepalived/samples/keepalived.conf.sample /etc/keepalived/keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   vrrp_iptables</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">   <span class="built_in"> interface </span>eth0</span><br><span class="line">    virtual_router_id 50</span><br><span class="line">    nopreempt</span><br><span class="line"></span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">       192.168.220.248 dev eth0 label eth0:0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>管理节点neutron配置文件</title>
      <link href="/2020/03/09/openstack/%E7%AE%A1%E7%90%86%E8%8A%82%E7%82%B9neutron%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/openstack/%E7%AE%A1%E7%90%86%E8%8A%82%E7%82%B9neutron%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="etc-neutron-neutron-conf"><a href="#etc-neutron-neutron-conf" class="headerlink" title="/etc/neutron/neutron.conf"></a>/etc/neutron/neutron.conf</h2><a id="more"></a><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">core_plugin</span> = ml2</span><br><span class="line"><span class="attr">service_plugins</span> =</span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:openstack123@rabbitmq-server2</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="attr">notify_nova_on_port_status_changes</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">notify_nova_on_port_data_changes</span> = <span class="literal">true</span></span><br><span class="line"><span class="section">[agent]</span></span><br><span class="line"><span class="section">[cors]</span></span><br><span class="line"><span class="section">[cors.subdomain]</span></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://neutron:neutron123@openstack-vip.qh.net/neutron</span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://openstack-vip.qh.net:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://openstack-vip.qh.net:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = openstack-vip.qh.net:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = neutron</span><br><span class="line"><span class="attr">password</span> = neutron</span><br><span class="line"><span class="section">[matchmaker_redis]</span></span><br><span class="line"><span class="section">[nova]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://openstack-vip.qh.net:<span class="number">35357</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = nova</span><br><span class="line"><span class="attr">password</span> = nova</span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span> = /var/lib/neutron/tmp</span><br><span class="line"><span class="section">[oslo_messaging_amqp]</span></span><br><span class="line"><span class="section">[oslo_messaging_kafka]</span></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="section">[oslo_messaging_rabbit]</span></span><br><span class="line"><span class="section">[oslo_messaging_zmq]</span></span><br><span class="line"><span class="section">[oslo_middleware]</span></span><br><span class="line"><span class="section">[oslo_policy]</span></span><br><span class="line"><span class="section">[qos]</span></span><br><span class="line"><span class="section">[quotas]</span></span><br><span class="line"><span class="section">[ssl]</span></span><br></pre></td></tr></table></figure><h2 id="etc-neutron-dhcp-agent-ini"><a href="#etc-neutron-dhcp-agent-ini" class="headerlink" title="/etc/neutron/dhcp_agent.ini"></a>/etc/neutron/dhcp_agent.ini</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">interface_driver</span> = linuxbridge</span><br><span class="line"><span class="attr">dhcp_driver</span> = neutron.agent.linux.dhcp.Dnsmasq</span><br><span class="line"><span class="attr">enable_isolated_metadata</span> = <span class="literal">true</span></span><br><span class="line"><span class="section">[agent]</span></span><br><span class="line"><span class="section">[ovs]</span></span><br></pre></td></tr></table></figure><h2 id="etc-neutron-metadata-agent-ini"><a href="#etc-neutron-metadata-agent-ini" class="headerlink" title="/etc/neutron/metadata_agent.ini"></a>/etc/neutron/metadata_agent.ini</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">nova_metadata_ip</span> = openstack-vip.qh.net</span><br><span class="line"><span class="attr">metadata_proxy_shared_secret</span> = <span class="number">20190621</span></span><br><span class="line"><span class="section">[agent]</span></span><br><span class="line"><span class="section">[cache]</span></span><br></pre></td></tr></table></figure><h2 id="etc-neutron-plugin-ini"><a href="#etc-neutron-plugin-ini" class="headerlink" title="/etc/neutron/plugin.ini"></a>/etc/neutron/plugin.ini</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="section">[ml2]</span></span><br><span class="line"><span class="attr">type_drivers</span> = flat,vlan</span><br><span class="line"><span class="attr">tenant_network_types</span> = </span><br><span class="line"><span class="attr">mechanism_drivers</span> = linuxbridge</span><br><span class="line"><span class="attr">extension_drivers</span> = port_security</span><br><span class="line"><span class="section">[ml2_type_flat]</span></span><br><span class="line"><span class="attr">flat_networks</span> = linux36,linux37</span><br><span class="line"><span class="section">[ml2_type_geneve]</span></span><br><span class="line"><span class="section">[ml2_type_gre]</span></span><br><span class="line"><span class="section">[ml2_type_vlan]</span></span><br><span class="line"><span class="section">[ml2_type_vxlan]</span></span><br><span class="line"><span class="section">[securitygroup]</span></span><br><span class="line"><span class="attr">enable_security_group</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="etc-neutron-plugins-ml2-linuxbridge-agent-ini"><a href="#etc-neutron-plugins-ml2-linuxbridge-agent-ini" class="headerlink" title="/etc/neutron/plugins/ml2/linuxbridge_agent.ini"></a>/etc/neutron/plugins/ml2/linuxbridge_agent.ini</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="section">[agent]</span></span><br><span class="line"><span class="section">[linux_bridge]</span></span><br><span class="line"><span class="attr">physical_interface_mappings</span> = linux36:bond0,linux37:bond1</span><br><span class="line"><span class="section">[securitygroup]</span></span><br><span class="line"><span class="attr">enable_security_group</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">firewall_driver</span> = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"><span class="section">[vxlan]</span></span><br><span class="line"><span class="attr">enable_vxlan</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="etc-neutron-plugins-ml2-ml2-conf-ini"><a href="#etc-neutron-plugins-ml2-ml2-conf-ini" class="headerlink" title="/etc/neutron/plugins/ml2/ml2_conf.ini"></a>/etc/neutron/plugins/ml2/ml2_conf.ini</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="section">[ml2]</span></span><br><span class="line"><span class="attr">type_drivers</span> = flat,vlan</span><br><span class="line"><span class="attr">tenant_network_types</span> = </span><br><span class="line"><span class="attr">mechanism_drivers</span> = linuxbridge</span><br><span class="line"><span class="attr">extension_drivers</span> = port_security</span><br><span class="line"><span class="section">[ml2_type_flat]</span></span><br><span class="line"><span class="attr">flat_networks</span> = linux36,linux37</span><br><span class="line"><span class="section">[ml2_type_geneve]</span></span><br><span class="line"><span class="section">[ml2_type_gre]</span></span><br><span class="line"><span class="section">[ml2_type_vlan]</span></span><br><span class="line"><span class="section">[ml2_type_vxlan]</span></span><br><span class="line"><span class="section">[securitygroup]</span></span><br><span class="line"><span class="attr">enable_security_group</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>管理节点nova配置文件</title>
      <link href="/2020/03/09/openstack/%E7%AE%A1%E7%90%86%E8%8A%82%E7%82%B9nova%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/openstack/%E7%AE%A1%E7%90%86%E8%8A%82%E7%82%B9nova%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="etc-nova-nova-conf"><a href="#etc-nova-nova-conf" class="headerlink" title="/etc/nova/nova.conf"></a>/etc/nova/nova.conf</h2><a id="more"></a><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">DEFAULT</span>]</span><br><span class="line"> enabled_apis = osapi_compute,metadata</span><br><span class="line"> transport_url = rabbit:<span class="comment">//openstack:openstack123@rabbitmq-server2</span></span><br><span class="line"> my_ip = <span class="number">192.168</span><span class="number">.220</span><span class="number">.202</span></span><br><span class="line"> use_neutron = True</span><br><span class="line"> firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line"> [<span class="meta">api</span>]</span><br><span class="line"> auth_strategy=keystone</span><br><span class="line"> [<span class="meta">api_database</span>]</span><br><span class="line"> connection = mysql+pymysql:<span class="comment">//nova:nova123@openstack-vip.qh.net/nova_api</span></span><br><span class="line"> [<span class="meta">barbican</span>]</span><br><span class="line"> [<span class="meta">cache</span>]</span><br><span class="line"> [<span class="meta">cells</span>]</span><br><span class="line"> [<span class="meta">cinder</span>]</span><br><span class="line"> [<span class="meta">cloudpipe</span>]</span><br><span class="line"> [<span class="meta">conductor</span>]</span><br><span class="line"> [<span class="meta">console</span>]</span><br><span class="line"> [<span class="meta">consoleauth</span>]</span><br><span class="line"> [<span class="meta">cors</span>]</span><br><span class="line"> [<span class="meta">cors.subdomain</span>]</span><br><span class="line"> [<span class="meta">crypto</span>]</span><br><span class="line"> [<span class="meta">database</span>]</span><br><span class="line"> connection = mysql+pymysql:<span class="comment">//nova:nova123@openstack-vip.qh.net/nova</span></span><br><span class="line"> [<span class="meta">ephemeral_storage_encryption</span>]</span><br><span class="line"> [<span class="meta">filter_scheduler</span>]</span><br><span class="line"> [<span class="meta">glance</span>]</span><br><span class="line"> api_servers = http:<span class="comment">//openstack-vip.qh.net:9292</span></span><br><span class="line"> [<span class="meta">guestfs</span>]</span><br><span class="line"> [<span class="meta">healthcheck</span>]</span><br><span class="line"> [<span class="meta">hyperv</span>]</span><br><span class="line"> [<span class="meta">image_file_url</span>]</span><br><span class="line"> [<span class="meta">ironic</span>]</span><br><span class="line"> [<span class="meta">key_manager</span>]</span><br><span class="line"> [<span class="meta">keystone_authtoken</span>]</span><br><span class="line"> auth_uri = http:<span class="comment">//openstack-vip.qh.net:5000</span></span><br><span class="line"> auth_url = http:<span class="comment">//openstack-vip.qh.net:35357</span></span><br><span class="line"> memcached_servers = openstack-vip.qh.net:<span class="number">11211</span></span><br><span class="line"> auth_type = password</span><br><span class="line"> project_domain_name = <span class="keyword">default</span></span><br><span class="line"> user_domain_name = <span class="keyword">default</span></span><br><span class="line"> project_name = service</span><br><span class="line"> username = nova</span><br><span class="line"> password = nova</span><br><span class="line"> [<span class="meta">libvirt</span>]</span><br><span class="line"> [<span class="meta">matchmaker_redis</span>]</span><br><span class="line"> [<span class="meta">metrics</span>]</span><br><span class="line"> [<span class="meta">mks</span>]</span><br><span class="line"> [<span class="meta">neutron</span>]</span><br><span class="line"> url = http:<span class="comment">//openstack-vip.qh.net:9696</span></span><br><span class="line"> auth_url = http:<span class="comment">//openstack-vip.qh.net:35357</span></span><br><span class="line"> auth_type = password</span><br><span class="line"> project_domain_name = <span class="keyword">default</span></span><br><span class="line"> user_domain_name = <span class="keyword">default</span></span><br><span class="line"> region_name = RegionOne</span><br><span class="line"> project_name = service</span><br><span class="line"> username = neutron</span><br><span class="line"> password = neutron</span><br><span class="line"> service_metadata_proxy = <span class="literal">true</span></span><br><span class="line"> metadata_proxy_shared_secret = <span class="number">20190621</span></span><br><span class="line"> [<span class="meta">notifications</span>]</span><br><span class="line"> [<span class="meta">osapi_v21</span>]</span><br><span class="line"> [<span class="meta">oslo_concurrency</span>]</span><br><span class="line"> lock_path=/<span class="keyword">var</span>/lib/nova/tmp</span><br><span class="line"> [<span class="meta">oslo_messaging_amqp</span>]</span><br><span class="line"> [<span class="meta">oslo_messaging_kafka</span>]</span><br><span class="line"> [<span class="meta">oslo_messaging_notifications</span>]</span><br><span class="line"> [<span class="meta">oslo_messaging_rabbit</span>]</span><br><span class="line"> [<span class="meta">oslo_messaging_zmq</span>]</span><br><span class="line"> [<span class="meta">oslo_middleware</span>]</span><br><span class="line"> [<span class="meta">oslo_policy</span>]</span><br><span class="line"> [<span class="meta">pci</span>]</span><br><span class="line"> [<span class="meta">placement</span>]</span><br><span class="line"> os_region_name = RegionOne</span><br><span class="line"> project_domain_name = Default</span><br><span class="line"> project_name = service</span><br><span class="line"> auth_type = password</span><br><span class="line"> user_domain_name = Default</span><br><span class="line"> auth_url = http:<span class="comment">//openstack-vip.qh.net:35357/v3</span></span><br><span class="line"> username = placement</span><br><span class="line"> password = placement</span><br><span class="line"> [<span class="meta">quota</span>]</span><br><span class="line"> [<span class="meta">rdp</span>]</span><br><span class="line"> [<span class="meta">remote_debug</span>]</span><br><span class="line"> [<span class="meta">scheduler</span>]</span><br><span class="line"> [<span class="meta">serial_console</span>]</span><br><span class="line"> [<span class="meta">service_user</span>]</span><br><span class="line"> [<span class="meta">spice</span>]</span><br><span class="line"> [<span class="meta">ssl</span>]</span><br><span class="line"> [<span class="meta">trusted_computing</span>]</span><br><span class="line"> [<span class="meta">upgrade_levels</span>]</span><br><span class="line"> [<span class="meta">vendordata_dynamic_auth</span>]</span><br><span class="line"> [<span class="meta">vmware</span>]</span><br><span class="line"> [<span class="meta">vnc</span>]</span><br><span class="line"> enabled = <span class="literal">true</span></span><br><span class="line"> vncserver_listen = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> vncserver_proxyclient_address = <span class="number">192.168</span><span class="number">.220</span><span class="number">.202</span></span><br><span class="line"> vncserver_listen=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> novncproxy_base_url=http:<span class="comment">//$my_ip:6080/vnc_auto.html</span></span><br><span class="line"> [<span class="meta">workarounds</span>]</span><br><span class="line"> [<span class="meta">wsgi</span>]</span><br><span class="line"> [<span class="meta">xenserver</span>]</span><br><span class="line"> [<span class="meta">xvp</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算节点nova配置文件</title>
      <link href="/2020/03/09/openstack/%E8%AE%A1%E7%AE%97%E8%8A%82%E7%82%B9nova%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/openstack/%E8%AE%A1%E7%AE%97%E8%8A%82%E7%82%B9nova%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="etc-nova-nova-conf"><a href="#etc-nova-nova-conf" class="headerlink" title="/etc/nova/nova.conf"></a>/etc/nova/nova.conf</h2><a id="more"></a><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">enabled_apis</span> = osapi_compute,metadata</span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:openstack123@rabbitmq-server2</span><br><span class="line"><span class="attr">my_ip</span> = <span class="number">192.168</span>.<span class="number">50.105</span></span><br><span class="line"><span class="attr">use_neutron</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">firewall_driver</span> = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line"><span class="section">[api]</span></span><br><span class="line"><span class="attr">auth_strategy</span>=keystone</span><br><span class="line"><span class="section">[api_database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://nova:nova123@openstack-vip.qh.net/nova</span><br><span class="line"><span class="section">[barbican]</span></span><br><span class="line"><span class="section">[cache]</span></span><br><span class="line"><span class="section">[cells]</span></span><br><span class="line"><span class="section">[cinder]</span></span><br><span class="line"><span class="section">[cloudpipe]</span></span><br><span class="line"><span class="section">[conductor]</span></span><br><span class="line"><span class="section">[console]</span></span><br><span class="line"><span class="section">[consoleauth]</span></span><br><span class="line"><span class="section">[cors]</span></span><br><span class="line"><span class="section">[cors.subdomain]</span></span><br><span class="line"><span class="section">[crypto]</span></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="section">[ephemeral_storage_encryption]</span></span><br><span class="line"><span class="section">[filter_scheduler]</span></span><br><span class="line"><span class="attr">discover_hosts_in_cells_interval</span>=<span class="number">3000</span></span><br><span class="line"><span class="section">[glance]</span></span><br><span class="line"><span class="attr">api_servers</span> = http://openstack-vip.qh.net:<span class="number">9292</span></span><br><span class="line"><span class="section">[guestfs]</span></span><br><span class="line"><span class="section">[healthcheck]</span></span><br><span class="line"><span class="section">[hyperv]</span></span><br><span class="line"><span class="section">[image_file_url]</span></span><br><span class="line"><span class="section">[ironic]</span></span><br><span class="line"><span class="section">[key_manager]</span></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://openstack-vip.qh.net:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://openstack-vip.qh.net:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = openstack-vip.qh.net:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = nova</span><br><span class="line"><span class="attr">password</span> = nova</span><br><span class="line"><span class="section">[libvirt]</span></span><br><span class="line"><span class="attr">virt_type</span> = qemu</span><br><span class="line"><span class="section">[matchmaker_redis]</span></span><br><span class="line"><span class="section">[metrics]</span></span><br><span class="line"><span class="section">[mks]</span></span><br><span class="line"><span class="section">[neutron]</span></span><br><span class="line"><span class="attr">url</span> = http://openstack-vip.qh.net:<span class="number">9696</span></span><br><span class="line"><span class="attr">auth_url</span> = http://openstack-vip.qh.net:<span class="number">35357</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = neutron</span><br><span class="line"><span class="attr">password</span> = neutron</span><br><span class="line"><span class="attr">service_metadata_proxy</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">metadata_proxy_shared_secret</span> = <span class="number">20190621</span></span><br><span class="line"><span class="section">[notifications]</span></span><br><span class="line"><span class="section">[osapi_v21]</span></span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span>=/var/lib/nova/tmp</span><br><span class="line"><span class="section">[oslo_messaging_amqp]</span></span><br><span class="line"><span class="section">[oslo_messaging_kafka]</span></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="section">[oslo_messaging_rabbit]</span></span><br><span class="line"><span class="section">[oslo_messaging_zmq]</span></span><br><span class="line"><span class="section">[oslo_middleware]</span></span><br><span class="line"><span class="section">[oslo_policy]</span></span><br><span class="line"><span class="section">[pci]</span></span><br><span class="line"><span class="section">[placement]</span></span><br><span class="line"><span class="attr">os_region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">auth_url</span> = http://openstack-vip.qh.net:<span class="number">35357</span>/v3</span><br><span class="line"><span class="attr">username</span> = placement</span><br><span class="line"><span class="attr">password</span> = placement</span><br><span class="line"><span class="section">[quota]</span></span><br><span class="line"><span class="section">[rdp]</span></span><br><span class="line"><span class="section">[remote_debug]</span></span><br><span class="line"><span class="section">[scheduler]</span></span><br><span class="line"><span class="section">[serial_console]</span></span><br><span class="line"><span class="section">[service_user]</span></span><br><span class="line"><span class="section">[spice]</span></span><br><span class="line"><span class="section">[ssl]</span></span><br><span class="line"><span class="section">[trusted_computing]</span></span><br><span class="line"><span class="section">[upgrade_levels]</span></span><br><span class="line"><span class="section">[vendordata_dynamic_auth]</span></span><br><span class="line"><span class="section">[vmware]</span></span><br><span class="line"><span class="section">[vnc]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">vncserver_listen</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">vncserver_proxyclient_address</span> = <span class="variable">$my_ip</span></span><br><span class="line"><span class="attr">novncproxy_base_url</span> = http://openstack-vip.qh.net:<span class="number">6080</span>/vnc_auto.html</span><br><span class="line"><span class="section">[workarounds]</span></span><br><span class="line"><span class="section">[wsgi]</span></span><br><span class="line"><span class="section">[xenserver]</span></span><br><span class="line"><span class="section">[xvp]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算节点neutron配置文件</title>
      <link href="/2020/03/09/openstack/%E8%AE%A1%E7%AE%97%E8%8A%82%E7%82%B9neutron%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/openstack/%E8%AE%A1%E7%AE%97%E8%8A%82%E7%82%B9neutron%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="etc-neutron-neutron-conf"><a href="#etc-neutron-neutron-conf" class="headerlink" title="/etc/neutron/neutron.conf"></a>/etc/neutron/neutron.conf</h2><a id="more"></a><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:openstack123@rabbitmq-server2</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="section">[agent]</span></span><br><span class="line"><span class="section">[cors]</span></span><br><span class="line"><span class="section">[cors.subdomain]</span></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://openstack-vip.qh.net:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://openstack-vip.qh.net:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = openstack-vip.qh.net:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = neutron</span><br><span class="line"><span class="attr">password</span> = neutron</span><br><span class="line"><span class="section">[matchmaker_redis]</span></span><br><span class="line"><span class="section">[nova]</span></span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span> = /var/lib/neutron/tmp</span><br><span class="line"><span class="section">[oslo_messaging_amqp]</span></span><br><span class="line"><span class="section">[oslo_messaging_kafka]</span></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="section">[oslo_messaging_rabbit]</span></span><br><span class="line"><span class="section">[oslo_messaging_zmq]</span></span><br><span class="line"><span class="section">[oslo_middleware]</span></span><br><span class="line"><span class="section">[oslo_policy]</span></span><br><span class="line"><span class="section">[qos]</span></span><br><span class="line"><span class="section">[quotas]</span></span><br><span class="line"><span class="section">[ssl]</span></span><br></pre></td></tr></table></figure><h2 id="etc-neutron-plugins-ml2-linuxbridge-agent-ini"><a href="#etc-neutron-plugins-ml2-linuxbridge-agent-ini" class="headerlink" title="/etc/neutron/plugins/ml2/linuxbridge_agent.ini"></a>/etc/neutron/plugins/ml2/linuxbridge_agent.ini</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="section">[agent]</span></span><br><span class="line"><span class="section">[linux_bridge]</span></span><br><span class="line"><span class="attr">physical_interface_mappings</span> = linux36:bond0,linux37:bond1</span><br><span class="line"><span class="section">[securitygroup]</span></span><br><span class="line"><span class="attr">enable_security_group</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">firewall_driver</span> = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"><span class="section">[vxlan]</span></span><br><span class="line"><span class="attr">enable_vxlan</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hosts配置文件</title>
      <link href="/2020/03/09/openstack/hosts%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/openstack/hosts%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168.220.201</span> controller1.qh.net</span><br><span class="line"><span class="number">192.168.220.248</span> openstack-vip.qh.net</span><br><span class="line"><span class="number">192.168.50.105</span> node1.qh.net</span><br><span class="line"><span class="number">192.168.50.106</span> node2.qh.net</span><br><span class="line"><span class="number">192.168.50.102</span> rabbitmq-server2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仪表盘配置文件</title>
      <link href="/2020/03/09/openstack/%E4%BB%AA%E8%A1%A8%E7%9B%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/openstack/%E4%BB%AA%E8%A1%A8%E7%9B%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>/etc/openstack-dashboard/local_settings</p><a id="more"></a><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"><span class="keyword">from</span> django.utils.translation import ugettext_lazy as _</span><br><span class="line"><span class="keyword">from</span> openstack_dashboard.settings import HORIZON_CONFIG</span><br><span class="line"><span class="builtin-name">DEBUG</span> = <span class="literal">False</span></span><br><span class="line">WEBROOT = <span class="string">'/dashboard/'</span></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">'*'</span>,]</span><br><span class="line">PENSTACK_HOST = <span class="string">"openstack-vip.qh.net"</span></span><br><span class="line">SESSION_ENGINE = <span class="string">'django.contrib.sessions.backends.cache'</span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">         <span class="string">'BACKEND'</span>: <span class="string">'django.core.cache.backends.memcached.MemcachedCache'</span>,</span><br><span class="line">         <span class="string">'LOCATION'</span>: <span class="string">'openstack-vip.qh.net:11211'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">OPENSTACK_API_VERSIONS = &#123;</span><br><span class="line">    <span class="string">"identity"</span>: 3,</span><br><span class="line">    <span class="string">"image"</span>: 2,</span><br><span class="line">    <span class="string">"volume"</span>: 2,</span><br><span class="line"> #   <span class="string">"compute"</span>: 2,</span><br><span class="line">&#125;</span><br><span class="line">OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = <span class="literal">True</span></span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = <span class="string">'Default'</span></span><br><span class="line">LOCAL_PATH = <span class="string">'/tmp'</span></span><br><span class="line"><span class="attribute">SECRET_KEY</span>=<span class="string">'da659fb4074f016a07cb'</span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.core.cache.backends.locmem.LocMemCache'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">EMAIL_BACKEND = <span class="string">'django.core.mail.backends.console.EmailBackend'</span></span><br><span class="line">OPENSTACK_HOST = <span class="string">"127.0.0.1"</span></span><br><span class="line">OPENSTACK_KEYSTONE_URL = <span class="string">"http://%s:5000/v2.0"</span> % OPENSTACK_HOST</span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_ROLE = <span class="string">"user"</span></span><br><span class="line">OPENSTACK_KEYSTONE_BACKEND = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'native'</span>,</span><br><span class="line">    <span class="string">'can_edit_user'</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">'can_edit_group'</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">'can_edit_project'</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">'can_edit_domain'</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">'can_edit_role'</span>: <span class="literal">True</span>,</span><br><span class="line">&#125;</span><br><span class="line">OPENSTACK_HYPERVISOR_FEATURES = &#123;</span><br><span class="line">    <span class="string">'can_set_mount_point'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'can_set_password'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'requires_keypair'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_quotas'</span>: <span class="literal">True</span></span><br><span class="line">&#125;</span><br><span class="line">OPENSTACK_CINDER_FEATURES = &#123;</span><br><span class="line">    <span class="string">'enable_backup'</span>: <span class="literal">False</span>,</span><br><span class="line">&#125;</span><br><span class="line">OPENSTACK_NEUTRON_NETWORK = &#123;</span><br><span class="line">    <span class="string">'enable_router'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_quotas'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_ipv6'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_distributed_router'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_ha_router'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_lb'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_firewall'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_vpn'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'enable_fip_topology_check'</span>: <span class="literal">False</span>,</span><br><span class="line">    #<span class="built_in"> Default dns </span>servers you would like <span class="keyword">to</span> use when a subnet is</span><br><span class="line">    # created.  This is only a default,<span class="built_in"> users </span>can still choose a different</span><br><span class="line">    # list of<span class="built_in"> dns </span>servers when creating a new subnet.</span><br><span class="line">    # The entries below are examples only, <span class="keyword">and</span> are <span class="keyword">not</span> appropriate <span class="keyword">for</span></span><br><span class="line">    # real deployments</span><br><span class="line">    # <span class="string">'default_dns_nameservers'</span>: [<span class="string">"8.8.8.8"</span>, <span class="string">"8.8.4.4"</span>, <span class="string">"208.67.222.222"</span>],</span><br><span class="line">    # The profile_support option is used <span class="keyword">to</span> detect <span class="keyword">if</span> an external router can be</span><br><span class="line">    # configured via the dashboard. When using specific plugins the</span><br><span class="line">    # profile_support can be turned on <span class="keyword">if</span> needed.</span><br><span class="line">    <span class="string">'profile_support'</span>: None,</span><br><span class="line">    #<span class="string">'profile_support'</span>: <span class="string">'cisco'</span>,</span><br><span class="line">    # <span class="builtin-name">Set</span> which provider<span class="built_in"> network </span>types are supported. Only the<span class="built_in"> network </span>types</span><br><span class="line">    # <span class="keyword">in</span> this list will be available <span class="keyword">to</span> choose <span class="keyword">from</span> when creating a network.</span><br><span class="line">    #<span class="built_in"> Network </span>types include local, flat, vlan, gre, vxlan <span class="keyword">and</span> geneve.</span><br><span class="line">    # <span class="string">'supported_provider_types'</span>: [<span class="string">'*'</span>],</span><br><span class="line">    # You can configure available segmentation ID range per<span class="built_in"> network </span>type</span><br><span class="line">    # <span class="keyword">in</span> your deployment.</span><br><span class="line">    # <span class="string">'segmentation_id_range'</span>: &#123;</span><br><span class="line">    #     <span class="string">'vlan'</span>: [1024, 2048],</span><br><span class="line">    #     <span class="string">'vxlan'</span>: [4094, 65536],</span><br><span class="line">    # &#125;,</span><br><span class="line">    # You can define additional provider<span class="built_in"> network </span>types here.</span><br><span class="line">    # <span class="string">'extra_provider_types'</span>: &#123;</span><br><span class="line">    #     <span class="string">'awesome_type'</span>: &#123;</span><br><span class="line">    #         <span class="string">'display_name'</span>: <span class="string">'Awesome New Type'</span>,</span><br><span class="line">    #         <span class="string">'require_physical_network'</span>: <span class="literal">False</span>,</span><br><span class="line">    #         <span class="string">'require_segmentation_id'</span>: <span class="literal">True</span>,</span><br><span class="line">    #     &#125;</span><br><span class="line">    # &#125;,</span><br><span class="line">    # <span class="builtin-name">Set</span> which VNIC types are supported <span class="keyword">for</span><span class="built_in"> port </span>binding. Only the VNIC</span><br><span class="line">    # types <span class="keyword">in</span> this list will be available <span class="keyword">to</span> choose <span class="keyword">from</span> when creating a</span><br><span class="line">    # port.</span><br><span class="line">    # VNIC types include <span class="string">'normal'</span>, <span class="string">'macvtap'</span> <span class="keyword">and</span> <span class="string">'direct'</span>.</span><br><span class="line">    # <span class="builtin-name">Set</span> <span class="keyword">to</span> empty list <span class="keyword">or</span> None <span class="keyword">to</span> <span class="builtin-name">disable</span> VNIC<span class="built_in"> type </span>selection.</span><br><span class="line">    <span class="string">'supported_vnic_types'</span>: [<span class="string">'*'</span>],</span><br><span class="line">&#125;</span><br><span class="line">OPENSTACK_HEAT_STACK = &#123;</span><br><span class="line">    <span class="string">'enable_user_pass'</span>: <span class="literal">True</span>,</span><br><span class="line">&#125;</span><br><span class="line">IMAGE_CUSTOM_PROPERTY_TITLES = &#123;</span><br><span class="line">    <span class="string">"architecture"</span>: _(<span class="string">"Architecture"</span>),</span><br><span class="line">    <span class="string">"kernel_id"</span>: _(<span class="string">"Kernel ID"</span>),</span><br><span class="line">    <span class="string">"ramdisk_id"</span>: _(<span class="string">"Ramdisk ID"</span>),</span><br><span class="line">    <span class="string">"image_state"</span>: _(<span class="string">"Euca2ools state"</span>),</span><br><span class="line">    <span class="string">"project_id"</span>: _(<span class="string">"Project ID"</span>),</span><br><span class="line">    <span class="string">"image_type"</span>: _(<span class="string">"Image Type"</span>),</span><br><span class="line">&#125;</span><br><span class="line">IMAGE_RESERVED_CUSTOM_PROPERTIES = []</span><br><span class="line">API_RESULT_LIMIT = 1000</span><br><span class="line">API_RESULT_PAGE_SIZE = 20</span><br><span class="line">SWIFT_FILE_TRANSFER_CHUNK_SIZE = 512 * 1024</span><br><span class="line">INSTANCE_LOG_LENGTH = 35</span><br><span class="line">DROPDOWN_MAX_ITEMS = 30</span><br><span class="line">TIME_ZONE = <span class="string">"Asia/Shanghai"</span></span><br><span class="line">POLICY_FILES_PATH = <span class="string">'/etc/openstack-dashboard'</span></span><br><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">'version'</span>: 1,</span><br><span class="line">    # When <span class="builtin-name">set</span> <span class="keyword">to</span> <span class="literal">True</span> this will <span class="builtin-name">disable</span> all<span class="built_in"> logging </span>except</span><br><span class="line">    # <span class="keyword">for</span> loggers specified <span class="keyword">in</span> this configuration dictionary.<span class="built_in"> Note </span>that</span><br><span class="line">    # <span class="keyword">if</span> <span class="literal">nothing</span> is specified here <span class="keyword">and</span> disable_existing_loggers is <span class="literal">True</span>,</span><br><span class="line">    # django.db.backends will still log unless it is disabled explicitly.</span><br><span class="line">    <span class="string">'disable_existing_loggers'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'formatters'</span>: &#123;</span><br><span class="line">        <span class="string">'operation'</span>: &#123;</span><br><span class="line">            # The format of <span class="string">"%(message)s"</span> is defined by</span><br><span class="line">            # OPERATION_LOG_OPTIONS[<span class="string">'format'</span>]</span><br><span class="line">            <span class="string">'format'</span>: <span class="string">'%(asctime)s %(message)s'</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'handlers'</span>: &#123;</span><br><span class="line">        <span class="string">'null'</span>: &#123;</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.NullHandler'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'console'</span>: &#123;</span><br><span class="line">            # <span class="builtin-name">Set</span> the level <span class="keyword">to</span> <span class="string">"DEBUG"</span> <span class="keyword">for</span> verbose output logging.</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.StreamHandler'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'operation'</span>: &#123;</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.StreamHandler'</span>,</span><br><span class="line">            <span class="string">'formatter'</span>: <span class="string">'operation'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'loggers'</span>: &#123;</span><br><span class="line">        #<span class="built_in"> Logging </span><span class="keyword">from</span> django.db.backends is VERY verbose, send <span class="keyword">to</span> <span class="literal">null</span></span><br><span class="line">        # by default.</span><br><span class="line">        <span class="string">'django.db.backends'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'null'</span>],</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'requests'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'null'</span>],</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'horizon'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'horizon.operation_log'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'operation'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'openstack_dashboard'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'novaclient'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'cinderclient'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'keystoneclient'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'glanceclient'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'neutronclient'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'heatclient'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'swiftclient'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'openstack_auth'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'nose.plugins.manager'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'django'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'iso8601'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'null'</span>],</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'scss'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'null'</span>],</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">SECURITY_GROUP_RULES = &#123;</span><br><span class="line">    <span class="string">'all_tcp'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: _(<span class="string">'All TCP'</span>),</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'65535'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'all_udp'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: _(<span class="string">'All UDP'</span>),</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'udp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'65535'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'all_icmp'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: _(<span class="string">'All ICMP'</span>),</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'icmp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'-1'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'-1'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'ssh'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'SSH'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'22'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'22'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'smtp'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'SMTP'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'25'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'25'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'dns'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'DNS'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'53'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'53'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'http'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'HTTP'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'80'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'80'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'pop3'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'POP3'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'110'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'110'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'imap'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'IMAP'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'143'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'143'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'ldap'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'LDAP'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'389'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'389'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'https'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'HTTPS'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'443'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'443'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'smtps'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'SMTPS'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'465'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'465'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'imaps'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'IMAPS'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'993'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'993'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'pop3s'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'POP3S'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'995'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'995'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'ms_sql'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'MS SQL'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'1433'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'1433'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'mysql'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'MYSQL'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'3306'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'3306'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'rdp'</span>: &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'RDP'</span>,</span><br><span class="line">        <span class="string">'ip_protocol'</span>: <span class="string">'tcp'</span>,</span><br><span class="line">        <span class="string">'from_port'</span>: <span class="string">'3389'</span>,</span><br><span class="line">        <span class="string">'to_port'</span>: <span class="string">'3389'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">REST_API_REQUIRED_SETTINGS = [<span class="string">'OPENSTACK_HYPERVISOR_FEATURES'</span>,</span><br><span class="line">                              <span class="string">'LAUNCH_INSTANCE_DEFAULTS'</span>,</span><br><span class="line">                              <span class="string">'OPENSTACK_IMAGE_FORMATS'</span>,</span><br><span class="line">                              <span class="string">'OPENSTACK_KEYSTONE_DEFAULT_DOMAIN'</span>]</span><br><span class="line">ALLOWED_PRIVATE_SUBNET_CIDR = &#123;<span class="string">'ipv4'</span>: [], <span class="string">'ipv6'</span>: []&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>glance配置文件</title>
      <link href="/2020/03/09/openstack/glance%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2020/03/09/openstack/glance%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="etc-glance-glance-api-conf"><a href="#etc-glance-glance-api-conf" class="headerlink" title="/etc/glance/glance-api.conf"></a>/etc/glance/glance-api.conf</h2><a id="more"></a><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="section">[cors]</span></span><br><span class="line"><span class="section">[cors.subdomain]</span></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://glance:glance@openstack-vip.qh.net/glance</span><br><span class="line"><span class="section">[glance_store]</span></span><br><span class="line"><span class="attr">stores</span> = file,http</span><br><span class="line"><span class="attr">default_store</span> = file</span><br><span class="line"><span class="attr">filesystem_store_datadir</span> = /var/lib/glance/images/</span><br><span class="line"><span class="section">[image_format]</span></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://openstack-vip.qh.net:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://openstack-vip.qh.net:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = openstack-vip.qh.net:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = glance</span><br><span class="line"><span class="attr">password</span> = glance</span><br><span class="line"><span class="section">[matchmaker_redis]</span></span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="section">[oslo_messaging_amqp]</span></span><br><span class="line"><span class="section">[oslo_messaging_kafka]</span></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="section">[oslo_messaging_rabbit]</span></span><br><span class="line"><span class="section">[oslo_messaging_zmq]</span></span><br><span class="line"><span class="section">[oslo_middleware]</span></span><br><span class="line"><span class="section">[oslo_policy]</span></span><br><span class="line"><span class="section">[paste_deploy]</span></span><br><span class="line"><span class="attr">flavor</span> = keystone</span><br><span class="line"><span class="attr">flavor</span> = keystone</span><br><span class="line"><span class="section">[profiler]</span></span><br><span class="line"><span class="section">[store_type_location_strategy]</span></span><br><span class="line"><span class="section">[task]</span></span><br><span class="line"><span class="section">[taskflow_executor]</span></span><br></pre></td></tr></table></figure><h2 id="etc-glance-glance-registry-conf"><a href="#etc-glance-glance-registry-conf" class="headerlink" title="/etc/glance/glance-registry.conf"></a>/etc/glance/glance-registry.conf</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://glance:glance@openstack-vip.qh.net/glance</span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://openstack-vip.qh.net:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://openstack-vip.qh.net:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = openstack-vip.qh.net:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = glance</span><br><span class="line"><span class="attr">password</span> = glance</span><br><span class="line"><span class="section">[matchmaker_redis]</span></span><br><span class="line"><span class="section">[oslo_messaging_amqp]</span></span><br><span class="line"><span class="section">[oslo_messaging_kafka]</span></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="section">[oslo_messaging_rabbit]</span></span><br><span class="line"><span class="section">[oslo_messaging_zmq]</span></span><br><span class="line"><span class="section">[oslo_policy]</span></span><br><span class="line"><span class="section">[paste_deploy]</span></span><br><span class="line"><span class="attr">flavor</span> = keystone</span><br><span class="line"><span class="section">[profiler]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启haproxy监控页面和页面详细参数介绍</title>
      <link href="/2020/03/09/ha+kp/%E5%BC%80%E5%90%AFhaproxy%E7%9B%91%E6%8E%A7%E9%A1%B5%E9%9D%A2%E5%92%8C%E9%A1%B5%E9%9D%A2%E8%AF%A6%E7%BB%86%E5%8F%82%E6%95%B0%E4%BB%8B%E7%BB%8D/"/>
      <url>/2020/03/09/ha+kp/%E5%BC%80%E5%90%AFhaproxy%E7%9B%91%E6%8E%A7%E9%A1%B5%E9%9D%A2%E5%92%8C%E9%A1%B5%E9%9D%A2%E8%AF%A6%E7%BB%86%E5%8F%82%E6%95%B0%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p>开启haproxy监控页面和页面详细参数介绍</p><a id="more"></a><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">编辑haproxy.cfg  加上下面参数  </span><br><span class="line">listen admin_stats</span><br><span class="line">        stats   enable</span><br><span class="line">        bind    *:<span class="number">9999</span>    <span class="comment">//监听的ip端口号</span></span><br><span class="line">        mode    http    <span class="comment">//开关</span></span><br><span class="line">        option  httplog</span><br><span class="line">        log     global</span><br><span class="line">        maxconn <span class="number">10</span></span><br><span class="line">        stats   refresh <span class="number">30</span>s   <span class="comment">//统计页面自动刷新时间</span></span><br><span class="line">        stats   uri <span class="regexp">/admin    /</span><span class="regexp">/访问的uri   ip:9999/</span>admin</span><br><span class="line">        stats   realm haproxy</span><br><span class="line">        stats   auth <span class="string">admin:</span>admin  <span class="comment">//认证用户名和密码</span></span><br><span class="line">        stats   hide-version   <span class="comment">//隐藏HAProxy的版本号</span></span><br><span class="line">        stats   admin <span class="keyword">if</span> TRUE   <span class="comment">//管理界面，如果认证成功了，可通过webui管理节点</span></span><br><span class="line"></span><br><span class="line">保存退出后</span><br><span class="line">重起service haproxy restart</span><br><span class="line">然后访问 <span class="string">http:</span><span class="comment">//ip:9999/admin          用户名:admin 密码:admin </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">页面详细参数解释</span><br><span class="line">Queue</span><br><span class="line"><span class="string">Cur:</span> current queued requests <span class="comment">//当前的队列请求数量</span></span><br><span class="line">Max：max queued requests     <span class="comment">//最大的队列请求数量</span></span><br><span class="line">Limit：           <span class="comment">//队列限制数量</span></span><br><span class="line">Session rate(每秒的连接回话)列表：</span><br><span class="line"><span class="string">scur:</span> current sessions        <span class="comment">//每秒的当前回话的限制数量</span></span><br><span class="line"><span class="string">smax:</span> max sessions           <span class="comment">//每秒的新的最大的回话量</span></span><br><span class="line"><span class="string">slim:</span> sessions limit           <span class="comment">//每秒的新回话的限制数量</span></span><br><span class="line"></span><br><span class="line">Sessions </span><br><span class="line"><span class="string">Total:</span>            <span class="comment">//总共回话量</span></span><br><span class="line"></span><br><span class="line"><span class="string">Cur:</span>             <span class="comment">//当前的回话</span></span><br><span class="line"><span class="string">Max:</span> <span class="comment">//最大回话 </span></span><br><span class="line"><span class="string">Limit:</span> <span class="comment">//回话限制</span></span><br><span class="line"><span class="string">Lbtot:</span> total number of times a server was selected <span class="comment">//选中一台服务器所用的总时间</span></span><br><span class="line">Bytes</span><br><span class="line">In： <span class="comment">//网络的字节数输入总量  </span></span><br><span class="line">Out： <span class="comment">//网络的字节数输出总量</span></span><br><span class="line"></span><br><span class="line">Denied</span><br><span class="line"><span class="string">Req:</span> denied requests<span class="comment">//拒绝请求量</span></span><br><span class="line"></span><br><span class="line">Resp：denied responses <span class="comment">//拒绝回应</span></span><br><span class="line">Errors</span><br><span class="line">Req：request errors             <span class="comment">//错误请求</span></span><br><span class="line">Conn：connection errors          <span class="comment">//错误的连接</span></span><br><span class="line"><span class="string">Resp:</span> response errors (among which srv_abrt)  <span class="comment">///错误的回应</span></span><br><span class="line"></span><br><span class="line">Warnings</span><br><span class="line"><span class="string">Retr:</span> retries (warning)                      <span class="comment">//重新尝试</span></span><br><span class="line">Redis：redispatches (warning)               <span class="comment">//再次发送</span></span><br><span class="line">Server列表：</span><br><span class="line"><span class="string">Status:</span>状态，包括up(后端机活动)和down(后端机挂掉)两种状态</span><br><span class="line"><span class="string">LastChk:</span>    持续检查后端服务器的时间</span><br><span class="line"><span class="string">Wght:</span> (weight) : 权重</span><br><span class="line"><span class="string">Act:</span> server is active (server), number of active servers (backend) <span class="comment">//活动链接数量</span></span><br><span class="line"><span class="string">Bck:</span> server is backup (server), number of backup servers (backend) <span class="comment">//backup：备份的服务器数量</span></span><br><span class="line">Down：          <span class="comment">//后端服务器连接后都是down的数量</span></span><br><span class="line"><span class="string">Downtime:</span> <span class="string">downtime:</span> total downtime (<span class="keyword">in</span> seconds)    <span class="comment">//总的downtime 时间</span></span><br><span class="line"><span class="string">Throttle:</span> warm up status                          <span class="comment">//设备变热状态</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> haproxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL中如何找出碎片化严重的表,表空间回收</title>
      <link href="/2020/03/09/Mysql/MySQL%E4%B8%AD%E5%A6%82%E4%BD%95%E6%89%BE%E5%87%BA%E7%A2%8E%E7%89%87%E5%8C%96%E4%B8%A5%E9%87%8D%E7%9A%84%E8%A1%A8-%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%9B%9E%E6%94%B6/"/>
      <url>/2020/03/09/Mysql/MySQL%E4%B8%AD%E5%A6%82%E4%BD%95%E6%89%BE%E5%87%BA%E7%A2%8E%E7%89%87%E5%8C%96%E4%B8%A5%E9%87%8D%E7%9A%84%E8%A1%A8-%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%9B%9E%E6%94%B6/</url>
      
        <content type="html"><![CDATA[<p>MySQL中如何找出碎片化严重的表</p><a id="more"></a><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> table_schema, <span class="built_in">TABLE_NAME</span>, concat(data_free/<span class="number">1024</span>/<span class="number">1024</span>, <span class="string">'M'</span>) <span class="keyword">as</span> data_free</span><br><span class="line"><span class="keyword">FROM</span> `information_schema`.<span class="keyword">tables</span></span><br><span class="line"><span class="keyword">WHERE</span> data_free &gt; <span class="number">3</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line"><span class="keyword">AND</span> ENGINE = <span class="string">'innodb'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> data_free <span class="keyword">DESC</span></span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">table</span> frag_tab_myisam</span><br><span class="line">    -&gt; (</span><br><span class="line">    -&gt;     id  <span class="type">int</span>,</span><br><span class="line">    -&gt;     <span class="type">name</span> <span class="type">varchar</span>(<span class="number">63</span>)</span><br><span class="line">    -&gt; ) engine=MyISAM;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> frag_tab_myisam</span><br><span class="line">    -&gt; <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">'it is only test row 1'</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="keyword">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> frag_tab_myisam</span><br><span class="line">    -&gt; <span class="keyword">values</span>(<span class="number">2</span>, <span class="string">'it is only test row 2'</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="keyword">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> frag_tab_myisam</span><br><span class="line">    -&gt; <span class="keyword">values</span>(<span class="number">3</span>, <span class="string">'it is only test row 3'</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="keyword">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> frag_tab_myisam</span><br><span class="line">    -&gt; <span class="keyword">values</span>(<span class="number">4</span>, <span class="string">'it is only test row 4'</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="keyword">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt;  <span class="keyword">show</span> <span class="keyword">table</span> status <span class="keyword">from</span> kkk <span class="keyword">like</span> <span class="string">'frag_tab_myisam'</span> \G;</span><br></pre></td></tr></table></figure><p>在MySQL中，可以使用OPTIMIZE TABLE、ALTER TABLE XXXX ENGINE = INNODB这两种方法降低碎片，关于这两者的简单介绍如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">OPTIMIZE <span class="keyword">TABLE</span></span><br><span class="line">OPTIMIZE <span class="keyword">TABLE</span> 会重组表和索引的物理存储，减少对存储空间使用和提升访问表时的IO效率。对每个表所做的确切更改取决于该表使用的存储引擎</span><br><span class="line">OPTIMIZE <span class="keyword">TABLE</span>的支持表类型：INNODB,MYISAM, ARCHIVE，NDB；它会重组表数据和索引的物理页，对于减少所占空间和在访问表时优化IO有效果。OPTIMIZE 操作会暂时锁住表<span class="comment">,</span>而且数据量越大<span class="comment">,</span>耗费的时间也越长。</span><br><span class="line">OPTIMIZE <span class="keyword">TABLE</span>后，表的变化跟存储引擎有关。</span><br><span class="line">对于MyISAM， PTIMIZE <span class="keyword">TABLE</span> 的工作原理如下：</span><br><span class="line">· 如果表有已删除的行或拆分行（split rows），修复该表。</span><br><span class="line">· 如果未对索引页面进行排序，对它们进行排序。</span><br><span class="line">· 如果表的统计信息不是最新的（并且无法通过对索引进行排序来完成修复），更新它们。</span><br><span class="line">英文原文如下：</span><br><span class="line">For MyISAM tables, OPTIMIZE <span class="keyword">TABLE</span> works <span class="comment">as follows:</span></span><br><span class="line"><span class="number">1.</span>     If the <span class="keyword">table</span> has <span class="comment">deleted or split rows, repair the table.</span></span><br><span class="line"><span class="number">2.</span>     If the index pages are not sorted, sort them.</span><br><span class="line"><span class="number">3.</span>     If the <span class="keyword">table</span>'s <span class="comment">statistics are not up to date (and the repair could not be accomplished by sorting the index), update them.</span></span><br><span class="line">对于InnoDB而言，PTIMIZE <span class="keyword">TABLE</span> 的工作原理如下</span><br><span class="line">对于InnoDB表， OPTIMIZE <span class="keyword">TABLE</span>映射到ALTER <span class="comment">TABLE ... FORCE</span>（或者这样翻译：在<span class="comment">InnoDB</span>表中等价<span class="comment"> ALTER TABLE ... FORCE</span>），它重建表以更新索引统计信息并释放聚簇索引中未使用的空间。当您在<span class="comment">InnoDB</span>表上运行时，它会显示在<span class="comment">OPTIMIZE TABLE</span>的输出中，如下所示：</span><br><span class="line">mysql&gt; OPTIMIZE <span class="keyword">TABLE</span> foo; </span><br><span class="line">+----------+----------+----------+-------------------------------------------------------------------+</span><br><span class="line">| <span class="keyword">Table</span>    | Op       |<span class="comment"> Msg_type</span> |<span class="comment"> Msg_text</span>                                                          |</span><br><span class="line">+----------+----------+----------+-------------------------------------------------------------------+</span><br><span class="line">| test.foo | optimize | note     | <span class="keyword">Table</span> does <span class="comment">not support optimize, doing recreate + analyze instead</span> |</span><br><span class="line">| test.foo | optimize | status   | OK                                                                |</span><br><span class="line">+----------+----------+----------+-------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p>OPTIMIZE TABLE对InnoDB的普通表和分区表使用online DDL，从而减少了并发DML操作的停机时间。由OPTIMIZE TABLE触发表的重建，并在ALTER TABLE … FORCE的掩护下完成。仅在操作的准备阶段和提交阶段期间短暂地进行独占表锁定。在准备阶段，更新元数据并创建中间表。在提交阶段，将提交表元数据更改。</p><p>OPTIMIZE TABLE 在以下条件下使用表复制方法重建表：</p><p>OPTIMIZE TABLE 对于包含FULLTEXT索引的InnoDB表不支持online DDL。而是使用复制表的方法。</p><p>InnoDB使用页面分配方法存储数据，并且不会像传统存储引擎（例如MyISAM）那样受到碎片的影响。在考虑是否运行优化时，请考虑服务器将处理的事务的工作负载：</p><p>当行有足够的空间时，对行的更新通常会重写同一页面中的数据，具体取决于数据类型和行格式。</p><p>高并发工作负载可能会随着时间的推移在索引中留下空白，因为InnoDB通过其MVCC机制保留了相同数据的多个版本。</p><p>另外，对于innodb_file_per_table=1的InnoDB表，OPTIMIZE TABLE 会重组表和索引的物理存储，将空闲空间释放给操作系统。也就是说OPTIMIZE TABLE [tablename] 这种方式只适用于独立表空间</p><p><strong>ALTER TABLE table_name ENGINE = Innodb;</strong></p><p>这其实是一个NULL操作,表面上看什么也不做,实际上重新整理碎片了.当执行优化操作时,实际执行的是一个空的 ALTER 命令,但是这个命令也会起到优化的作用,它会重建整个表,删掉未使用的空白空间.</p><p>Running ALTER TABLE <em>tbl_name</em> ENGINE=INNODB on an existing InnoDB table performs a “null” ALTER TABLE operation, which can be used to defragment an InnoDB table, as described in Section 15.11.4, “Defragmenting a Table”. Running ALTER TABLE <em>tbl_name</em> FORCE on an InnoDB table performs the same function.</p><p>问题1：那么是用OPTIMIZE TABLE 还是ALTER TABLE xxxx ENGINE= INNODB好呢？</p><p>​    其实对于InnoDB引擎，ALTER TABLE xxxx ENGINE= INNODB是执行了一个空的ALTER TABLE操作。而OPTIMIZE TABLE等价于ALTER TABLE … FORCE。 参考上面描述，在有些情况下，OPTIMIZE TABLE 还是ALTER TABLE xxxx ENGINE= INNODB基本上是一样的。但是在有些情况下，ALTER TABLE xxxx ENGINE= INNODB更好。例如old_alter_table系统变量没有启用等等。另外对于MyISAM类型表，使用ALTER TABLE xxxx ENGINE= INNODB是明显要优于OPTIMIZE TABLE这种方法的。</p><p>问题2：ALTER TABLE xxxx ENGINE= INNODB 表上的索引碎片会整理么</p><p>   ALTER TABLE ENGINE= INNODB,会重新整理在聚簇索引上的数据和索引。如果你想用实验验证，可以对比执行该命令前后index_length的大小。</p><p><strong>其它工具</strong></p><p>​    网友建议使用pt工具或者gh-ost降低表的碎片化，个人暂时还没有使用过这类工具，估计也是封装了上面两个命令。此处不做展开介绍。</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>INFORMATION_SCHEMA.INNODB_TRX,详解,表,锁,等待超时</title>
      <link href="/2020/03/09/Mysql/INFORMATION-SCHEMA-INNODB-TRX-%E8%AF%A6%E8%A7%A3-%E8%A1%A8-%E9%94%81-%E7%AD%89%E5%BE%85%E8%B6%85%E6%97%B6/"/>
      <url>/2020/03/09/Mysql/INFORMATION-SCHEMA-INNODB-TRX-%E8%AF%A6%E8%A7%A3-%E8%A1%A8-%E9%94%81-%E7%AD%89%E5%BE%85%E8%B6%85%E6%97%B6/</url>
      
        <content type="html"><![CDATA[<p>INNODB_TRX</p><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> information_schema.innodb_trx</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">processlist</span></span><br><span class="line"><span class="keyword">Warning</span>: <span class="keyword">Using</span> a <span class="keyword">password</span> <span class="keyword">on</span> the command line <span class="keyword">interface</span> can be insecure.</span><br><span class="line">+<span class="comment">------+------+----------------------+------+---------+------+-------+------------------+</span></span><br><span class="line">| <span class="keyword">Id</span>   | <span class="keyword">User</span> | Host                 | db   | Command | <span class="built_in">Time</span> | State | Info             |</span><br><span class="line">+<span class="comment">------+------+----------------------+------+---------+------+-------+------------------+</span></span><br><span class="line">| <span class="number">1367</span> | root | <span class="number">192.168</span><span class="number">.11</span><span class="number">.186</span>:<span class="number">40366</span> | <span class="literal">NULL</span> | <span class="keyword">Sleep</span>   |   <span class="number">78</span> |       | <span class="literal">NULL</span>             |</span><br><span class="line"></span><br><span class="line">线程号为<span class="number">1367</span></span><br><span class="line"></span><br><span class="line">zabbix:/root/mysql<span class="comment"># sh ./mon_mysql_all.sh </span></span><br><span class="line"><span class="keyword">Warning</span>: <span class="keyword">Using</span> a <span class="keyword">password</span> <span class="keyword">on</span> the command line <span class="keyword">interface</span> can be insecure.</span><br><span class="line"><span class="keyword">Warning</span>: <span class="keyword">Using</span> a <span class="keyword">password</span> <span class="keyword">on</span> the command line <span class="keyword">interface</span> can be insecure.</span><br><span class="line">mysql[<span class="number">192.168</span><span class="number">.11</span><span class="number">.185</span>]  processid[<span class="number">1367</span>] root@<span class="number">192.168</span><span class="number">.11</span><span class="number">.186</span>:<span class="number">40366</span> <span class="keyword">in</span> db[DEVOPS] hold <span class="keyword">transaction</span> <span class="built_in">time</span> <span class="number">141</span></span><br><span class="line"> </span><br><span class="line">centos6<span class="number">.5</span>:/root<span class="comment">#mysql -uroot -p'kjk123123' -h192.168.11.185 -e"select * from  INFORMATION_SCHEMA.INNODB_TRX\G "</span></span><br><span class="line"><span class="keyword">Warning</span>: <span class="keyword">Using</span> a <span class="keyword">password</span> <span class="keyword">on</span> the command line <span class="keyword">interface</span> can be insecure.</span><br><span class="line">*************************** <span class="number">1.</span> <span class="keyword">row</span> ***************************</span><br><span class="line">                    trx_id: <span class="number">5451</span></span><br><span class="line">                 trx_state: RUNNING</span><br><span class="line">               trx_started: <span class="number">2016</span><span class="number">-11</span><span class="number">-22</span> <span class="number">13</span>:<span class="number">48</span>:<span class="number">24</span></span><br><span class="line">     trx_requested_lock_id: <span class="literal">NULL</span></span><br><span class="line">          trx_wait_started: <span class="literal">NULL</span></span><br><span class="line">                trx_weight: <span class="number">3</span></span><br><span class="line">       trx_mysql_thread_id: <span class="number">1367</span></span><br><span class="line">                 trx_query: <span class="literal">NULL</span></span><br><span class="line">       trx_operation_state: <span class="literal">NULL</span></span><br><span class="line">         trx_tables_in_use: <span class="number">0</span></span><br><span class="line">         trx_tables_locked: <span class="number">0</span></span><br><span class="line">          trx_lock_structs: <span class="number">2</span></span><br><span class="line">     trx_lock_memory_bytes: <span class="number">360</span></span><br><span class="line">           trx_rows_locked: <span class="number">4</span></span><br><span class="line">         trx_rows_modified: <span class="number">1</span></span><br><span class="line">   trx_concurrency_tickets: <span class="number">0</span></span><br><span class="line">       trx_isolation_level: REPEATABLE <span class="keyword">READ</span></span><br><span class="line">         trx_unique_checks: <span class="number">1</span></span><br><span class="line">    trx_foreign_key_checks: <span class="number">1</span></span><br><span class="line">trx_last_foreign_key_error: <span class="literal">NULL</span></span><br><span class="line"> trx_adaptive_hash_latched: <span class="number">0</span></span><br><span class="line"> trx_adaptive_hash_timeout: <span class="number">10000</span></span><br><span class="line">          trx_is_read_only: <span class="number">0</span></span><br><span class="line">trx_autocommit_non_locking: <span class="number">0</span></span><br><span class="line">INNODB_TRX 表包含信息关于每个事务(不包含只读事务) 当前在<span class="keyword">InnoDB</span>内执行的,</span><br><span class="line"> </span><br><span class="line">包含交易是否是等待一个<span class="keyword">lock</span>,当 事务开始后,和<span class="keyword">SQL</span> 语句正在执行的</span><br><span class="line"> </span><br><span class="line">INNODB_TRX <span class="keyword">Columns</span>:</span><br><span class="line"> </span><br><span class="line">TRX_ID：唯一的事务<span class="keyword">ID</span>表示,针对于<span class="keyword">InnoDB</span>内部的(从MySQL5<span class="number">.6</span>开始,那些IDs是不会被创建用于事务 只读的或者是非锁定的)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">TRX_WEIGHT：一个事务的权重,反映(但不一定是确切的计数) 影响的行的数量,和被事务锁定的行的数量。</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">为了解决死锁,<span class="keyword">InnoDB</span> 选择一个小的权重的事务来回滚。</span><br><span class="line"> </span><br><span class="line">TRX_STATE  事务执行状态,允许值为RUNNING, <span class="keyword">LOCK</span> <span class="keyword">WAIT</span>, <span class="keyword">ROLLING</span> BACK, <span class="keyword">and</span> COMMITTING.</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">TRX_STARTED： 事务开始时间</span><br><span class="line"> </span><br><span class="line">centos6<span class="number">.5</span>:/root<span class="comment">#mysql -uroot -p'kjk123123' -h192.168.11.185 -e"show processlist"</span></span><br><span class="line"><span class="keyword">Warning</span>: <span class="keyword">Using</span> a <span class="keyword">password</span> <span class="keyword">on</span> the command line <span class="keyword">interface</span> can be insecure.</span><br><span class="line">+<span class="comment">------+------+----------------------+--------+---------+------+----------+------------------------------------------+</span></span><br><span class="line">| <span class="keyword">Id</span>   | <span class="keyword">User</span> | Host                 | db     | Command | <span class="built_in">Time</span> | State    | Info                                     |</span><br><span class="line">+<span class="comment">------+------+----------------------+--------+---------+------+----------+------------------------------------------+</span></span><br><span class="line">| <span class="number">1367</span> | root | <span class="number">192.168</span><span class="number">.11</span><span class="number">.186</span>:<span class="number">40366</span> | DEVOPS | <span class="keyword">Sleep</span>   |   <span class="number">46</span> |          | <span class="literal">NULL</span>                                     |</span><br><span class="line">| <span class="number">1404</span> | root | <span class="number">192.168</span><span class="number">.11</span><span class="number">.186</span>:<span class="number">46149</span> | DEVOPS | <span class="keyword">Query</span>   |    <span class="number">3</span> | updating | <span class="keyword">delete</span>  <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> username=<span class="string">'admin'</span> |</span><br><span class="line">| <span class="number">1405</span> | root | <span class="number">192.168</span><span class="number">.11</span><span class="number">.185</span>:<span class="number">43080</span> | <span class="literal">NULL</span>   | <span class="keyword">Query</span>   |    <span class="number">0</span> | init     | <span class="keyword">show</span> <span class="keyword">processlist</span>                         |</span><br><span class="line">+<span class="comment">------+------+----------------------+--------+---------+------+----------+------------------------------------------+</span></span><br><span class="line"> </span><br><span class="line"><span class="number">1367</span> 持有行锁</span><br><span class="line"> </span><br><span class="line"><span class="number">1404</span> 被堵塞</span><br><span class="line"> </span><br><span class="line">centos6<span class="number">.5</span>:/root<span class="comment">#mysql -uroot -p'kjk123123' -h192.168.11.185 -e"select * from  INFORMATION_SCHEMA.INNODB_TRX\G "</span></span><br><span class="line"><span class="keyword">Warning</span>: <span class="keyword">Using</span> a <span class="keyword">password</span> <span class="keyword">on</span> the command line <span class="keyword">interface</span> can be insecure.</span><br><span class="line">*************************** <span class="number">1.</span> <span class="keyword">row</span> ***************************</span><br><span class="line">                    trx_id: <span class="number">5458</span></span><br><span class="line">                 trx_state: <span class="keyword">LOCK</span> <span class="keyword">WAIT</span></span><br><span class="line">               trx_started: <span class="number">2016</span><span class="number">-11</span><span class="number">-22</span> <span class="number">14</span>:<span class="number">01</span>:<span class="number">57</span></span><br><span class="line">     trx_requested_lock_id: <span class="number">5458</span>:<span class="number">14</span>:<span class="number">3</span>:<span class="number">2</span></span><br><span class="line">          trx_wait_started: <span class="number">2016</span><span class="number">-11</span><span class="number">-22</span> <span class="number">14</span>:<span class="number">01</span>:<span class="number">57</span></span><br><span class="line">                trx_weight: <span class="number">2</span></span><br><span class="line">       trx_mysql_thread_id: <span class="number">1404</span></span><br><span class="line">                 trx_query: <span class="keyword">delete</span>  <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> username=<span class="string">'admin'</span></span><br><span class="line">       trx_operation_state: <span class="keyword">starting</span> <span class="keyword">index</span> <span class="keyword">read</span></span><br><span class="line">         trx_tables_in_use: <span class="number">1</span></span><br><span class="line">         trx_tables_locked: <span class="number">1</span></span><br><span class="line">          trx_lock_structs: <span class="number">2</span></span><br><span class="line">     trx_lock_memory_bytes: <span class="number">360</span></span><br><span class="line">           trx_rows_locked: <span class="number">1</span></span><br><span class="line">         trx_rows_modified: <span class="number">0</span></span><br><span class="line">   trx_concurrency_tickets: <span class="number">0</span></span><br><span class="line">       trx_isolation_level: REPEATABLE <span class="keyword">READ</span></span><br><span class="line">         trx_unique_checks: <span class="number">1</span></span><br><span class="line">    trx_foreign_key_checks: <span class="number">1</span></span><br><span class="line">trx_last_foreign_key_error: <span class="literal">NULL</span></span><br><span class="line"> trx_adaptive_hash_latched: <span class="number">0</span></span><br><span class="line"> trx_adaptive_hash_timeout: <span class="number">10000</span></span><br><span class="line">          trx_is_read_only: <span class="number">0</span></span><br><span class="line">trx_autocommit_non_locking: <span class="number">0</span></span><br><span class="line">*************************** <span class="number">2.</span> <span class="keyword">row</span> ***************************</span><br><span class="line">                    trx_id: <span class="number">5453</span></span><br><span class="line">                 trx_state: RUNNING</span><br><span class="line">               trx_started: <span class="number">2016</span><span class="number">-11</span><span class="number">-22</span> <span class="number">14</span>:<span class="number">01</span>:<span class="number">14</span></span><br><span class="line">     trx_requested_lock_id: <span class="literal">NULL</span></span><br><span class="line">          trx_wait_started: <span class="literal">NULL</span></span><br><span class="line">                trx_weight: <span class="number">3</span></span><br><span class="line">       trx_mysql_thread_id: <span class="number">1367</span></span><br><span class="line">                 trx_query: <span class="literal">NULL</span></span><br><span class="line">       trx_operation_state: <span class="literal">NULL</span></span><br><span class="line">         trx_tables_in_use: <span class="number">0</span></span><br><span class="line">         trx_tables_locked: <span class="number">0</span></span><br><span class="line">          trx_lock_structs: <span class="number">2</span></span><br><span class="line">     trx_lock_memory_bytes: <span class="number">360</span></span><br><span class="line">           trx_rows_locked: <span class="number">4</span></span><br><span class="line">         trx_rows_modified: <span class="number">1</span></span><br><span class="line">   trx_concurrency_tickets: <span class="number">0</span></span><br><span class="line">       trx_isolation_level: REPEATABLE <span class="keyword">READ</span></span><br><span class="line">         trx_unique_checks: <span class="number">1</span></span><br><span class="line">    trx_foreign_key_checks: <span class="number">1</span></span><br><span class="line">trx_last_foreign_key_error: <span class="literal">NULL</span></span><br><span class="line"> trx_adaptive_hash_latched: <span class="number">0</span></span><br><span class="line"> trx_adaptive_hash_timeout: <span class="number">10000</span></span><br><span class="line">          trx_is_read_only: <span class="number">0</span></span><br><span class="line">trx_autocommit_non_locking: <span class="number">0</span></span><br><span class="line"> </span><br><span class="line">TRX_REQUESTED_LOCK_ID: 持有者为trx_requested_lock_id: <span class="literal">NULL</span></span><br><span class="line"> </span><br><span class="line">                       被堵塞者trx_requested_lock_id: <span class="number">5458</span>:<span class="number">14</span>:<span class="number">3</span>:<span class="number">2</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">事务当前等待的锁的<span class="keyword">ID</span>,如果TRX_STATE 是<span class="keyword">LOCK</span> <span class="keyword">WAIT</span>; 否则值为NULL。</span><br><span class="line"> </span><br><span class="line">得到 <span class="keyword">lock</span>的详细信息,关联这个列和 INNODB_LOCKS 表的LOCK_ID列</span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">NOW</span>(),</span><br><span class="line">    (<span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">NOW</span>()) - <span class="keyword">UNIX_TIMESTAMP</span>(a.trx_started)) diff_sec,</span><br><span class="line">    b.id,</span><br><span class="line">    b.user,</span><br><span class="line">    b.host,</span><br><span class="line">    b.db,</span><br><span class="line">    c.lock_type,</span><br><span class="line">   </span><br><span class="line"> c.lock_table,</span><br><span class="line">    c.lock_index</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    information_schema.innodb_trx a</span><br><span class="line">       </span><br><span class="line"> <span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">    information_schema.PROCESSLIST b <span class="keyword">ON</span> a.TRX_MYSQL_THREAD_ID = b.id</span><br><span class="line">   </span><br><span class="line"> <span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">    information_schema.INNODB_LOCKS  c</span><br><span class="line"> <span class="keyword">on</span> a.trx_requested_lock_id=c.lock_id;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> INFORMATION_SCHEMA.INNODB_LOCKS 这个表只有在堵塞的时候才有数据</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">TRX_WAIT_STARTED：  事务开始等待锁的时间,只有是TRX_STATE 是<span class="keyword">LOCK</span> <span class="keyword">WAIT</span>; 否则为空</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">TRX_MYSQL_THREAD_ID: MySQL 事务ID 得到thread 的详细信息,关联这个列和INFORMATION_SCHEMA PROCESSLIST table的ID列。</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">NOW</span>(),</span><br><span class="line">    (<span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">NOW</span>()) - <span class="keyword">UNIX_TIMESTAMP</span>(a.trx_started)) diff_sec,</span><br><span class="line">    b.id,</span><br><span class="line">    b.user,</span><br><span class="line">    b.host,</span><br><span class="line">    b.db</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    information_schema.innodb_trx a</span><br><span class="line">        <span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">    information_schema.PROCESSLIST b <span class="keyword">ON</span> a.TRX_MYSQL_THREAD_ID = b.id;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">TRX_QUERY  语句当前事务执行的</span><br><span class="line"> </span><br><span class="line">TRX_OPERATION_STATE: 事务的当前的操作,如果any 否则NULL</span><br><span class="line"> </span><br><span class="line">TRX_TABLES_IN_USE InnoDB tables 的数量当前用于处理SQL语句</span><br><span class="line"> </span><br><span class="line">TRX_TABLES_LOCKED: InnoDB 表的数量</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql运维必会的一些知识点整理</title>
      <link href="/2020/03/09/Mysql/mysql%E8%BF%90%E7%BB%B4%E5%BF%85%E4%BC%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/"/>
      <url>/2020/03/09/Mysql/mysql%E8%BF%90%E7%BB%B4%E5%BF%85%E4%BC%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="（1）基础"><a href="#（1）基础" class="headerlink" title="（1）基础"></a>（1）基础</h2><p><strong>1.开启MySQL服务</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysqld start</span><br><span class="line">service mysqld start</span><br><span class="line">systemctl  start mysqld</span><br></pre></td></tr></table></figure><p><strong>2.检测端口是否运行</strong></p><a id="more"></a><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof -i :<span class="number">3306</span></span><br><span class="line">netstat -lntup |grep <span class="number">3306</span></span><br></pre></td></tr></table></figure><p><strong>3.为MySQL设置密码或者修改密码</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">设置密码</span><br><span class="line"></span><br><span class="line">mysql -uroot -ppassword -e <span class="string">"set passowrd for root = passowrd('passowrd')"</span></span><br><span class="line">mysqladmin -uroot passowrd <span class="string">"NEWPASSWORD"</span></span><br><span class="line">更改密码</span><br><span class="line"></span><br><span class="line">mysqladmin -uroot passowrd oldpassowrd <span class="string">"NEWPASSWORD"</span></span><br><span class="line">use mysql;</span><br><span class="line">update<span class="built_in"> user </span><span class="builtin-name">set</span> passowrd = PASSWORD(<span class="string">'newpassword'</span>) where<span class="built_in"> user </span>= <span class="string">'root'</span>;flush privileges;</span><br><span class="line">msyql 5.7以上版本修改默认密码命令</span><br><span class="line"></span><br><span class="line">alter<span class="built_in"> user </span><span class="string">'root'</span>@<span class="string">'localhost'</span> identified by <span class="string">'root'</span></span><br></pre></td></tr></table></figure><p><strong>4.登陆MySQL数据库</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql -uroot -ppassword</span></span><br></pre></td></tr></table></figure><p><strong>5.查看当前数据库的字符集</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> DB_NAME;</span><br></pre></td></tr></table></figure><p><strong>6.查看当前数据库版本</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -V</span><br><span class="line">mysql -uroot -ppassowrd -e "<span class="keyword">use</span> mysql;<span class="keyword">select</span> <span class="keyword">version</span>();"</span><br></pre></td></tr></table></figure><p><strong>7.查看当前登录的用户</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>();</span><br></pre></td></tr></table></figure><p><strong>8.创建GBK字符集的数据库mingongge，并查看已建库完整语句</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database mingongge<span class="built_in"> DEFAULT </span>CHARSET GBK COLLATE gbk_chinese_ci;</span><br><span class="line"><span class="comment">#查看创建的库</span></span><br><span class="line">show create database mingongge;</span><br></pre></td></tr></table></figure><p><strong>9.创建用户mingongge，使之可以管理数据库mingongge</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> mingongge.* <span class="keyword">to</span> <span class="string">'mingongge'</span>@<span class="string">'localhost'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'mingongge'</span>;</span><br></pre></td></tr></table></figure><p><strong>10.查看创建的用户mingongge拥有哪些权限</strong></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> mingongge<span class="meta">@localhost</span></span><br></pre></td></tr></table></figure><p><strong>11.查看当前数据库里有哪些用户</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select<span class="built_in"> user </span><span class="keyword">from</span> mysql.user;</span><br></pre></td></tr></table></figure><p><strong>12.进入mingongge数据库</strong></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mingongge</span><br></pre></td></tr></table></figure><p><strong>13.创建一innodb GBK表test，字段id int(4)和name varchar(16)</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table test (</span><br><span class="line">     id int(4),</span><br><span class="line">     name varchar(16)</span><br><span class="line">     )<span class="attribute">ENGINE</span>=innodb<span class="built_in"> DEFAULT </span><span class="attribute">CHARSET</span>=gbk;</span><br></pre></td></tr></table></figure><p><strong>14.查看建表结构及表结构的SQL语句</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> test;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> test\G</span><br></pre></td></tr></table></figure><p><strong>15.插入一条数据“1,mingongge”</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span>(<span class="string">'1'</span>,<span class="string">'mingongge'</span>);</span><br></pre></td></tr></table></figure><p><strong>16.再批量插入2行数据 “2,民工哥”，“3,mingonggeedu”</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span>(<span class="string">'2'</span>,<span class="string">'民工哥'</span>),(<span class="string">'3'</span>,<span class="string">'mingonggeedu'</span>);</span><br></pre></td></tr></table></figure><p><strong>17.查询名字为mingongge的记录</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'mingongge'</span>;</span><br></pre></td></tr></table></figure><p><strong>18.把数据id等于1的名字mingongge更改为mgg</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">test</span> <span class="keyword">set</span> <span class="keyword">name</span> = <span class="string">'mgg'</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="string">'1'</span>;</span><br></pre></td></tr></table></figure><p><strong>19.在字段name前插入age字段，类型tinyint(2)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">test</span> <span class="keyword">add</span> age <span class="built_in">tinyint</span>(<span class="number">2</span>) <span class="keyword">after</span> <span class="keyword">id</span>;</span><br></pre></td></tr></table></figure><p><strong>20.不退出数据库,完成备份mingongge数据库</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">system</span> mysqldump -uroot -pMgg123<span class="number">.0</span>. -B mingongge &gt;/root/mingongge_bak.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure><p><strong>21.删除test表中的所有数据，并查看</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>;</span><br></pre></td></tr></table></figure><p><strong>22.删除表test和mingongge数据库并查看</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> mingongge;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><p><strong>23.不退出数据库恢复以上删除的数据</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">system</span> mysql -uroot -pMgg123<span class="number">.0</span>. &lt;/root/mingongge_bak.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure><p><strong>24.把库表的GBK字符集修改为UTF8</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter database mingongge<span class="built_in"> default </span>character <span class="builtin-name">set</span> utf8;</span><br><span class="line">alter table test<span class="built_in"> default </span>character <span class="builtin-name">set</span> utf8;</span><br></pre></td></tr></table></figure><p><strong>25.把id列设置为主键，在Name字段上创建普通索引</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">test</span> <span class="keyword">add</span> primary <span class="keyword">key</span>(<span class="keyword">id</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> mggindex <span class="keyword">on</span> <span class="keyword">test</span>(<span class="keyword">name</span>(<span class="number">16</span>));</span><br></pre></td></tr></table></figure><p><strong>26.在字段name后插入手机号字段(shouji)，类型char(11)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">test</span> <span class="keyword">add</span> shouji <span class="built_in">char</span>(<span class="number">11</span>);</span><br><span class="line"><span class="comment">#默认就是在最后一列后面插入新增列</span></span><br></pre></td></tr></table></figure><p><strong>27.所有字段上插入2条记录（自行设定数据）</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span>(<span class="string">'4'</span>,<span class="string">'23'</span>,<span class="string">'li'</span>,<span class="string">'13700000001'</span>),(<span class="string">'5'</span>,<span class="string">'26'</span>,<span class="string">'zhao'</span>,<span class="string">'13710000001'</span>);</span><br></pre></td></tr></table></figure><p><strong>28.在手机字段上对前8个字符创建普通索引</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> SJ <span class="keyword">on</span> <span class="keyword">test</span>(shouji(<span class="number">8</span>));</span><br></pre></td></tr></table></figure><p><strong>29.查看创建的索引及索引类型等信息</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">index</span> <span class="keyword">from</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span>\G</span><br><span class="line"><span class="comment">#下面的命令也可以查看索引类型  </span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">keys</span> <span class="keyword">from</span> <span class="keyword">test</span>\G</span><br></pre></td></tr></table></figure><p><strong>30.删除Name，shouji列的索引</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> SJ <span class="keyword">on</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> mggindex <span class="keyword">on</span> <span class="keyword">test</span>;</span><br></pre></td></tr></table></figure><p><strong>31.对Name列的前6个字符以及手机列的前8个字符组建联合索引</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> lianhe <span class="keyword">on</span> <span class="keyword">test</span>(<span class="keyword">name</span>(<span class="number">6</span>),shouji(<span class="number">8</span>));</span><br></pre></td></tr></table></figure><p><strong>32.查询手机号以137开头的，名字为zhao的记录（提前插入）</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> shouji <span class="keyword">like</span> <span class="string">'137%'</span> <span class="keyword">and</span> <span class="keyword">name</span> = <span class="string">'zhao'</span>;</span><br></pre></td></tr></table></figure><p><strong>33.查询上述语句的执行计划（是否使用联合索引等）</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'zhao'</span> <span class="keyword">and</span> shouji <span class="keyword">like</span> <span class="string">'137%'</span>\G</span><br></pre></td></tr></table></figure><p><strong>34.把test表的引擎改成MyISAM</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">test</span> <span class="keyword">engine</span>=MyISAM;</span><br></pre></td></tr></table></figure><p><strong>35.收回mingongge用户的select权限</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">revoke</span> <span class="literal">select</span> <span class="literal">on</span> <span class="regexp">mingongge.*</span> from mingongge<span class="variable">@localhost</span>;</span><br></pre></td></tr></table></figure><p><strong>36.删除mingongge用户</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop<span class="built_in"> user </span>migongge@localhost;</span><br></pre></td></tr></table></figure><p><strong>37.删除mingongge数据库</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> mingongge</span><br></pre></td></tr></table></figure><p><strong>38.使用mysqladmin关闭数据库</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -uroot -pMgg123<span class="number">.0</span>. shutdown</span><br><span class="line">lsof -i :<span class="number">3306</span></span><br></pre></td></tr></table></figure><p><strong>39.MySQL密码丢了，请找回？</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe <span class="comment">--skip-grant-tables &amp;   #启动数据库服务</span></span><br><span class="line">mysql -uroot -ppassowrd -e "<span class="keyword">use</span> mysql;<span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> passowrd = <span class="keyword">PASSWORD</span>(<span class="string">'newpassword'</span>) <span class="keyword">where</span> <span class="keyword">user</span> = <span class="string">'root'</span>;<span class="keyword">flush</span> <span class="keyword">privileges</span>;"</span><br></pre></td></tr></table></figure><h2 id="（2）MySQL运维基础知识面试问答题"><a href="#（2）MySQL运维基础知识面试问答题" class="headerlink" title="（2）MySQL运维基础知识面试问答题"></a>（2）MySQL运维基础知识面试问答题</h2><p><strong>面试题001：请解释关系型数据库概念及主要特点？</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">关系型数据库模型是把复杂的数据结构归结为简单的二元关系，对数据的操作都是建立一个或多个关系表格上，最大的特点就是二维的表格，通过<span class="keyword">SQL</span>结构查询语句存取数据，保持数据一致性方面很强大</span><br></pre></td></tr></table></figure><p><strong>面试题002：请说出关系型数据库的典型产品、特点及应用场景？</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">关系型数据库模型是把复杂的数据结构归结为简单的二元关系，对数据的操作都是建立一个或多个关系表格上，最大的特点就是二维的表格，通过<span class="keyword">SQL</span>结构查询语句存取数据，保持数据一致性方面很强大</span><br></pre></td></tr></table></figure><p><strong>面试题003：请解释非关系型数据库概念及主要特点？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">非关系型数据库也被称为NoSQL数据库，数据存储不需有特有固定的表结构</span><br><span class="line">特点：高性能、高并发、简单易安装</span><br></pre></td></tr></table></figure><p><strong>面试题004：请说出非关系型数据库的典型产品、特点及应用场景？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、memcaced 纯内存</span><br><span class="line"><span class="number">2</span>、redis 持久化缓存</span><br><span class="line"><span class="number">3</span>、mongodb 面向文档</span><br><span class="line">如果需要短时间响应的查询操作，没有良好模式定义的数据存储，或者模式更改频繁的数据存储还是用NoSQL</span><br></pre></td></tr></table></figure><p><strong>面试题005：请详细描述SQL语句分类及对应代表性关键字。</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sql</span>语句分类如下</span><br><span class="line">DDL 数据定义语言，用来定义数据库对象：库、表、列</span><br><span class="line">代表性关键字：<span class="keyword">create</span> <span class="keyword">alter</span> <span class="keyword">drop</span></span><br><span class="line">DML 数据操作语言，用来定义数据库记录</span><br><span class="line">代表性关键字:<span class="keyword">insert</span> <span class="keyword">delete</span> <span class="keyword">update</span></span><br><span class="line">DCL 数据控制语言，用来定义访问权限和安全级别</span><br><span class="line">代表性关键字:<span class="keyword">grant</span> deny <span class="keyword">revoke</span></span><br><span class="line">DQL 数据查询语言，用来查询记录数据</span><br><span class="line">代表性关键字:<span class="keyword">select</span></span><br></pre></td></tr></table></figure><p><strong>面试题006：请详细描述char(4)和varchar(4)的差别</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span>长度是固定不可变的，<span class="type">varchar</span>长度是可变的（在设定内）比如同样写入cn字符，<span class="type">char</span>类型对应的长度是<span class="number">4</span>(cn+两个空格),但<span class="type">varchar</span>类型对应长度是<span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong>面试题007：如何创建一个utf8字符集的数据库mingongge？</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database mingongge<span class="built_in"> default </span>charset utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure><p><strong>面试题008：如何授权mingongge用户从172.16.1.0/24访问数据库。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> mingongge@<span class="string">'172.16.1.0/24'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><p><strong>面试题009：什么是MySQL多实例，如何配置MySQL多实例？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql多实例就是在同一台服务器上启用多个mysql服务，它们监听不同的端口，运行多个服务进程，它们相互独立，互不影响的对外提供服务，便于节约服务器资源与后期架构扩展</span><br><span class="line">多实例的配置方法有两种：</span><br><span class="line"><span class="number">1</span>、一个实例一个配置文件，不同端口</span><br><span class="line"><span class="number">2</span>、同一配置文件(my.cnf)下配置不同实例，基于mysqld_multi工具</span><br></pre></td></tr></table></figure><p><strong>面试题010：如何加强MySQL安全，请给出可行的具体措施？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、删除数据库不使用的默认用户</span><br><span class="line"><span class="number">2</span>、配置相应的权限（包括远程连接）</span><br><span class="line"><span class="number">3</span>、不可在命令行界面下输入数据库的密码</span><br><span class="line"><span class="number">4</span>、定期修改密码与加强密码的复杂度</span><br></pre></td></tr></table></figure><p><strong>面试题011：MySQL root密码忘了如何找回？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">参考前面的回答</span><br></pre></td></tr></table></figure><p><strong>面试题012：delete和truncate删除数据的区别？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">前者删除数据可以恢复，它是逐条删除速度慢</span><br><span class="line">后者是物理删除，不可恢复，它是整体删除速度快</span><br></pre></td></tr></table></figure><p><strong>面试题013：MySQL Sleep线程过多如何解决？</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、可以杀掉sleep进程，kill PID</span><br><span class="line">2、修改配置，重启服务</span><br><span class="line">[mysqld]</span><br><span class="line">wait_timeout = 600</span><br><span class="line"><span class="attribute">interactive_timeout</span>=30</span><br><span class="line"><span class="comment">#如果生产服务器不可随便重启可以使用下面的方法解决</span></span><br><span class="line"><span class="builtin-name">set</span> global <span class="attribute">wait_timeout</span>=600</span><br><span class="line"><span class="builtin-name">set</span> global <span class="attribute">interactive_timeout</span>=30;</span><br></pre></td></tr></table></figure><p><strong>面试题014：sort_buffer_size参数作用？如何在线修改生效？</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在每个<span class="keyword">connection</span>(<span class="keyword">session</span>)第一次连接时需要使用到，来提访问性能 </span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> sort_buffer_size = <span class="number">2</span>M</span><br></pre></td></tr></table></figure><p><strong>面试题015：如何在线正确清理MySQL binlog？</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">MySQL中的binlog日志记录了数据中的数据变动，便于对数据的基于时间点和基于位置的恢复</span><br><span class="line">但日志文件的大小会越来越大，点用大量的磁盘空间，因此需要定时清理一部分日志信息</span><br><span class="line">手工删除：</span><br><span class="line"></span><br><span class="line">首先查看主从库正在使用的binlog文件名称 </span><br><span class="line"><span class="keyword">show</span> <span class="keyword">master</span>(<span class="keyword">slave</span>) <span class="keyword">status</span>\G</span><br><span class="line">删除之前一定要备份</span><br><span class="line"><span class="keyword">purge</span> <span class="keyword">master</span> <span class="keyword">logs</span> <span class="keyword">before</span><span class="string">'2017-09-01 00:00:00'</span>; </span><br><span class="line"><span class="comment">#删除指定时间前的日志</span></span><br><span class="line"><span class="keyword">purge</span> <span class="keyword">master</span> <span class="keyword">logs</span> <span class="keyword">to</span><span class="string">'mysql-bin.000001'</span>;</span><br><span class="line"><span class="comment">#删除指定的日志文件</span></span><br><span class="line">自动删除：</span><br><span class="line">通过设置binlog的过期时间让系统自动删除日志</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'expire_logs_days'</span>; </span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> expire_logs_days = <span class="number">30</span>;</span><br><span class="line"><span class="comment">#查看过期时间与设置过期时间</span></span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="/2020/03/09/Mysql/mysql%E8%BF%90%E7%BB%B4%E5%BF%85%E4%BC%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/copycode.gif" alt="复制代码"></a></p><p><strong>面试题016：Binlog工作模式有哪些？各什么特点，企业如何选择？</strong></p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span><span class="keyword">Row</span>(行模式)；</span><br><span class="line">日志中会记录成每一行数据被修改的形式，然后在slave端再对相同的数据进行修改</span><br><span class="line"><span class="number">2.</span><span class="keyword">Statement</span>(语句模式)</span><br><span class="line">每一条修改的数据都会完整的记录到主库master的binlog里面，在slave上完整执行在master执行的<span class="keyword">sql</span>语句</span><br><span class="line"><span class="number">3.</span>mixed(混合模式)</span><br><span class="line">结合前面的两种模式，如果在工作中有使用函数 或者触发器等特殊功能需求的时候，使用混合模式</span><br><span class="line">数据量达到比较高时候，它就会选择 <span class="keyword">statement</span>模式，而不会选择<span class="keyword">Row</span> <span class="keyword">Level</span>行模式</span><br></pre></td></tr></table></figure><p><strong>面试题017：误操作执行了一个drop库SQL语句，如何完整恢复？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、停止主从复制，在主库上执行锁表并刷新binlog操作，接着恢复之前的全备文件（比如<span class="number">0</span>点的全备）</span><br><span class="line"><span class="number">2</span>、将<span class="number">0</span>点时的binlog文件与全备到故障期间的binlog文件合并导出成sql语句</span><br><span class="line">mysqlbinlog --no-defaults mysql-bin<span class="number">.000011</span> mysql-bin<span class="number">.000012</span> &gt;bin.sql</span><br><span class="line"><span class="number">3</span>、将导出的sql语句中drop语句删除，恢复到数据库中 </span><br><span class="line">mysql -uroot -pmysql123 &lt; bin.sql</span><br></pre></td></tr></table></figure><p><strong>面试题018：mysqldump备份使用了-A -B参数，如何实现恢复单表？</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-A 此参数作用是备份所有数据库（相当于--all-databases）</span></span><br><span class="line"><span class="deletion">-B databasename 备份指定数据（单库备份使用）</span></span><br></pre></td></tr></table></figure><p><strong>面试题019：详述MySQL主从复制原理及配置主从的完整步骤</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">主从复制的原理如下：</span><br><span class="line">主库开启binlog功能并授权从库连接主库，从库通过<span class="keyword">change</span> <span class="keyword">master</span>得到主库的相关同步信息,然后连接主库进行验证，主库IO线程根据从库<span class="keyword">slave</span>线程的请求，从master.info开始记录的位置点向下开始取信息，</span><br><span class="line">同时把取到的位置点和最新的位置与<span class="keyword">binlog</span>信息一同发给从库IO线程，从库将相关的<span class="keyword">sql</span>语句存放在relay-<span class="keyword">log</span>里面，最终从库的<span class="keyword">sql</span>线程将relay-<span class="keyword">log</span>里的<span class="keyword">sql</span>语句应用到从库上，至此整个同步过程完成，之后将是无限重复上述过程</span><br><span class="line">完整步骤如下：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、主库开启<span class="keyword">binlog</span>功能，并进行全备，将全备文件推送到从库服务器上</span><br><span class="line"><span class="number">2</span>、<span class="keyword">show</span> <span class="keyword">master</span> <span class="keyword">status</span>\G 记录下当前的位置信息及二进制文件名</span><br><span class="line"><span class="number">3</span>、登陆从库恢复全备文件</span><br><span class="line"><span class="number">4</span>、执行<span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span> 语句</span><br><span class="line"><span class="number">5</span>、执行<span class="keyword">start</span> <span class="keyword">slave</span> <span class="keyword">and</span> <span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span>\G</span><br></pre></td></tr></table></figure><p><strong>面试题020：如何开启从库的binlog功能？</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">修改配置文件加上下面的配置</span><br><span class="line"></span><br><span class="line"><span class="attribute">log_bin</span>=slave-bin</span><br><span class="line"><span class="attribute">log_bin_index</span>=slave-bin.index</span><br><span class="line">需要重启服务生效</span><br></pre></td></tr></table></figure><p><strong>面试题021：MySQL如何实现双向互为主从复制，并说明应用场景?</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">双向同步主要应用于解决单一主库写的压力，具体配置如下</span><br><span class="line">主库配置</span><br></pre></td></tr></table></figure><p>[mysqld]</p><p>auto_increment_increment = 2 #起始ID auto_increment_offset = 1 #ID自增间隔 log-slave-updates 从库配置</p><p>[mysqld]</p><p>auto_increment_increment = 2 #起始ID auto_increment_offset = 2 #ID自增间隔 log-slave-updates 主从库服务器都需要重启mysql服务</p><p><strong>面试题022：MySQL如何实现级联同步，并说明应用场景?</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">级联同步主要应用在从库需要做为其它数据库的主库</span><br><span class="line">在需要做级联同步的数据库配置文件增加下面的配置即可</span><br><span class="line"></span><br><span class="line"><span class="attribute">log_bin</span>=slave-bin</span><br><span class="line"><span class="attribute">log_bin_index</span>=slave-bin.index</span><br></pre></td></tr></table></figure><p><strong>面试题023：MySQL主从复制故障如何解决？</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">登陆从库</span><br><span class="line"></span><br><span class="line">1、执行<span class="keyword">stop</span> <span class="keyword">slave</span>;停止主从同步</span><br><span class="line">2、然后<span class="keyword">set</span> <span class="keyword">global</span> sql_slave_skip_counter = <span class="number">1</span>;跳过一步错误</span><br><span class="line">3、最后执行 <span class="keyword">start</span> <span class="keyword">slave</span>;并查看主从同步状态</span><br><span class="line"></span><br><span class="line">需要重新进行主从同步操作步骤如下</span><br><span class="line">进入主库</span><br><span class="line"></span><br><span class="line">1、进行全备数据库并刷新binlog,查看主库此的状态</span><br><span class="line">2、恢复全备文件到从库，然后执行<span class="keyword">change</span> <span class="keyword">master</span> </span><br><span class="line"><span class="number">3</span>、开启主从同步<span class="keyword">start</span> <span class="keyword">slave</span>;并查看主从同步状态</span><br></pre></td></tr></table></figure><p><strong>面试题024：如何监控主从复制是否故障?</strong></p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -ppassowrd -e <span class="string">"show slave status\G"</span> |<span class="type">grep</span> -E <span class="string">"Slave_IO_Running|Slave_SQL_Running"</span>|<span class="type">awk</span> '&#123;print $<span class="number">2</span>&#125;'|<span class="type">grep</span> -c Yes</span><br><span class="line">通过判断Yes的个数来监控主从复制状态，正常情况等于<span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong>面试题025：MySQL数据库如何实现读写分离？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、通过开发程序实现</span><br><span class="line"><span class="number">2</span>、通过其它工具实现（如mysql-mmm）</span><br></pre></td></tr></table></figure><p><strong>面试题026：生产一主多从从库宕机，如何手工恢复？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、执行stop slave 或者停止服务</span><br><span class="line"><span class="number">2</span>、修复好从库数据库</span><br><span class="line"><span class="number">3</span>、然后重新操作主库同步</span><br></pre></td></tr></table></figure><p><strong>面试题027：生产一主多从主库宕机，如何手工恢复？</strong></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、登陆各个从库停止同步，并查看谁的数据最新，将它设置为新主库让其它从库同步其数据</span><br><span class="line"><span class="number">2</span>、修复好主库之后，生新操作主从同步的步骤就可以了</span><br><span class="line"></span><br><span class="line"><span class="meta">#需要注意的新的主库如果之前是只读，需要关闭此功能让其可写</span></span><br><span class="line"><span class="meta">#需要在新从库创建与之前主库相同的同步的用户与权限</span></span><br><span class="line"><span class="meta">#其它从库执行change master to master_port=新主库的端口，start slave</span></span><br></pre></td></tr></table></figure><p><strong>面试题028：工作中遇到过哪些数据库故障，请描述2个例子？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、开发使用root用户在从库上写入数据造成主从数据不一致，并且前端没有展示需要修改的内容（仍旧是老数据）</span><br><span class="line"><span class="number">2</span>、内网测试环境服务器突然断电造成主从同步故障</span><br></pre></td></tr></table></figure><p><strong>面试题029：MySQL出现复制延迟有哪些原因？如何解决？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、需要同步的从库数据太多</span><br><span class="line"><span class="number">2</span>、从库的硬件资源较差，需要提升</span><br><span class="line"><span class="number">3</span>、网络问题，需要提升网络带宽</span><br><span class="line"><span class="number">4</span>、主库的数据写入量较大，需要优配置和硬件资源</span><br><span class="line"><span class="number">5</span>、sql语句执行过长导致，需要优化</span><br></pre></td></tr></table></figure><p><strong>面试题030：给出企业生产大型MySQL集群架构可行备份方案？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、双主多从，主从同步的架构，然后实行某个从库专业做为备份服务器</span><br><span class="line"><span class="number">2</span>、编写脚本实行分库分表进行备份，并加入定时任务</span><br><span class="line"><span class="number">3</span>、最终将备份服务推送至内网专业服务器，数据库服务器本地保留一周</span><br><span class="line"><span class="number">4</span>、备份服务器根据实际情况来保留备份数据（一般<span class="number">30</span>天）</span><br></pre></td></tr></table></figure><p><strong>面试题031：什么是数据库事务，事务有哪些特性？企业如何选择？</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据库事务是指逻辑上的一组<span class="keyword">sql</span>语句，组成这组操作的各个语句，执行时要么成功，要么失败</span><br><span class="line">特点：具有原子性、隔离性、持久性、一致性</span><br></pre></td></tr></table></figure><p><strong>面试题032：请解释全备、增备、冷备、热备概念及企业实践经验？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">全备：数据库所有数据的一次完整备份，也就是备份当前数据库的所有数据</span><br><span class="line">增备：就在上次备份的基础上备份到现在所有新增的数据</span><br><span class="line">冷备：停止服务的基础上进行备份操作</span><br><span class="line">热备：实行在线进行备份操作，不影响数据库的正常运行</span><br><span class="line">全备在企业中基本上是每周或天一次，其它时间是进行增量备份</span><br><span class="line">热备使用的情况是有两台数据库在同时提供服务的情况，针对归档模式的数据库</span><br><span class="line">冷备使用情况有企业初期，数据量不大且服务器数量不多，可能会执行某些库、表结构等重大操作时</span><br></pre></td></tr></table></figure><p><strong>面试题033：MySQL的SQL语句如何优化？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">建立主键与增加索引</span><br></pre></td></tr></table></figure><p><strong>面试题034：企业生产MySQL集群架构如何设计备份方案？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、集群架构可采用双主多从的模式，但实际双主只有一主在线提供服务，两台主之间做互备</span><br><span class="line"><span class="number">2</span>、另外的从可做读的负载均衡，然后将其中一台抽出专业做备份</span><br></pre></td></tr></table></figure><p><strong>面试题035：开发有一堆数据发给dba执行，DBA执行需注意什么？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、需要注意语句是否有格式上的错误，执行会出错导致过程中断</span><br><span class="line"><span class="number">2</span>、还需要注意语句的执行时间是否过长，是否会对服务器负载产生压力影响实际生产</span><br></pre></td></tr></table></figure><p><strong>面试题036：如何调整生产线中MySQL数据库的字符集。</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、首先导出库的表结构 -d 只导出表结构，然后批量替换</span><br><span class="line"><span class="number">2</span>、导出库中的所有数据（在不产生新数据的前提下）</span><br><span class="line"><span class="number">3</span>、然后全局替换<span class="keyword">set</span> names = xxxxx </span><br><span class="line"><span class="number">4</span>、删除原有库与表，并新创建出来，再导入建库与建表语句与所有数据</span><br></pre></td></tr></table></figure><p><strong>面试题037：请描述MySQL里中文数据乱码原理，如何防止乱码？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">服务器系统、数据库、客户端三方字符集不一致导致，需要统一字符</span><br></pre></td></tr></table></figure><p><strong>面试题038：企业生产MySQL如何优化（请多角度描述）？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、提升服务器硬件资源与网络带宽</span><br><span class="line"><span class="number">2</span>、优化mysql服务配置文件</span><br><span class="line"><span class="number">3</span>、开启慢查询日志然后分析问题所在</span><br></pre></td></tr></table></figure><p><strong>面试题039：MySQL高可用方案有哪些，各自特点，企业如何选择？</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">高可用方案有</span><br><span class="line"><span class="number">1</span>、主从架构</span><br><span class="line"><span class="number">2</span>、MySQL+MMM </span><br><span class="line"><span class="number">3</span>、MySQL+MHA </span><br><span class="line"><span class="number">4</span>、mysql+haproxy+drbd </span><br><span class="line"><span class="number">5</span>、mysql+proxy+amoeba</span><br></pre></td></tr></table></figure><p><strong>面试题040：如何批量更改数据库表的引擎？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">通过mysqldump命令备份出一个sql文件，再使用sed命令替换</span><br><span class="line">或者执行下面的脚本进行修改</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">user=root</span><br><span class="line">passwd=123456</span><br><span class="line">cmd=<span class="string">"mysql -u<span class="variable">$user</span> -p<span class="variable">$passwd</span> "</span></span><br><span class="line">dump=<span class="string">"mysqldump -u<span class="variable">$user</span> -p<span class="variable">$passwd</span>"</span></span><br><span class="line"><span class="keyword">for</span> database <span class="keyword">in</span> `<span class="variable">$cmd</span> -e <span class="string">"show databases;"</span>|sed <span class="string">'1,2d'</span>|egrep -v <span class="string">"mysql|performance_schema"</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> tables <span class="keyword">in</span> `dump -e <span class="string">"show tables from <span class="variable">$databses</span>;"</span>|sed <span class="string">'1d'</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="variable">$cmd</span> <span class="string">"alter table <span class="variable">$database</span>.<span class="variable">$tables</span> engine = MyISAm;"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL规范</title>
      <link href="/2020/03/09/Mysql/MySQL%E8%A7%84%E8%8C%83/"/>
      <url>/2020/03/09/Mysql/MySQL%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p><strong>一、数据库命令规范</strong></p><ul><li>所有数据库对象名称必须使用小写字母并用下划线分割</li></ul><a id="more"></a><ul><li>所有数据库对象名称禁止使用mysql保留关键字（如果表名中包含关键字查询时，需要将其用单引号括起来）</li><li>数据库对象的命名要能做到见名识意，并且最后不要超过32个字符</li><li>临时库表必须以tmp_为前缀并以日期为后缀，备份表必须以bak_为前缀并以日期(时间戳)为后缀</li><li>所有存储相同数据的列名和列类型必须一致（一般作为关联列，如果查询时关联列类型不一致会自动进行数据类型隐式转换，会造成列上的索引失效，导致查询效率降低）</li></ul><p><strong>二、数据库基本设计规范</strong></p><p>1、所有表必须使用Innodb存储引擎</p><p>没有特殊要求（即Innodb无法满足的功能如：列存储，存储空间数据等）的情况下，所有表必须使用Innodb存储引擎（mysql5.5之前默认使用Myisam，5.6以后默认的为Innodb）Innodb 支持事务，支持行级锁，更好的恢复性，高并发下性能更好</p><p>2、数据库和表的字符集统一使用UTF8</p><p>兼容性更好，统一字符集可以避免由于字符集转换产生的乱码，不同的字符集进行比较前需要进行转换会造成索引失效</p><p>3、所有表和字段都需要添加注释</p><p>使用comment从句添加表和列的备注 从一开始就进行数据字典的维护</p><p>4、尽量控制单表数据量的大小，建议控制在500万以内</p><p>500万并不是MySQL数据库的限制，过大会造成修改表结构，备份，恢复都会有很大的问题</p><p>可以用历史数据归档（应用于日志数据），分库分表（应用于业务数据）等手段来控制数据量大小</p><p>5、谨慎使用MySQL分区表</p><p>分区表在物理上表现为多个文件，在逻辑上表现为一个表 谨慎选择分区键，跨分区查询效率可能更低 建议采用物理分表的方式管理大数据</p><p>6、尽量做到冷热数据分离，减小表的宽度</p><p>MySQL限制每个表最多存储4096列，并且每一行数据的大小不能超过65535字节 减少磁盘IO,保证热数据的内存缓存命中率（表越宽，把表装载进内存缓冲池时所占用的内存也就越大,也会消耗更多的IO） 更有效的利用缓存，避免读入无用的冷数据 经常一起使用的列放到一个表中（避免更多的关联操作）</p><p>7、禁止在表中建立预留字段</p><p>预留字段的命名很难做到见名识义 预留字段无法确认存储的数据类型，所以无法选择合适的类型 对预留字段类型的修改，会对表进行锁定</p><p>8、禁止在数据库中存储图片，文件等大的二进制数据</p><p>通常文件很大，会短时间内造成数据量快速增长，数据库进行数据库读取时，通常会进行大量的随机IO操作，文件很大时，IO操作很耗时 通常存储于文件服务器，数据库只存储文件地址信息</p><p>9、禁止在线上做数据库压力测试</p><p>10、禁止从开发环境，测试环境直接连接生成环境数据库</p><p><strong>三、数据库字段设计规范</strong></p><p>1、优先选择符合存储需要的最小的数据类型</p><ul><li>原因</li></ul><p>列的字段越大，建立索引时所需要的空间也就越大，这样一页中所能存储的索引节点的数量也就越少也越少，在遍历时所需要的IO次数也就越多， 索引的性能也就越差</p><ul><li>方法</li></ul><p>1）将字符串转换成数字类型存储，如：将IP地址转换成整形数据。</p><p>mysql提供了两个方法来处理ip地址：</p><p>inet_aton 把ip转为无符号整型(4-8位)</p><p>inet_ntoa 把整型的ip转为地址</p><p>插入数据前，先用inet_aton把ip地址转为整型，可以节省空间。显示数据时，使用inet_ntoa把整型的ip地址转为地址显示即可。</p><p>2）对于非负型的数据（如自增ID、整型IP）来说，要优先使用无符号整型来存储</p><p>因为：无符号相对于有符号可以多出一倍的存储空间</p><p>SIGNED INT -2147483648~2147483647</p><p>UNSIGNED INT 0~4294967295</p><p>VARCHAR(N)中的N代表的是字符数，而不是字节数</p><p>使用UTF8存储255个汉字 Varchar(255)=765个字节。过大的长度会消耗更多的内存</p><p>2、避免使用TEXT、BLOB数据类型，最常见的TEXT类型可以存储64k的数据</p><ul><li>建议把BLOB或是TEXT列分离到单独的扩展表中</li></ul><p>Mysql内存临时表不支持TEXT、BLOB这样的大数据类型，如果查询中包含这样的数据，在排序等操作时，就不能使用内存临时表，必须使用磁盘临时表进行。</p><p>而且对于这种数据，Mysql还是要进行二次查询，会使sql性能变得很差，但是不是说一定不能使用这样的数据类型。</p><p>如果一定要使用，建议把BLOB或是TEXT列分离到单独的扩展表中，查询时一定不要使用select * 而只需要取出必要的列，不需要TEXT列的数据时不要对该列进行查询。</p><ul><li>TEXT或BLOB类型只能使用前缀索引</li></ul><p>因为MySQL对索引字段长度是有限制的，所以TEXT类型只能使用前缀索引，并且TEXT列上是不能有默认值的。</p><p>3、避免使用ENUM类型</p><ul><li>修改ENUM值需要使用ALTER语句</li><li>ENUM类型的ORDER BY操作效率低，需要额外操作</li><li>禁止使用数值作为ENUM的枚举值</li></ul><p>4、尽可能把所有列定义为NOT NULL</p><p>原因：</p><ul><li>索引NULL列需要额外的空间来保存，所以要占用更多的空间；</li><li>进行比较和计算时要对NULL值做特别的处理</li></ul><p>5、使用TIMESTAMP（4个字节）或DATETIME类型（8个字节）存储时间</p><p>TIMESTAMP 存储的时间范围 1970-01-01 00:00:01 ~ 2038-01-19-03:14:07。</p><p>TIMESTAMP 占用4字节和INT相同，但比INT可读性高</p><p>超出TIMESTAMP取值范围的使用DATETIME类型存储。</p><p>经常会有人用字符串存储日期型的数据（不正确的做法）：</p><ul><li>缺点1：无法用日期函数进行计算和比较</li><li>缺点2：用字符串存储日期要占用更多的空间</li></ul><p>6、同财务相关的金额类数据必须使用decimal类型</p><ul><li>非精准浮点：float,double</li><li>精准浮点：decimal</li></ul><p>Decimal类型为精准浮点数，在计算时不会丢失精度。占用空间由定义的宽度决定，每4个字节可以存储9位数字，并且小数点要占用一个字节。可用于存储比bigint更大的整型数据。</p><p><strong>四、索引设计规范</strong></p><p>1、限制每张表上的索引数量，建议单张表索引不超过5个</p><p>索引并不是越多越好！索引可以提高效率同样可以降低效率。</p><p>索引可以增加查询效率，但同样也会降低插入和更新的效率，甚至有些情况下会降低查询效率。</p><p>因为mysql优化器在选择如何优化查询时，会根据统一信息，对每一个可以用到的索引来进行评估，以生成出一个最好的执行计划，如果同时有很多个索引都可以用于查询，就会增加mysql优化器生成执行计划的时间，同样会降低查询性能。</p><p>2、禁止给表中的每一列都建立单独的索引</p><p>5.6版本之前，一个sql只能使用到一个表中的一个索引，5.6以后，虽然有了合并索引的优化方式，但是还是远远没有使用一个联合索引的查询方式好</p><p>3、每个Innodb表必须有个主键</p><p>Innodb是一种索引组织表：数据的存储的逻辑顺序和索引的顺序是相同的。</p><p>每个表都可以有多个索引，但是表的存储顺序只能有一种 Innodb是按照主键索引的顺序来组织表的。</p><p>不要使用更新频繁的列作为主键，不适用多列主键（相当于联合索引） 不要使用UUID、MD5、HASH、字符串列作为主键（无法保证数据的顺序增长）。</p><p>主键建议使用自增ID值。</p><p><strong>五、常见索引列建议</strong></p><ul><li>出现在SELECT、UPDATE、DELETE语句的WHERE从句中的列</li><li>包含在ORDER BY、GROUP BY、DISTINCT中的字段</li><li>并不要将符合1和2中的字段的列都建立一个索引，通常将1、2中的字段建立联合索引效果更好</li><li>多表join的关联列</li></ul><p><strong>六、如何选择索引列的顺序</strong></p><p>建立索引的目的是：希望通过索引进行数据查找，减少随机IO，增加查询性能 ，索引能过滤出越少的数据，则从磁盘中读入的数据也就越少。</p><ul><li>区分度最高的放在联合索引的最左侧（区分度=列中不同值的数量/列的总行数）；</li><li>尽量把字段长度小的列放在联合索引的最左侧（因为字段长度越小，一页能存储的数据量越大，IO性能也就越好）；</li><li>使用最频繁的列放到联合索引的左侧（这样可以比较少的建立一些索引）。</li></ul><p><strong>七、避免建立冗余索引和重复索引</strong></p><p>因为这样会增加查询优化器生成执行计划的时间。</p><ul><li>重复索引示例：primary key(id)、index(id)、unique index(id)</li><li>冗余索引示例：index(a,b,c)、index(a,b)、index(a)</li></ul><p>八、优先考虑覆盖索引</p><p>对于频繁的查询优先考虑使用覆盖索引。</p><p>覆盖索引：就是包含了所有查询字段(where,select,ordery by,group by包含的字段)的索引</p><p>覆盖索引的好处：</p><ul><li>避免Innodb表进行索引的二次查询</li></ul><p>Innodb是以聚集索引的顺序来存储的，对于Innodb来说，二级索引在叶子节点中所保存的是行的主键信息，</p><p>如果是用二级索引查询数据的话，在查找到相应的键值后，还要通过主键进行二次查询才能获取我们真实所需要的数据。而在覆盖索引中，二级索引的键值中可以获取所有的数据，避免了对主键的二次查询 ，减少了IO操作，提升了查询效率。</p><ul><li>可以把随机IO变成顺序IO加快查询效率</li></ul><p>由于覆盖索引是按键值的顺序存储的，对于IO密集型的范围查找来说，对比随机从磁盘读取每一行的数据IO要少的多，因此利用覆盖索引在访问时也可以把磁盘的随机读取的IO转变成索引查找的顺序IO。</p><p><strong>九、索引SET规范</strong></p><p>尽量避免使用外键约束</p><ul><li>不建议使用外键约束（foreign key），但一定要在表与表之间的关联键上建立索引；</li><li>外键可用于保证数据的参照完整性，但建议在业务端实现；</li><li>外键会影响父表和子表的写操作从而降低性能。</li></ul><p><strong>十、数据库SQL开发规范</strong></p><p>1、建议使用预编译语句进行数据库操作</p><p>预编译语句可以重复使用这些计划，减少SQL编译所需要的时间，还可以解决动态SQL所带来的SQL注入的问题 只传参数，比传递SQL语句更高效 相同语句可以一次解析，多次使用，提高处理效率。</p><p>2、避免数据类型的隐式转换</p><p>隐式转换会导致索引失效。如：select name,phone from customer where id = ‘111’;</p><p>3、充分利用表上已经存在的索引</p><ul><li>避免使用双%号的查询条件。</li></ul><p>如a like ‘%123%’，（如果无前置%,只有后置%，是可以用到列上的索引的）</p><ul><li>一个SQL只能利用到复合索引中的一列进行范围查询</li></ul><p>如：有 a,b,c列的联合索引，在查询条件中有a列的范围查询，则在b,c列上的索引将不会被用到，在定义联合索引时，如果a列要用到范围查找的话，就要把a列放到联合索引的右侧。</p><ul><li>使用left join或 not exists来优化not in操作</li></ul><p>因为not in 也通常会使用索引失效。</p><p>4、数据库设计时，应该要对以后扩展进行考虑</p><p>5、程序连接不同的数据库使用不同的账号，进制跨库查询</p><ul><li>为数据库迁移和分库分表留出余地</li><li>降低业务耦合度</li><li>避免权限过大而产生的安全风险</li></ul><p>6、禁止使用SELECT * 必须使用SELECT &lt;字段列表&gt; 查询</p><p>原因：</p><ul><li>消耗更多的CPU和IO以网络带宽资源</li><li>无法使用覆盖索引</li><li>可减少表结构变更带来的影响</li></ul><p>7、禁止使用不含字段列表的INSERT语句</p><p>如：insert into values (‘a’,’b’,’c’);</p><p>应使用insert into t(c1,c2,c3) values (‘a’,’b’,’c’);</p><p>8、避免使用子查询，可以把子查询优化为join操作</p><p>通常子查询在in子句中，且子查询中为简单SQL(不包含union、group by、order by、limit从句)时，才可以把子查询转化为关联查询进行优化。</p><p>子查询性能差的原因：</p><ul><li>子查询的结果集无法使用索引，通常子查询的结果集会被存储到临时表中，不论是内存临时表还是磁盘临时表都不会存在索引，所以查询性能会受到一定的影响；</li><li>特别是对于返回结果集比较大的子查询，其对查询性能的影响也就越大；</li><li>由于子查询会产生大量的临时表也没有索引，所以会消耗过多的CPU和IO资源，产生大量的慢查询。</li></ul><p>9、避免使用JOIN关联太多的表</p><p>对于Mysql来说，是存在关联缓存的，缓存的大小可以由join_buffer_size参数进行设置。</p><p>在Mysql中，对于同一个SQL多关联（join）一个表，就会多分配一个关联缓存，如果在一个SQL中关联的表越多，所占用的内存也就越大。</p><p>如果程序中大量的使用了多表关联的操作，同时join_buffer_size设置的也不合理的情况下，就容易造成服务器内存溢出的情况，就会影响到服务器数据库性能的稳定性。</p><p>同时对于关联操作来说，会产生临时表操作，影响查询效率Mysql最多允许关联61个表，建议不超过5个。</p><p>10、减少同数据库的交互次数</p><p>数据库更适合处理批量操作 合并多个相同的操作到一起，可以提高处理效率</p><p>11、对应同一列进行or判断时，使用in代替or</p><p>in的值不要超过500个in操作可以更有效的利用索引，or大多数情况下很少能利用到索引。</p><p>12、禁止使用order by rand() 进行随机排序</p><p>会把表中所有符合条件的数据装载到内存中，然后在内存中对所有数据根据随机生成的值进行排序，并且可能会对每一行都生成一个随机值，如果满足条件的数据集非常大，就会消耗大量的CPU和IO及内存资源。</p><p>推荐在程序中获取一个随机值，然后从数据库中获取数据的方式</p><p>13、WHERE从句中禁止对列进行函数转换和计算</p><p>对列进行函数转换或计算时会导致无法使用索引。</p><ul><li>不推荐：</li></ul><p>where date(create_time)=’20190101′</p><ul><li>推荐：</li></ul><p>where create_time &gt;= ‘20190101’ and create_time &lt; ‘20190102’</p><p>14、在明显不会有重复值时使用UNION ALL而不是UNION</p><ul><li>UNION会把两个结果集的所有数据放到临时表中后再进行去重操作</li><li>UNION ALL不会再对结果集进行去重操作</li></ul><p>15、拆分复杂的大SQL为多个小SQL</p><ul><li>大SQL：逻辑上比较复杂，需要占用大量CPU进行计算的SQL</li><li>MySQL：一个SQL只能使用一个CPU进行计算</li><li>SQL拆分后可以通过并行执行来提高处理效率</li></ul><p><strong>十一、数据库操作行为规范</strong></p><p>1、超100万行的批量写（UPDATE、DELETE、INSERT）操作，要分批多次进行操作</p><ul><li>大批量操作可能会造成严重的主从延迟</li></ul><p>主从环境中，大批量操作可能会造成严重的主从延迟，大批量的写操作一般都需要执行一定长的时间，而只有当主库上执行完成后，才会在其他从库上执行，所以会造成主库与从库长时间的延迟情况</p><ul><li>binlog日志为row格式时会产生大量的日志</li></ul><p>大批量写操作会产生大量日志，特别是对于row格式二进制数据而言，由于在row格式中会记录每一行数据的修改，我们一次修改的数据越多，产生的日志量也就会越多，日志的传输和恢复所需要的时间也就越长，这也是造成主从延迟的一个原因。</p><ul><li>避免产生大事务操作</li></ul><p>大批量修改数据，一定是在一个事务中进行的，这就会造成表中大批量数据进行锁定，从而导致大量的阻塞，阻塞会对MySQL的性能产生非常大的影响。</p><p>特别是长时间的阻塞会占满所有数据库的可用连接，这会使生产环境中的其他应用无法连接到数据库，因此一定要注意大批量写操作要进行分批。</p><p>2、对于大表使用pt-online-schema-change修改表结构</p><ul><li>避免大表修改产生的主从延迟</li><li>避免在对表字段进行修改时进行锁表</li></ul><p>对大表数据结构的修改一定要谨慎，会造成严重的锁表操作，尤其是生产环境，是不能容忍的。</p><p>pt-online-schema-change它会首先建立一个与原表结构相同的新表，并且在新表上进行表结构的修改，然后再把原表中的数据复制到新表中，并在原表中增加一些触发器。</p><p>把原表中新增的数据也复制到新表中，在行所有数据复制完成之后，把新表命名成原表，并把原来的表删除掉。</p><p>把原来一个DDL操作，分解成多个小的批次进行。</p><p>3、禁止为程序使用的账号赋予super权限</p><p>当达到最大连接数限制时，还运行1个有super权限的用户连接super权限只能留给DBA处理问题的账号使用。</p><p>4、对于程序连接数据库账号，遵循权限最小原则</p><p>程序使用数据库账号只能在一个DB下使用，不准跨库 程序使用的账号原则上不准有drop权限。</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL运维常用工具</title>
      <link href="/2020/03/09/Mysql/MySQL%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2020/03/09/Mysql/MySQL%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><ul><li><strong>如何不需要密码的登录，直接mysql</strong></li></ul><a id="more"></a><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">my</span>.cnf  或者写在 ~/.<span class="keyword">my</span>.cnf， 相对安全</span><br></pre></td></tr></table></figure><p>[mysql]</p><p>–表示： 只有mysql命令才能免密码 user=root password=123 socket=/tmp/mysql.sock</p><p>[mysqladmin]</p><p>–表示： 只有mysqladmin命令才能免密码 user=root password=123 socket=/tmp/mysql.sock</p><p>[mysqldump]</p><p>–表示： 只有mysqldump命令才能免密码 user=root password=123 socket=/tmp/mysql.sock</p><p>[client]</p><p>–表示：只要是客户端的命令，都是可以免密码的 user=root password=123 socket=/tmp/mysql.sock</p><h2 id="MySQL如何查看用户名密码"><a href="#MySQL如何查看用户名密码" class="headerlink" title="MySQL如何查看用户名密码"></a>MySQL如何查看用户名密码</h2><ul><li>MySQL5.7.6之前</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. <span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> $<span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line">2. <span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">Password</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><ul><li>MySQL5.7.6+</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. <span class="keyword">select</span> host,<span class="keyword">user</span>,authentication_string,password_lifetime,password_expired,password_last_changed <span class="keyword">from</span> mysql.<span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'lc_rx'</span>;</span><br></pre></td></tr></table></figure><h2 id="information-schema相关"><a href="#information-schema相关" class="headerlink" title="information_schema相关"></a>information_schema相关</h2><h3 id="如何在线kill掉满足某种条件的session"><a href="#如何在线kill掉满足某种条件的session" class="headerlink" title="如何在线kill掉满足某种条件的session"></a>如何在线kill掉满足某种条件的session</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DB_SYS: perl <span class="regexp">/home/</span>Keithlan<span class="regexp">/scripts/</span>outage<span class="regexp">/kill_connection/</span>kill_sleepconn_by_opt.pl -opt <span class="variable">$opt</span></span><br></pre></td></tr></table></figure><h3 id="PROCESSLIST"><a href="#PROCESSLIST" class="headerlink" title="PROCESSLIST"></a>PROCESSLIST</h3><ul><li><strong>分析出当前连接过来的客户端ip的分布情况</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> substring_index(host,<span class="string">':'</span>, <span class="number">1</span>) <span class="keyword">as</span> appip ,<span class="keyword">count</span>(*) <span class="keyword">as</span> <span class="keyword">count</span> <span class="keyword">from</span> information_schema.PROCESSLIST <span class="keyword">group</span> <span class="keyword">by</span> appip <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span> <span class="keyword">desc</span> ;</span><br></pre></td></tr></table></figure><ul><li><strong>分析处于Sleep状态的连接分布情况</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> substring_index(host,<span class="string">':'</span>, <span class="number">1</span>) <span class="keyword">as</span> appip ,<span class="keyword">count</span>(*) <span class="keyword">as</span> <span class="keyword">count</span> <span class="keyword">from</span> information_schema.PROCESSLIST <span class="keyword">where</span> COMMAND=<span class="string">'Sleep'</span> <span class="keyword">group</span> <span class="keyword">by</span> appip <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span> <span class="keyword">desc</span> ;</span><br></pre></td></tr></table></figure><ul><li><strong>分析哪些DB访问的比较多</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DB ,<span class="keyword">count</span>(*) <span class="keyword">as</span> <span class="keyword">count</span> <span class="keyword">from</span> information_schema.PROCESSLIST <span class="keyword">where</span> COMMAND=<span class="string">'Sleep'</span> <span class="keyword">group</span> <span class="keyword">by</span> DB <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span> <span class="keyword">desc</span> ;</span><br></pre></td></tr></table></figure><ul><li><strong>分析哪些用户访问的比较多</strong></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select<span class="built_in"> user </span>,count(*) as count <span class="keyword">from</span> information_schema.PROCESSLIST where <span class="attribute">COMMAND</span>=<span class="string">'Sleep'</span><span class="built_in"> group </span>by<span class="built_in"> user </span>order by count desc ;</span><br></pre></td></tr></table></figure><h3 id="TABLES"><a href="#TABLES" class="headerlink" title="TABLES"></a>TABLES</h3><ul><li><strong>列出大于10G以上的表</strong></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> TABLE_SCHEMA,<span class="built_in">TABLE_NAME</span>,TABLE_ROWS,ROUND((INDEX_LENGTH+DATA_FREE+DATA_LENGTH)/<span class="number">1024</span>/<span class="number">1024</span>/<span class="number">1024</span>) <span class="keyword">as</span> size_G <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> ROUND((INDEX_LENGTH+DATA_FREE+DATA_LENGTH)/<span class="number">1024</span>/<span class="number">1024</span>/<span class="number">1024</span>) &gt; <span class="number">10</span> <span class="keyword">order</span> <span class="keyword">by</span> size_G <span class="keyword">desc</span> ;</span><br></pre></td></tr></table></figure><h2 id="performance-schema相关"><a href="#performance-schema相关" class="headerlink" title="performance_schema相关"></a>performance_schema相关</h2><h3 id="performance-schema占用多少内存"><a href="#performance-schema占用多少内存" class="headerlink" title="performance_schema占用多少内存"></a>performance_schema占用多少内存</h3><blockquote><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F5.7%2Fen%2Fshow-engine.html" target="_blank" rel="noopener">http://dev.mysql.com/doc/refman/5.7/en/show-engine.html</a><br>SHOW ENGINE PERFORMANCE_SCHEMA STATUS;<br>For the Performance Schema as a whole, performance_schema.memory is the sum of all the memory used (the sum of all other memory values).</p></blockquote><h3 id="performance-schema-瓶颈"><a href="#performance-schema-瓶颈" class="headerlink" title="performance_schema 瓶颈"></a>performance_schema 瓶颈</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1) <span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'perf%'</span>;</span><br><span class="line">2) <span class="keyword">SHOW</span> <span class="keyword">STATUS</span> <span class="keyword">LIKE</span> <span class="string">'perf%'</span>;</span><br><span class="line">3) <span class="keyword">SHOW</span> <span class="keyword">ENGINE</span> PERFORMANCE_SCHEMA <span class="keyword">STATUS</span>\G</span><br><span class="line"></span><br><span class="line">详细细节：<span class="keyword">http</span>://keithlan.github.io/<span class="number">2015</span>/<span class="number">07</span>/<span class="number">17</span>/<span class="number">22</span>_performance_schema/</span><br></pre></td></tr></table></figure><h3 id="如何查看每个threads当前session变量的值"><a href="#如何查看每个threads当前session变量的值" class="headerlink" title="如何查看每个threads当前session变量的值"></a>如何查看每个threads当前session变量的值</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> performance_schema.variables_by_thread <span class="keyword">as</span> a,(<span class="keyword">select</span> THREAD_ID,PROCESSLIST_ID,PROCESSLIST_USER,PROCESSLIST_HOST,PROCESSLIST_COMMAND,PROCESSLIST_STATE <span class="keyword">from</span> performance_schema.threads <span class="keyword">where</span> PROCESSLIST_USER&lt;&gt;<span class="string">'NULL'</span>) <span class="keyword">as</span> b <span class="keyword">where</span> a.THREAD_ID = b.THREAD_ID and a.VARIABLE_NAME = <span class="string">'sql_safe_updates'</span></span><br></pre></td></tr></table></figure><h3 id="TOP-SQL-相关"><a href="#TOP-SQL-相关" class="headerlink" title="TOP SQL 相关"></a>TOP SQL 相关</h3><blockquote><p>能够解决什么问题： 可以找到某个表是否还有业务访问？<br>能够解决什么问题： 可以确定某个库，某个表的业务是否迁移干净？<br>能够解决什么问题： 可以用于分析业务是否异常？<br>能够解决什么问题： 根据TopN 可以分析压力？<br>能够解决什么问题： 可以用于分析哪些表是热点数据，这些TopN的表才是值得优化的表。只要每一条语句快0.01ms，那么1亿条呢？</p></blockquote><h4 id="实例中：-求SQL"><a href="#实例中：-求SQL" class="headerlink" title="实例中： 求SQL"></a>实例中： 求SQL</h4><ul><li><strong>一个实例中查询最多的TopN SQL</strong></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SCHEMA_NAME</span>,DIGEST_TEXT,COUNT_STAR,FIRST_SEEN,LAST_SEEN  <span class="keyword">from</span> performance_schema.events_statements_summary_by_digest <span class="keyword">where</span> DIGEST_TEXT <span class="keyword">like</span> <span class="string">'select%'</span> <span class="keyword">and</span> DIGEST_TEXT <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">'%SESSION%'</span> <span class="keyword">order</span> <span class="keyword">by</span> COUNT_STAR <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">10</span>\G</span><br></pre></td></tr></table></figure><ul><li><strong>一个实例中写入最多的TopN SQL</strong></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SCHEMA_NAME</span>,DIGEST_TEXT,COUNT_STAR,FIRST_SEEN,LAST_SEEN  <span class="keyword">from</span> performance_schema.events_statements_summary_by_digest <span class="keyword">where</span> DIGEST_TEXT <span class="keyword">like</span> <span class="string">'insert%'</span> <span class="keyword">or</span> DIGEST_TEXT <span class="keyword">like</span> <span class="string">'update%'</span><span class="keyword">or</span> DIGEST_TEXT <span class="keyword">like</span> <span class="string">'delete%'</span> <span class="keyword">or</span> DIGEST_TEXT <span class="keyword">like</span> <span class="string">'replace%'</span>  <span class="keyword">order</span> <span class="keyword">by</span> COUNT_STAR <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">10</span>\G</span><br></pre></td></tr></table></figure><h4 id="库中：-求SQL"><a href="#库中：-求SQL" class="headerlink" title="库中： 求SQL"></a>库中： 求SQL</h4><ul><li><strong>一个库中查询最多的TopN SQL</strong></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同上 实例中： 求<span class="keyword">SQL</span></span><br></pre></td></tr></table></figure><ul><li><strong>一个库中写入最多的TopN SQL</strong></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同上 实例中： 求<span class="keyword">SQL</span></span><br></pre></td></tr></table></figure><h4 id="实例中：求table"><a href="#实例中：求table" class="headerlink" title="实例中：求table"></a>实例中：求table</h4><ul><li><strong>使用说明</strong></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">usage: perl xx.pl -i 192.168.1.10 -p 3306 -e read|write|all 2&gt;/dev/<span class="literal">null</span> ;</span><br><span class="line">opt e:</span><br><span class="line"> read       <span class="builtin-name">get</span> select count</span><br><span class="line"> write      <span class="builtin-name">get</span> insert,update,delete count</span><br><span class="line"> all        <span class="builtin-name">get</span> all sql count</span><br><span class="line">opt i:</span><br><span class="line">  192.xx.xx.xx <span class="built_in"> ip </span>address</span><br><span class="line">opt p:</span><br><span class="line">  3306          db port</span><br></pre></td></tr></table></figure><ul><li><strong>查看一个实例中，哪个表的SQL语句 访问最多?</strong></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DB_SYS: perl get_table_from_sql<span class="selector-class">.pl</span> -<span class="selector-tag">i</span> <span class="variable">$ip</span> -<span class="selector-tag">p</span> <span class="variable">$port</span> -e all <span class="number">2</span>&gt; /dev/null</span><br></pre></td></tr></table></figure><ul><li><strong>查看一个实例中，哪个表的SQL语句 select【读】最多？</strong></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DB_SYS: perl get_table_from_sql<span class="selector-class">.pl</span> -<span class="selector-tag">i</span> <span class="variable">$ip</span> -<span class="selector-tag">p</span> <span class="variable">$port</span> -e read <span class="number">2</span>&gt; /dev/null</span><br></pre></td></tr></table></figure><ul><li><strong>查看一个实例中，哪个表的SQL语句 insert+update+delete+replace【写】最多？</strong></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DB_SYS: perl get_table_from_sql<span class="selector-class">.pl</span> -<span class="selector-tag">i</span> <span class="variable">$ip</span> -<span class="selector-tag">p</span> <span class="variable">$port</span> -e write <span class="number">2</span>&gt; /dev/null</span><br></pre></td></tr></table></figure><h3 id="Table-IO-相关的监控"><a href="#Table-IO-相关的监控" class="headerlink" title="Table IO 相关的监控"></a>Table IO 相关的监控</h3><h4 id="库级别"><a href="#库级别" class="headerlink" title="库级别"></a>库级别</h4><ul><li><strong>如何查看一个MySQL实例中哪个库的all latency时间最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(SUM_TIMER_READ) <span class="keyword">as</span> all_read_time,<span class="built_in">sum</span>(SUM_TIMER_WRITE) <span class="keyword">as</span> all_write_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_time  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>如何查看一个MySQL实例中哪个库的read latency时间最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(SUM_TIMER_READ) <span class="keyword">as</span> all_read_time,<span class="built_in">sum</span>(SUM_TIMER_WRITE) <span class="keyword">as</span> all_write_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_read_time  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>如何查看一个MySQL实例中哪个库的write latency时间最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(SUM_TIMER_READ) <span class="keyword">as</span> all_read_time,<span class="built_in">sum</span>(SUM_TIMER_WRITE) <span class="keyword">as</span> all_write_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_write_time  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>如何查看一个MySQL实例中哪个库的总访问量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_star  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>如何查看一个MySQL实例中哪个库的查询量(除了select中的fetchs外,还包括update，delete过程中的fetchs)最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_read  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>如何查看一个MySQL实例中哪个库的写入量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_write  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>如何查看一个MySQL实例中哪个库的update量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_update  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>如何查看一个MySQL实例中哪个库的insert量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_insert  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>如何查看一个MySQL实例中哪个库的delete量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,<span class="built_in">sum</span>(SUM_TIMER_WAIT) <span class="keyword">as</span> all_time,<span class="built_in">sum</span>(COUNT_STAR) <span class="keyword">as</span> all_star,<span class="built_in">sum</span>(COUNT_read) <span class="keyword">as</span> all_read ,<span class="built_in">sum</span>(COUNT_WRITE) <span class="keyword">as</span> all_write,<span class="built_in">sum</span>(COUNT_FETCH) <span class="keyword">as</span> all_fetch,<span class="built_in">sum</span>(COUNT_INSERT) <span class="keyword">as</span> all_insert,<span class="built_in">sum</span>(COUNT_UPDATE) <span class="keyword">as</span> all_update,<span class="built_in">sum</span>(COUNT_DELETE) <span class="keyword">as</span> all_delete  <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table   <span class="keyword">group</span> <span class="keyword">by</span> OBJECT_SCHEMA <span class="keyword">order</span> <span class="keyword">by</span> all_delete  <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h4 id="表级别"><a href="#表级别" class="headerlink" title="表级别"></a>表级别</h4><ul><li><strong>表的all latency时间(read + write)最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,SUM_TIMER_READ,SUM_TIMER_WRITE,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span> SUM_TIMER_WAIT <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li><strong>表的read latency(fetch)时间最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,SUM_TIMER_READ,SUM_TIMER_WRITE,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span> SUM_TIMER_READ <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li><strong>表的write latency 时间最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,SUM_TIMER_READ,SUM_TIMER_WRITE,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span> SUM_TIMER_WRITE <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li><strong>表的rows 总访问量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span> COUNT_STAR  <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li><strong>表的rows 查询量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span>  COUNT_read <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li><strong>表的rows 写入量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span>  COUNT_WRITE <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li><strong>表的rows update量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span>  COUNT_update <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li><strong>表的rows insert量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span>  COUNT_insert <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li><strong>表的rows delete量最大</strong></li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> OBJECT_SCHEMA,OBJECT_NAME,SUM_TIMER_WAIT,COUNT_STAR,COUNT_read,COUNT_WRITE,COUNT_UPDATE,COUNT_insert,COUNT_delete <span class="keyword">from</span> performance_schema.table_io_waits_summary_by_table  <span class="keyword">order</span> <span class="keyword">by</span>  COUNT_delete <span class="keyword">desc</span>  <span class="keyword">limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h2><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">* tshark 中的 -e参数有哪些内容请参考</span><br><span class="line">    http://www.wireshark.org/docs/dfref/</span><br><span class="line">    https://www.wireshark.org/docs/dfref/m/mysql.html</span><br><span class="line">    https://www.wireshark.org/docs/dfref/t/tcp.html</span><br><span class="line">    https://www.wireshark.org/docs/dfref/m/memcache.html</span><br><span class="line">    https://www.wireshark.org/docs/dfref/h/http.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* tshark: 抓取mysql tcp包，以及大小</span><br><span class="line">    tshark -i any -R 'tcp.port == 3306 &amp;&amp; mysql' -T fields -e tcp.port -e ip.addr -e mysql.query  -e mysql.packet_length -e tcp.len</span><br><span class="line">    tshark 高级版本将 -R 替换成了 -Y</span><br><span class="line"></span><br><span class="line">* tshark: 抓mysql包</span><br><span class="line">tshark -i any dst host $&#123;<span class="attribute">ip&#125; and dst port 3306 -l -d tcp.port==3306,mysql -T fields -e frame.time -e 'ip.src'  -e 'mysql.query' &gt; yy.tshark  --这种方式，会在/tmp/目录下创建很多临时文件，要小心，会产生磁盘报警。</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">* tshark -i any dst host $&#123;ip&#125; and dst port 3306 -l -d tcp.port==3306,mysql -T fields -e 'ip.src' -e 'tcp.srcport' -e 'mysql.schema'  -e 'mysql.query' -w yy.tshark  --类似于tcpdump。</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">nohup tshark -i any dst host $&#123;ip&#125; and dst port 3306 -l -d tcp.port==3306,mysql -a duration</span>:20  -T fields -e mysql<span class="variable">.schema</span> -e frame<span class="variable">.time</span> -e ip<span class="variable">.src</span> -e tcp<span class="variable">.srcport</span> -e mysql<span class="variable">.query</span> -w xx<span class="variable">.sql</span> &amp;  -- -a duration 当时间超过 20秒时，停止抓取。  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nohup tshark -i any dst host $&#123;ip&#125; and dst port 3306 -l -d tcp<span class="variable">.port</span>==3306,mysql -a filesize:2000000 -T fields -e mysql<span class="variable">.schema</span> -e frame<span class="variable">.time</span> -e ip<span class="variable">.src</span> -e tcp<span class="variable">.srcport</span> -e mysql<span class="variable">.query</span> -w xx<span class="variable">.sql</span> &amp;     注：当文件超过2G时，停止抓取。单位是Kilobyte。</span><br><span class="line"></span><br><span class="line">* 只抓取MySQL的包,不会有空格之类的了</span><br><span class="line">tshark -i any dst host $&#123;ip&#125; and dst port 3306 -l -a duration:10 -R 'mysql<span class="variable">.query</span>' -T fields -e 'ip<span class="variable">.src</span>'  -e 'mysql<span class="variable">.query</span>'</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==from gitlab http://gitlab<span class="variable">.corp</span><span class="variable">.anjuke</span><span class="variable">.com</span>/_incubator/knowledge/blob/master/tshark<span class="variable">.md</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* thark：解tcpdump包</span><br><span class="line">tshark -r xx<span class="variable">.tcpdump</span> -d tcp<span class="variable">.port</span>==3306,mysql -T fields -e mysql<span class="variable">.schema</span>  -e frame<span class="variable">.time</span> -e ip<span class="variable">.src</span> -e mysql<span class="variable">.query</span>  &gt; test<span class="variable">.tshark</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 案例一、 memcache</span><br><span class="line">    # 需要使用 -d 让 tshark 认为 11213 是使用的 memcache 协议，否则 tshark 默认是将 11211 认为是 memcache 协议</span><br><span class="line">    ~ tshark -i eth0 -d tcp<span class="variable">.port</span>==11213,memcache -R 'tcp<span class="variable">.dstport</span> == 11213 &amp;&amp; memcache'</span><br><span class="line"></span><br><span class="line">* 案例二、 mysql</span><br><span class="line">    ~ tshark -i eth0 -R 'tcp<span class="variable">.port</span> == 3306 &amp;&amp; mysql<span class="variable">.query</span>' -T fields -e frame<span class="variable">.time</span> -e 'ip<span class="variable">.src</span>'  -e 'mysql<span class="variable">.query</span>'</span><br><span class="line"></span><br><span class="line">* 案例三、http</span><br><span class="line">    ~ tshark -i eth0 -R 'tcp<span class="variable">.port</span> == 80 &amp;&amp; http'</span><br><span class="line"></span><br><span class="line">    # 这个命令非常有用，当我们的程序非常慢，但是有没有打印任何日志时，我们怀疑可能是某个 http 请求慢了，可以用这个命令检查</span><br><span class="line">    # http<span class="variable">.time</span> 表示整个 http请求 消耗的时间</span><br><span class="line">    # http<span class="variable">.response</span><span class="variable">.code</span> 200、403、500 等</span><br><span class="line">    # tcp<span class="variable">.analysis</span><span class="variable">.initial_rtt</span> tcp 三次握手时间</span><br><span class="line">    # tcp<span class="variable">.stream</span> tshark 针对每一个5元组，都有一个编号，根据这个编号，可以方便的查到整个会话过程的所有请求 src<span class="variable">.ip</span>,src<span class="variable">.port</span>,tcp,dst<span class="variable">.ip</span>,dst<span class="variable">.port</span>，例如在这里，可以根据这个编号，找到请求所对应的 http<span class="variable">.response</span><span class="variable">.code</span> ,因为在并发很高的时候，2个记录不一定紧挨着</span><br><span class="line"></span><br><span class="line">    ~ tshark -i eth0 -R 'http &amp;&amp; tcp<span class="variable">.port</span> == 80' -T fields -e tcp<span class="variable">.analysis</span><span class="variable">.initial_rtt</span> -e frame<span class="variable">.time</span> -e ip<span class="variable">.addr</span> -e tcp<span class="variable">.port</span> -e http<span class="variable">.request</span><span class="variable">.uri</span> -e tcp<span class="variable">.stream</span> -e http<span class="variable">.response</span><span class="variable">.code</span> -e http<span class="variable">.time</span></span><br><span class="line"></span><br><span class="line">* 案例四、tcp</span><br><span class="line">    # 检查是否有tcp 包重传</span><br><span class="line">    ~ tshark -i eth0 -R 'tcp<span class="variable">.analysis</span><span class="variable">.retransmission</span>'</span><br></pre></td></tr></table></figure><h2 id="slow-query优化–切忌：不要在master进行分析和调优，在没有业务的机器上或者etl上分析诊断"><a href="#slow-query优化–切忌：不要在master进行分析和调优，在没有业务的机器上或者etl上分析诊断" class="headerlink" title="slow query优化–切忌：不要在master进行分析和调优，在没有业务的机器上或者etl上分析诊断"></a>slow query优化–切忌：不要在master进行分析和调优，在没有业务的机器上或者etl上分析诊断</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) 先搞清楚时间到底花在哪里&amp;&amp;为什么时间会花在那  （<span class="keyword">show</span> profile）</span><br><span class="line">   <span class="number">1.1</span> ) 主要工具和方法就是profiling</span><br><span class="line">   <span class="number">1.2</span> ) 整个性能优化，应该花<span class="number">90</span>%的时间在测量上面，只有这样才能够对症下药</span><br><span class="line">   <span class="number">1.3</span> ) 通过<span class="keyword">show</span> profile 可以知道，时间都花在哪里</span><br><span class="line">   <span class="number">1.4</span> ）通过<span class="keyword">session</span>级别的status，可以知道为什么时间会花在那里</span><br><span class="line">       flush status;</span><br><span class="line">       <span class="keyword">select</span> xx <span class="keyword">from</span> tt <span class="keyword">where</span> ff ;</span><br><span class="line">       <span class="keyword">show</span> status <span class="keyword">where</span> variable_name <span class="keyword">like</span> <span class="string">'Handler%'</span> <span class="keyword">or</span> Variable_name <span class="keyword">like</span> <span class="string">'Created%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 完成一项任务的时间分两个部分  执行时间和等待时间</span><br><span class="line">   如何优化执行时间呢 <span class="comment">--比较简单？</span></span><br><span class="line">   <span class="number">2.1</span>) 降低子任务数量</span><br><span class="line">   <span class="number">2.2</span>) 降低子任务的执行频率</span><br><span class="line">   <span class="number">2.3</span>) 提升子任务的执行效率并且判断任务在什么时间执行最长</span><br><span class="line"></span><br><span class="line">   如何优化等待时间呢 <span class="comment">--比较复杂？</span></span><br><span class="line">   <span class="number">2.4</span>) 一般是由于资源竞争导致，要用合适的工具找到竞争点。</span><br><span class="line">       <span class="number">2.5</span>) 判断任务在什么地方被阻塞的时间最长。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 通过slow，可以找到值得优化的<span class="keyword">SQL</span></span><br><span class="line">   awk <span class="string">'/^# Time:/&#123;print $3, $4, c;c=0&#125;/^# User/&#123;c++&#125;'</span> dbbak10<span class="number">-001</span>-slow.<span class="keyword">log</span>    <span class="comment">--可以统计出每个时间点的slow 数量，精度比较细</span></span><br><span class="line"><span class="number">3.1</span>) 执行总时间最多的<span class="keyword">SQL</span></span><br><span class="line"><span class="number">3.2</span>) 单条<span class="keyword">SQL</span>执行时间最多的<span class="keyword">SQL</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 三种轻量级别的<span class="keyword">SQL</span>抓取  <span class="keyword">show</span> processlist  &amp;  tcpdump  &amp; slow-query   解析工具可以用：pt-query-digest 解析tcpdump和slow query</span><br><span class="line">   msyql -e <span class="string">'show proceslist\G'</span> | grep State: | sort | uniq -c | sort -rn     <span class="comment">--轻量级 （show processlist &amp;&amp; show status）</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 找到最需要优化的<span class="keyword">SQL</span>后，可以开始跟踪分析单条<span class="keyword">SQL</span>来获得更加底层实际的东 西，目前最好的三种方法是a）<span class="keyword">show</span> profile b）<span class="keyword">show</span> status c）slow query条目</span><br><span class="line">a）<span class="keyword">show</span> profile</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">set</span> profiling=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">table</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">show</span> profiles;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">show</span> profile <span class="keyword">for</span> query <span class="number">1</span>;</span><br><span class="line">格式化输出：</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">set</span> @query_id = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">SELECT</span> STATE,SUM(DURATION) <span class="keyword">AS</span> Total_R,</span><br><span class="line">        ROUND(</span><br><span class="line">       <span class="number">100</span>*SUM(DURATION) /</span><br><span class="line">         (<span class="keyword">SELECT</span> SUM(DURATION)</span><br><span class="line">           <span class="keyword">FROM</span> INFORMATION_SCHEMA.PROFILING</span><br><span class="line">           <span class="keyword">WHERE</span> QUERY_ID = @query_id</span><br><span class="line">             ), <span class="number">2</span>) <span class="keyword">AS</span> Pct_R,</span><br><span class="line">    COUNT(*) <span class="keyword">AS</span> CallS,</span><br><span class="line">        SUM(DURATION) / COUNT(*) <span class="keyword">AS</span> "R/CALL"</span><br><span class="line">     <span class="keyword">FROM</span> INFORMATION_SCHEMA.PROFILING</span><br><span class="line">     <span class="keyword">WHERE</span> QUERY_ID = @query_id</span><br><span class="line">     <span class="keyword">GROUP</span> <span class="keyword">BY</span> STATE</span><br><span class="line">     <span class="keyword">ORDER</span> <span class="keyword">BY</span> Total_R <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line">当然，通过<span class="keyword">show</span> profile 可以知道时间主要花在什么地方，但是你不知道为什么 会花在那些地方？这是时候就必须要跟踪堆栈来找到进一步的原因了。</span><br><span class="line"></span><br><span class="line">查看是否使用了磁盘临时表还是内存临时表：</span><br><span class="line">flush status;</span><br><span class="line"><span class="keyword">sql</span>;</span><br><span class="line"><span class="keyword">show</span> status <span class="keyword">where</span> variable_name <span class="keyword">like</span> <span class="string">'Handler%'</span> <span class="keyword">or</span> variable_name <span class="keyword">like</span> <span class="string">'Created%'</span>;</span><br><span class="line"></span><br><span class="line">b) <span class="keyword">show</span> status</span><br><span class="line"><span class="keyword">SQL</span>&gt; 句柄计数器 <span class="keyword">handler</span> counter,临时文件，表计数器</span><br><span class="line"><span class="keyword">SQL</span>&gt;  flush status ; 刷新绘画级别的状态值。</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">table</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">show</span> status <span class="keyword">where</span> variable_name <span class="keyword">like</span> <span class="string">'Handler%'</span> <span class="keyword">or</span> Variable_name <span class="keyword">like</span> <span class="string">'Created%'</span>;  <span class="comment">--可以看到是否利用了磁盘临时表，而explain是无法看到的。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> 监控点  <span class="comment">-- 通过监控状态数据可以发现哪些地方是异常的，然后再具体分析异 常时间点的日志。</span></span><br><span class="line">a）<span class="keyword">show</span> <span class="keyword">global</span> status;   <span class="comment">--开销比较低</span></span><br><span class="line">b）<span class="keyword">show</span> processlist | grep state;   或者使用innotop <span class="comment">--开销比较低</span></span><br><span class="line">c）slow query + pt-query-digest</span><br><span class="line">d）<span class="keyword">show</span> innoDB status;</span><br><span class="line">e) vmstat</span><br><span class="line">f) iostat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">7.</span> 关于索引统计</span><br><span class="line">    发生过一件事情，<span class="keyword">show</span> <span class="keyword">table</span> status看到的大小<span class="number">100</span>M，但是实际物理大小<span class="number">10</span>G，通过这个发型索引统计有的时候非常不准确    </span><br><span class="line">    这里简单介绍下：  </span><br><span class="line"></span><br><span class="line">    innodb_stats_persistent=<span class="keyword">on</span> ,  db重启后不会清空，不需要重新收集  </span><br><span class="line">    innodb_stats_persistent=<span class="keyword">off</span>， db重启后统计信息清空，需要重新收集统计  </span><br><span class="line">    <span class="number">1</span>、针对是否持久化统计信息mysql可以通过innodb_stats_persistent参数来控制  </span><br><span class="line">　　<span class="number">2</span>、针对统计信息的时效性，mysql通过innodb_stats_auto_recalc参数来控制是否自动更新  </span><br><span class="line">　　<span class="number">3</span>、针对统计信息的准确性，mysql通过innodb_stats_persistent_sample_pages 参数来控制更新  </span><br><span class="line">    <span class="number">4</span>、mysql通过<span class="keyword">analyze</span> <span class="keyword">table</span> 语句来手动的更新统计信息  </span><br><span class="line">    <span class="number">5</span>、mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> innodb_table_stats; last_update可以查看索引统计的最后更新时间    </span><br><span class="line">    <span class="number">6</span>、当索引统计不准确的时候，可以通过<span class="keyword">analyze</span> <span class="keyword">table</span>来更新索引统计信息，让执行计划更加准确。    </span><br><span class="line">        如果这样做后，执行计划还是不准确，那么可以试图调大innodb_stats_persistent_sample_pages，让索引页收集的更加多，让执行计划更准确    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">8.</span> 关于索引选择性:  字段<span class="number">1</span> building_id，字段<span class="number">2</span> status  </span><br><span class="line">    单索引字段的索引选择性： <span class="keyword">select</span> count(<span class="keyword">distinct</span> building_id)/count(*) <span class="keyword">as</span> selectivity <span class="keyword">from</span> community_units;     </span><br><span class="line">    组合索引的索引选择性：   <span class="keyword">select</span> count(<span class="keyword">distinct</span> (concat(building_id,status)))/count(*) <span class="keyword">as</span> selectivity <span class="keyword">from</span> community_units;    </span><br><span class="line">    组合前缀的索引选择性：   <span class="keyword">select</span> count(<span class="keyword">distinct</span> (concat(building_id,left(status,<span class="number">2</span>))))/count(*) <span class="keyword">as</span> selectivity <span class="keyword">from</span> community_units;     </span><br><span class="line">    得到的结果越接近<span class="number">1</span>，效果越好</span><br></pre></td></tr></table></figure><h2 id="cpu-模式调节"><a href="#cpu-模式调节" class="headerlink" title="cpu 模式调节"></a>cpu 模式调节</h2><blockquote><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fwiki.archlinux.org%2Findex.php%2FCPU_frequency_scaling" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/CPU_frequency_scaling</a></p></blockquote><ul><li><strong>有哪几种模式</strong></li></ul><table><thead><tr><th align="left">Governor</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">ondemand</td><td align="left">Dynamically switch between CPU(s) available if at 95% cpu load</td></tr><tr><td align="left">performance</td><td align="left">Run the cpu at max frequency</td></tr><tr><td align="left">conservative</td><td align="left">Dynamically switch between CPU(s) available if at 75% load</td></tr><tr><td align="left">powersave</td><td align="left">Run the cpu at the minimum frequency</td></tr><tr><td align="left">userspace</td><td align="left">Run the cpu at user specified frequencies</td></tr></tbody></table><ul><li><strong>如何查看当前的cpu模式</strong></li></ul><blockquote><p>cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</p></blockquote><ul><li><strong>如何查看cpu支持哪几种模式</strong></li></ul><blockquote><p>cat /sys/devices/system/cpu/cpu2/cpufreq/scaling_available_governors</p></blockquote><ul><li><strong>如何设置</strong></li></ul><ol><li>bios里面设置</li><li>os设置</li></ol><h2 id="NC-传送"><a href="#NC-传送" class="headerlink" title="NC 传送"></a>NC 传送</h2><hr><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">传送文件</span><br><span class="line">目的主机监听</span><br><span class="line">nc -l 监听端口&lt;未使用端口&gt;  &gt; 要接收的文件名</span><br><span class="line">nc -l 4444 &gt; cache.tar.gz</span><br><span class="line"><span class="code"> </span></span><br><span class="line">源主机发起请求</span><br><span class="line">nc  目的主机ip    目的端口 &lt; 要发送的文件</span><br><span class="line">nc  192.168.0.85  4444 &lt; /root/cache.tar.gz</span><br><span class="line">=============================================</span><br><span class="line"></span><br><span class="line">==传送文件夹==</span><br><span class="line">接收方的命令：</span><br><span class="line">nc -l $&#123;ip&#125; 4444 | tar xf -</span><br><span class="line"></span><br><span class="line">传送方的命令：</span><br><span class="line">tar -cvf - ppc<span class="emphasis">_* | nc $&#123;ip&#125; 4444</span></span><br></pre></td></tr></table></figure><h2 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">核心算法：http:<span class="comment">//www.oschina.net/question/28_54213?fromerr=DHoiMICG  </span></span><br><span class="line">小bug：如果rsync一段时间，突然不传了，且流量中断，不妨加上这个参数试试  /usr/bin/rsync --sockopts=SO_RCVBUF=10485760   </span><br><span class="line"></span><br><span class="line">配置：/etc/rsyncd.<span class="keyword">conf</span></span><br><span class="line">uid = root</span><br><span class="line">gid = root</span><br><span class="line"><span class="keyword">use</span> chroot = <span class="keyword">no</span></span><br><span class="line">max connections = 64</span><br><span class="line">pid <span class="keyword">file</span> = /<span class="keyword">var</span>/<span class="keyword">run</span>/rsyncd.pid</span><br><span class="line">lock <span class="keyword">file</span> = /<span class="keyword">var</span>/<span class="keyword">run</span>/rsync.lock</span><br><span class="line"><span class="keyword">log</span> <span class="keyword">file</span> = /<span class="keyword">var</span>/<span class="keyword">log</span>/rsyncd.<span class="keyword">log</span></span><br></pre></td></tr></table></figure><p>[dbbak]</p><p>path = /data/dbbackup use chroot = no ignore errors read only = no list = no [Binlog] path = /data/BINLOG_BACKUP use chroot = no ignore errors read only = no list = no</p><p>[fullbak]</p><p>path = /data/FULL_BACKUP use chroot = no ignore errors read only = no list = no 启动： /usr/bin/rsync –daemon 限速100k/s传输 ： /usr/bin/rsync -av –progress –update –bwlimit=100 –checksum –compress $file root@$ip::dbbak 正常传输： /usr/bin/rsync -av –progress $file root@$ip::dbbak</p><h2 id="pigz使用"><a href="#pigz使用" class="headerlink" title="pigz使用"></a>pigz使用</h2><ul><li><strong>常用知识普及</strong></li></ul><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">错误的写法：nohup tar -cvf - xx_20151129 | pigz  -p <span class="number">24</span> &gt; xx_20151129.tar.gz &amp; <span class="comment">--一定不能加nohup，因为中间有管道符，不能传递下去的</span></span><br><span class="line">错误的代价：</span><br><span class="line">    tar: This does <span class="keyword">not</span> look like a tar archive</span><br><span class="line">    tar: Skipping <span class="keyword">to</span> <span class="keyword">next</span> header</span><br><span class="line">    tar: Exiting <span class="keyword">with</span> <span class="literal">failure</span> status due <span class="keyword">to</span> previous errors</span><br><span class="line">以上错误的案例中，为此付出过很大的代价，哭晕在厕所N次了...</span><br><span class="line"></span><br><span class="line">正确的写法：  tar -cvf - xx_20151129 | pigz  -p <span class="number">24</span> &gt; xx_20151129.tar.gz &amp;</span><br></pre></td></tr></table></figure><ul><li><strong>用法</strong></li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">* 压缩</span></span><br><span class="line">tar cvf - 目录名 | pigz -9 -p 24 &gt; <span class="keyword">file</span>.tgz</span><br><span class="line">pigz：用法-9是压缩比率比较大，-p是指定cpu的核数。</span><br><span class="line"></span><br><span class="line"><span class="comment">* 解压1</span></span><br><span class="line">pigz -<span class="keyword">d</span> <span class="keyword">file</span>.tgz</span><br><span class="line">tar -xf --<span class="keyword">format</span>=posix <span class="keyword">file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">* 解压2</span></span><br><span class="line">tar xf <span class="keyword">file</span>.tgz</span><br></pre></td></tr></table></figure><h2 id="axel-amp-httpd-多线程数据传输"><a href="#axel-amp-httpd-多线程数据传输" class="headerlink" title="axel &amp; httpd 多线程数据传输"></a>axel &amp; httpd 多线程数据传输</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">* axel 下载&amp;安装</span></span><br><span class="line">wget -c http:<span class="comment">//pkgs.repoforge.org/axel/axel-2.4-1.el5.rf.x86_64.rpm</span></span><br><span class="line">rpm -ivh axel-2.4-1.el5.rf.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">* axel 核心参数</span></span><br><span class="line">-<span class="keyword">n</span>   指定线程数</span><br><span class="line">-o   指定另存为目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">* httpd服务搭建与配置</span></span><br><span class="line"></span><br><span class="line">    yum install httpd</span><br><span class="line"></span><br><span class="line"><span class="comment">* httpd配置主目录</span></span><br><span class="line">    /etc/httpd/<span class="keyword">conf</span>/httpd.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>[xx html]</p><p># cat /etc/httpd/conf/httpd.conf | grep DocumentRoot # DocumentRoot: The directory out of which you will serve your #DocumentRoot “/var/www/html” –注释 DocumentRoot “/data/dbbackup/html” –配置成容量大的地址 * 开启httpd服务 service httpd restart * 下载数据 目的地ip shell&gt; nohup axel -n 10 -v -o /data/dbbackup/ http://$数据源ip/xx_20151129.tar.gz &amp;</p><h2 id="git-基本"><a href="#git-基本" class="headerlink" title="git 基本"></a>git 基本</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> git add xx</span><br><span class="line"><span class="number">2.</span> git commit -m <span class="string">'xx'</span></span><br><span class="line"><span class="number">3.</span> git pull</span><br><span class="line"><span class="number">4.</span> git push</span><br></pre></td></tr></table></figure><h2 id="如何模拟网络延迟或丢包"><a href="#如何模拟网络延迟或丢包" class="headerlink" title="如何模拟网络延迟或丢包"></a>如何模拟网络延迟或丢包</h2><ul><li>模拟网络eth0 timeout 1000ms</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tc qdisc <span class="keyword">add</span><span class="bash"> dev eth0 root netem delay 1000ms</span></span><br></pre></td></tr></table></figure><ul><li>模拟网络eth0丢包率 10%</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tc qdisc <span class="keyword">add</span><span class="bash"> dev eth0 root netem loss 10%</span></span><br></pre></td></tr></table></figure><ul><li>删除以上tc命令导致的网络延迟或者丢包规则</li></ul><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tc qdisc <span class="built_in">del</span> dev eth0 root</span><br></pre></td></tr></table></figure><h2 id="如何模拟网络故障"><a href="#如何模拟网络故障" class="headerlink" title="如何模拟网络故障"></a>如何模拟网络故障</h2><ul><li>host1 网络断掉，只允许host2 访问</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">host1&gt; iptables -A INPUT -p tcp -s host2  -j ACCEPT</span><br><span class="line">host1&gt; iptables -A INPUT -p tcp -s <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> -j DROP</span><br></pre></td></tr></table></figure><ul><li>host1 网络断掉，只允许host2的22端口访问</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">host1&gt; iptables -A INPUT -p tcp -s host2 --dport <span class="number">22</span>  -j ACCEPT</span><br><span class="line">host1&gt; iptables -A INPUT -p tcp -s <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> -j DROP</span><br></pre></td></tr></table></figure><ul><li>恢复host1 网络</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host1&gt;<span class="built_in"> service </span>iptables restart</span><br></pre></td></tr></table></figure><h2 id="ansible-基础知识"><a href="#ansible-基础知识" class="headerlink" title="ansible 基础知识"></a>ansible 基础知识</h2><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">官方： <span class="string">http:</span><span class="comment">//docs.ansible.com/</span></span><br><span class="line">个人： <span class="string">http:</span><span class="comment">//sofar.blog.51cto.com/353572/1579894</span></span><br></pre></td></tr></table></figure><h3 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h3><ul><li>ssh互信</li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) 不需要加入key，也能登陆到所有机器</span><br><span class="line"><span class="number">2</span>）前提是：</span><br><span class="line">    ssh-<span class="built_in">add</span> <span class="comment">--mac本地，线下，将私钥加入到内存</span></span><br><span class="line">    ssh -A root@xx ；  <span class="comment">--会将私钥传送到远端机器</span></span><br><span class="line">    ssh-<span class="built_in">add</span> -L 查看下。 <span class="comment">--查看私钥是否传送过来</span></span><br></pre></td></tr></table></figure><ul><li>yaml</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- <span class="string">hosts:</span> etl</span><br><span class="line"><span class="symbol">  remote_user:</span> root</span><br><span class="line"><span class="symbol">  tasks:</span></span><br><span class="line">        - <span class="string">shell:</span> cat <span class="regexp">/home/</span>mysql/xx.pl</span><br><span class="line">        - <span class="string">copy:</span> src=files<span class="regexp">/rsync dest=/</span>usr<span class="regexp">/bin/</span></span><br><span class="line">        - <span class="string">template:</span> src=files<span class="regexp">/xx.pl dest=/</span>home<span class="regexp">/mysql/</span></span><br></pre></td></tr></table></figure><ul><li>hosts</li></ul><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[test1]</span><br><span class="line"><span class="number">10.</span><span class="symbol">x</span>.<span class="symbol">x</span>.<span class="symbol">x</span> bak_dest_ip=<span class="number">10.</span><span class="symbol">y</span>.<span class="symbol">y</span>.<span class="symbol">y</span> bak_source_port=xx</span><br></pre></td></tr></table></figure><p>[etl]</p><p>10.x.x.x bak_dest_ip=10.y.y.y bak_source_port=xx</p><ul><li>files</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*<span class="selector-class">.pl</span></span><br><span class="line">*<span class="selector-class">.file</span></span><br></pre></td></tr></table></figure><ul><li>常用语法</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">* 命令中如果有管道等多种命令，需要用bash -c ，并且引号起来</span></span><br><span class="line"><span class="comment">* -T：ping延迟时间 -f：线程数 -i：后面接hosts文件，xx标签  -m：command 命令模式 -a：命令内容</span></span><br><span class="line">ansible -T <span class="number">2</span> -f <span class="number">1</span> -i ./hosts etl -m command -a <span class="string">"bash -c 'cat /home/mysql/xx.pl |grep bin/rsync'"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">* playbook方式跑ansible</span></span><br><span class="line"></span><br><span class="line">ansible-playbook -i ./hosts rsync.yaml</span><br></pre></td></tr></table></figure><h2 id="网络流量诊断"><a href="#网络流量诊断" class="headerlink" title="网络流量诊断"></a>网络流量诊断</h2><ul><li><strong>tools</strong></li></ul><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">* ifstat</span><br><span class="line"></span><br><span class="line">* iftop</span><br><span class="line"></span><br><span class="line">iftop -nNP -i tunl1 —看出口流量</span><br><span class="line">iftop -nNP —看看整体的</span><br><span class="line"></span><br><span class="line">* 查看ip1 与 ip2 之间的流量</span><br><span class="line"></span><br><span class="line">root@ip1&gt; iftop -F $ip2/<span class="number">32</span>     =============   iftop -F $P&#123;ip&#125;/<span class="number">32</span></span><br><span class="line"></span><br><span class="line">* 如何查看一个机器上哪个端口占用的流量最大</span><br><span class="line"></span><br><span class="line"><span class="meta">1&gt; </span>iftop 进入界面</span><br><span class="line"><span class="meta">2&gt; </span>按 N</span><br><span class="line"><span class="meta">3&gt; </span>按 S</span><br></pre></td></tr></table></figure><h2 id="vim块操作"><a href="#vim块操作" class="headerlink" title="vim块操作"></a>vim块操作</h2><ul><li>[选择] -&gt; 在普通模式下按ctrl+v或者v进入块操作模式</li></ul><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v（小写）　　　　 按字符选择，选中按下V时光标所在的字符到当前光标所在字符间的内容  </span><br><span class="line">V（大写)　　　　　按行选择  </span><br><span class="line">[<span class="meta">Ctrl</span>]+V　　　　　选择矩形字符块</span><br></pre></td></tr></table></figure><ul><li>[动作] -&gt; 通过光标移动选中内容，可以进行ydp操作</li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">y:</span>复制选中内容到粘贴板  </span><br><span class="line"><span class="symbol">d:</span>删除选中内容  </span><br><span class="line"><span class="symbol">p:</span>用粘贴板里的内容替换选中的内容  </span><br><span class="line">=<span class="symbol">:</span>对齐选中内容  </span><br><span class="line">对于矩阵字符块：[Shift] + i xxx [esc] <span class="symbol">:</span>把xxx写到每一行的光标前面的位置</span><br></pre></td></tr></table></figure><ul><li>[替换] -&gt; 批量缩进或反缩进，类似于文本编辑器中的格式化</li></ul><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选中多行，按<span class="function"><span class="title">I</span>(大写)进入插入模式，写入<span class="variable"><span class="built_in">Tab</span></span>，之后按<span class="variable">ESC</span>，即可完成批量缩进的功能  </span></span><br><span class="line"><span class="function">也可以写入内容，到选中的每一行的光标位置</span></span><br></pre></td></tr></table></figure><h2 id="TGW-接口"><a href="#TGW-接口" class="headerlink" title="TGW 接口"></a>TGW 接口</h2><ul><li>TGW相关问题</li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">* 根据vip，vport，找到rsip(不需要固定key，因为不需要访问real-server)</span></span><br><span class="line"></span><br><span class="line">wget -O- --<span class="keyword">post</span>-data 'data=&#123; <span class="string">"operator"</span>:<span class="string">"xx_DEV"</span>, <span class="string">"rulelist"</span>:[ &#123; <span class="string">"vip"</span>:<span class="string">"'"</span><span class="variable">$vip</span><span class="string">"'"</span>, <span class="string">"vport"</span>:'<span class="string">"$vport"</span>', <span class="string">"protocol"</span>:<span class="string">"TCP"</span> &#125; ] &#125;' <span class="string">"http://10.126.70.51/cgi-bin/fun_logic/bin/public_api/getrs.cgi"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">* 将vip 从rsip下线（需要固定key，因为要访问real-server）</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$del_rs</span>=`wget -O- --<span class="keyword">post</span>-data 'data=&#123; <span class="string">"client_type"</span> : <span class="string">"x'x_DB"</span>, <span class="string">"ignore_exist_error"</span> : false, <span class="string">"operator"</span> : <span class="string">"xx_DEV"</span>, <span class="string">"rs_type"</span> : <span class="string">"linux_tunl"</span>, <span class="string">"need_setup_rs"</span> : true, <span class="string">"op_type"</span> : <span class="string">"'del'"</span>, <span class="string">"rule_list"</span> : [ &#123; <span class="string">"rule_group"</span>:[ &#123; <span class="string">"vip"</span>:<span class="string">"'$vip'"</span>, <span class="string">"vport"</span>:'<span class="variable">$vport</span>', <span class="string">"protocol"</span>:<span class="string">"TCP"</span> &#125; ], <span class="string">"rs_os_type"</span>:<span class="string">"linux"</span>, <span class="string">"rs_list"</span>:[ &#123; <span class="string">"rs_ip"</span>:<span class="string">"'$source_ip'"</span>, <span class="string">"rs_port"</span>:'<span class="variable">$source_port</span>', <span class="string">"rs_weight"</span>:100 &#125; ] &#125; ], <span class="string">"sync"</span> : true &#125;' 'http:<span class="comment">//xx/cgi-bin/fun_logic/bin/public_api/op_rs.cgi' 2&gt;/dev/null`;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">* 将vip 从rsip上线（需要固定key，因为要访问real-server）</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$add_rs</span>=`wget -O- --<span class="keyword">post</span>-data 'data=&#123; <span class="string">"client_type"</span> : <span class="string">"xx_DB"</span>, <span class="string">"ignore_exist_error"</span> : false, <span class="string">"operator"</span> : <span class="string">"xx_DEV"</span>, <span class="string">"rs_type"</span> : <span class="string">"linux_tunl"</span>, <span class="string">"need_setup_rs"</span> : true, <span class="string">"op_type"</span> : <span class="string">"'add'"</span>, <span class="string">"rule_list"</span> : [ &#123; <span class="string">"rule_group"</span>:[ &#123; <span class="string">"vip"</span>:<span class="string">"'$vip'"</span>, <span class="string">"vport"</span>:'<span class="variable">$vport</span>', <span class="string">"protocol"</span>:<span class="string">"TCP"</span> &#125; ], <span class="string">"rs_os_type"</span>:<span class="string">"linux"</span>, <span class="string">"rs_list"</span>:[ &#123; <span class="string">"rs_ip"</span>:<span class="string">"'$target_ip'"</span>, <span class="string">"rs_port"</span>:'<span class="variable">$target_port</span>', <span class="string">"rs_weight"</span>:100 &#125; ] &#125; ], <span class="string">"sync"</span> : true &#125;' 'http:<span class="comment">//xx/cgi-bin/fun_logic/bin/public_api/op_rs.cgi' 2&gt;/dev/null`;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">* 问题</span></span><br><span class="line"></span><br><span class="line">其实TGW的接口会做两步操作：1，操作TGW server上的配置  2，操作real-server上的配置，这两步应该是原子操作。</span><br><span class="line"></span><br><span class="line">&gt; 假设：1 成功，2失败，那么就会导致tgw上的配置，请求均切换了，但是real-server却没做改变，导致两端出现问题。</span><br><span class="line"></span><br><span class="line">临时解决方案：2失败了，那么手动执行2的操作。假设在TGW上执行的操作是del_rs,那么可以在<span class="keyword">read</span>-server上执行  /usr/<span class="keyword">local</span>/realserver/RS_TUNL0/etc/setup_rs.<span class="keyword">sh</span> -c (将本地的rsip和vip直接的配置关系清理掉)</span><br><span class="line"></span><br><span class="line">&gt; 假设：1 没有执行，2 执行了，那么就会导致tgw上的配置没变，但是real-server的配置改变了，导致从tgw来的请求均在real-server上找不到，出现问题。</span><br><span class="line"></span><br><span class="line">临时解决方案：2执行了，那么手动让2还原到没有执行的状态。假设在<span class="keyword">read</span>-server上误清理掉相关rs配置（/usr/<span class="keyword">local</span>/realserver/RS_TUNL0/etc/setup_rs.<span class="keyword">sh</span> -c），那么可以调用add_rs 来恢复。</span><br></pre></td></tr></table></figure><ul><li>vip漂移脚本</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* 位置： db_sys: /data/online/tools/tgw_vip_shift</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line">    python vip_shift.py view <span class="attribute">--vip</span>=<span class="variable">$vip</span> <span class="attribute">--vip_port</span>=<span class="variable">$vip_port</span></span><br><span class="line">    python vip_shift.py del <span class="attribute">--vip</span>=<span class="variable">$vip</span> <span class="attribute">--vip_port</span>=<span class="variable">$vip_port</span> <span class="attribute">--src_ip</span>=<span class="variable">$src_ip</span> <span class="attribute">--src_port</span>=<span class="variable">$src_port</span></span><br><span class="line">    python vip_shift.py <span class="builtin-name">add</span> <span class="attribute">--vip</span>=<span class="variable">$vip</span> <span class="attribute">--vip_port</span>=<span class="variable">$vip_port</span> <span class="attribute">--target_ip</span>=<span class="variable">$target_ip</span> <span class="attribute">--target_port</span>=<span class="variable">$target_port</span></span><br><span class="line">    python vip_shift.py change <span class="attribute">--vip</span>=<span class="variable">$vip</span> <span class="attribute">--vip_port</span>=<span class="variable">$vip_port</span> <span class="attribute">--src_ip</span>=<span class="variable">$src_ip</span> <span class="attribute">--src_port</span>=<span class="variable">$src_port</span> <span class="attribute">--target_ip</span>=<span class="variable">$target_ip</span> <span class="attribute">--target_port</span>=<span class="variable">$target_port</span></span><br><span class="line"></span><br><span class="line">       [-h] [--vip VIP] [--vip_port VIP_PORT] [--src_ip SRC_IP]</span><br><span class="line">       [--src_port SRC_PORT] [--target_ip TARGET_IP]</span><br><span class="line">       [--target_port TARGET_PORT] [-v VERBOSITY]</span><br><span class="line">       &#123;del,add,change,view&#125;</span><br></pre></td></tr></table></figure><h2 id="SSH-如何跳过输入密码，只允许认证模式"><a href="#SSH-如何跳过输入密码，只允许认证模式" class="headerlink" title="SSH 如何跳过输入密码，只允许认证模式"></a>SSH 如何跳过输入密码，只允许认证模式</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -o BatchMode=<span class="literal">yes</span> -o PasswordAuthentication=<span class="literal">no</span> root<span class="variable">@ip</span></span><br></pre></td></tr></table></figure><h2 id="如何永久清空一台机器上的history"><a href="#如何永久清空一台机器上的history" class="headerlink" title="如何永久清空一台机器上的history"></a>如何永久清空一台机器上的history</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* 立即清空里的<span class="built_in">history</span>当前历史命令的记录 </span><br><span class="line">    <span class="built_in">history</span> -c</span><br><span class="line"></span><br><span class="line">* 要求bash立即更新<span class="built_in">history</span>文件</span><br><span class="line">    <span class="built_in">history</span> -w</span><br></pre></td></tr></table></figure><h2 id="nohup-失效的问题"><a href="#nohup-失效的问题" class="headerlink" title="nohup 失效的问题"></a>nohup 失效的问题</h2><ul><li>在secureCRT 或者 iterm2 等类似终端，使用nohup 执行命令，为啥退出后，后台执行的命令也就停止了？</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* 错误的做法</span><br><span class="line"><span class="number">1</span>. nohup xx_cmd &amp;</span><br><span class="line"><span class="number">2</span>. 点击左上角或者右上角的xx按钮退出</span><br><span class="line"><span class="number">3</span>. 然后发现，刚刚在后台的命令异常终止了</span><br><span class="line"></span><br><span class="line">* 正确的做法</span><br><span class="line"><span class="number">1</span>. nohup xx_cmd &amp;</span><br><span class="line"><span class="number">2</span>. 必须显示的 <span class="keyword">exit</span> 退出shell，接下来，你想干嘛干嘛</span><br><span class="line"><span class="number">3</span>. 然后发现，刚刚在后台的命令，安然无恙，放心睡觉吧</span><br></pre></td></tr></table></figure><h2 id="如何让iTerm2-tab页面显示从哪台机器上登陆过来的"><a href="#如何让iTerm2-tab页面显示从哪台机器上登陆过来的" class="headerlink" title="如何让iTerm2 tab页面显示从哪台机器上登陆过来的"></a>如何让iTerm2 tab页面显示从哪台机器上登陆过来的</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /bin/go</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"pleaes input ip"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"go ==&gt; ssh -A root@<span class="variable">$1</span>"</span></span><br><span class="line">    <span class="built_in">echo</span>  <span class="string">"\033]0;<span class="variable">$1</span>\007"</span></span><br><span class="line">    ssh -A root@<span class="variable">$1</span></span><br><span class="line"><span class="comment">#   ssh -A Keithlan@$堡垒机 -t "ssh root@xx"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="如何查看memcache-redis当前哪个链接数最多"><a href="#如何查看memcache-redis当前哪个链接数最多" class="headerlink" title="如何查看memcache/redis当前哪个链接数最多"></a>如何查看memcache/redis当前哪个链接数最多</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ss</span> | grep <span class="string">'<span class="variable">$ip</span>:<span class="variable">$port</span>'</span> | awk <span class="string">'&#123;print <span class="variable">$5</span>&#125;'</span> | awk -F <span class="string">':'</span> <span class="string">'&#123;print <span class="variable">$1</span>&#125;'</span> | sort -nr | uniq -c | sort -nr</span><br></pre></td></tr></table></figure><h2 id="kibana简单语法"><a href="#kibana简单语法" class="headerlink" title="kibana简单语法"></a>kibana简单语法</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">* 地址：http://opses.corp.anjuke.com/</span></span><br><span class="line"><span class="comment">* 注意：选择搜索的时间段，右上角</span></span><br><span class="line"><span class="comment">* filter: </span></span><br><span class="line">    语法： message:(+SQLSTATE +connection)    每个关键字用+号，不能有空格</span><br><span class="line"><span class="comment">* 选择log name:</span></span><br><span class="line">    ops-user-userlog*</span><br><span class="line">    ops-xinfang-userlog*</span><br><span class="line">    ops-broker-userlog*</span><br><span class="line"><span class="comment">* 哪些关键字跟DB紧密相关</span></span><br><span class="line">    SQLSTATE</span><br><span class="line">    connection time <span class="keyword">out</span></span><br><span class="line">    too many connection</span><br><span class="line">    max_user_connections</span><br></pre></td></tr></table></figure><h2 id="定位系统问题的工具和方法"><a href="#定位系统问题的工具和方法" class="headerlink" title="定位系统问题的工具和方法"></a>定位系统问题的工具和方法</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">*  perf top -G : 当CPU性能出现问题的时候，使用最佳    --注意： 会卡住,导致linux宕机，小心 : http:<span class="regexp">//blog</span>.<span class="number">51</span>cto.com/<span class="number">1152313</span>/<span class="number">1767927</span></span><br><span class="line">    [ ] perf record -g  --保留文件，稍后可以用 perf report分析  </span><br><span class="line">        [ ] 如果需要分析某一个进程，可以加 -p ， perf record -g -p $pid</span><br><span class="line">    [ ] perf top -g 实时分析，不保留数据到文件</span><br><span class="line">        [ ] 如果需要分析某一个进程，可以加 -p ， perf top -g -p $pid</span><br><span class="line">     </span><br><span class="line">* pidstat <span class="number">1</span> <span class="number">5</span> ：分析cpu问题的好工具       </span><br><span class="line"></span><br><span class="line">* dstat</span><br><span class="line">* pstack : 当进程卡住的时候，使用效果最佳  </span><br><span class="line">* ss -tnlp</span><br><span class="line">* nstat</span><br><span class="line">    <span class="number">1</span>. 检查back_log 是否设置合理，如果不合理，那么就会看到很多如下信息,代表客户端的请求会<span class="keyword">connect</span> timeout</span><br><span class="line">        linux&gt; nstat -a | <span class="keyword">grep</span> -i <span class="string">'drops\|Overflow'</span></span><br><span class="line">        TcpExtListenOverflows           <span class="number">208539</span>             <span class="number">0</span>.<span class="number">0</span></span><br><span class="line">        TcpExtListenDrops               <span class="number">236999</span>             <span class="number">0</span>.<span class="number">0</span></span><br><span class="line">* top :</span><br><span class="line">    <span class="number">1</span>. top -Hp $pid</span><br><span class="line">    <span class="number">2</span>. top , 然后输入f，然后输入p和<span class="keyword">y</span> ， 就可以看到top显示中对了<span class="number">2</span>列， p对应的是swap(查看swap的进程)，<span class="keyword">y</span>对应的是wchan(Sleeping in Function),很实用  </span><br><span class="line"></span><br><span class="line">* gdb   https:<span class="regexp">//groups</span>.google.com/forum/<span class="comment">#!topic/mechanical-sympathy/QbmpZxp6C64</span></span><br><span class="line"></span><br><span class="line">    gdb -p $id</span><br><span class="line">        info thread</span><br><span class="line">            thread $id</span><br><span class="line">                bt</span><br><span class="line"></span><br><span class="line">* strace</span><br><span class="line">    第一种： strace -o /data/dbbackup/strace.log  -fp $pid</span><br><span class="line">    第二种： 跟踪某些具体的操作 strace -o /data/dbbackup/strace.log  -T -tt -f -e trace=<span class="keyword">read</span>,<span class="keyword">open</span> -p $pid</span><br><span class="line"></span><br><span class="line">* other</span><br><span class="line">    http:<span class="regexp">//blog</span>.donghao.org/<span class="number">2014</span>/<span class="number">04</span>/<span class="number">24</span>/%E8%BF%BD%E8%B8%AAcpu%E8%B7%91%E6%BB%A1/  </span><br><span class="line">    如果perf都用不了，可以尝试 echo t &gt; <span class="regexp">/proc/sysrq</span>-trigger ， 然后dmesg 或者查看kernel日志</span><br><span class="line">    如果上述方法还不行， 可以尝试  /proc/<span class="string">&#123;pid&#125;</span>/wchan</span><br></pre></td></tr></table></figure><h2 id="atop的使用方法"><a href="#atop的使用方法" class="headerlink" title="atop的使用方法"></a><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=atop_doc.pdf" target="_blank" rel="noopener">atop的使用方法</a></h2><blockquote><p>查看历史的top</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atop -r /var/log/atop/atop_20180906 -b <span class="number">4</span>:<span class="number">00</span> -e <span class="number">5</span>:<span class="number">00</span>   --查看某台机器凌晨<span class="number">4</span>点~<span class="number">5</span>点的top日志， t 下一页，T 上一页</span><br></pre></td></tr></table></figure><h2 id="如何优化swap被占用的情况"><a href="#如何优化swap被占用的情况" class="headerlink" title="如何优化swap被占用的情况"></a>如何优化swap被占用的情况</h2><ul><li>处理原则</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 如果swap占用的内存比较小(<span class="number">500</span>M以内)，那么通过 swapoff -a &amp;&amp; swapon -a 可以快速释放掉(此操作有风险，谨慎)    </span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 如果swap占用的内存比较大，则需要保证两点</span><br><span class="line">    <span class="number">2.1</span> 必须保证linux的空闲内存 大于 swap占用空间</span><br><span class="line">    <span class="number">2.2</span> 然后通过下面的方法找到占用swap最多的进程，优化处理进程，让其达到第一点后再释放swap</span><br></pre></td></tr></table></figure><ul><li>发现swap占用最多的进程</li></ul><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="keyword">ls</span> /<span class="keyword">proc</span> | grep <span class="string">"^[0-9]"</span> | awk <span class="string">'$0&gt;100'</span>); <span class="keyword">do</span> awk <span class="string">'/Swap:/&#123;a=a+$2&#125;END&#123;print '</span><span class="string">"$i"</span><span class="string">',a/1024"M"&#125;'</span> /<span class="keyword">proc</span>/$i/smaps;done| <span class="keyword">sort</span> -k2nr | head</span><br><span class="line"></span><br><span class="line">有些linux无法跑上面的程序，可参考下一条命令  </span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> <span class="keyword">for</span> i <span class="keyword">in</span> $(ll /<span class="keyword">proc</span> | awk <span class="string">'&#123;print $9&#125;'</span> | grep <span class="string">"^[0-9]"</span> | awk <span class="string">'$0&gt;100'</span>); <span class="keyword">do</span> awk <span class="string">'/Swap:/&#123;a=a+$2&#125;END&#123;print '</span><span class="string">"$i"</span><span class="string">',a/1024"M"&#125;'</span> /<span class="keyword">proc</span>/$i/smaps;done| <span class="keyword">sort</span> -k2nr | head</span><br></pre></td></tr></table></figure><ul><li>查看机器有哪些服务</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ss -tpnl</span></span><br></pre></td></tr></table></figure><ul><li>如何是否os的cache</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat  /proc/sys/vm/drop_caches</span><br><span class="line"><span class="keyword">sync</span>;<span class="keyword">sync</span>;<span class="keyword">sync</span>;</span><br><span class="line"><span class="keyword">sync</span>;<span class="keyword">sync</span>;<span class="keyword">sync</span>;</span><br><span class="line"><span class="keyword">sync</span>;<span class="keyword">sync</span>;<span class="keyword">sync</span>;</span><br><span class="line"></span><br><span class="line">echo <span class="number">3</span> &gt; /proc/sys/vm/drop_caches</span><br><span class="line"><span class="keyword">sync</span>;<span class="keyword">sync</span>;<span class="keyword">sync</span>;</span><br><span class="line"><span class="keyword">sync</span>;<span class="keyword">sync</span>;<span class="keyword">sync</span>;</span><br><span class="line">echo <span class="number">0</span> &gt; /proc/sys/vm/drop_caches</span><br><span class="line"><span class="keyword">sync</span>;<span class="keyword">sync</span>;<span class="keyword">sync</span>;</span><br><span class="line"><span class="keyword">sync</span>;<span class="keyword">sync</span>;<span class="keyword">sync</span>;</span><br><span class="line">cat /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>redis-rdb-tools-master</title>
      <link href="/2020/03/09/redis/redis-rdb-tools-master/"/>
      <url>/2020/03/09/redis/redis-rdb-tools-master/</url>
      
        <content type="html"><![CDATA[<p>源码包安装</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//github.com/sripathikrishnan/redis-rdb-tools/archive/master.zip</span></span><br><span class="line"><span class="meta"># unzip master</span></span><br><span class="line"><span class="meta"># cd redis-rdb-tools-master/</span></span><br><span class="line"><span class="meta"># python setup.py install</span></span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="转换dump文件到JSON"><a href="#转换dump文件到JSON" class="headerlink" title="转换dump文件到JSON"></a>转换dump文件到JSON</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@yapi ~]<span class="comment"># rdb --help</span></span><br><span class="line">Usage: rdb [options] /path/to/dump.rdb</span><br><span class="line"></span><br><span class="line">Example : rdb <span class="comment">--command json -k "user.*" /var/redis/6379/dump.rdb</span></span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, <span class="comment">--help            show this help message and exit</span></span><br><span class="line">  -c FILE, <span class="comment">--command=FILE</span></span><br><span class="line">                        Command to execute. Valid commands <span class="keyword">are</span> <span class="keyword">json</span>, diff,</span><br><span class="line">                        justkeys, justkeyvals, <span class="keyword">memory</span> <span class="keyword">and</span> protocol</span><br><span class="line">  -f <span class="keyword">FILE</span>, <span class="comment">--file=FILE  Output file</span></span><br><span class="line">  -n DBS, <span class="comment">--db=DBS      Database Number. Multiple databases can be provided.</span></span><br><span class="line">                        <span class="keyword">If</span> <span class="keyword">not</span> specified, <span class="keyword">all</span> <span class="keyword">databases</span> will be included.</span><br><span class="line">  -k <span class="keyword">KEYS</span>, <span class="comment">--key=KEYS   Keys to export. This can be a regular expression</span></span><br><span class="line">  -o NOT_KEYS, <span class="comment">--not-key=NOT_KEYS</span></span><br><span class="line">                        <span class="keyword">Keys</span> <span class="keyword">Not</span> <span class="keyword">to</span> export. This can be a regular expression</span><br><span class="line">  -t TYPES, <span class="comment">--type=TYPES</span></span><br><span class="line">                        <span class="keyword">Data</span> types <span class="keyword">to</span> include. Possible <span class="keyword">values</span> <span class="keyword">are</span> <span class="keyword">string</span>,</span><br><span class="line">                        <span class="keyword">hash</span>, <span class="keyword">set</span>, sortedset, list. Multiple typees can be</span><br><span class="line">                        provided.                      <span class="keyword">If</span> <span class="keyword">not</span> specified, <span class="keyword">all</span></span><br><span class="line">                        <span class="keyword">data</span> types will be returned</span><br><span class="line">  -b <span class="keyword">BYTES</span>, <span class="comment">--bytes=BYTES</span></span><br><span class="line">                        <span class="keyword">Limit</span> <span class="keyword">memory</span> <span class="keyword">output</span> <span class="keyword">to</span> <span class="keyword">keys</span> greater <span class="keyword">to</span> <span class="keyword">or</span> equal <span class="keyword">to</span></span><br><span class="line">                        this <span class="keyword">value</span> (<span class="keyword">in</span> <span class="keyword">bytes</span>)</span><br><span class="line">  -l LARGEST, <span class="comment">--largest=LARGEST</span></span><br><span class="line">                        <span class="keyword">Limit</span> <span class="keyword">memory</span> <span class="keyword">output</span> <span class="keyword">to</span> <span class="keyword">only</span> the top N <span class="keyword">keys</span> (<span class="keyword">by</span> <span class="keyword">size</span>)</span><br><span class="line">  -e ESCAPE, <span class="comment">--escape=ESCAPE</span></span><br><span class="line">                        Escape strings <span class="keyword">to</span> <span class="keyword">encoding</span>: <span class="keyword">raw</span> (<span class="keyword">default</span>), print,</span><br><span class="line">                        utf8, <span class="keyword">or</span> base64.</span><br></pre></td></tr></table></figure><p>3.1 解析dump文件并以JSON格式标准输出</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># <span class="regexp">/usr/</span>local<span class="regexp">/python/</span>bin<span class="regexp">/rdb --command json /</span>data<span class="regexp">/redis_data/</span><span class="number">6379</span><span class="regexp">/dump.rdb</span></span><br></pre></td></tr></table></figure><p>3.2 只解析符合正则的keys</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># <span class="regexp">/usr/</span>local<span class="regexp">/python/</span>bin<span class="regexp">/rdb --command json --key "sences_2.*" /</span>data<span class="regexp">/redis_data/</span><span class="number">6379</span><span class="regexp">/dump.rdb</span></span><br></pre></td></tr></table></figure><p>3.3 只解析以“a”为开头的hash且位于数据库ID为2的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /usr/<span class="built_in">local</span>/python/bin/rdb --<span class="built_in">command</span> json --db 2 --<span class="built_in">type</span> <span class="built_in">hash</span> --key <span class="string">"a.*"</span> /data/redis_data/6379/dump.rdb</span></span><br></pre></td></tr></table></figure><h1 id="生成内存报告"><a href="#生成内存报告" class="headerlink" title="生成内存报告"></a>生成内存报告</h1><p>包含的列有：数据库ID，数据类型，key，内存使用量(byte)，编码。内存使用量包含key、value和其他值。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># rdb -c memory -l <span class="number">20</span>  hins2183425_data_20191125141242.rdb</span><br><span class="line">database,type,<span class="type">key</span>,size_in_bytes,encoding,num_elements,len_largest_element,expiry</span><br><span class="line"><span class="number">0</span>,<span class="type">list</span>,newUserId,<span class="number">9524348</span>,quicklist,<span class="number">1891223</span>,<span class="number">8</span>,</span><br><span class="line"><span class="number">0</span>,hash,userTask1696115,<span class="number">40508</span>,hashtable,<span class="number">545</span>,<span class="number">36</span>,</span><br><span class="line"><span class="number">0</span>,hash,userTask1176459,<span class="number">40932</span>,hashtable,<span class="number">559</span>,<span class="number">32</span>,</span><br><span class="line"><span class="number">0</span>,hash,userTask1129956,<span class="number">43068</span>,hashtable,<span class="number">603</span>,<span class="number">39</span>,</span><br><span class="line">--------------------------------------------------</span><br><span class="line">rdb -c memory -l <span class="number">10000</span>  hins2183425_data_20191125141242.rdb  &gt; rdb.csv</span><br></pre></td></tr></table></figure><h1 id="单个key所使用的内存量"><a href="#单个key所使用的内存量" class="headerlink" title="单个key所使用的内存量"></a>单个key所使用的内存量</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">redis-memory-for-key -s HOST -p 6379 -a PASS KEY</span><br><span class="line"><span class="comment"># redis-memory-for-key -s HOST -p 6379 -a PASS KEY</span></span><br><span class="line">KeynewUserId</span><br><span class="line">Bytes9521728</span><br><span class="line">Typelist</span><br><span class="line">Encodingquicklist</span><br><span class="line">Number of Elements1890699</span><br><span class="line">Length of Largest Element8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用nginx做反向代理解决前端跨域问题</title>
      <link href="/2020/03/09/Nginx/%E5%88%A9%E7%94%A8nginx%E5%81%9A%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%A7%A3%E5%86%B3%E5%89%8D%E7%AB%AF%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2020/03/09/Nginx/%E5%88%A9%E7%94%A8nginx%E5%81%9A%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%A7%A3%E5%86%B3%E5%89%8D%E7%AB%AF%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>云开发机连公司本地机器调接口提示跨域</p><a id="more"></a><p>1.在安装了nginx的服务器中找到nginx.conf文件里的server{},如果没有找到的话就到该文件同级的conf.d文件夹里面的default.conf文件.</p><p>2.在里面添加如下代码</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.aaa.top;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://www.bbb.com;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Origin'</span> <span class="string">'*'</span>; </span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Credentials'</span> <span class="string">'true'</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">##### other directive</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　其中<a href="http://www.aaa.com代表自己的域名,www.bbb.com代表的别人的域名,就是需要跨域的域名,然后添加上允许跨域的请求头,然后重启nginx就可以了" target="_blank" rel="noopener">www.aaa.com代表自己的域名,www.bbb.com代表的别人的域名,就是需要跨域的域名,然后添加上允许跨域的请求头,然后重启nginx就可以了</a>.</p><p>这样的话请求<a href="http://www.aaa.com的接口就相当于请求www.bbb.com的接口了" target="_blank" rel="noopener">www.aaa.com的接口就相当于请求www.bbb.com的接口了</a>.</p><p>以上就是利用nginx做反向代理解决跨域的方法.</p><h2 id="解决js跨域使用nginx配置问题"><a href="#解决js跨域使用nginx配置问题" class="headerlink" title="解决js跨域使用nginx配置问题"></a>解决js跨域使用nginx配置问题</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#解决跨域问题</span><br><span class="line">add_header <span class="keyword">Access</span>-Control-Allow-Origin *;</span><br><span class="line">add_header <span class="keyword">Access</span>-Control-Allow-Credentials <span class="keyword">true</span>;</span><br><span class="line">add_header <span class="keyword">Access</span>-Control-Allow-Headers Origin,X-Requested-<span class="keyword">With</span>,Content-<span class="keyword">Type</span>,Accept,x-<span class="keyword">language</span>;</span><br><span class="line">add_header <span class="keyword">Access</span>-Control-Allow-Methods POST,<span class="keyword">GET</span>,OPTIONSZ,PUT,<span class="keyword">DELETE</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins时区设置为北京时间</title>
      <link href="/2020/03/09/jenkins/Jenkins%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE%E4%B8%BA%E5%8C%97%E4%BA%AC%E6%97%B6%E9%97%B4/"/>
      <url>/2020/03/09/jenkins/Jenkins%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE%E4%B8%BA%E5%8C%97%E4%BA%AC%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<p>打开 【系统管理】-&gt;【脚本命令行】运行下面的命令</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>set<span class="constructor">Property('<span class="params">org</span>.<span class="params">apache</span>.<span class="params">commons</span>.<span class="params">jelly</span>.<span class="params">tags</span>.<span class="params">fmt</span>.<span class="params">timeZone</span>', 'Asia<span class="operator">/</span>Shanghai')</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些实用命令</title>
      <link href="/2020/03/09/Linux/%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/03/09/Linux/%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>大文件占用<br>ncdu</p><p>nmon<br>Nmon 可以查看网络、CPU、内存和磁盘的使用情况</p><p>ccze 非常有用，它可以用不同颜色高亮日志<br>tailf /var/log/syslog | ccze</p><p>free内存减少到几十兆，系统运行缓慢</p><p>运行sync将dirty的内容写回硬盘<br>$sync</p><p>通过修改proc系统的drop_caches清理free的cache<br>echo 1 &gt; /proc/sys/vm/drop_caches<br>echo 2 &gt; /proc/sys/vm/drop_caches<br>echo 3 &gt; /proc/sys/vm/drop_caches</p>]]></content>
      
      
      <categories>
          
          <category> 命令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kafka和Rabbitmq的区别</title>
      <link href="/2020/03/09/MQ/Kafka%E5%92%8CRabbitmq%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2020/03/09/MQ/Kafka%E5%92%8CRabbitmq%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>功能上，两者都是实现了AMQP协议。</p><a id="more"></a><p>kafka是严格顺序保证的消息队列。即使在分布式环境下，也保证在同一分区内消息的顺序性。既然是顺序的，那么在同一个Topic下面，如果前面的消息没有消费完毕（收到回应），则不能读取下一条消息。那么在消费端，就变成了一个单线程操作，无法并发。虽然kafka可以通过分区实现并发，不过这个需要用多台kafka实现。</p><p>还有个办法是在消费kafka消息的时候，消费完立即交给线程池处理，这样可以极大提高并发性。不过这样带来的问题是，如果线程没有处理完机器挂了，就会出现消息丢失的情况，需要在设计上考虑到。</p><p>Rabbitmq不承诺消息的顺序性，因此可以并发多线程处理。在队列中不必排队。如果你对顺序处理没有要求，可以用Rabbitmq实现较大的并发。</p><p><strong>1、吞吐量</strong><br>kafka吞吐量更高：<br>　　1）Zero Copy机制，内核copy数据直接copy到网络设备，不必经过内核到用户再到内核的copy，减小了copy次数和上下文切换次数，大大提高了效率。<br>　　2）磁盘顺序读写，减少了寻道等待的时间。<br>　　3）批量处理机制，服务端批量存储，客户端主动批量pull数据，消息处理效率高。<br>　　4）存储具有O(1)的复杂度，读物因为分区和segment，是O(log(n))的复杂度。<br>　　5）分区机制，有助于提高吞吐量。</p><p><strong>2、可靠性</strong><br>rabbitmq可靠性更好：<br>　　1）确认机制（生产者和exchange，消费者和队列）；<br>　　2）支持事务，但会造成阻塞；<br>　　3）委托（添加回调来处理发送失败的消息）和备份交换器（将发送失败的消息存下来后面再处理）机制；</p><p><strong>3、高可用</strong><br>　　1）rabbitmq采用mirror queue，即主从模式，数据是异步同步的，当消息过来，主从全部写完后，回ack，这样保障了数据的一致性。<br>　　2）每个分区都可以有一个或多个副本，这些副本保存在不同的broker上，broker信息存储在zookeeper上，当broker不可用会重新选举leader。<br>　　kafka支持同步负责消息和异步同步消息（有丢消息的可能），生产者从zk获取leader信息，发消息给leader，follower从leader pull数据然后回ack给leader。</p><p><strong>4、负责均衡</strong><br>　　1）kafka通过zk和分区机制实现：zk记录broker信息，生产者可以获取到并通过策略完成负载均衡；通过分区，投递消息到不同分区，消费者通过服务组完成均衡消费。<br>　　2）需要外部支持。</p><p><strong>5、模型</strong><br>　　1）rabbitmq：<br>　　　　producer，broker遵循AMQP（exchange，bind，queue），consumer；<br>　　　　broker为中心，exchange分topic，direct，fanout和header，路由模式适合多种场景；<br>　　　　consumer消费位置由broker通过确认机制保存；<br>　　2）kafka：<br>　　　　producer，broker，consumer，未遵循AMQP；<br>　　　　consumer为中心，获取消息模式由consumer自己决定；<br>　　　　offset保存在消费者这边，broker无状态；<br>　　　　消息是名义上的永久存储，每个parttition按segment保存自己的消息为文件（可配置清理周期）；<br>　　　　consumer可以通过重置offset消费历史消息；<br>　　　　需要绑定zk；</p><p>关于消息顺序问题<br>1.生产者生产消息，broker相当于一个内存队列，是可以保证顺序的<br>2.只有在多消费者或者多线程的消费的时候，才会出现顺序问题。<br>3.而对于解决顺序问题，又有相应的策略，<br>kafka是使用partition来指定某个消费者消费，<br>Rabbitmq是使用不同的队列绑定到消费者</p>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kafka </tag>
            
            <tag> rabbitmq </tag>
            
            <tag> 理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-Inspect</title>
      <link href="/2020/03/09/docker/Docker-Inspect/"/>
      <url>/2020/03/09/docker/Docker-Inspect/</url>
      
        <content type="html"><![CDATA[<h4 id="该命令用于获取容器镜像的元数据-其中-f参数可以用于获取指定的数据，例如使用来获取容器的IP地址。"><a href="#该命令用于获取容器镜像的元数据-其中-f参数可以用于获取指定的数据，例如使用来获取容器的IP地址。" class="headerlink" title="该命令用于获取容器镜像的元数据,其中-f参数可以用于获取指定的数据，例如使用来获取容器的IP地址。"></a>该命令用于获取容器镜像的元数据,其中-f参数可以用于获取指定的数据，例如使用来获取容器的IP地址。</h4><a id="more"></a><p>简单地说，<em>-f</em> 的实参是个Go模版，并在容器/镜像的元数据上以该 Go 模版作为输入，最终返回模版指定的数据。</p><p><img src="/2020/03/09/docker/Docker-Inspect/screenshot_20200309_143021.png" alt="screenshot_20200309_143021"></p><p>获取PID</p><p><img src="/2020/03/09/docker/Docker-Inspect/1583735467571.png" alt="1583735467571"></p><h3 id="模版指令"><a href="#模版指令" class="headerlink" title="模版指令"></a>模版指令</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123; &#125;&#125;</span> 语法用于处理模版指令，大括号外的任何字符都将直接输出。</span><br></pre></td></tr></table></figure><h3 id="上下文"><a href="#上下文" class="headerlink" title="上下文"></a>上下文</h3><p>“.” 表示“当前上下文”。大多数情况下表示了容器元数据的整个<a href="http://lib.csdn.net/base/datastructure" target="_blank" rel="noopener">数据结构</a>，但在某些情况下可以重新规定上下文，比如使用 <em>with</em> 函数：</p><p><img src="/2020/03/09/docker/Docker-Inspect/1583735483370.png" alt="1583735483370"></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>inspect 数据可以由浮点数、字符串和布尔组成，可以使用 Go 模版内置函数进行比较判断。虽然 Go 模版支持整数，但目前 inspect 数据中的数值类型都是浮点数，而整数应该对于大多数场景更方便（详见该<a href="https://github.com/docker/docker/issues/11641" target="_blank" rel="noopener">Issue</a>）。使用字符串时可以使用双引号。</p><p>数据中不存在的值是不可以用来比较的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@yapi ~]# docker inspect -f "&#123;&#123;.State.ExitCode&#125;&#125; is &#123;&#123;eq .ExecIDs 1&#125;&#125;" $(docker ps -qa)</span><br><span class="line"></span><br><span class="line">Template parsing error: template: :1:25: executing "" at : error calling eq: invalid type for comparison</span><br></pre></td></tr></table></figure><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><p>inspect 数据使用 map 以及数组保存。Map 结构非常简单，前面我们曾经展示过，可以通过 . 的链式来访问 map 内部数据：</p><p><img src="/2020/03/09/docker/Docker-Inspect/1583735649672.png" alt="1583735649672"></p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>除了 <em>index</em>  函数，其他很多函数也很常用。比如逻辑函数 <em>and<em>、</em>or</em> 可以返回布尔结果。注意，函数是不能放在中间：</p><p><img src="/2020/03/09/docker/Docker-Inspect/1583735663307.png" alt="1583735663307"></p><p>下面是一些常用的比较函数：</p><ul><li>eq (等于)</li><li>ne (不等于)</li><li>lt (小于)</li><li>le (小于等于)</li><li>gt (大于)</li><li>ge (大于等于)</li></ul><p><img src="/2020/03/09/docker/Docker-Inspect/1583735681685.png" alt="1583735681685"></p><h3 id="If-语句"><a href="#If-语句" class="headerlink" title="If 语句"></a>If 语句</h3><p>条件语句 <em>if</em> 可以和前面的比较函数一起使用：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="keyword">inspect</span> -f '&#123;&#123;<span class="keyword">if</span> <span class="keyword">eq</span> .State.ExitCode 0.0&#125;&#125; </span><br><span class="line">Normal <span class="keyword">Exit</span></span><br><span class="line">&#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">eq</span> .State.ExitCode 1.0&#125;&#125; </span><br><span class="line">Not a Normal <span class="keyword">Exit</span> </span><br><span class="line">&#123;&#123;<span class="keyword">else</span>&#125;&#125; </span><br><span class="line">Still Not a Normal <span class="keyword">Exit</span> </span><br><span class="line">&#123;&#123;end&#125;&#125;' jenkins</span><br><span class="line"></span><br><span class="line">Normal <span class="keyword">Exit</span></span><br><span class="line">注意，&#123;&#123;end&#125;&#125; 语句必须有，<span class="keyword">else</span> <span class="keyword">if</span> 和 <span class="keyword">else</span> 按需使用。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile编写命令</title>
      <link href="/2020/03/09/docker/Dockerfile%E7%BC%96%E5%86%99%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/03/09/docker/Dockerfile%E7%BC%96%E5%86%99%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">FROM: 指定基础镜像</span><br><span class="line">RUN： 构建镜像过程中需要执行的命令。可以有多条。</span><br><span class="line">CMD：添加启动容器时需要执行的命令。多条只有最后一条生效。可以在启动容器时被覆盖和修改。</span><br><span class="line">ENTRYPOINT：同CMD，但这个一定会被执行，不会被覆盖修改。</span><br><span class="line">LABEL ：为镜像添加对应的数据。</span><br><span class="line">MLABELAINTAINER：表明镜像的作者。将被遗弃，被LABEL代替。</span><br><span class="line">EXPOSE：设置对外暴露的端口。</span><br><span class="line">ENV：设置执行命令时的环境变量，并且在构建完成后，仍然生效</span><br><span class="line">ARG：设置只在构建过程中使用的环境变量，构建完成后，将消失</span><br><span class="line">ADD：将本地文件或目录拷贝到镜像的文件系统中。能解压特定格式文件，能将URL作为要拷贝的文件</span><br><span class="line">COPY：将本地文件或目录拷贝到镜像的文件系统中。</span><br><span class="line">VOLUME：添加数据卷</span><br><span class="line">USER：指定以哪个用户的名义执行RUN, CMD 和ENTRYPOINT等命令</span><br><span class="line">WORKDIR：设置工作目录</span><br><span class="line">ONBUILD：如果制作的镜像被另一个Dockerfile使用，将在那里被执行Docekrfile命令</span><br><span class="line">STOPSIGNAL：设置容器退出时发出的关闭信号。</span><br><span class="line">HEALTHCHECK：设置容器状态检查。</span><br><span class="line">SHELL：更改执行shell命令的程序。Linux的默认shell是[“/bin/sh”, “-c”]，Windows的是[“cmd”, “/S”, “/C”]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose常用命令</title>
      <link href="/2020/03/09/docker/docker-compose%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/03/09/docker/docker-compose%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>Commands:</p><a id="more"></a><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Commands:</span><br><span class="line">  build              Build <span class="keyword">or</span> rebuild services</span><br><span class="line">  bundle             Generate a Docker bundle <span class="keyword">from</span> the Compose file</span><br><span class="line"> <span class="built_in"> config </span>            Validate <span class="keyword">and</span> view the compose file</span><br><span class="line">  create             Create services</span><br><span class="line">  down               Stop <span class="keyword">and</span> <span class="builtin-name">remove</span> containers, networks, images, <span class="keyword">and</span> volumes</span><br><span class="line">  events             Receive real time events <span class="keyword">from</span> containers</span><br><span class="line">  exec               Execute a command <span class="keyword">in</span> a running container</span><br><span class="line">  help               <span class="builtin-name">Get</span> help on a command</span><br><span class="line">  kill               Kill containers</span><br><span class="line">  logs               View output <span class="keyword">from</span> containers</span><br><span class="line">  pause              Pause services</span><br><span class="line"> <span class="built_in"> port </span>              <span class="builtin-name">Print</span> the public<span class="built_in"> port </span><span class="keyword">for</span> a<span class="built_in"> port </span>binding</span><br><span class="line">  ps                 List containers</span><br><span class="line">  pull               Pull<span class="built_in"> service </span>images</span><br><span class="line">  push               Push<span class="built_in"> service </span>images</span><br><span class="line">  restart            Restart services</span><br><span class="line">  rm                 <span class="builtin-name">Remove</span> stopped containers</span><br><span class="line">  <span class="builtin-name">run</span>                <span class="builtin-name">Run</span> a one-off command</span><br><span class="line">  scale              <span class="builtin-name">Set</span> number of containers <span class="keyword">for</span> a service</span><br><span class="line">  start              Start services</span><br><span class="line">  stop               Stop services</span><br><span class="line">  top                Display the running processes</span><br><span class="line">  unpause            Unpause services</span><br><span class="line">  up                 Create <span class="keyword">and</span> start containers</span><br><span class="line">  version            Show the Docker-Compose version information</span><br></pre></td></tr></table></figure><p>解释一下</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d nginx                     构建建启动nignx容器</span><br><span class="line">docker-compose exec nginx bash            登录到nginx容器中</span><br><span class="line">docker-compose down                              删除所有nginx容器,镜像</span><br><span class="line">docker-compose ps                                   显示所有容器</span><br><span class="line">docker-compose restart nginx                   重新启动nginx容器</span><br><span class="line">docker-compose <span class="builtin-name">run</span> --no-deps --rm php-fpm php -v  在php-fpm中不启动关联容器，并容器执行php -v 执行完成后删除容器</span><br><span class="line">docker-compose build nginx                     构建镜像 。        </span><br><span class="line">docker-compose build --no-cache nginx   不带缓存的构建。</span><br><span class="line">docker-compose logs  nginx                     查看nginx的日志 </span><br><span class="line">docker-compose logs -f nginx                   查看nginx的实时日志</span><br><span class="line">docker-compose<span class="built_in"> config </span> -q                        验证（docker-compose.yml）文件配置，当配置正确时，不输出任何内容，当文件配置错误，输出错误信息。 </span><br><span class="line">docker-compose events --json nginx       以json的形式输出nginx的docker日志</span><br><span class="line">docker-compose pause nginx                 暂停nignx容器</span><br><span class="line">docker-compose unpause nginx             恢复ningx容器</span><br><span class="line">docker-compose rm nginx                       删除容器（删除前必须关闭容器）</span><br><span class="line">docker-compose stop nginx                    停止nignx容器</span><br><span class="line">docker-compose start nginx                    启动nignx容器</span><br><span class="line">build 构建或重建服务</span><br><span class="line">help 命令帮助</span><br><span class="line">kill 杀掉容器</span><br><span class="line">logs 显示容器的输出内容</span><br><span class="line">port 打印绑定的开放端口</span><br><span class="line">ps 显示容器</span><br><span class="line">pull 拉取服务镜像</span><br><span class="line">restart 重启服务</span><br><span class="line">rm 删除停止的容器</span><br><span class="line"><span class="builtin-name">run</span> 运行一个一次性命令</span><br><span class="line">scale 设置服务的容器数目</span><br><span class="line">start 开启服务</span><br><span class="line">stop 停止服务</span><br><span class="line">up 创建并启动容器</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose</title>
      <link href="/2020/03/09/docker/%C2%96docker-compose/"/>
      <url>/2020/03/09/docker/%C2%96docker-compose/</url>
      
        <content type="html"><![CDATA[<p>Compose和Docker兼容性：<br>    Compose 文件格式有3个版本,分别为1, 2.x 和 3.x<br>    目前主流的为 3.x 其支持 docker 1.13.0 及其以上的版本</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">常用参数：</span></span><br><span class="line">    <span class="string">version</span>           <span class="comment"># 指定 compose 文件的版本</span></span><br><span class="line">    <span class="string">services</span>          <span class="comment"># 定义所有的 service 信息, services 下面的第一级别的 key 既是一个 service 的名称</span></span><br><span class="line"></span><br><span class="line">        <span class="string">build</span>                 <span class="comment"># 指定包含构建上下文的路径, 或作为一个对象，该对象具有 context 和指定的 dockerfile 文件以及 args 参数值</span></span><br><span class="line">            <span class="string">context</span>               <span class="comment"># context: 指定 Dockerfile 文件所在的路径</span></span><br><span class="line">            <span class="string">dockerfile</span>            <span class="comment"># dockerfile: 指定 context 指定的目录下面的 Dockerfile 的名称(默认为 Dockerfile)</span></span><br><span class="line">            <span class="string">args</span>                  <span class="comment"># args: Dockerfile 在 build 过程中需要的参数 (等同于 docker container build --build-arg 的作用)</span></span><br><span class="line">            <span class="string">cache_from</span>            <span class="comment"># v3.2中新增的参数, 指定缓存的镜像列表 (等同于 docker container build --cache_from 的作用)</span></span><br><span class="line">            <span class="string">labels</span>                <span class="comment"># v3.3中新增的参数, 设置镜像的元数据 (等同于 docker container build --labels 的作用)</span></span><br><span class="line">            <span class="string">shm_size</span>              <span class="comment"># v3.5中新增的参数, 设置容器 /dev/shm 分区的大小 (等同于 docker container build --shm-size 的作用)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">command</span>               <span class="comment"># 覆盖容器启动后默认执行的命令, 支持 shell 格式和 [] 格式</span></span><br><span class="line"></span><br><span class="line">        <span class="string">configs</span>               <span class="comment"># 不知道怎么用</span></span><br><span class="line"></span><br><span class="line">        <span class="string">cgroup_parent</span>         <span class="comment"># 不知道怎么用</span></span><br><span class="line"></span><br><span class="line">        <span class="string">container_name</span>        <span class="comment"># 指定容器的名称 (等同于 docker run --name 的作用)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">credential_spec</span>       <span class="comment"># 不知道怎么用</span></span><br><span class="line"></span><br><span class="line">        <span class="string">deploy</span>                <span class="comment"># v3 版本以上, 指定与部署和运行服务相关的配置, deploy 部分是 docker stack 使用的, docker stack 依赖 docker swarm</span></span><br><span class="line">            <span class="string">endpoint_mode</span>         <span class="comment"># v3.3 版本中新增的功能, 指定服务暴露的方式</span></span><br><span class="line">                <span class="string">vip</span>                   <span class="comment"># Docker 为该服务分配了一个虚拟 IP(VIP), 作为客户端的访问服务的地址</span></span><br><span class="line">                <span class="string">dnsrr</span>                 <span class="comment"># DNS轮询, Docker 为该服务设置 DNS 条目, 使得服务名称的 DNS 查询返回一个 IP 地址列表, 客户端直接访问其中的一个地址</span></span><br><span class="line">            <span class="string">labels</span>                <span class="comment"># 指定服务的标签，这些标签仅在服务上设置</span></span><br><span class="line">            <span class="string">mode</span>                  <span class="comment"># 指定 deploy 的模式</span></span><br><span class="line">                <span class="string">global</span>                <span class="comment"># 每个集群节点都只有一个容器</span></span><br><span class="line">                <span class="string">replicated</span>            <span class="comment"># 用户可以指定集群中容器的数量(默认)</span></span><br><span class="line">            <span class="string">placement</span>             <span class="comment"># 不知道怎么用</span></span><br><span class="line">            <span class="string">replicas</span>              <span class="comment"># deploy 的 mode 为 replicated 时, 指定容器副本的数量</span></span><br><span class="line">            <span class="string">resources</span>             <span class="comment"># 资源限制</span></span><br><span class="line">                <span class="string">limits</span>                <span class="comment"># 设置容器的资源限制</span></span><br><span class="line">                    <span class="attr">cpus:</span> <span class="string">"0.5"</span>           <span class="comment"># 设置该容器最多只能使用 50% 的 CPU </span></span><br><span class="line">                    <span class="attr">memory:</span> <span class="string">50M</span>           <span class="comment"># 设置该容器最多只能使用 50M 的内存空间 </span></span><br><span class="line">                <span class="string">reservations</span>          <span class="comment"># 设置为容器预留的系统资源(随时可用)</span></span><br><span class="line">                    <span class="attr">cpus:</span> <span class="string">"0.2"</span>           <span class="comment"># 为该容器保留 20% 的 CPU</span></span><br><span class="line">                    <span class="attr">memory:</span> <span class="string">20M</span>           <span class="comment"># 为该容器保留 20M 的内存空间</span></span><br><span class="line">            <span class="string">restart_policy</span>        <span class="comment"># 定义容器重启策略, 用于代替 restart 参数</span></span><br><span class="line">                <span class="string">condition</span>             <span class="comment"># 定义容器重启策略(接受三个参数)</span></span><br><span class="line">                    <span class="string">none</span>                  <span class="comment"># 不尝试重启</span></span><br><span class="line">                    <span class="string">on-failure</span>            <span class="comment"># 只有当容器内部应用程序出现问题才会重启</span></span><br><span class="line">                    <span class="string">any</span>                   <span class="comment"># 无论如何都会尝试重启(默认)</span></span><br><span class="line">                <span class="string">delay</span>                 <span class="comment"># 尝试重启的间隔时间(默认为 0s)</span></span><br><span class="line">                <span class="string">max_attempts</span>          <span class="comment"># 尝试重启次数(默认一直尝试重启)</span></span><br><span class="line">                <span class="string">window</span>                <span class="comment"># 检查重启是否成功之前的等待时间(即如果容器启动了, 隔多少秒之后去检测容器是否正常, 默认 0s)</span></span><br><span class="line">            <span class="string">update_config</span>         <span class="comment"># 用于配置滚动更新配置</span></span><br><span class="line">                <span class="string">parallelism</span>           <span class="comment"># 一次性更新的容器数量</span></span><br><span class="line">                <span class="string">delay</span>                 <span class="comment"># 更新一组容器之间的间隔时间</span></span><br><span class="line">                <span class="string">failure_action</span>        <span class="comment"># 定义更新失败的策略</span></span><br><span class="line">                    <span class="string">continue</span>              <span class="comment"># 继续更新</span></span><br><span class="line">                    <span class="string">rollback</span>              <span class="comment"># 回滚更新</span></span><br><span class="line">                    <span class="string">pause</span>                 <span class="comment"># 暂停更新(默认)</span></span><br><span class="line">                <span class="string">monitor</span>               <span class="comment"># 每次更新后的持续时间以监视更新是否失败(单位: ns|us|ms|s|m|h) (默认为0)</span></span><br><span class="line">                <span class="string">max_failure_ratio</span>     <span class="comment"># 回滚期间容忍的失败率(默认值为0)</span></span><br><span class="line">                <span class="string">order</span>                 <span class="comment"># v3.4 版本中新增的参数, 回滚期间的操作顺序</span></span><br><span class="line">                    <span class="string">stop-first</span>            <span class="comment">#旧任务在启动新任务之前停止(默认)</span></span><br><span class="line">                    <span class="string">start-first</span>           <span class="comment">#首先启动新任务, 并且正在运行的任务暂时重叠</span></span><br><span class="line">            <span class="string">rollback_config</span>       <span class="comment"># v3.7 版本中新增的参数, 用于定义在 update_config 更新失败的回滚策略</span></span><br><span class="line">                <span class="string">parallelism</span>           <span class="comment"># 一次回滚的容器数, 如果设置为0, 则所有容器同时回滚</span></span><br><span class="line">                <span class="string">delay</span>                 <span class="comment"># 每个组回滚之间的时间间隔(默认为0)</span></span><br><span class="line">                <span class="string">failure_action</span>        <span class="comment"># 定义回滚失败的策略</span></span><br><span class="line">                    <span class="string">continue</span>              <span class="comment"># 继续回滚</span></span><br><span class="line">                    <span class="string">pause</span>                 <span class="comment"># 暂停回滚</span></span><br><span class="line">                <span class="string">monitor</span>               <span class="comment"># 每次回滚任务后的持续时间以监视失败(单位: ns|us|ms|s|m|h) (默认为0)</span></span><br><span class="line">                <span class="string">max_failure_ratio</span>     <span class="comment"># 回滚期间容忍的失败率(默认值0)</span></span><br><span class="line">                <span class="string">order</span>                 <span class="comment"># 回滚期间的操作顺序</span></span><br><span class="line">                    <span class="string">stop-first</span>            <span class="comment"># 旧任务在启动新任务之前停止(默认)</span></span><br><span class="line">                    <span class="string">start-first</span>           <span class="comment"># 首先启动新任务, 并且正在运行的任务暂时重叠</span></span><br><span class="line"></span><br><span class="line">            <span class="string">注意：</span></span><br><span class="line">                <span class="string">支持</span> <span class="string">docker-compose</span> <span class="string">up</span> <span class="string">和</span> <span class="string">docker-compose</span> <span class="string">run</span> <span class="string">但不支持</span> <span class="string">docker</span> <span class="string">stack</span> <span class="string">deploy</span> <span class="string">的子选项</span></span><br><span class="line">                <span class="string">security_opt</span>  <span class="string">container_name</span>  <span class="string">devices</span>  <span class="string">tmpfs</span>  <span class="string">stop_signal</span>  <span class="string">links</span>    <span class="string">cgroup_parent</span></span><br><span class="line">                <span class="string">network_mode</span>  <span class="string">external_links</span>  <span class="string">restart</span>  <span class="string">build</span>  <span class="string">userns_mode</span>  <span class="string">sysctls</span></span><br><span class="line"></span><br><span class="line">        <span class="string">devices</span>               <span class="comment"># 指定设备映射列表 (等同于 docker run --device 的作用)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">depends_on</span>            <span class="comment"># 定义容器启动顺序 (此选项解决了容器之间的依赖关系， 此选项在 v3 版本中 使用 swarm 部署时将忽略该选项)</span></span><br><span class="line">            <span class="string">示例：</span></span><br><span class="line">                <span class="string">docker-compose</span> <span class="string">up</span> <span class="string">以依赖顺序启动服务，下面例子中</span> <span class="string">redis</span> <span class="string">和</span> <span class="string">db</span> <span class="string">服务在</span> <span class="string">web</span> <span class="string">启动前启动</span></span><br><span class="line">                <span class="string">默认情况下使用</span> <span class="string">docker-compose</span> <span class="string">up</span> <span class="string">web</span> <span class="string">这样的方式启动</span> <span class="string">web</span> <span class="string">服务时，也会启动</span> <span class="string">redis</span> <span class="string">和</span> <span class="string">db</span> <span class="string">两个服务，因为在配置文件中定义了依赖关系</span></span><br><span class="line"></span><br><span class="line">                <span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line">                <span class="attr">services:</span></span><br><span class="line">                    <span class="attr">web:</span></span><br><span class="line">                        <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">                        <span class="attr">depends_on:</span></span><br><span class="line">                            <span class="bullet">-</span> <span class="string">db</span>      </span><br><span class="line">                            <span class="bullet">-</span> <span class="string">redis</span>  </span><br><span class="line">                    <span class="attr">redis:</span></span><br><span class="line">                        <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">                    <span class="attr">db:</span></span><br><span class="line">                        <span class="attr">image:</span> <span class="string">postgres</span>                             </span><br><span class="line"></span><br><span class="line">        <span class="string">dns</span>                   <span class="comment"># 设置 DNS 地址(等同于 docker run --dns 的作用)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">dns_search</span>            <span class="comment"># 设置 DNS 搜索域(等同于 docker run --dns-search 的作用)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">tmpfs</span>                 <span class="comment"># v2 版本以上, 挂载目录到容器中, 作为容器的临时文件系统(等同于 docker run --tmpfs 的作用, 在使用 swarm 部署时将忽略该选项)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">entrypoint</span>            <span class="comment"># 覆盖容器的默认 entrypoint 指令 (等同于 docker run --entrypoint 的作用)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">env_file</span>              <span class="comment"># 从指定文件中读取变量设置为容器中的环境变量, 可以是单个值或者一个文件列表, 如果多个文件中的变量重名则后面的变量覆盖前面的变量, environment 的值覆盖 env_file 的值</span></span><br><span class="line">            <span class="string">文件格式：</span></span><br><span class="line">                <span class="string">RACK_ENV=development</span> </span><br><span class="line"></span><br><span class="line">        <span class="string">environment</span>           <span class="comment"># 设置环境变量， environment 的值可以覆盖 env_file 的值 (等同于 docker run --env 的作用)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">expose</span>                <span class="comment"># 暴露端口, 但是不能和宿主机建立映射关系, 类似于 Dockerfile 的 EXPOSE 指令</span></span><br><span class="line"></span><br><span class="line">        <span class="string">external_links</span>        <span class="comment"># 连接不在 docker-compose.yml 中定义的容器或者不在 compose 管理的容器(docker run 启动的容器, 在 v3 版本中使用 swarm 部署时将忽略该选项)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">extra_hosts</span>           <span class="comment"># 添加 host 记录到容器中的 /etc/hosts 中 (等同于 docker run --add-host 的作用)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">healthcheck</span>           <span class="comment"># v2.1 以上版本, 定义容器健康状态检查, 类似于 Dockerfile 的 HEALTHCHECK 指令</span></span><br><span class="line">            <span class="string">test</span>                  <span class="comment"># 检查容器检查状态的命令, 该选项必须是一个字符串或者列表, 第一项必须是 NONE, CMD 或 CMD-SHELL, 如果其是一个字符串则相当于 CMD-SHELL 加该字符串</span></span><br><span class="line">                <span class="string">NONE</span>                  <span class="comment"># 禁用容器的健康状态检测</span></span><br><span class="line">                <span class="string">CMD</span>                   <span class="comment"># test: ["CMD", "curl", "-f", "http://localhost"]</span></span><br><span class="line">                <span class="string">CMD-SHELL</span>             <span class="comment"># test: ["CMD-SHELL", "curl -f http://localhost || exit 1"] 或者　test: curl -f https://localhost || exit 1</span></span><br><span class="line">            <span class="attr">interval:</span> <span class="string">1m30s</span>       <span class="comment"># 每次检查之间的间隔时间</span></span><br><span class="line">            <span class="attr">timeout:</span> <span class="string">10s</span>          <span class="comment"># 运行命令的超时时间</span></span><br><span class="line">            <span class="attr">retries:</span> <span class="number">3</span>            <span class="comment"># 重试次数</span></span><br><span class="line">            <span class="attr">start_period:</span> <span class="string">40s</span>     <span class="comment"># v3.4 以上新增的选项, 定义容器启动时间间隔</span></span><br><span class="line">            <span class="attr">disable:</span> <span class="literal">true</span>         <span class="comment"># true 或 false, 表示是否禁用健康状态检测和　test: NONE 相同</span></span><br><span class="line"></span><br><span class="line">        <span class="string">image</span>                 <span class="comment"># 指定 docker 镜像, 可以是远程仓库镜像、本地镜像</span></span><br><span class="line"></span><br><span class="line">        <span class="string">init</span>                  <span class="comment"># v3.7 中新增的参数, true 或 false 表示是否在容器中运行一个 init, 它接收信号并传递给进程</span></span><br><span class="line"></span><br><span class="line">        <span class="string">isolation</span>             <span class="comment"># 隔离容器技术, 在 Linux 中仅支持 default 值</span></span><br><span class="line"></span><br><span class="line">        <span class="string">labels</span>                <span class="comment"># 使用 Docker 标签将元数据添加到容器, 与 Dockerfile 中的 LABELS 类似</span></span><br><span class="line"></span><br><span class="line">        <span class="string">links</span>                 <span class="comment"># 链接到其它服务中的容器, 该选项是 docker 历史遗留的选项, 目前已被用户自定义网络名称空间取代, 最终有可能被废弃 (在使用 swarm 部署时将忽略该选项)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">logging</span>               <span class="comment"># 设置容器日志服务</span></span><br><span class="line">            <span class="string">driver</span>                <span class="comment"># 指定日志记录驱动程序, 默认 json-file (等同于 docker run --log-driver 的作用)</span></span><br><span class="line">            <span class="string">options</span>               <span class="comment"># 指定日志的相关参数 (等同于 docker run --log-opt 的作用)</span></span><br><span class="line">                <span class="string">max-size</span>              <span class="comment"># 设置单个日志文件的大小, 当到达这个值后会进行日志滚动操作</span></span><br><span class="line">                <span class="string">max-file</span>              <span class="comment"># 日志文件保留的数量</span></span><br><span class="line"></span><br><span class="line">        <span class="string">network_mode</span>          <span class="comment"># 指定网络模式 (等同于 docker run --net 的作用, 在使用 swarm 部署时将忽略该选项)         </span></span><br><span class="line"></span><br><span class="line">        <span class="string">networks</span>              <span class="comment"># 将容器加入指定网络 (等同于 docker network connect 的作用), networks 可以位于 compose 文件顶级键和 services 键的二级键</span></span><br><span class="line">            <span class="string">aliases</span>               <span class="comment"># 同一网络上的容器可以使用服务名称或别名连接到其中一个服务的容器</span></span><br><span class="line">            <span class="string">ipv4_address</span>      <span class="comment"># IP V4 格式</span></span><br><span class="line">            <span class="string">ipv6_address</span>      <span class="comment"># IP V6 格式</span></span><br><span class="line"></span><br><span class="line">            <span class="string">示例:</span></span><br><span class="line">                <span class="attr">version:</span> <span class="string">'3.7'</span></span><br><span class="line">                <span class="attr">services:</span> </span><br><span class="line">                    <span class="attr">test:</span> </span><br><span class="line">                        <span class="attr">image:</span> <span class="string">nginx:1.14-alpine</span></span><br><span class="line">                        <span class="attr">container_name:</span> <span class="string">mynginx</span></span><br><span class="line">                        <span class="attr">command:</span> <span class="string">ifconfig</span></span><br><span class="line">                        <span class="attr">networks:</span> </span><br><span class="line">                            <span class="attr">app_net:</span>                                <span class="comment"># 调用下面 networks 定义的 app_net 网络</span></span><br><span class="line">                            <span class="attr">ipv4_address:</span> <span class="number">172.16</span><span class="number">.238</span><span class="number">.10</span></span><br><span class="line">                <span class="attr">networks:</span></span><br><span class="line">                    <span class="attr">app_net:</span></span><br><span class="line">                        <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">                        <span class="attr">ipam:</span></span><br><span class="line">                            <span class="attr">driver:</span> <span class="string">default</span></span><br><span class="line">                            <span class="attr">config:</span></span><br><span class="line">                                <span class="bullet">-</span> <span class="attr">subnet:</span> <span class="number">172.16</span><span class="number">.238</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">pid:</span> <span class="string">'host'</span>           <span class="comment"># 共享宿主机的 进程空间(PID)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">ports</span>                 <span class="comment"># 建立宿主机和容器之间的端口映射关系, ports 支持两种语法格式</span></span><br><span class="line">            <span class="string">SHORT</span> <span class="string">语法格式示例:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">"3000"</span>                            <span class="comment"># 暴露容器的 3000 端口, 宿主机的端口由 docker 随机映射一个没有被占用的端口</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">"3000-3005"</span>                       <span class="comment"># 暴露容器的 3000 到 3005 端口, 宿主机的端口由 docker 随机映射没有被占用的端口</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">"8000:8000"</span>                       <span class="comment"># 容器的 8000 端口和宿主机的 8000 端口建立映射关系</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">"9090-9091:8080-8081"</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">"127.0.0.1:8001:8001"</span>             <span class="comment"># 指定映射宿主机的指定地址的</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">"127.0.0.1:5000-5010:5000-5010"</span>   </span><br><span class="line">                <span class="bullet">-</span> <span class="string">"6060:6060/udp"</span>                   <span class="comment"># 指定协议</span></span><br><span class="line"></span><br><span class="line">            <span class="string">LONG</span> <span class="string">语法格式示例:(v3.2</span> <span class="string">新增的语法格式)</span></span><br><span class="line">                <span class="attr">ports:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">80</span>                    <span class="comment"># 容器端口</span></span><br><span class="line">                      <span class="attr">published:</span> <span class="number">8080</span>               <span class="comment"># 宿主机端口</span></span><br><span class="line">                      <span class="attr">protocol:</span> <span class="string">tcp</span>                 <span class="comment"># 协议类型</span></span><br><span class="line">                      <span class="attr">mode:</span> <span class="string">host</span>                    <span class="comment"># host 在每个节点上发布主机端口,  ingress 对于群模式端口进行负载均衡</span></span><br><span class="line"></span><br><span class="line">        <span class="string">secrets</span>               <span class="comment"># 不知道怎么用</span></span><br><span class="line"></span><br><span class="line">        <span class="string">security_opt</span>          <span class="comment"># 为每个容器覆盖默认的标签 (在使用 swarm 部署时将忽略该选项)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">stop_grace_period</span>     <span class="comment"># 指定在发送了 SIGTERM 信号之后, 容器等待多少秒之后退出(默认 10s)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">stop_signal</span>           <span class="comment"># 指定停止容器发送的信号 (默认为 SIGTERM 相当于 kill PID; SIGKILL 相当于 kill -9 PID; 在使用 swarm 部署时将忽略该选项)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">sysctls</span>               <span class="comment"># 设置容器中的内核参数 (在使用 swarm 部署时将忽略该选项)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">ulimits</span>               <span class="comment"># 设置容器的 limit</span></span><br><span class="line"></span><br><span class="line">        <span class="string">userns_mode</span>           <span class="comment"># 如果Docker守护程序配置了用户名称空间, 则禁用此服务的用户名称空间 (在使用 swarm 部署时将忽略该选项)</span></span><br><span class="line"></span><br><span class="line">        <span class="string">volumes</span>               <span class="comment"># 定义容器和宿主机的卷映射关系, 其和 networks 一样可以位于 services 键的二级键和 compose 顶级键, 如果需要跨服务间使用则在顶级键定义, 在 services 中引用</span></span><br><span class="line">            <span class="string">SHORT</span> <span class="string">语法格式示例:</span></span><br><span class="line">                <span class="attr">volumes:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="string">/var/lib/mysql</span>                <span class="comment"># 映射容器内的 /var/lib/mysql 到宿主机的一个随机目录中</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="string">/opt/data:/var/lib/mysql</span>      <span class="comment"># 映射容器内的 /var/lib/mysql 到宿主机的 /opt/data</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="string">./cache:/tmp/cache</span>            <span class="comment"># 映射容器内的 /var/lib/mysql 到宿主机 compose 文件所在的位置</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="string">~/configs:/etc/configs/:ro</span>    <span class="comment"># 映射容器宿主机的目录到容器中去, 权限只读</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="string">datavolume:/var/lib/mysql</span>     <span class="comment"># datavolume 为 volumes 顶级键定义的目录, 在此处直接调用</span></span><br><span class="line"></span><br><span class="line">            <span class="string">LONG</span> <span class="string">语法格式示例:(v3.2</span> <span class="string">新增的语法格式)</span></span><br><span class="line">                <span class="attr">version:</span> <span class="string">"3.2"</span></span><br><span class="line">                <span class="attr">services:</span></span><br><span class="line">                    <span class="attr">web:</span></span><br><span class="line">                        <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">                        <span class="attr">ports:</span></span><br><span class="line">                            <span class="bullet">-</span> <span class="string">"80:80"</span></span><br><span class="line">                        <span class="attr">volumes:</span></span><br><span class="line">                            <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">volume</span>                  <span class="comment"># mount 的类型, 必须是 bind、volume 或 tmpfs</span></span><br><span class="line">                                <span class="attr">source:</span> <span class="string">mydata</span>              <span class="comment"># 宿主机目录</span></span><br><span class="line">                                <span class="attr">target:</span> <span class="string">/data</span>               <span class="comment"># 容器目录</span></span><br><span class="line">                                <span class="attr">volume:</span>                     <span class="comment"># 配置额外的选项, 其 key 必须和 type 的值相同</span></span><br><span class="line">                                    <span class="attr">nocopy:</span> <span class="literal">true</span>                <span class="comment"># volume 额外的选项, 在创建卷时禁用从容器复制数据</span></span><br><span class="line">                            <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">bind</span>                    <span class="comment"># volume 模式只指定容器路径即可, 宿主机路径随机生成; bind 需要指定容器和数据机的映射路径</span></span><br><span class="line">                                <span class="attr">source:</span> <span class="string">./static</span></span><br><span class="line">                                <span class="attr">target:</span> <span class="string">/opt/app/static</span></span><br><span class="line">                                <span class="attr">read_only:</span> <span class="literal">true</span>             <span class="comment"># 设置文件系统为只读文件系统</span></span><br><span class="line">                <span class="attr">volumes:</span></span><br><span class="line">                    <span class="attr">mydata:</span>                                 <span class="comment"># 定义在 volume, 可在所有服务中调用</span></span><br><span class="line"></span><br><span class="line">        <span class="string">restart</span>               <span class="comment"># 定义容器重启策略(在使用 swarm 部署时将忽略该选项, 在 swarm 使用 restart_policy 代替 restart)</span></span><br><span class="line">            <span class="literal">no</span>                    <span class="comment"># 禁止自动重启容器(默认)</span></span><br><span class="line">            <span class="string">always</span>                <span class="comment"># 无论如何容器都会重启</span></span><br><span class="line">            <span class="string">on-failure</span>            <span class="comment"># 当出现 on-failure 报错时, 容器重新启动</span></span><br><span class="line"></span><br><span class="line">        <span class="string">其他选项：</span></span><br><span class="line">            <span class="string">domainname,</span> <span class="string">hostname,</span> <span class="string">ipc,</span> <span class="string">mac_address,</span> <span class="string">privileged,</span> <span class="string">read_only,</span> <span class="string">shm_size,</span> <span class="string">stdin_open,</span> <span class="string">tty,</span> <span class="string">user,</span> <span class="string">working_dir</span></span><br><span class="line">            <span class="string">上面这些选项都只接受单个值和</span> <span class="string">docker</span> <span class="string">run</span> <span class="string">的对应参数类似</span></span><br><span class="line"></span><br><span class="line">        <span class="string">对于值为时间的可接受的值：</span></span><br><span class="line">            <span class="number">2.</span><span class="string">5s</span></span><br><span class="line">            <span class="string">10s</span></span><br><span class="line">            <span class="string">1m30s</span></span><br><span class="line">            <span class="string">2h32m</span></span><br><span class="line">            <span class="string">5h34m56s</span></span><br><span class="line">            <span class="string">时间单位:</span> <span class="string">us,</span> <span class="string">ms,</span> <span class="string">s,</span> <span class="string">m，</span> <span class="string">h</span></span><br><span class="line">        <span class="string">对于值为大小的可接受的值：</span></span><br><span class="line">            <span class="string">2b</span></span><br><span class="line">            <span class="string">1024kb</span></span><br><span class="line">            <span class="string">2048k</span></span><br><span class="line">            <span class="string">300m</span></span><br><span class="line">            <span class="string">1gb</span></span><br><span class="line">            <span class="string">单位:</span> <span class="string">b,</span> <span class="string">k,</span> <span class="string">m,</span> <span class="string">g</span> <span class="string">或者</span> <span class="string">kb,</span> <span class="string">mb,</span> <span class="string">gb</span></span><br><span class="line">    <span class="string">networks</span>          <span class="comment"># 定义 networks 信息</span></span><br><span class="line">        <span class="string">driver</span>                <span class="comment"># 指定网络模式, 大多数情况下, 它 bridge 于单个主机和 overlay Swarm 上</span></span><br><span class="line">            <span class="string">bridge</span>                <span class="comment"># Docker 默认使用 bridge 连接单个主机上的网络</span></span><br><span class="line">            <span class="string">overlay</span>               <span class="comment"># overlay 驱动程序创建一个跨多个节点命名的网络</span></span><br><span class="line">            <span class="string">host</span>                  <span class="comment"># 共享主机网络名称空间(等同于 docker run --net=host)</span></span><br><span class="line">            <span class="string">none</span>                  <span class="comment"># 等同于 docker run --net=none</span></span><br><span class="line">        <span class="string">driver_opts</span>           <span class="comment"># v3.2以上版本, 传递给驱动程序的参数, 这些参数取决于驱动程序</span></span><br><span class="line">        <span class="string">attachable</span>            <span class="comment"># driver 为 overlay 时使用, 如果设置为 true 则除了服务之外，独立容器也可以附加到该网络; 如果独立容器连接到该网络，则它可以与其他 Docker 守护进程连接到的该网络的服务和独立容器进行通信</span></span><br><span class="line">        <span class="string">ipam</span>                  <span class="comment"># 自定义 IPAM 配置. 这是一个具有多个属性的对象, 每个属性都是可选的</span></span><br><span class="line">            <span class="string">driver</span>                <span class="comment"># IPAM 驱动程序, bridge 或者 default</span></span><br><span class="line">            <span class="string">config</span>                <span class="comment"># 配置项</span></span><br><span class="line">                <span class="string">subnet</span>                <span class="comment"># CIDR格式的子网，表示该网络的网段</span></span><br><span class="line">        <span class="string">external</span>              <span class="comment"># 外部网络, 如果设置为 true 则 docker-compose up 不会尝试创建它, 如果它不存在则引发错误</span></span><br><span class="line">        <span class="string">name</span>                  <span class="comment"># v3.5 以上版本, 为此网络设置名称</span></span><br><span class="line"><span class="string">文件格式示例：</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line">    <span class="attr">services:</span></span><br><span class="line">      <span class="attr">redis:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">"6379"</span></span><br><span class="line">        <span class="attr">networks:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">frontend</span></span><br><span class="line">        <span class="attr">deploy:</span></span><br><span class="line">          <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">          <span class="attr">update_config:</span></span><br><span class="line">            <span class="attr">parallelism:</span> <span class="number">2</span></span><br><span class="line">            <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">          <span class="attr">restart_policy:</span></span><br><span class="line">            <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line">      <span class="attr">db:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">postgres:9.4</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">db-data:/var/lib/postgresql/data</span></span><br><span class="line">        <span class="attr">networks:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">backend</span></span><br><span class="line">        <span class="attr">deploy:</span></span><br><span class="line">          <span class="attr">placement:</span></span><br><span class="line">            <span class="attr">constraints:</span> <span class="string">[node.role</span> <span class="string">==</span> <span class="string">manager]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> yaml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kvm架构</title>
      <link href="/2020/03/09/kvm/%C2%96kvm%E6%9E%B6%E6%9E%84/"/>
      <url>/2020/03/09/kvm/%C2%96kvm%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h3 id="网卡配置"><a href="#网卡配置" class="headerlink" title="网卡配置"></a>网卡配置</h3><a id="more"></a><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@localhost /etc/sysconfig/network-scripts]</span><span class="comment">#cat ifcfg-eth0</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">"eth0"</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">NETBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="comment">#IPADDR=172.20.50.110</span></span><br><span class="line"><span class="comment">#NETMASK=255.255.0.0</span></span><br><span class="line"><span class="comment">#DNS1=172.20.0.1</span></span><br><span class="line"><span class="attr">MASTER</span>=bond0</span><br><span class="line"><span class="attr">SLAVE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">NMCONTROLLED</span>=<span class="literal">no</span></span><br><span class="line"><span class="section">[root@localhost /etc/sysconfig/network-scripts]</span><span class="comment">#cat ifcfg-eth1</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">"eth1"</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">NETBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="comment">#IPADDR=172.20.50.110</span></span><br><span class="line"><span class="comment">#NETMASK=255.255.0.0</span></span><br><span class="line"><span class="comment">#DNS1=172.20.0.1</span></span><br><span class="line"><span class="attr">MASTER</span>=bond0</span><br><span class="line"><span class="attr">SLAVE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">NMCONTROLLED</span>=<span class="literal">no</span></span><br><span class="line"><span class="section">[root@localhost /etc/sysconfig/network-scripts]</span><span class="comment">#cat ifcfg-eth2</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">"eth2"</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">NETBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="comment">#IPADDR=172.20.50.110</span></span><br><span class="line"><span class="comment">#NETMASK=255.255.0.0</span></span><br><span class="line"><span class="comment">#DNS1=172.20.0.1</span></span><br><span class="line"><span class="attr">MASTER</span>=bond1</span><br><span class="line"><span class="attr">SLAVE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">NMCONTROLLED</span>=<span class="literal">no</span></span><br><span class="line"><span class="section">[root@localhost /etc/sysconfig/network-scripts]</span><span class="comment">#cat ifcfg-eth3</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">"eth3"</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">NETBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="comment">#IPADDR=172.20.50.110</span></span><br><span class="line"><span class="comment">#NETMASK=255.255.0.0</span></span><br><span class="line"><span class="comment">#DNS1=172.20.0.1</span></span><br><span class="line"><span class="attr">MASTER</span>=bond1</span><br><span class="line"><span class="attr">SLAVE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">NMCONTROLLED</span>=<span class="literal">no</span></span><br><span class="line"><span class="section">[root@localhost /etc/sysconfig/network-scripts]</span><span class="comment">#cat ifcfg-bond0</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">NAME</span>=bond0</span><br><span class="line"><span class="attr">DEVICE</span>=bond0</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BONDING_MASTER</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BONDING_OPTS</span>=<span class="string">"mode=1 miimon=100"</span></span><br><span class="line"><span class="attr">BRIDGE</span>=br0</span><br><span class="line"><span class="section">[root@localhost /etc/sysconfig/network-scripts]</span><span class="comment">#cat ifcfg-bond1</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">NAME</span>=bond1</span><br><span class="line"><span class="attr">DEVICE</span>=bond1</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BONDING_MASTER</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BONDING_OPTS</span>=<span class="string">"mode=1 miimon=100"</span></span><br><span class="line"><span class="attr">BRIDGE</span>=br1</span><br><span class="line"><span class="section">[root@localhost /etc/sysconfig/network-scripts]</span><span class="comment">#cat ifcfg-br0</span></span><br><span class="line"><span class="attr">TYPE</span>=bridge</span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">DEVICE</span>=br0</span><br><span class="line"><span class="attr">NAME</span>=br0</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">172.20</span>.<span class="number">50.110</span></span><br><span class="line"><span class="attr">PRFIX</span>=<span class="number">16</span></span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">172.20</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">DNS1</span>=<span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line"><span class="section">[root@localhost /etc/sysconfig/network-scripts]</span><span class="comment">#cat ifcfg-br1</span></span><br><span class="line"><span class="attr">TYPE</span>=bridge</span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">NAME</span>=br1</span><br><span class="line"><span class="attr">DEVICE</span>=br1</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">192.168</span>.<span class="number">50.200</span></span><br><span class="line"><span class="attr">PRFIX</span>=<span class="number">24</span></span><br><span class="line"><span class="comment">#GATEWAY=192.168.1.1</span></span><br><span class="line"><span class="comment">#DNS1=114.114.114.114</span></span><br></pre></td></tr></table></figure><p>做好网卡绑定</p><p><img src="/2020/03/09/kvm/%C2%96kvm%E6%9E%B6%E6%9E%84/image-110.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost ~]#ip a</span><br><span class="line"><span class="number">1</span>: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu <span class="number">65536</span> qdisc noqueue state UNKNOWN group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/loopback <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> brd <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">    inet <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/<span class="number">8</span> scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::<span class="number">1</span>/<span class="number">128</span> scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">2</span>: eth0: &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc pfifo_fast master bond0 state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">62</span>:<span class="number">2f</span>:<span class="number">59</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line"><span class="number">3</span>: eth1: &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc pfifo_fast master bond0 state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">62</span>:<span class="number">2f</span>:<span class="number">59</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line"><span class="number">4</span>: eth2: &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc pfifo_fast master bond1 state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">62</span>:<span class="number">2f</span>:<span class="number">6</span>d brd ff:ff:ff:ff:ff:ff</span><br><span class="line"><span class="number">5</span>: eth3: &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc pfifo_fast master bond1 state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">62</span>:<span class="number">2f</span>:<span class="number">6</span>d brd ff:ff:ff:ff:ff:ff</span><br><span class="line"><span class="number">6</span>: bond0: &lt;BROADCAST,MULTICAST,MASTER,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc noqueue master br0 state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">62</span>:<span class="number">2f</span>:<span class="number">59</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet6 fe80::<span class="number">20</span>c:<span class="number">29f</span>f:fe62:<span class="number">2f</span>59/<span class="number">64</span> scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">7</span>: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc noqueue state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">62</span>:<span class="number">2f</span>:<span class="number">59</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet <span class="number">172.20</span><span class="number">.50</span><span class="number">.120</span>/<span class="number">16</span> brd <span class="number">172.20</span><span class="number">.255</span><span class="number">.255</span> scope global br0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::<span class="number">20</span>c:<span class="number">29f</span>f:fe62:<span class="number">2f</span>59/<span class="number">64</span> scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">8</span>: bond1: &lt;BROADCAST,MULTICAST,MASTER,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc noqueue master br1 state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">62</span>:<span class="number">2f</span>:<span class="number">6</span>d brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet6 fe80::<span class="number">20</span>c:<span class="number">29f</span>f:fe62:<span class="number">2f</span>6d/<span class="number">64</span> scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">9</span>: br1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc noqueue state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">62</span>:<span class="number">2f</span>:<span class="number">6</span>d brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet <span class="number">192.168</span><span class="number">.50</span><span class="number">.201</span>/<span class="number">24</span> brd <span class="number">192.168</span><span class="number">.50</span><span class="number">.255</span> scope global br1</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::<span class="number">20</span>c:<span class="number">29f</span>f:fe62:<span class="number">2f</span>6d/<span class="number">64</span> scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">10</span>: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu <span class="number">1500</span> qdisc noqueue state DOWN group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">52</span>:<span class="number">54</span>:<span class="number">00</span>:e4:<span class="number">05</span>:<span class="number">2</span>e brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet <span class="number">192.168</span><span class="number">.122</span><span class="number">.1</span>/<span class="number">24</span> brd <span class="number">192.168</span><span class="number">.122</span><span class="number">.255</span> scope global virbr0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">11</span>: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu <span class="number">1500</span> qdisc pfifo_fast master virbr0 state DOWN group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">52</span>:<span class="number">54</span>:<span class="number">00</span>:e4:<span class="number">05</span>:<span class="number">2</span>e brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure><p>在宿主2 创建虚拟机vm2 vm5</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建vm2 vm5磁盘</span></span><br><span class="line">[root@localhost ~]#qemu-img create -f qcow2 /var/lib/libvirt/images/vm5.qcow2 10G</span><br><span class="line">Formatting <span class="string">'/var/lib/libvirt/images/vm5.quow2'</span>, <span class="attribute">fmt</span>=qcow2 <span class="attribute">size</span>=10737418240 <span class="attribute">encryption</span>=off <span class="attribute">cluster_size</span>=65536 <span class="attribute">lazy_refcounts</span>=off </span><br><span class="line">[root@localhost ~]#qemu-img create -f qcow2 /var/lib/libvirt/images/vm2.qcow2 10G</span><br><span class="line">Formatting <span class="string">'/var/lib/libvirt/images/vm2.quow2'</span>, <span class="attribute">fmt</span>=qcow2 <span class="attribute">size</span>=10737418240 <span class="attribute">encryption</span>=off <span class="attribute">cluster_size</span>=65536 <span class="attribute">lazy_refcounts</span>=off</span><br></pre></td></tr></table></figure><p>创建虚拟机 网卡设置为桥接的br0网卡</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">virt-install --virt-type kvm \</span><br><span class="line">-<span class="ruby">-name linux-vm2 \</span></span><br><span class="line"><span class="ruby">--memory <span class="number">1024</span> \</span></span><br><span class="line"><span class="ruby">--vcpus <span class="number">2</span> \</span></span><br><span class="line"><span class="ruby">--cdrom=<span class="regexp">/usr/local</span><span class="regexp">/src/</span>CentOS-<span class="number">7</span>-x86_64-Minimal-<span class="number">1810</span>.iso \</span></span><br><span class="line"><span class="ruby">--disk path=<span class="regexp">/var/lib</span><span class="regexp">/libvirt/images</span><span class="regexp">/vm2.qcow2 \</span></span></span><br><span class="line"><span class="ruby">--network bridge=br<span class="number">0</span> \</span></span><br><span class="line"><span class="ruby">--graphics vnc,listen=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> \</span></span><br><span class="line"><span class="ruby">--noautoconsole</span></span><br></pre></td></tr></table></figure><p>运行图形管理器</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> google-noto-sans-simplified-chinese-fonts.noarch</span><br><span class="line">env LANG=<span class="string">"zh_CN.UTF-8"</span> virt-manager</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/kvm/%C2%96kvm%E6%9E%B6%E6%9E%84/image-111.png" alt="img"></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#复制vm2硬盘到宿主1</span></span><br><span class="line">scp vm2.qcow2 <span class="number">172.20</span>.<span class="number">50.110</span><span class="symbol">:/var/lib/libvirt/images/vm1</span>.qcow2</span><br><span class="line">scp /usr/local/src/CentOS<span class="number">-7</span>-x86_64-Minimal<span class="number">-1810</span>.iso <span class="number">172.20</span>.<span class="number">50.110</span><span class="symbol">:/usr/local/src/CentOS-</span><span class="number">7</span>-x86_64-Minimal<span class="number">-1810</span>.iso</span><br><span class="line"><span class="comment">#在宿主1创建虚拟机vm1</span></span><br><span class="line">virt-install --virt-type kvm \</span><br><span class="line">--name linux-vm1 \</span><br><span class="line">--memory <span class="number">1024</span> \</span><br><span class="line">--vcpus <span class="number">2</span> \</span><br><span class="line">--cdrom=<span class="regexp">/usr/local</span><span class="regexp">/src/</span>CentOS<span class="number">-7</span>-x86_64-Minimal<span class="number">-1810</span>.iso \</span><br><span class="line">--disk path=<span class="regexp">/var/lib</span><span class="regexp">/libvirt/images</span><span class="regexp">/vm1.qcow2 \</span></span><br><span class="line"><span class="regexp">--network bridge=br0 \</span></span><br><span class="line"><span class="regexp">--graphics vnc,listen=0.0.0.0 \</span></span><br><span class="line"><span class="regexp">--noautoconsole</span></span><br></pre></td></tr></table></figure><p>最后数量</p><p><img src="/2020/03/09/kvm/%C2%96kvm%E6%9E%B6%E6%9E%84/image-112-1024x266.png" alt="img"></p><p>vm1 vm2 有两块网卡，内网与外网，3，4只有一块</p><h3 id="虚拟机管理命令："><a href="#虚拟机管理命令：" class="headerlink" title="虚拟机管理命令："></a>虚拟机管理命令：</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@s1</span> src]<span class="meta"># virsh list #列出当前开机的</span></span><br><span class="line">[root<span class="symbol">@s1</span> src]<span class="meta"># virsh list --all 3列出所有</span></span><br><span class="line">[root<span class="symbol">@s1</span> src]<span class="meta"># virsh shutdown CentOS-7-x86_64 #正常关机</span></span><br><span class="line">[root<span class="symbol">@s1</span> src]<span class="meta"># virsh start  CentOS-7-x86_64 #正常关机</span></span><br><span class="line">[root<span class="symbol">@s1</span> src]<span class="meta"># virsh destroy  centos7 #强制停止/关机</span></span><br><span class="line">[root<span class="symbol">@s1</span> src]<span class="meta"># virsh undefine Win_2008_r2-x86_64 #强制删除</span></span><br><span class="line">[root<span class="symbol">@s1</span> src]<span class="meta"># virsh autostart  centos7 #设置开机自启动</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix安装</title>
      <link href="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/"/>
      <url>/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p><strong>ubuntu apt安装zabbix</strong></p><a id="more"></a><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、安装数据库</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# wget https://repo.zabbix.com/zabbix/<span class="number">4.0</span>/ubuntu/pool/main/z/zabbix-<span class="keyword">release</span>/zabbix-release_4<span class="number">.0</span><span class="number">-2</span>+bionic_all.deb</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# dpkg -i zabbix-release_4<span class="number">.0</span><span class="number">-2</span>+bionic_all.deb</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# apt <span class="keyword">update</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、安装Zabbix <span class="keyword">server</span>，Web前端，agent</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# apt -y install zabbix-<span class="keyword">server</span>-mysql zabbix-frontend-php zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、初始化数据库</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">create</span> <span class="keyword">database</span> zabbix <span class="type">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_bin;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> zabbix.* <span class="keyword">to</span> zabbix@<span class="number">192.168</span><span class="number">.6</span><span class="number">.10</span> identified <span class="keyword">by</span> <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改端口</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# grep <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> /etc/mysql/ -R</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# vim /etc/mysql/mariadb.conf.d/<span class="number">50</span>-<span class="keyword">server</span>.cnf</span><br><span class="line"></span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# systemctl <span class="keyword">restart</span> mariadb</span><br><span class="line"></span><br><span class="line">验证登录</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# mysql -uzabbix -p123456 -h192<span class="number">.168</span><span class="number">.6</span><span class="number">.10</span></span><br><span class="line">导入初始架构和数据，</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# zcat /usr/<span class="keyword">share</span>/doc/zabbix-<span class="keyword">server</span>-mysql*/<span class="keyword">create</span>.<span class="keyword">sql</span>.gz | mysql -uzabbix -p123456 -h192<span class="number">.168</span><span class="number">.6</span><span class="number">.10</span> zabbix</span><br><span class="line"></span><br><span class="line">MariaDB [zabbix]&gt; <span class="keyword">show</span> <span class="keyword">tables</span>;</span><br><span class="line">配置数据库</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBHost=<span class="number">192.168</span><span class="number">.6</span><span class="number">.10</span></span><br><span class="line">DBPassword=<span class="number">123456</span></span><br><span class="line"></span><br><span class="line">配置前端PHP</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# vim /etc/zabbix/apache.conf</span><br><span class="line">php_value <span class="type">date</span>.timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line">启动Zabbix <span class="keyword">server</span>和agent进程，并为它们设置开机自启</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# systemctl <span class="keyword">restart</span> zabbix-<span class="keyword">server</span> zabbix-agent apache2</span><br><span class="line">root@zabbix-<span class="keyword">server</span>:~# systemctl <span class="keyword">enable</span> zabbix-<span class="keyword">server</span> zabbix-agent apache2</span><br><span class="line"></span><br><span class="line">配置zabbix前端</span><br><span class="line">http://<span class="number">192.168</span><span class="number">.6</span><span class="number">.10</span>/zabbix/setup.php</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190713100952.png" alt="img"></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">zabbix加入中文语言</span><br><span class="line"></span><br><span class="line">root<span class="symbol">@zabbix</span>-server:~<span class="meta"># find / -name defines.inc.php</span></span><br><span class="line">/usr/share/zabbix/include/defines.inc.php</span><br><span class="line"></span><br><span class="line">root<span class="symbol">@zabbix</span>-server:~<span class="meta"># vim /usr/share/zabbix/<span class="meta-keyword">include</span>/defines.inc.php</span></span><br><span class="line">......</span><br><span class="line">define(<span class="string">'ZBX_GRAPH_FONT_NAME'</span>,        <span class="string">'simkai'</span>)<span class="comment">; // font file name</span></span><br><span class="line">.......</span><br><span class="line"></span><br><span class="line">define(<span class="string">'ZBX_FONT_NAME'</span>, <span class="string">'simkai'</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">搜索字体存放位置</span><br><span class="line">root<span class="symbol">@zabbix</span>-server:~<span class="meta"># find / -name graphfont*</span></span><br><span class="line">/usr/share/zabbix/assets/fonts/graphfont.ttf</span><br><span class="line"></span><br><span class="line">放入新的字体（下载楷体常规）</span><br><span class="line">root<span class="symbol">@zabbix</span>-server:~<span class="meta"># cp simkai.ttf /usr/share/zabbix/assets/fonts/</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190713102907.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">========================================================================= </span><br><span class="line">ubuntu编译安装zabbix <span class="number">4.0</span><span class="number">.10</span></span><br><span class="line"></span><br><span class="line">https:<span class="comment">//www.zabbix.com/download_sources#tab:40LTS</span></span><br><span class="line"></span><br><span class="line">zabbix-server:<span class="number">192.168</span><span class="number">.6</span><span class="number">.10</span></span><br><span class="line">zabbix-mysql:<span class="number">192.168</span><span class="number">.6</span><span class="number">.20</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、安装mariadb数据库</span><br><span class="line"><span class="symbol">root@</span>zabbix-mysql:~# apt-<span class="keyword">get</span> install mariadb-server mariadb-client apt-<span class="keyword">get</span>  install  mariadb-server mariadb-client</span><br><span class="line"></span><br><span class="line">建立数据库</span><br><span class="line">MariaDB [(none)]&gt; create database zabbix character <span class="keyword">set</span> utf8 collate utf8_bin;</span><br><span class="line">Query OK, <span class="number">1</span> row affected (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">授权</span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to <span class="symbol">zabbix@</span><span class="string">"192.168.6.%"</span> identified by <span class="string">'123456'</span>;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">安全加固脚本</span><br><span class="line"><span class="symbol">root@</span>zabbix-mysql:/usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span>/database/mysql# mysql_secure_installation</span><br><span class="line"></span><br><span class="line">修改监听端口</span><br><span class="line"><span class="symbol">root@</span>zabbix-mysql:~# grep <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> /etc/mysql/ -R</span><br><span class="line">/etc/mysql/mariadb.conf.d/<span class="number">50</span>-server.cnf:bind-address = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-mysql:~# systemctl restart mariadb</span><br><span class="line"><span class="symbol">root@</span>zabbix-mysql:~# systemctl enable mariadb</span><br><span class="line"></span><br><span class="line">zabbix服务端测试登录数据库</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# mysql -uzabbix -p123456 -h192<span class="number">.168</span><span class="number">.6</span><span class="number">.20</span></span><br><span class="line"><span class="number">2</span>、安装zabbix依赖包</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# apt-<span class="keyword">get</span>  install   apache2 apache2-bin apache2-data apache2-utils fontconfig-config fonts-dejavu-core fping libapache2-mod-php   libapache2-mod-php7<span class="number">.2</span> libapr1 libaprutil1 libaprutil1-dbd-sqlite3 libaprutil1-ldap libfontconfig1 libgd3 libiksemel3   libjbig0 libjpeg-turbo8 libjpeg8 liblua5<span class="number">.2</span><span class="number">-0</span> libodbc1 libopenipmi0 libsensors4 libsnmp-base libsnmp30 libsodium23 libssh2<span class="number">-1</span>  libtiff5 libwebp6 libxpm4 php-bcmath php-common php-gd php-ldap php-mbstring php-mysql php-xml php7<span class="number">.2</span>-bcmath php7<span class="number">.2</span>-cli  php7<span class="number">.2</span>-common php7<span class="number">.2</span>-gd php7<span class="number">.2</span>-json php7<span class="number">.2</span>-ldap php7<span class="number">.2</span>-mbstring php7<span class="number">.2</span>-mysql php7<span class="number">.2</span>-opcache php7<span class="number">.2</span>-readline   php7<span class="number">.2</span>-xml snmpd  ssl-cert ttf-dejavu-core      libmysqlclient-dev  libxml2-dev  libxml2 snmp  libsnmp-dev   libevent-dev  openjdk<span class="number">-8</span>-jdk curl libcurl4-openssl-dev</span><br><span class="line"><span class="number">3</span>、开始编译安装zabbix4<span class="number">.0</span><span class="number">.10</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# cd /usr/local/src/</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:src# tar xvf zabbix<span class="number">-4.0</span><span class="number">.10</span>.tar.gz </span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span># ./configure --prefix=/app/zabbix_server  --enable-server --enable-agent --with-mysql  --with-net-snmp --with-libcurl --with-libxml2  --enable-java</span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span># make &amp;&amp; make install </span><br><span class="line"><span class="number">4</span>、数据库初始化</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# cd /usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span>/database/mysql/</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span>/database/mysql# mysql -uzabbix -p123456 -h192<span class="number">.168</span><span class="number">.6</span><span class="number">.20</span> zabbix  &lt; schema.sql</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span>/database/mysql# mysql -uzabbix -p123456 -h192<span class="number">.168</span><span class="number">.6</span><span class="number">.20</span> zabbix  &lt;  images.sql</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span>/database/mysql# mysql -uzabbix -p123456 -h192<span class="number">.168</span><span class="number">.6</span><span class="number">.20</span> zabbix  &lt;  data.sql </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、编辑zabbix配置文件</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span>/database/mysql# vim /app/zabbix_server/etc/zabbix_server.conf</span><br><span class="line">......</span><br><span class="line">DBHost=<span class="number">192.168</span><span class="number">.6</span><span class="number">.20</span></span><br><span class="line"></span><br><span class="line">DBName=zabbix</span><br><span class="line"></span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=<span class="number">123456</span></span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、创建zbbix用户</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# useradd zabbix</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# chown zabbix.zabbix /app/zabbix_server -R</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、启动zabbix</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# /app/zabbix_server/sbin/zabbix_server -c /app/zabbix_server/etc/zabbix_server.conf</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# ss -nlt</span><br><span class="line"><span class="number">8</span>、安装zabbix-web界面</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# rm -rf /var/www/html/index.html</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# mkdir /var/www/html/zabbix</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# cp -a /usr/local/src/zabbix<span class="number">-4.0</span><span class="number">.10</span>/frontends/php<span class="comment">/* /var/www/html/zabbix/</span></span><br><span class="line"><span class="comment">root@zabbix-server:~# chown zabbix.zabbix /var/www/html/zabbix -R</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">9、启动apache2</span></span><br><span class="line"><span class="comment">root@zabbix-server:~# systemctl restart apache2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">10、安装php依赖包</span></span><br><span class="line"><span class="comment">root@zabbix-server:/usr/local/src/zabbix-4.0.10# apt-get   install php-gettext   php-xml php-net-socket php-gd php-mysql</span></span><br><span class="line"><span class="comment">11、web界面部署zabbix</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190712234141.png" alt="img"></p><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190712234343.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">解决报错</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# find / -name php.ini</span><br><span class="line">/etc/php/<span class="number">7.2</span>/apache2/php.ini</span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# vim /etc/php/<span class="number">7.2</span>/apache2/php.ini</span><br><span class="line">post_max_size = <span class="number">16</span>M</span><br><span class="line">max_execution_time = <span class="number">300</span></span><br><span class="line">max_input_time = <span class="number">300</span></span><br><span class="line">date.timezone = Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-server:~# systemctl restart apache2</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190712235122.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">初始化数据库配置</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190712235312.png" alt="img"></p><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190712235421.png" alt="img"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">更改权限  <span class="selector-tag">chown</span> <span class="selector-tag">zabbix</span><span class="selector-class">.zabbix</span> <span class="selector-tag">zabbix</span><span class="selector-class">.conf</span><span class="selector-class">.php</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190712235703.png" alt="img"></p><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190712235821.png" alt="img"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">默认账户密码 <span class="keyword">Admin</span> zabbix</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%C2%96zabbix%E5%AE%89%E8%A3%85/QQ%E6%88%AA%E5%9B%BE20190713000226.png" alt="img"></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">zabbix选择中文语言需要更改字体</span><br><span class="line"><span class="number">1</span>、</span><br><span class="line">放入新的字体（可以从windows中获取）</span><br><span class="line">root<span class="variable">@zabbix</span>-<span class="symbol">server:</span>~<span class="comment"># cd /var/www/html/zabbix/assets/fonts/</span></span><br><span class="line">simkai.ttf</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、</span><br><span class="line">/var/www/html/zabbix</span><br><span class="line">root<span class="variable">@zabbix</span>-<span class="symbol">server:</span>zabbix<span class="comment"># vim include/defines.inc.php</span></span><br><span class="line">......</span><br><span class="line">define(<span class="string">'ZBX_GRAPH_FONT_NAME'</span>, <span class="string">'simkai'</span>); <span class="regexp">//</span> font file name       <span class="comment">#69行 </span></span><br><span class="line">.......</span><br><span class="line">define(<span class="string">'ZBX_FONT_NAME'</span>, <span class="string">'simkai'</span>);          <span class="comment">#110行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">启动zabbix_agentd监控本机</span><br><span class="line">root<span class="variable">@zabbix</span>-<span class="symbol">server:</span>~<span class="comment"># /app/zabbix_server/sbin/zabbix_agentd -c /app/zabbix_server/etc/zabbix_agentd.conf</span></span><br></pre></td></tr></table></figure><p><img src="http://www.xingbofine.com/wp-content/uploads/2019/07/QQ%E6%88%AA%E5%9B%BE20190713102907.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">============================================================================</span><br><span class="line">制作启动脚本</span><br><span class="line">zabbix-agent.service  zabbix-server.service</span><br><span class="line"></span><br><span class="line">1、配置文件设定pid路径</span><br><span class="line">root@zabbix-server:~# vim /app/zabbix_server/etc/zabbix_server.conf</span><br><span class="line"><span class="attribute">PidFile</span>=/app/zabbix_server/run/zabbix_server.pid</span><br><span class="line"></span><br><span class="line">2、创建pid目录</span><br><span class="line">root@zabbix-server:~# mkdir /app/zabbix_server/run</span><br><span class="line">root@zabbix-server:~# chown zabbix.zabbix /app/zabbix_server/run</span><br><span class="line"></span><br><span class="line">3、配置zabbix-server脚本</span><br><span class="line">root@zabbix-server:~# vim /lib/systemd/system/zabbix-server.service </span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Zabbix Server</span><br><span class="line"><span class="attribute">After</span>=syslog.target</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Environment</span>=<span class="string">"CONFFILE=/app/zabbix_server/etc/zabbix_server.conf"</span></span><br><span class="line"><span class="attribute">EnvironmentFile</span>=-/etc/default/zabbix-server</span><br><span class="line"><span class="attribute">Type</span>=forking</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"><span class="attribute">PIDFile</span>=/app/zabbix_server/run/zabbix_server.pid</span><br><span class="line"><span class="attribute">KillMode</span>=control-group</span><br><span class="line"><span class="attribute">ExecStart</span>=/app/zabbix_server/sbin/zabbix_server -c <span class="variable">$CONFFILE</span></span><br><span class="line"><span class="attribute">ExecStop</span>=/bin/kill -SIGTERM <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attribute">RestartSec</span>=10s</span><br><span class="line"><span class="attribute">TimeoutSec</span>=infinity</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line"></span><br><span class="line">4、验证启动、停止</span><br><span class="line">root@zabbix-server:~# systemctl daemon-reload</span><br><span class="line">root@zabbix-server:~# systemctl start zabbix-server.service </span><br><span class="line">root@zabbix-server:~# systemctl stop zabbix-server.service</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span>.</span><br><span class="line">1、配置文件设定pid路径</span><br><span class="line">root@zabbix-server:~# vim /app/zabbix_server/etc/zabbix_agentd.conf</span><br><span class="line"><span class="attribute">PidFile</span>=/app/zabbix_agent/run/zabbix_agentd.pid</span><br><span class="line"></span><br><span class="line">2、创建pid目录</span><br><span class="line">root@zabbix-server:~# mkdir /app/zabbix_agent/run/ -p</span><br><span class="line">root@zabbix-server:~# chown zabbix.zabbix /app/zabbix_agent </span><br><span class="line"></span><br><span class="line">3、配置zabbix-agent.service脚本</span><br><span class="line">root@zabbix-server:~# vim /lib/systemd/system/zabbix-agent.service</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Zabbix Agent</span><br><span class="line"><span class="attribute">After</span>=syslog.target</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Environment</span>=<span class="string">"CONFFILE=/app/zabbix_server/etc/zabbix_agentd.conf"</span></span><br><span class="line"><span class="attribute">EnvironmentFile</span>=-/etc/default/zabbix-agent</span><br><span class="line"><span class="attribute">Type</span>=forking</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"><span class="attribute">PIDFile</span>=/app/zabbix_agent/run/zabbix_agentd.pid</span><br><span class="line"><span class="attribute">KillMode</span>=control-group</span><br><span class="line"><span class="attribute">ExecStart</span>=/app/zabbix_server/sbin/zabbix_agentd -c <span class="variable">$CONFFILE</span></span><br><span class="line"><span class="attribute">ExecStop</span>=/bin/kill -SIGTERM <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attribute">RestartSec</span>=10s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line"></span><br><span class="line">4、验证启动、停止</span><br><span class="line">root@zabbix-node1:~# systemctl daemon-reload</span><br><span class="line">root@zabbix-node1:~# systemctl restart zabbix-agent.service </span><br><span class="line">root@zabbix-node1:~# ps -ef | grep zabbix</span><br><span class="line"></span><br><span class="line">配置文件</span><br><span class="line"></span><br><span class="line">root@zabbix-server:~# mkdir /app/zabbix_server/logs</span><br><span class="line">root@zabbix-server:~# chown zabbix.zabbix /app/zabbix_server/logs/</span><br><span class="line"></span><br><span class="line">root@zabbix-server:~# vim /app/zabbix_server/etc/zabbix_server.conf</span><br><span class="line"><span class="attribute">LogFile</span>=/app/zabbix_server/logs/zabbix_server.log     #日志</span><br><span class="line"></span><br><span class="line"><span class="attribute">AllowRoot</span>=0             #0关闭root启动，1开启root启动</span><br><span class="line"><span class="attribute">User</span>=zabbix             #启动zabbix服务的用户</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控linux服务器</title>
      <link href="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7linux%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7linux%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span>、在需要监控的服务器安装agent </span><br><span class="line"><span class="symbol">root@</span>zabbix-node1:~/zabbix<span class="number">-4.0</span><span class="number">.10</span># ./configure --prefix=/app/zabbix_agent --enable-agent</span><br><span class="line"><span class="symbol">root@</span>zabbix-node1:~/zabbix<span class="number">-4.0</span><span class="number">.10</span># make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">修改agent配置</span><br><span class="line"><span class="symbol">root@</span>zabbix-node1:~# vim /app/zabbix_agent/etc/zabbix_agentd.conf</span><br><span class="line">Server=<span class="number">192.168</span><span class="number">.6</span><span class="number">.10</span>           #指定server端，被动模式</span><br><span class="line">Hostname=<span class="number">192.168</span><span class="number">.6</span><span class="number">.20</span>         #在server监控的主机名显示</span><br><span class="line"></span><br><span class="line">AllowRoot=<span class="number">1</span>                   #允许root启动</span><br><span class="line">User=root                     #root用户启动</span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-node1:~# /app/zabbix_agent/sbin/zabbix_agentd </span><br><span class="line"><span class="symbol">root@</span>zabbix-node1:~# ss -nlt</span><br><span class="line"><span class="number">2</span>、在zabbix-server端创建主机、模板</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7linux%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E6%88%AA%E5%9B%BE20190713114519.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7linux%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E6%88%AA%E5%9B%BE20190713114714.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7linux%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E6%88%AA%E5%9B%BE20190713125722.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控Tomcat</title>
      <link href="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Tomcat/"/>
      <url>/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Tomcat/</url>
      
        <content type="html"><![CDATA[<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get采集信息</span><br><span class="line">zabbix_get -s <span class="number">192.168</span><span class="number">.6</span><span class="number">.20</span> -p <span class="number">10050</span> -k <span class="string">"system.hostname"</span></span><br><span class="line">java gateway</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Tomcat/QQ%E6%88%AA%E5%9B%BE20190713154548.png" alt="img"></p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、tomcat启动脚本加入监控参数</span><br><span class="line">root@zabbix-node2:/app/tomcat<span class="comment"># vim bin/catalina.sh</span></span><br><span class="line"><span class="attr">CATALINA_OPTS="$CATALINA_OPTS</span></span><br><span class="line">-Dcom.sun.management.jmxremote             <span class="comment">#启用远程监控JMX</span></span><br><span class="line">-Dcom.sun.management.jmxremote.<span class="attr">port=12345</span>  <span class="comment">#默认启动的JMX端口号，要和zabbix添加主机时候的端口一致即可</span></span><br><span class="line">-Dcom.sun.management.jmxremote.<span class="attr">authenticate=false</span>  <span class="comment">#不使用用户名密码</span></span><br><span class="line">-Dcom.sun.management.jmxremote.<span class="attr">ssl=false</span>           <span class="comment">#不使用ssl认证</span></span><br><span class="line">-Djava.rmi.server.<span class="attr">hostname=192.168.6.30"</span>    <span class="comment">#tomcat主机自己的IP地址，不要写zabbix服务器的地址</span></span><br><span class="line"></span><br><span class="line">重启服务验证<span class="number">12345</span>端口</span><br><span class="line">root@zabbix-node2:/app/tomcat<span class="comment"># ./bin/catalina.sh  stop</span></span><br><span class="line">root@zabbix-node2:/app/tomcat<span class="comment"># ./bin/catalina.sh  start</span></span><br><span class="line">root@zabbix-node2:/app/tomcat<span class="comment"># ss -nlt</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、windows安装jdk环境</span><br><span class="line">默认安装目录</span><br><span class="line">C:\Program Files\Java\jdk1.<span class="number">8.0</span>_202\bin</span><br><span class="line">找到jconsole.exe  </span><br><span class="line">点击连接测试</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Tomcat/QQ%E6%88%AA%E5%9B%BE20190713142825.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">检测采集数据正常</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Tomcat/QQ%E6%88%AA%E5%9B%BE20190713142932.png" alt="img"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">3、配置java gateway ，最好单独一台服务器装java gateway</span><br><span class="line">root@zabbix-server:~# ll /app/zabbix_server/sbin/zabbix_java/settings.sh </span><br><span class="line"><span class="attribute">LISTEN_IP</span>=<span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="attribute">START_POLLERS</span>=20              #采集数量</span><br><span class="line"><span class="attribute">TIMEOUT</span>=30                    #采集到数据，返回时间</span><br><span class="line"></span><br><span class="line">启动java gateway</span><br><span class="line">root@zabbix-server:~# /app/zabbix_server/sbin/zabbix_java/startup.sh </span><br><span class="line">root@zabbix-server:~# ss -nlt</span><br><span class="line">10052端口</span><br><span class="line"></span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line">apt安装gateway 配置和编译的一样</span><br><span class="line">root@zabbix-server:~# apt-<span class="builtin-name">get</span> install zabbix-java-gateway</span><br><span class="line">/etc/zabbix/zabbix_java_gateway.conf</span><br><span class="line">systemctl restart zabbix-java-gateway.service</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span>.</span><br><span class="line"></span><br><span class="line">4、配置zabbix-server</span><br><span class="line">root@zabbix-server:~# vim /app/zabbix_server/etc/zabbix_server.conf</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"><span class="attribute">JavaGateway</span>=192.168.6.10         #javagateway服务器地址</span><br><span class="line"><span class="attribute">JavaGatewayPort</span>=10052            #监听端口</span><br><span class="line"><span class="attribute">StartJavaPollers</span>=20              #发送请求数量给javagateway，最好和<span class="attribute">START_POLLERS</span>=20一样</span><br><span class="line"></span><br><span class="line">root@zabbix-server:~# systemctl restart zabbix-server.service</span><br><span class="line">root@zabbix-server:~# ps -ef | grep java</span><br><span class="line">java进程是否匹配配置的20个</span><br></pre></td></tr></table></figure><p>5、添加tomcat主机、模板</p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Tomcat/QQ%E6%88%AA%E5%9B%BE20190713152052.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Tomcat/QQ%E6%88%AA%E5%9B%BE20190713152209.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Tomcat/QQ%E6%88%AA%E5%9B%BE20190713160219.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">配置完监控，一直采集不到数据，而且确定配置没有问题的话采用命令来采集数据</span><br><span class="line"></span><br><span class="line">使用cmdline-jmxclient<span class="number">-0.10</span><span class="number">.3</span>.jar </span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src# java -jar cmdline-jmxclient<span class="number">-0.10</span><span class="number">.3</span>.jar --help</span><br><span class="line"></span><br><span class="line">测试能否获取到java 当前已经分配的线程数</span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src# java -jar cmdline-jmxclient<span class="number">-0.10</span><span class="number">.3</span>.jar - <span class="number">192.168</span><span class="number">.6</span><span class="number">.30</span>:<span class="number">12345</span> <span class="string">'Catalina:name="http-bio-8080",type=ThreadPool'</span> currentThreadCount</span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src# java -jar cmdline-jmxclient<span class="number">-0.10</span><span class="number">.3</span>.jar - <span class="number">192.168</span><span class="number">.6</span><span class="number">.30</span>:<span class="number">12345</span> <span class="string">'Catalina:name="http-nio-8080",type=ThreadPool'</span> currentThreadCount</span><br><span class="line"><span class="number">07</span>/<span class="number">13</span>/<span class="number">2019</span> <span class="number">08</span>:<span class="number">46</span>:<span class="number">26</span> +<span class="number">0000</span> org.archive.jmx.Client currentThreadCount: <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>zabbix-server:/usr/local/src# java -jar cmdline-jmxclient<span class="number">-0.10</span><span class="number">.3</span>.jar - <span class="number">192.168</span><span class="number">.6</span><span class="number">.30</span>:<span class="number">12345</span> <span class="string">'Catalina:name="http-nio-8080",type=ThreadPool'</span> maxThreads</span><br><span class="line"><span class="number">07</span>/<span class="number">13</span>/<span class="number">2019</span> <span class="number">08</span>:<span class="number">48</span>:<span class="number">32</span> +<span class="number">0000</span> org.archive.jmx.Client maxThreads: <span class="number">200</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控Nginx-自定义模板</title>
      <link href="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>1、安装agent</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">1、安装agent</span><br><span class="line"><span class="comment"># apt install zabbix-agent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">Server=192.168.6.10</span><br><span class="line">Hostname=192.168.6.30</span><br><span class="line">AllowRoot=1</span><br><span class="line">User=root</span><br><span class="line"></span><br><span class="line">zabbix_agentd</span><br><span class="line"><span class="comment"># systemctl restart zabbix-agent</span></span><br><span class="line"></span><br><span class="line">2、nginx开启状态页</span><br><span class="line"><span class="comment"># vim /app/nginx/conf/nginx.conf </span></span><br><span class="line">       location /nginx_status &#123;</span><br><span class="line">          stub_status;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx -t</span></span><br><span class="line"><span class="comment"># nginx</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打开状态页信息</span><br><span class="line"><span class="comment"># curl http://192.168.6.30/nginx_status</span></span><br><span class="line">Active connections: 2          </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 2 2 3 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 1 </span><br><span class="line"></span><br><span class="line">提取状态页脚本</span><br><span class="line"><span class="comment"># vim check_nginx.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">host=<span class="variable">$&#123;2:-'127.0.0.1'&#125;</span></span><br><span class="line">port=<span class="variable">$&#123;3:-'80'&#125;</span></span><br><span class="line">page=<span class="variable">$&#123;4:-'nginx_status'&#125;</span></span><br><span class="line">info=$(/usr/bin/curl --connect-timeout 5 -s http://<span class="variable">$&#123;host&#125;</span>:<span class="variable">$&#123;port&#125;</span>/<span class="variable">$&#123;page&#125;</span> 2&gt;/dev/null)</span><br><span class="line">code=$(/usr/bin/curl --connect-timeout 5 -o /dev/null -s -w %&#123;http_code&#125; http://<span class="variable">$&#123;host&#125;</span>:<span class="variable">$&#123;port&#125;</span>/<span class="variable">$&#123;page&#125;</span>)</span><br><span class="line">proc=$(/usr/bin/pgrep nginx | wc -l)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  status)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$code</span> <span class="variable">$proc</span>"</span> | awk <span class="string">'&#123;code=$1&#125;&#123;proc=$2&#125;END&#123;if(code == "200" &amp;&amp; proc != 0)&#123;printf("%d\n",1)&#125;else&#123;printf("%d\n",0)&#125;&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  active)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$info</span>"</span> | awk <span class="string">'/^Active/&#123;var=$NF&#125;END&#123;if(var~/^[0-9]+$/)&#123;printf("%d\n",var)&#125;else&#123;printf("%d\n",0)&#125;&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  reading)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$info</span>"</span> | awk <span class="string">'/Reading/ &#123;print $2&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  writing)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$info</span>"</span> | awk <span class="string">'/Writing/ &#123;print $4&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  waiting)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$info</span>"</span> | awk <span class="string">'/Waiting/ &#123;print $6&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  accepts)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$info</span>"</span> | awk <span class="string">'NR==3 &#123;print $1&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  handled)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$info</span>"</span> | awk <span class="string">'NR==3 &#123;print $2&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  requests)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$info</span>"</span> | awk <span class="string">'NR==3 &#123;print $3&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  restimes)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$info</span>"</span> | awk <span class="string">'BEGIN&#123;OFMT="%.3f"&#125; NR==3 &#123;print $4/$3&#125;'</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ZBX_NOTSUPPORTED"</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># cp check_nginx.sh /etc/zabbix/zabbix_agentd.conf.d/</span></span><br><span class="line">3、导入脚本</span><br><span class="line">root@zabbix-node2:~<span class="comment"># vim /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">UserParameter=nginx.status[*],/etc/zabbix/zabbix_agentd.conf.d/check_nginx.sh <span class="variable">$1</span> <span class="variable">$2</span>   <span class="comment">#自定义监控项</span></span><br><span class="line">4、使用zabbix_get命令测试</span><br><span class="line"><span class="comment"># /app/zabbix_server/bin/zabbix_get -s 192.168.6.30 -p 10050 -k "nginx.status[writing]"</span></span><br><span class="line"></span><br><span class="line">5、创建模板</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713175519.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建应用集</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713175617.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建监控项</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713175950.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713180710.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">然后主机关联刚刚创建的check_nginx模板</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713180122.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加图形</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713180858.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713183108.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713184714.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713184605.png" alt="img"></p><p><img src="/2020/03/09/zabbix/Zabbix%E7%9B%91%E6%8E%A7Nginx-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF/QQ%E6%88%AA%E5%9B%BE20190713184918.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix-porxy的主动模式</title>
      <link href="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/"/>
      <url>/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>zabbix是一个分布式的监控系统，支持通过代理服务器zabbix proxy收集zabbix agent的数据，然后把收集保存在本地数据库并发送给zabbix server进行统一存储和展示。</p><a id="more"></a><h2 id="zabbix-proxy和zabbix-server的区别"><a href="#zabbix-proxy和zabbix-server的区别" class="headerlink" title="zabbix-proxy和zabbix-server的区别"></a>zabbix-proxy和zabbix-server的区别</h2><table><thead><tr><th align="left">功能</th><th align="left">zabbix proxy</th><th align="left">zabbix server</th></tr></thead><tbody><tr><td align="left">轻量级</td><td align="left">是</td><td align="left">相对重量级</td></tr><tr><td align="left">图形</td><td align="left">无</td><td align="left">带图形控制界面</td></tr><tr><td align="left">可以独立工作</td><td align="left">是，可以独立采集数据并存储</td><td align="left">是，即数据采集、存储、分析、展 示于一体</td></tr><tr><td align="left">易维护</td><td align="left">是，配置完成后基本无需管理</td><td align="left">维护也不难</td></tr><tr><td align="left">独立数据库</td><td align="left">保留少量最近数据</td><td align="left">保留指定时间内的所有数据</td></tr><tr><td align="left">报警通知</td><td align="left">否，代理服务器不发送邮件通知</td><td align="left">支持邮件、短信等告警机制</td></tr></tbody></table><h2 id="zabbix-proxy实现"><a href="#zabbix-proxy实现" class="headerlink" title="zabbix-proxy实现"></a>zabbix-proxy实现</h2><table><thead><tr><th align="left">环境准备</th><th align="left">server</th><th align="left">IP</th><th align="left">os</th></tr></thead><tbody><tr><td align="left">zabbix</td><td align="left">192.168.27.10</td><td align="left">ubuntu 18.04.2</td><td align="left"></td></tr><tr><td align="left">proxy</td><td align="left">192.168.27.11</td><td align="left">ubuntu 18.04.2</td><td align="left"></td></tr><tr><td align="left">mysql</td><td align="left">192.168.27.12</td><td align="left">ubuntu 18.04.2</td><td align="left"></td></tr></tbody></table><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>安装数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@mysql:~<span class="comment"># apt install mariadb-server -y</span></span><br></pre></td></tr></table></figure><p>编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@mysql:~<span class="comment"># vim /etc/mysql/mariadb.conf.d/50-server.cnf </span></span><br><span class="line"><span class="built_in">bind</span>-address            = 192.168.27.12</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@mysql:~<span class="comment"># systemctl restart mariadb</span></span><br></pre></td></tr></table></figure><p>创建数据库并授权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; create database zabbix_proxy_active character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix_proxy_active.* to zabbix_proxy_active@<span class="string">'192.168.27.%'</span> identified by <span class="string">'111111'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="配置zabbix-proxy"><a href="#配置zabbix-proxy" class="headerlink" title="配置zabbix proxy"></a>配置zabbix proxy</h2><p>更新源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@proxy:~<span class="comment"># wget https://repo.zabbix.com/zabbix/4.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_4.0-2+bionic_all.deb</span></span><br><span class="line">root@proxy:~<span class="comment"># dpkg -i zabbix-release_4.0-2+bionic_all.deb</span></span><br><span class="line">root@proxy:~<span class="comment"># apt update</span></span><br></pre></td></tr></table></figure><p>安装zabbix-proxy</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@proxy:~<span class="comment"># apt install zabbix-proxy-mysql -y</span></span><br></pre></td></tr></table></figure><p>初始化数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@proxy:~<span class="comment"># zcat /usr/share/doc/zabbix-proxy-mysql/schema.sql.gz | mysql -uzabbix_proxy_active -p111111 -h192.168.27.12 zabbix_proxy_active</span></span><br></pre></td></tr></table></figure><p>编辑proxy配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">root@proxy:~<span class="comment"># vim /etc/zabbix/zabbix_proxy.conf </span></span><br><span class="line"><span class="comment">#配置代理的模式0为主动1为被动</span></span><br><span class="line">ProxyMode=0</span><br><span class="line"><span class="comment">#配置zabbix的server端地址</span></span><br><span class="line">Server=192.168.27.10</span><br><span class="line"><span class="comment">#配置Hostname需要和图形端的代理名称相同</span></span><br><span class="line">Hostname=Zabbix_proxy_active</span><br><span class="line"><span class="comment">#配置监听端口</span></span><br><span class="line">ListenPort=10051</span><br><span class="line"><span class="comment">#配置SourceIp，当存在多块网卡时，指定从哪个地址发送数据</span></span><br><span class="line">SourceIP=192.168.27.11</span><br><span class="line"><span class="comment">#开启远程命令，允许server到proxy上执行命令，在故障自愈时使用</span></span><br><span class="line">EnableRemoteCommands=1</span><br><span class="line"><span class="comment">#数据库地址</span></span><br><span class="line">DBHost=192.168.27.12</span><br><span class="line"><span class="comment">#数据库名</span></span><br><span class="line">DBName=zabbix_proxy_active</span><br><span class="line"><span class="comment">#配置数据库用户</span></span><br><span class="line">DBUser=zabbix_proxy_active</span><br><span class="line"><span class="comment">#配置数据库连接密码</span></span><br><span class="line">DBPassword=111111</span><br><span class="line"><span class="comment">#proxy将数据发送给server后将数据在本地保存多少时间</span></span><br><span class="line">ProxyLocalBuffer=720</span><br><span class="line"><span class="comment">#当proxy和server无法连接时将数据在本地保存多长时间，一般为720小时</span></span><br><span class="line">ProxyOfflineBuffer=720</span><br><span class="line"><span class="comment">#用来检测server端和proxy的心跳信息，一般设置为5分钟</span></span><br><span class="line">HeartbeatFrequency=120</span><br><span class="line"><span class="comment">#每间隔多少时间到server获取监控项，防止监控项更新后agent端无法获取到，一般设置为5分钟</span></span><br><span class="line">ConfigFrequency=600</span><br><span class="line"><span class="comment">#数据发送的间隔时间</span></span><br><span class="line">DataSenderFrequency=60</span><br><span class="line"><span class="comment">#开启多少个数据收集器</span></span><br><span class="line">StartPollers=20</span><br><span class="line"><span class="comment">#配置javagateway</span></span><br><span class="line">JavaGateway=192.168.27.14</span><br><span class="line"><span class="comment">#配置javagateway端口</span></span><br><span class="line">JavaGatewayPort=10052</span><br><span class="line"><span class="comment">#启动多少java的数据收集器</span></span><br><span class="line">StartJavaPollers=10</span><br><span class="line"><span class="comment">#当主机数量很多时，会将获取的监控项存放在缓存中，生产中设置2G</span></span><br><span class="line">CacheSize=128M</span><br><span class="line"><span class="comment">#启动多少个线程和数据库连接</span></span><br><span class="line">StartDBSyncers=10</span><br><span class="line"><span class="comment">#保存agent发送过来的监控数据的内存空间大小，生产中设置2G </span></span><br><span class="line">HistoryCacheSize=128M</span><br><span class="line"><span class="comment">#历史数据的索引</span></span><br><span class="line">HistoryIndexCacheSize=32M</span><br><span class="line"><span class="comment">#获取数据的最长等待时间，30秒</span></span><br><span class="line">Timeout=30</span><br><span class="line"><span class="comment">#配置fping用于探测网络设备</span></span><br><span class="line">FpingLocation=/usr/bin/fping</span><br><span class="line"><span class="comment">#设置启动用户为zabbix</span></span><br><span class="line">User=zabbix</span><br><span class="line"><span class="comment">#配置监听地址</span></span><br><span class="line">ListenIP=0.0.0.0</span><br></pre></td></tr></table></figure><p>启动服务，设置为开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@proxy:~<span class="comment"># systemctl start zabbix-proxy</span></span><br><span class="line">root@proxy:~<span class="comment"># systemctl enable zabbix-proxy</span></span><br></pre></td></tr></table></figure><h2 id="配置agent端"><a href="#配置agent端" class="headerlink" title="配置agent端"></a>配置agent端</h2><p>在MySQL服务上配置agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@mysql:~<span class="comment"># wget https://repo.zabbix.com/zabbix/4.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_4.0-2+bionic_all.deb</span></span><br><span class="line">root@mysql:~<span class="comment"># dpkg -i zabbix-release_4.0-2+bionic_all.deb</span></span><br><span class="line">root@mysql:~<span class="comment"># apt update</span></span><br><span class="line">root@mysql:~<span class="comment"># apt install zabbix-agent -y</span></span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@mysql:~<span class="comment"># vim /etc/zabbix/zabbix_agentd.conf </span></span><br><span class="line"><span class="comment">#配置server分别指向zabbix-server和zabbix-proxy</span></span><br><span class="line">Server=192.168.27.10,192.168.27.11</span><br><span class="line"><span class="comment">#配置ServerActive为proxy地址</span></span><br><span class="line">ServerActive=192.168.27.11</span><br><span class="line"><span class="comment">#配置Hostname为本机地址</span></span><br><span class="line">Hostname=192.168.27.12</span><br></pre></td></tr></table></figure><p>启动服务，设置为开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@mysql:~<span class="comment"># systemctl start zabbix-agent</span></span><br><span class="line">root@mysql:~<span class="comment"># systemctl enable zabbix-agent</span></span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2><h2 id="在web上添加代理"><a href="#在web上添加代理" class="headerlink" title="在web上添加代理"></a>在web上添加代理</h2><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/proxy1-1-1024x549.png" alt="img"></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/proxy2-1-1024x549.png" alt="img"></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/proxy3-1-1024x549.png" alt="img"></p><p><strong>## 更改模板的发现规则</strong></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/discover1-1024x549.png" alt="img"></p><p>分别将以下两个发现规则改为主动</p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/discover2-1024x549.png" alt="img"></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/discover3-1024x549.png" alt="img"></p><h2 id="更改监控项原型"><a href="#更改监控项原型" class="headerlink" title="更改监控项原型"></a>更改监控项原型</h2><p>将发现规则内的所有监控项原型改为主动模式 </p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/item1-1024x549.png" alt="img"></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/item2-1024x549.png" alt="img"></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/item3-1024x549.png" alt="img"></p><h2 id="在web上添加主机"><a href="#在web上添加主机" class="headerlink" title="在web上添加主机"></a>在web上添加主机</h2><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/addhost1-1024x549.png" alt="img"></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/addhost2-1024x549.png" alt="img"></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/addhost3-1024x549.png" alt="img"></p><p><img src="/2020/03/09/zabbix/zabbix-porxy%E7%9A%84%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F/addhost4-1024x549.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论 </tag>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邮件分级报警,mysql,snmp设备,服务故障自治愈</title>
      <link href="/2020/03/09/zabbix/%E9%82%AE%E4%BB%B6%E5%88%86%E7%BA%A7%E6%8A%A5%E8%AD%A6-mysql-snmp%E8%AE%BE%E5%A4%87-%E6%9C%8D%E5%8A%A1%E6%95%85%E9%9A%9C%E8%87%AA%E6%B2%BB%E6%84%88/"/>
      <url>/2020/03/09/zabbix/%E9%82%AE%E4%BB%B6%E5%88%86%E7%BA%A7%E6%8A%A5%E8%AD%A6-mysql-snmp%E8%AE%BE%E5%A4%87-%E6%9C%8D%E5%8A%A1%E6%95%85%E9%9A%9C%E8%87%AA%E6%B2%BB%E6%84%88/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/03/09/zabbix/%E9%82%AE%E4%BB%B6%E5%88%86%E7%BA%A7%E6%8A%A5%E8%AD%A6-mysql-snmp%E8%AE%BE%E5%A4%87-%E6%9C%8D%E5%8A%A1%E6%95%85%E9%9A%9C%E8%87%AA%E6%B2%BB%E6%84%88/QQ%E6%88%AA%E5%9B%BE20190715190444.png" alt="img"></p><a id="more"></a><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、创建报警媒介类型</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%E9%82%AE%E4%BB%B6%E5%88%86%E7%BA%A7%E6%8A%A5%E8%AD%A6-mysql-snmp%E8%AE%BE%E5%A4%87-%E6%9C%8D%E5%8A%A1%E6%95%85%E9%9A%9C%E8%87%AA%E6%B2%BB%E6%84%88/QQ%E6%88%AA%E5%9B%BE20190715190401.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>、添加报警媒介</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%E9%82%AE%E4%BB%B6%E5%88%86%E7%BA%A7%E6%8A%A5%E8%AD%A6-mysql-snmp%E8%AE%BE%E5%A4%87-%E6%9C%8D%E5%8A%A1%E6%95%85%E9%9A%9C%E8%87%AA%E6%B2%BB%E6%84%88/QQ%E6%88%AA%E5%9B%BE20190715190655.png" alt="img"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>、配置动作，创建动作</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%E9%82%AE%E4%BB%B6%E5%88%86%E7%BA%A7%E6%8A%A5%E8%AD%A6-mysql-snmp%E8%AE%BE%E5%A4%87-%E6%9C%8D%E5%8A%A1%E6%95%85%E9%9A%9C%E8%87%AA%E6%B2%BB%E6%84%88/QQ%E6%88%AA%E5%9B%BE20190715191229.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">操作</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/%E9%82%AE%E4%BB%B6%E5%88%86%E7%BA%A7%E6%8A%A5%E8%AD%A6-mysql-snmp%E8%AE%BE%E5%A4%87-%E6%9C%8D%E5%8A%A1%E6%95%85%E9%9A%9C%E8%87%AA%E6%B2%BB%E6%84%88/QQ%E6%88%AA%E5%9B%BE20190715191848.png" alt="img"></p><p><img src="/2020/03/09/zabbix/%E9%82%AE%E4%BB%B6%E5%88%86%E7%BA%A7%E6%8A%A5%E8%AD%A6-mysql-snmp%E8%AE%BE%E5%A4%87-%E6%9C%8D%E5%8A%A1%E6%95%85%E9%9A%9C%E8%87%AA%E6%B2%BB%E6%84%88/QQ%E6%88%AA%E5%9B%BE20190715193251.png" alt="img"></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line">===================================================================</span><br><span class="line">前提：agent服务器</span><br><span class="line"><span class="number">1</span>、</span><br><span class="line"><span class="comment"># vim /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">EnableRemoteCommands=<span class="number">1</span>        <span class="comment">#开启远程命令</span></span><br><span class="line">UnsafeUserParameters=<span class="number">1</span>        <span class="comment">#允许执行特殊字符</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、授权</span><br><span class="line"><span class="comment"># vim /etc/sudoers</span></span><br><span class="line">zabbix  ALL=(ALL)     <span class="symbol">NOPASSWD:</span> ALL</span><br><span class="line">创建动作</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">创建操作</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">停止tomcat测试</span><br><span class="line">catalina.sh stop</span><br><span class="line">============================================================================</span><br><span class="line"></span><br><span class="line">监控snmp设备</span><br><span class="line">centos模拟网络设备，被zabbix监听</span><br><span class="line"></span><br><span class="line">centos常用的部分OID</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、centos</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># yum install net-snmp</span></span><br><span class="line"></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># vim /etc/snmp/snmpd.conf</span></span><br><span class="line">view    systemview    included   .<span class="number">1.3</span>.<span class="number">6</span>.</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># systemctl restart snmpd</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># systemctl enable snmpd</span></span><br><span class="line"></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># ss -ntlup        161端口</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、zabbix_server</span><br><span class="line">root<span class="variable">@zabbix</span>-<span class="symbol">node1:</span>~<span class="comment"># snmpwalk -h</span></span><br><span class="line"></span><br><span class="line">测试</span><br><span class="line">root<span class="variable">@zabbix</span>-<span class="symbol">node1:</span>~<span class="comment"># snmpwalk -v2c -c public 192.168.0.20 .1.3.6.1.4.1.2021.10.1.3.1</span></span><br><span class="line">iso.<span class="number">3.6</span>.<span class="number">1.4</span>.<span class="number">1.2021</span>.<span class="number">10.1</span>.<span class="number">3.1</span> = <span class="symbol">STRING:</span> <span class="string">"0.00"</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、添加主机</span><br><span class="line">=====================================================================</span><br><span class="line"></span><br><span class="line">监控MySQL服务</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、MySQL服务器安装zabbix_agent</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># yum -y install zabbix-agent</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、MySQL服务器安装procona</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># wget https://www.percona.com/downloads/percona-monitoring-plugins/percona-monitoring-plugins-1.1.8/binary/redhat/7/x86_64/percona-zabbix-templates-1.1.8-1.noarch.rpm</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># rpm -ivh percona-zabbix-templates-1.1.8-1.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#参考安装教程</span></span><br><span class="line"><span class="symbol">https:</span>/<span class="regexp">/www.percona.com/doc</span><span class="regexp">/percona-monitoring-plugins/</span>LATEST/zabbix/index.html<span class="comment">#installation-instructions</span></span><br><span class="line"></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># cp /var/lib/zabbix/percona/templates/userparameter_percona_mysql.conf /etc/zabbix/zabbix_agentd.d/</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、MySQL服务器修改agent配置</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># systemctl restart zabbix-agent</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、zabbix添加主机验证监控正常</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、MySQL服务器创建配置文件授权</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># vim /var/lib/zabbix/percona/scripts/ss_get_mysql_stats.php.cnf</span></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$mysql_user</span> = <span class="string">'root'</span>;</span><br><span class="line"><span class="variable">$mysql_pass</span> = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、安装php</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># yum -y install php php-mysql</span></span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、测试命令</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># /var/lib/zabbix/percona/scripts/get_mysql_stats_wrapper.sh gg</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.d/userparameter_percona_mysql.conf</span></span><br><span class="line">UserParameter=MySQL.Sort-scan,<span class="regexp">/var/lib</span><span class="regexp">/zabbix/percona</span><span class="regexp">/scripts/get</span>_mysql_stats_wrapper.sh kt</span><br><span class="line">UserParameter=MySQL.slave-stopped,<span class="regexp">/var/lib</span><span class="regexp">/zabbix/percona</span><span class="regexp">/scripts/get</span>_mysql_stats_wrapper.sh jh</span><br><span class="line">UserParameter=MySQL.Com-replace,<span class="regexp">/var/lib</span><span class="regexp">/zabbix/percona</span><span class="regexp">/scripts/get</span>_mysql_stats_wrapper.sh jz</span><br><span class="line">UserParameter=MySQL.innodb-lock-structs,<span class="regexp">/var/lib</span><span class="regexp">/zabbix/percona</span><span class="regexp">/scripts/get</span>_mysql_stats_wrapper.sh lp</span><br><span class="line">UserParameter=MySQL.Com-load,<span class="regexp">/var/lib</span><span class="regexp">/zabbix/percona</span><span class="regexp">/scripts/get</span>_mysql_stats_wrapper.sh kg</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>、在zabbix_server端使用命令测试</span><br><span class="line">root<span class="variable">@zabbix</span>-<span class="symbol">server:</span>~<span class="comment"># /app/zabbix_server/bin/zabbix_get -s 192.168.0.20 -p 10050 -k "MySQL.Com-load"</span></span><br><span class="line"></span><br><span class="line"><span class="number">9</span>、导入自制mysql模板zbx_mysql_export_templates.xml.xml</span><br><span class="line"></span><br><span class="line">效果图</span><br><span class="line">......................................................................</span><br><span class="line"></span><br><span class="line">自定义监控MySQL脚本</span><br><span class="line">提取Slave_IO_Running、Slave_SQL_Running、Seconds_Behind_Master</span><br><span class="line"></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.d/mysql_monitor.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">Seconds_Behind_Master()&#123;</span><br><span class="line">        NUM=`mysql -uroot -hlocalhost   -e <span class="string">"show slave status\G;"</span>  | grep <span class="string">"Seconds_Behind_Master:"</span> | awk -<span class="symbol">F:</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">        echo <span class="variable">$NUM</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">master_slave_check()&#123;</span><br><span class="line">NUM1=`mysql -uroot -hlocalhost   -e <span class="string">"show slave status\G;"</span>  | grep <span class="string">"Slave_IO_Running"</span> | awk -<span class="symbol">F:</span>  <span class="string">'&#123;print $2&#125;'</span> | sed <span class="string">'s/^[ \t]*//g'</span>`</span><br><span class="line"><span class="comment">#echo $NUM1</span></span><br><span class="line">NUM2=`mysql -uroot -hlocalhost   -e <span class="string">"show slave status\G;"</span>  | grep <span class="string">"Slave_SQL_Running:"</span> | awk -<span class="symbol">F:</span>  <span class="string">'&#123;print $2&#125;'</span> | sed <span class="string">'s/^[ \t]*//g'</span>`</span><br><span class="line"><span class="comment">#echo $NUM2</span></span><br><span class="line">if test <span class="variable">$NUM1</span> == <span class="string">"Yes"</span> &amp;&amp;  test <span class="variable">$NUM2</span> == <span class="string">"Yes"</span>;<span class="keyword">then</span></span><br><span class="line">    echo <span class="number">50</span></span><br><span class="line">else</span><br><span class="line">    echo <span class="number">100</span></span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        Seconds_Behind_Master)</span><br><span class="line">           Seconds_Behind_Master;</span><br><span class="line">           ;;</span><br><span class="line">        master_slave_check)</span><br><span class="line">           master_slave_check</span><br><span class="line">           ;;</span><br><span class="line">    esac</span><br><span class="line">&#125;</span><br><span class="line">main <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">............................................................................</span><br><span class="line">测试脚本</span><br><span class="line"><span class="number">1</span>、</span><br><span class="line">[root<span class="variable">@localhost</span> zabbix_agentd.d]<span class="comment"># bash mysql_monitor.sh Seconds_Behind_Master</span></span><br><span class="line">0</span><br><span class="line">[root<span class="variable">@localhost</span> zabbix_agentd.d]<span class="comment"># bash mysql_monitor.sh master_slave_check</span></span><br><span class="line"><span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、</span><br><span class="line">MariaDB [(none)]&gt; stop slave;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">[root<span class="variable">@localhost</span> zabbix_agentd.d]<span class="comment"># bash mysql_monitor.sh master_slave_check</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"></span><br><span class="line">......................................................................................</span><br><span class="line">--------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">agent端添加监控项</span><br><span class="line">[root<span class="variable">@localhost</span> zabbix_agentd.d]<span class="comment"># vim mysql_monitor.conf</span></span><br><span class="line">UserParameter=mysql_monitor[*],<span class="regexp">/etc/zabbix</span><span class="regexp">/zabbix_agentd.d/mysql</span>_monitor.sh <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">[root<span class="variable">@localhost</span> zabbix_agentd.d]<span class="comment"># chmod a+x mysql_monitor.sh</span></span><br><span class="line">[root<span class="variable">@localhost</span> zabbix_agentd.d]<span class="comment"># systemctl restart zabbix-agent.service</span></span><br><span class="line"></span><br><span class="line">server端远程监测</span><br><span class="line">root<span class="variable">@zabbix</span>-<span class="symbol">server:</span>~<span class="comment"># /app/zabbix_server/bin/zabbix_get -s 192.168.0.20 -p 10050 -k "mysql_monitor[master_slave_check]"</span></span><br><span class="line"><span class="number">50</span></span><br><span class="line">root<span class="variable">@zabbix</span>-<span class="symbol">server:</span>~<span class="comment"># /app/zabbix_server/bin/zabbix_get -s 192.168.0.20 -p 10050 -k "mysql_monitor[Seconds_Behind_Master]"</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">自定义监控模板</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">创建监控项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">添加自建模板</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">创建图形</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix-API</title>
      <link href="/2020/03/09/zabbix/Zabbix-API/"/>
      <url>/2020/03/09/zabbix/Zabbix-API/</url>
      
        <content type="html"><![CDATA[<p>参考手册 <a href="https://www.zabbix.com/documentation/4.0/zh/manual/api" target="_blank" rel="noopener">https://www.zabbix.com/documentation/4.0/zh/manual/api</a></p><a id="more"></a><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line">API使用：</span><br><span class="line"></span><br><span class="line">1、获取<span class="keyword">token</span>:</span><br><span class="line"> curl -s -X <span class="keyword">POST</span> -<span class="keyword">H</span> 'Content-<span class="keyword">Type</span>:application/json' -<span class="keyword">d</span> '</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line"><span class="string">"method"</span>: <span class="string">"user.login"</span>,</span><br><span class="line"><span class="string">"params"</span>: &#123;</span><br><span class="line"><span class="string">"user"</span>: <span class="string">"zabbixadmin"</span>,</span><br><span class="line"><span class="string">"password"</span>: <span class="string">"123456"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"id"</span>: 1</span><br><span class="line">&#125;' http:<span class="comment">//192.168.6.10/zabbix/api_jsonrpc.php | python -m json.tool</span></span><br><span class="line"></span><br><span class="line">显示<span class="keyword">token</span>结果</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"id"</span>: 1,</span><br><span class="line"><span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line"><span class="string">"result"</span>: <span class="string">"a55c7355a1063784b021f7c0b186001c"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、示例：</span><br><span class="line">a、通过名称获取数据</span><br><span class="line">curl -s -X <span class="keyword">POST</span> -<span class="keyword">H</span> 'Content-<span class="keyword">Type</span>:application/json' -<span class="keyword">d</span> '</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"host.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"filter"</span>: &#123;</span><br><span class="line">            <span class="string">"host"</span>: [</span><br><span class="line">                <span class="string">"Zabbix server"</span>,</span><br><span class="line">                <span class="string">"192.168.0.10"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"a55c7355a1063784b021f7c0b186001c"</span>,</span><br><span class="line">    <span class="string">"id"</span>: 1</span><br><span class="line">&#125;' http:<span class="comment">//192.168.6.10/zabbix/api_jsonrpc.php | python -m json.tool</span></span><br><span class="line"></span><br><span class="line">b、显示结果</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"id"</span>: 1,</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"result"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"auto_compress"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"available"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"disable_until"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"error"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"errors_from"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"flags"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"host"</span>: <span class="string">"Zabbix server"</span>,</span><br><span class="line">            <span class="string">"hostid"</span>: <span class="string">"10084"</span>,</span><br><span class="line">            <span class="string">"ipmi_authtype"</span>: <span class="string">"-1"</span>,</span><br><span class="line">            <span class="string">"ipmi_available"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"ipmi_disable_until"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"ipmi_error"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"ipmi_errors_from"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"ipmi_password"</span>: <span class="string">""</span>,</span><br><span class="line">             ......</span><br><span class="line">             ......</span><br><span class="line">             ......</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a、获取所有主机</span><br><span class="line">curl -s -X <span class="keyword">POST</span> -<span class="keyword">H</span> 'Content-<span class="keyword">Type</span>:application/json' -<span class="keyword">d</span> '</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"host.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"output"</span>: [<span class="string">"host"</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"a55c7355a1063784b021f7c0b186001c"</span>,</span><br><span class="line">    <span class="string">"id"</span>: 1</span><br><span class="line">&#125;' http:<span class="comment">//192.168.6.10/zabbix/api_jsonrpc.php | python -m json.tool</span></span><br><span class="line"></span><br><span class="line">b、显示效果</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"id"</span>: 1,</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"result"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"host"</span>: <span class="string">"Zabbix server"</span>,</span><br><span class="line">            <span class="string">"hostid"</span>: <span class="string">"10084"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"host"</span>: <span class="string">"192.168.2.10"</span>,</span><br><span class="line">            <span class="string">"hostid"</span>: <span class="string">"10269"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"host"</span>: <span class="string">"192.168.0.20"</span>,</span><br><span class="line">            <span class="string">"hostid"</span>: <span class="string">"10275"</span></span><br><span class="line">        &#125;</span><br><span class="line">        ......</span><br><span class="line">        ......</span><br><span class="line">        ......</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a、获取用户信息</span><br><span class="line">curl -s -X <span class="keyword">POST</span> -<span class="keyword">H</span> 'Content-<span class="keyword">Type</span>:application/json' -<span class="keyword">d</span> '</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"user.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"output"</span>: <span class="string">"extend"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"a55c7355a1063784b021f7c0b186001c"</span>,</span><br><span class="line">    <span class="string">"id"</span>: 1</span><br><span class="line">&#125;' http:<span class="comment">//192.168.6.10/zabbix/api_jsonrpc.php | python -m json.tool</span></span><br><span class="line"></span><br><span class="line">b、显示效果</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"id"</span>: 1,</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"result"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"alias"</span>: <span class="string">"zabbixadmin"</span>,</span><br><span class="line">            <span class="string">"attempt_clock"</span>: <span class="string">"1563333327"</span>,</span><br><span class="line">            <span class="string">"attempt_failed"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"attempt_ip"</span>: <span class="string">"192.168.0.1"</span>,</span><br><span class="line">            <span class="string">"autologin"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"autologout"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"lang"</span>: <span class="string">"zh_CN"</span>,</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"Zabbix"</span>,</span><br><span class="line">            <span class="string">"refresh"</span>: <span class="string">"30s"</span>,</span><br><span class="line">            <span class="string">"rows_per_page"</span>: <span class="string">"50"</span>,</span><br><span class="line">            <span class="string">"surname"</span>: <span class="string">"Administrator"</span>,</span><br><span class="line">            <span class="string">"theme"</span>: <span class="string">"default"</span>,</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"3"</span>,</span><br><span class="line">            <span class="string">"url"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"userid"</span>: <span class="string">"1"</span></span><br><span class="line">        &#125;,</span><br><span class="line">         ......</span><br><span class="line">         ......</span><br><span class="line">         ......</span><br><span class="line"></span><br><span class="line">a、获取模板信息</span><br><span class="line">curl -s -X <span class="keyword">POST</span> -<span class="keyword">H</span> 'Content-<span class="keyword">Type</span>:application/json' -<span class="keyword">d</span> '</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"template.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"output"</span>: <span class="string">"extend"</span>,</span><br><span class="line">        <span class="string">"filter"</span>: &#123;</span><br><span class="line">            <span class="string">"host"</span>: [</span><br><span class="line">                <span class="string">"check_nginx"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"a55c7355a1063784b021f7c0b186001c"</span>,</span><br><span class="line">    <span class="string">"id"</span>: 1</span><br><span class="line">&#125;' http:<span class="comment">//192.168.6.10/zabbix/api_jsonrpc.php | python -m json.tool</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、基于脚本方式获取<span class="keyword">token</span></span><br><span class="line">[root@Host1 ~]# vim <span class="keyword">token</span>.py</span><br><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">url = 'http:<span class="comment">//192.168.6.10/zabbix/api_jsonrpc.php'</span></span><br><span class="line">post_data = &#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"user.login"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"user"</span>: <span class="string">"zabbixadmin"</span>,</span><br><span class="line">        <span class="string">"password"</span>: <span class="string">"123456"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"id"</span>: 1</span><br><span class="line">&#125;</span><br><span class="line">post_header = &#123;'Content-<span class="keyword">Type</span>': 'application/json'&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ret</span> = requests.<span class="keyword">post</span>(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(<span class="keyword">ret</span>.text)</span><br><span class="line"><span class="keyword">if</span> not zabbix_ret.has_key('result'):</span><br><span class="line">    <span class="keyword">print</span> 'login <span class="keyword">error</span>'</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> zabbix_ret.<span class="built_in">get</span>('result')</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@Host1 ~]# yum install python-pip      </span><br><span class="line">[root@Host1 ~]# pip install requests        #安装requests模块</span><br><span class="line"></span><br><span class="line">执行<span class="keyword">token</span>.py脚本</span><br><span class="line">[root@Host1 ~]# python <span class="keyword">token</span>.py </span><br><span class="line">ec4018039a773cfe05328dae0b965eec</span><br><span class="line"></span><br><span class="line">=========================================================================</span><br><span class="line"></span><br><span class="line">通过API创建主机</span><br><span class="line">API添加主机为预先知道要添加的主机IP、预先安装并配置好zabbix agent、预先知道要关联的模板ID/组ID等信息，然后同API提交请求添加</span><br><span class="line"></span><br><span class="line">通过API添加主机-不带proxy模式</span><br><span class="line">curl -s -X <span class="keyword">POST</span> -<span class="keyword">H</span> 'Content-<span class="keyword">Type</span>:application/json' -<span class="keyword">d</span> '</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">     <span class="string">"method"</span>: <span class="string">"host.create"</span>,</span><br><span class="line">     <span class="string">"params"</span>: &#123;</span><br><span class="line">          <span class="string">"host"</span>: <span class="string">"192.168.0.20"</span>, </span><br><span class="line">          <span class="string">"interfaces"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"type"</span>: 1,</span><br><span class="line">                 <span class="string">"main"</span>: 1,</span><br><span class="line">                 <span class="string">"useip"</span>: 1, </span><br><span class="line">                 <span class="string">"ip"</span>: <span class="string">"192.168.0.20"</span>, </span><br><span class="line">                 <span class="string">"dns"</span>: <span class="string">""</span>,</span><br><span class="line">                 <span class="string">"port"</span>: <span class="string">"10050"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ],</span><br><span class="line">         <span class="string">"groups"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"groupid"</span>: <span class="string">"15"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ],</span><br><span class="line">         <span class="string">"templates"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"templateid"</span>: <span class="string">"10265"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ]</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="string">"auth"</span>: <span class="string">"ec4018039a773cfe05328dae0b965eec"</span>, </span><br><span class="line">     <span class="string">"id"</span>: 1</span><br><span class="line"> &#125;' http:<span class="comment">//192.168.6.10/zabbix/api_jsonrpc.php | python -m json.tool</span></span><br><span class="line"></span><br><span class="line">显示结果</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"id"</span>: 1,</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"result"</span>: &#123;</span><br><span class="line">        <span class="string">"hostids"</span>: [</span><br><span class="line">            <span class="string">"10278"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">zabbix_server web界面验证是否添加成功</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/zabbix/Zabbix-API/QQ%E6%88%AA%E5%9B%BE20190717140800.png" alt="img"></p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">脚本批量创建</span><br><span class="line">[root<span class="meta">@localhost</span> ~]<span class="comment"># vim linux-add-host.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">IP=<span class="string">"</span></span><br><span class="line"><span class="string">192.168.1.10</span></span><br><span class="line"><span class="string">192.168.1.20</span></span><br><span class="line"><span class="string">192.168.1.30</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> $&#123;IP&#125;;<span class="keyword">do</span></span><br><span class="line">curl -s -X POST -H 'Content-<span class="built_in">Type</span>:application/json' -d '</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">     <span class="string">"method"</span>: <span class="string">"host.create"</span>,</span><br><span class="line">     <span class="string">"params"</span>: &#123;</span><br><span class="line">          <span class="string">"host"</span>: <span class="string">"'$&#123;node_ip&#125;'"</span>, </span><br><span class="line">          <span class="string">"interfaces"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"type"</span>: <span class="number">1</span>,</span><br><span class="line">                 <span class="string">"main"</span>: <span class="number">1</span>,</span><br><span class="line">                 <span class="string">"useip"</span>: <span class="number">1</span>, </span><br><span class="line">                 <span class="string">"ip"</span>: <span class="string">"'$&#123;node_ip&#125;'"</span>, </span><br><span class="line">                 <span class="string">"dns"</span>: <span class="string">""</span>,</span><br><span class="line">                 <span class="string">"port"</span>: <span class="string">"10050"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ],</span><br><span class="line">         <span class="string">"groups"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"groupid"</span>: <span class="string">"15"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ],</span><br><span class="line">         <span class="string">"templates"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"templateid"</span>: <span class="string">"10265"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ]</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="string">"auth"</span>: <span class="string">"ec4018039a773cfe05328dae0b965eec"</span>, </span><br><span class="line">     <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line"> &#125;' http://<span class="number">192.168</span><span class="number">.6</span><span class="number">.10</span>/zabbix/api_jsonrpc.php | python -m json.tool</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">通过API添加主机-proxy模式</span><br><span class="line">[root<span class="meta">@localhost</span> ~]<span class="comment"># vim linux-add-host.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">IP=<span class="string">"</span></span><br><span class="line"><span class="string">192.168.1.10</span></span><br><span class="line"><span class="string">192.168.1.20</span></span><br><span class="line"><span class="string">192.168.1.30</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> $&#123;IP&#125;;<span class="keyword">do</span></span><br><span class="line"> curl -s -X POST -H 'Content-<span class="built_in">Type</span>:application/json' -d '</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">     <span class="string">"method"</span>: <span class="string">"host.create"</span>,</span><br><span class="line">     <span class="string">"params"</span>: &#123;</span><br><span class="line">          <span class="string">"host"</span>: <span class="string">"'$&#123;node_ip&#125;'"</span>, </span><br><span class="line">          <span class="string">"name"</span>: <span class="string">"'web1-nginx-$&#123;node_ip&#125;'"</span>, </span><br><span class="line">          <span class="string">"proxy_hostid"</span>: <span class="string">"10268"</span>,</span><br><span class="line">         <span class="string">"interfaces"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"type"</span>: <span class="number">1</span>,</span><br><span class="line">                 <span class="string">"main"</span>: <span class="number">1</span>,</span><br><span class="line">                 <span class="string">"useip"</span>: <span class="number">1</span>, </span><br><span class="line">                 <span class="string">"ip"</span>: <span class="string">"'$&#123;node_ip&#125;'"</span>, </span><br><span class="line">                 <span class="string">"dns"</span>: <span class="string">""</span>,</span><br><span class="line">                 <span class="string">"port"</span>: <span class="string">"10050"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ],</span><br><span class="line">         <span class="string">"groups"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"groupid"</span>: <span class="string">"15"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ],</span><br><span class="line">         <span class="string">"templates"</span>: [</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="string">"templateid"</span>: <span class="string">"10265"</span></span><br><span class="line">             &#125;</span><br><span class="line">         ]</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="string">"auth"</span>: <span class="string">"ec4018039a773cfe05328dae0b965eec"</span>, </span><br><span class="line">     <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line"> &#125;' http://<span class="number">192.168</span><span class="number">.6</span><span class="number">.10</span>/zabbix/api_jsonrpc.php | python -m json.tool</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-ClusterRole</title>
      <link href="/2020/03/08/k8s/k8s-ClusterRole/"/>
      <url>/2020/03/08/k8s/k8s-ClusterRole/</url>
      
        <content type="html"><![CDATA[<p>k8s ClusterRole yaml 模板</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">template-namespaced-resources___quhui</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"*"</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="comment"># - "bindings"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"configmaps"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"endpoints"</span></span><br><span class="line">      <span class="comment"># - "limitranges"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"persistentvolumeclaims"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"pods"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"pods/log"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"pods/portforward"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"podtemplates"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"replicationcontrollers"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"resourcequotas"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"secrets"</span></span><br><span class="line">      <span class="comment"># - "serviceaccounts"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"services"</span></span><br><span class="line">      <span class="comment"># - "controllerrevisions"</span></span><br><span class="line">      <span class="comment"># - "statefulsets"</span></span><br><span class="line">      <span class="comment"># - "localsubjectaccessreviews"</span></span><br><span class="line">      <span class="comment"># - "horizontalpodautoscalers"</span></span><br><span class="line">      <span class="comment"># - "cronjobs"</span></span><br><span class="line">      <span class="comment"># - "jobs"</span></span><br><span class="line">      <span class="comment"># - "leases"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"events"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"daemonsets"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"deployments"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"replicasets"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"ingresses"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"networkpolicies"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"poddisruptionbudgets"</span></span><br><span class="line">      <span class="comment"># - "rolebindings"</span></span><br><span class="line">      <span class="comment"># - "roles"</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> yaml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-Pod故障归类与排查方法</title>
      <link href="/2020/03/08/k8s/k8s-Pod%E6%95%85%E9%9A%9C%E5%BD%92%E7%B1%BB%E4%B8%8E%E6%8E%92%E6%9F%A5%E6%96%B9%E6%B3%95/"/>
      <url>/2020/03/08/k8s/k8s-Pod%E6%95%85%E9%9A%9C%E5%BD%92%E7%B1%BB%E4%B8%8E%E6%8E%92%E6%9F%A5%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="Pod-概念"><a href="#Pod-概念" class="headerlink" title="Pod 概念"></a>Pod 概念</h2><ul><li>Pod是kubernetes集群中最小的部署和管理的基本单元，协同寻址，协同调度。</li><li>Pod是一个或多个容器的集合，是一个或一组服务（进程）的抽象集合。</li><li>Pod中可以共享网络和存储（可以简单理解为一个逻辑上的虚拟机，但并不是虚拟机）。</li><li>Pod被创建后用一个UID来唯一标识，当Pod生命周期结束，被一个等价Pod替代，UID将重新生成。</li></ul><a id="more"></a><p><code>Docker</code> 是 <code>Kubernetes Pod</code> 中最常用的容器运行时，但 <code>Pod</code> 也能支持其他的容器运行，比如 rkt、podman等。</p><p>Kubernetes 集群中的 Pod 可被用于以下两个主要用途：</p><ul><li><code>运行单个容器的 Pod</code>。“每个 Pod 一个容器”模型是最常见的 Kubernetes 用例；在这种情况下，可以将 Pod 看作单个容器的包装器，并且 Kubernetes 直接管理 Pod，而不是容器。</li><li><code>运行多个协同工作的容器的 Pod</code>。Pod 可能封装由多个紧密耦合且需要共享资源的共处容器组成的应用程序。这些位于同一位置的容器可能形成单个内聚的服务单元，一个容器将文件从共享卷提供给公众，而另一个单独的“挂斗”容器则刷新或更新这些文件。Pod 将这些容器和存储资源打包为一个可管理的实体。</li></ul><h2 id="Pod-控制器"><a href="#Pod-控制器" class="headerlink" title="Pod 控制器"></a>Pod 控制器</h2><p>控制器可以为您创建和管理多个 Pod，管理副本和上线，并在集群范围内提供自修复能力。例如，如果一个节点失败，控制器可以在不同的节点上调度一样的替身来自动替换 Pod。</p><p>包含一个或多个 Pod 的控制器一些示例包括：</p><ul><li><code>Deployment</code> kubernetes中最常用的控制器，用于运行无状态应用</li><li><code>StatefulSet</code> 用于运行有状态应用</li><li><code>DaemonSet</code> 作用就像是计算机中的守护进程，它能够运行集群存储、日志收集和监控等『守护进程』</li></ul><p>控制器通常使用您提供的 Pod 模板来创建它所负责的 Pod。</p><h2 id="Pod-故障归类"><a href="#Pod-故障归类" class="headerlink" title="Pod 故障归类"></a>Pod 故障归类</h2><ul><li>Pod状态 一直处于 Pending</li><li>Pod状态 一直处于 Waiting</li><li>Pod状态 一直处于 ContainerCreating</li><li>Pod状态 处于 ImagePullBackOff</li><li>Pod状态 处于 CrashLoopBackOff</li><li>Pod状态 处于 Error</li><li>Pod状态 一直处于 Terminating</li><li>Pod状态 处于 Unknown</li></ul><p>上面是个人总结，如果不全请见谅！</p><h2 id="Pod-排查故障命令"><a href="#Pod-排查故障命令" class="headerlink" title="Pod 排查故障命令"></a>Pod 排查故障命令</h2><ul><li><code>kubectl get pod &lt;pod-name&gt; -o yaml</code> # 查看 Pod 配置是否正确</li><li><code>kubectl describe pod &lt;pod-name&gt;</code> # 查看 Pod 详细事件信息</li><li><code>kubectl logs &lt;pod-name&gt; [-c &lt;container-name&gt;]</code> # 查看容器日志</li></ul><h2 id="Pod-故障问题与排查方法"><a href="#Pod-故障问题与排查方法" class="headerlink" title="Pod 故障问题与排查方法"></a>Pod 故障问题与排查方法</h2><ul><li><p>Pod 一直处于 <code>Pending</code> 状态</p><p>Pending状态，这个状态意味着，Pod 的 YAML 文件已经提交给 Kubernetes，API 对象已经被创建并保存在 Etcd 当中。但是，这个 Pod 里有些容器因为某种原因而不能被顺利创建。比如，调度不成功（可以通过 <code>kubectl describe pod</code> 命令查看到当前 Pod 的事件，进而判断为什么没有调度）。可能原因：资源不足（集群内所有的 Node 都不满足该 Pod 请求的 CPU、内存、GPU 等资源）；HostPort 已被占用（通常推荐使用 Service 对外开放服务端口）。</p></li><li><p>Pod 一直处于 <code>Waiting</code> 或 <code>ContainerCreating</code> 状态</p><p>首先还是通过 <code>kubectl describe pod</code> 命令查看到当前 <code>Pod</code> 的事件。可能的原因包括：</p><p>1、<code>镜像拉取失败</code>，比如，镜像地址配置错误、拉取不了国外镜像源（gcr.io）、私有镜像密钥配置错误、镜像太大导致拉取超时（可以适当调整 kubelet 的 –image-pull-progress-deadline 和 –runtime-request-timeout 选项）等。</p><p>2、CNI 网络错误，一般需要检查 CNI 网络插件的配置，比如：无法配置 Pod 网络、无法分配 IP 地址。</p><p>3、容器无法启动，需要检查是否打包了正确的镜像或者是否配置了正确的容器参数。</p><p>4、Failed create pod sandbox，查看kubelet日志，原因可能是磁盘坏道（input/output error）。</p></li><li><p>Pod 一直处于 <code>ImagePullBackOff</code> 状态</p><p>通常是<code>镜像名称配置错误</code>或者<code>私有镜像的密钥配置错误导致</code>。这种情况可以使用 <code>docker pull</code> 来验证镜像是否可以正常拉取。</p><p>如果私有镜像密钥配置错误或者没有配置，按下面检查：</p><p>1、查询 docker-registry 类型的 Secret</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看 docker-registry Secret </span></span><br><span class="line">$ kubectl  get secrets <span class="keyword">my</span>-secret -o yaml | <span class="keyword">grep</span> <span class="string">'dockerconfigjson:'</span> | awk <span class="string">'&#123;print $NF&#125;'</span> | base64 -d</span><br></pre></td></tr></table></figure><p>2、创建 docker-registry 类型的 Secret</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先创建一个 docker-registry 类型的 Secret</span></span><br><span class="line">$ kubectl create<span class="built_in"> secret </span>docker-registry my-secret <span class="attribute">--docker-server</span>=DOCKER_REGISTRY_SERVER <span class="attribute">--docker-username</span>=DOCKER_USER <span class="attribute">--docker-password</span>=DOCKER_PASSWORD <span class="attribute">--docker-email</span>=DOCKER_EMAIL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后在 Deployment 中引用这个 Secret</span></span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: private-reg-container</span><br><span class="line">    image: &lt;your-private-image&gt;</span><br><span class="line">  imagePullSecrets:</span><br><span class="line">  - name: my-secret</span><br></pre></td></tr></table></figure></li><li><p>Pod 一直处于 <code>CrashLoopBackOff</code> 状态</p><p><code>CrashLoopBackOff</code> 状态说明容器曾经启动了，但又异常退出。此时可以先查看一下容器的日志。</p><p>通过命令 <code>kubectl logs</code> 和 <code>kubectl logs --previous</code> 可以发现一些容器退出的原因，比如：容器进程退出、健康检查失败退出、此时如果还未发现线索，还可以到容器内执行命令来进一步查看退出原因（kubectl exec cassandra – cat /var/log/cassandra/system.log），如果还是没有线索，那就需要 SSH 登录该 Pod 所在的 Node 上，查看 <code>Kubelet</code> 或者 <code>Docker</code> 的日志进一步排查。</p></li><li><p>Pod 处于 <code>Error</code> 状态</p><p>通常处于 Error 状态说明 Pod 启动过程中发生了错误。常见的原因包括：依赖的 <code>ConfigMap</code>、<code>Secret</code> 或者 <code>PV</code> 等不存在；请求的资源超过了管理员设置的限制，比如超过了 <code>LimitRange</code> 等；违反集群的安全策略，比如违反了 <code>PodSecurityPolicy</code> 等；容器无权操作集群内的资源，比如开启 <code>RBAC</code> 后，需要为 <code>ServiceAccount</code> 配置角色绑定;</p></li><li><p>Pod 处于 Terminating 或 Unknown 状态</p><p>从 v1.5 开始，Kubernetes 不会因为 Node 失联而删除其上正在运行的 Pod，而是将其标记为 <code>Terminating</code> 或 <code>Unknown</code> 状态。想要删除这些状态的 Pod 有三种方法：</p><p>1、从集群中删除该 Node。使用公有云时，kube-controller-manager 会在 VM 删除后自动删除对应的 Node。而在物理机部署的集群中，需要管理员手动删除 Node（如 kubectl delete node ）。</p><p>2、Node 恢复正常。Kubelet 会重新跟 kube-apiserver 通信确认这些 Pod 的期待状态，进而再决定删除或者继续运行这些 Pod。用户强制删除。用户可以执行 <code>kubectl delete pods --grace-period=0 --force</code>强制删除 Pod。除非明确知道 Pod 的确处于停止状态（比如 Node 所在 VM 或物理机已经关机），否则不建议使用该方法。特别是 <code>StatefulSet</code> 管理的 Pod，强制删除容易导致脑裂或者数据丢失等问题。</p><p>3、Pod 行为异常，这里所说的行为异常是指 Pod 没有按预期的行为执行，比如没有运行 <code>podSpec</code> 里面设置的命令行参数。这一般是 podSpec yaml 文件内容有误，可以尝试使用 <code>--validate</code> 参数重建容器，比如:</p><p><code>kubectl delete pod mypod</code> 和 <code>kubectl create --validate -f mypod.yaml</code>，也可以查看创建后的 podSpec 是否是对的，比如：<code>kubectl get pod mypod -o yaml</code>，修改静态 Pod 的 <code>Manifest</code> 后未自动重建，Kubelet 使用 inotify 机制检测 /etc/kubernetes/manifests 目录（可通过 Kubelet 的 –pod-manifest-path 选项指定）中静态 Pod 的变化，并在文件发生变化后重新创建相应的 Pod。但有时也会发生修改静态 Pod 的 Manifest 后未自动创建新 Pod 的情景，此时一个简单的修复方法是重启 Kubelet。</p><p><code>Unknown</code> 这是一个异常状态，意味着 Pod 的状态不能持续地被 kubelet 汇报给 kube-apiserver，这很有可能是主从节点（Master 和 Kubelet）间的通信出现了问题。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> 排错 </tag>
            
            <tag> pod </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-Pod重启方法</title>
      <link href="/2020/03/08/k8s/k8s-Pod%E9%87%8D%E5%90%AF%E6%96%B9%E6%B3%95/"/>
      <url>/2020/03/08/k8s/k8s-Pod%E9%87%8D%E5%90%AF%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="方法-1"><a href="#方法-1" class="headerlink" title="方法 1"></a>方法 1</h1><p>有最新的 yaml 文件。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">replace</span> <span class="comment">--force -f xxxx.yaml</span></span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="方法-2"><a href="#方法-2" class="headerlink" title="方法 2"></a>方法 2</h1><p>没有 yaml 文件，但是使用的是 Deployment 对象。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl scale deployment esb-admin --replicas=<span class="number">0</span> -n &#123;<span class="keyword">namespace</span>&#125;</span><br></pre></td></tr></table></figure><p>由于 Deployment 对象并不是直接操控的 Pod 对象，而是操控的 ReplicaSet 对象，而 ReplicaSet 对象就是由副本的数目的定义和Pod 模板组成的。所以这条命令分别是将ReplicaSet 的数量 scale 到 0，然后又 scale 到 1，那么 Pod 也就重启了。</p><h1 id="方法-3"><a href="#方法-3" class="headerlink" title="方法 3"></a>方法 3</h1><p>同样没有 yaml 文件，但是使用的是 Deployment 对象。</p><p>使用命令</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="keyword">delete</span> pod &#123;podname&#125; -n &#123;<span class="keyword">namespace</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="方法-4"><a href="#方法-4" class="headerlink" title="方法 4"></a>方法 4</h1><p>没有 yaml 文件，直接使用的 Pod 对象。</p><p>使用命令</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="keyword">get</span> pod &#123;podname&#125; -n &#123;<span class="keyword">namespace</span>&#125; -o yaml | kubectl replace --force -f -</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-RBAC配置工具</title>
      <link href="/2020/03/08/k8s/k8s-RBAC%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7/"/>
      <url>/2020/03/08/k8s/k8s-RBAC%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="permission-manager-简介"><a href="#permission-manager-简介" class="headerlink" title="permission-manager 简介"></a>permission-manager 简介</h2><p><code>permission-manager</code> 是一个用于 Kubernetes RBAC 和 用户管理工具。</p><a id="more"></a><ul><li><p>项目地址</p><p><code>https://github.com/sighupio/permission-manager</code></p></li><li><p>部署依赖</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> kubectl apply <span class="operator">-f</span> k8s/k8s<span class="literal">-seeds</span>/namespace.yml</span><br><span class="line"><span class="variable">$</span> kubectl apply <span class="operator">-f</span> k8s/k8s<span class="literal">-seeds</span></span><br></pre></td></tr></table></figure></li><li><p>修改 <code>Deploy</code> 必填 <code>Env</code> 参数</p><table><thead><tr><th>Env 名称</th><th>描述</th></tr></thead><tbody><tr><td>PORT</td><td>服务器暴露的端口</td></tr><tr><td>CLUSTER_NAME</td><td>在生成kubeconfig文件中使用的集群名称</td></tr><tr><td>CONTROL_PLANE_ADDRESS</td><td>在生成kubeconfig文件中的k8s api 地址</td></tr><tr><td>BASIC_AUTH_PASSWORD</td><td>WEB UI 登陆密码（默认用户名为 admin）</td></tr></tbody></table></li><li><p>部署</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> kubectl apply <span class="operator">-f</span> k8s/deploy.yaml</span><br></pre></td></tr></table></figure></li><li><p>访问 WEB UI</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl <span class="keyword">port</span>-forward svc/permission-manager-service 4000 <span class="comment">--namespace permission-manager</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="如何添加新权限模板"><a href="#如何添加新权限模板" class="headerlink" title="如何添加新权限模板"></a>如何添加新权限模板</h2><p>默认只有 <code>developer</code> 和 <code>operation</code> 模板，模板都是以 <code>template-namespaced-resources___</code> 为开头。添加新的权限模板，可以参考 <code>k8s/k8s-seeds/seed.yml</code> 文件。</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RBAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-RBAC</title>
      <link href="/2020/03/08/k8s/k8s-RBAC/"/>
      <url>/2020/03/08/k8s/k8s-RBAC/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-Kubernetes-RBAC"><a href="#什么是-Kubernetes-RBAC" class="headerlink" title="什么是 Kubernetes RBAC"></a>什么是 Kubernetes RBAC</h2><p><code>基于角色的访问控制（Role-Based Access Control, 即 &quot;RBAC&quot;）</code>：使用 “rbac.authorization.k8s.io” API Group 实现授权决策，允许管理员通过 Kubernetes API 动态配置策略。</p><p>RBAC 从 <code>Kubernetes v1.6 处于beta版本</code>，从 <code>v1.8 开始</code>，RBAC已作为 <code>稳定的功能</code>。启用 RBAC，请使用 <code>--authorization-mode=RBAC</code> 启动 API Server。[1]</p><a id="more"></a><h2 id="API-概述"><a href="#API-概述" class="headerlink" title="API 概述"></a>API 概述</h2><p>本节将介绍<code>RBAC API</code>所定义的<code>四种顶级类型</code>。用户可以像使用其他Kubernetes API资源一样 （例如通过kubectl、API调用等）与这些资源进行交互。例如，命令 <code>kubectl create -f (resource).yml</code> 可以被用于以下所有的例子，当然，读者在尝试前可能需要先阅读以下相关章节的内容。[1]</p><h2 id="RBAC-简易概览图"><a href="#RBAC-简易概览图" class="headerlink" title="RBAC 简易概览图"></a>RBAC 简易概览图</h2><p><img src="/2020/03/08/k8s/k8s-RBAC/640.jfif" alt="img"></p><h2 id="ClusterRole-与-Role"><a href="#ClusterRole-与-Role" class="headerlink" title="ClusterRole 与 Role"></a>ClusterRole 与 Role</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Role（角色）`：是一系列权限的集合，例如一个角色可以包含读取 Pod 的权限和列出 Pod 的权限。Role `只能用来给某个特定 <span class="keyword">namespace</span> 中的资源作鉴权`。对 <span class="symbol">namespace</span> 、集群级资源 和 非资源类的 <span class="symbol">API</span>（如 /<span class="symbol">healthz</span>）使用 `<span class="symbol">ClusterRole</span></span><br></pre></td></tr></table></figure><p><code>ClusterRole</code>：对象可以授予与 Role 对象相同的权限，但由于它们属于集群范围对象，也可以使用它们授予对以下几种资源的访问权限：</p><ul><li>集群范围资源（例如节点，即 node）</li><li>非资源类型 endpoint（例如 /healthz）</li><li>授权多个 Namespace</li></ul><p>下面例子描述了 default namespace 中的一个 Role 对象的定义，用于授予对 pod 的读访问权限</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kind: Role</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  namespace: default</span><br><span class="line">  name: demo-role</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [<span class="string">""</span>] # 空字符串<span class="string">""</span>表明使用 core API group</span><br><span class="line">  resources: [<span class="string">"pods"</span>]</span><br><span class="line">  verbs: [<span class="string">"get"</span>, <span class="string">"watch"</span>, <span class="string">"list"</span>, <span class="string">"create"</span>, <span class="string">"delete"</span>]</span><br></pre></td></tr></table></figure><p>下面例子中 ClusterRole 定义可用于授予用户对<code>某一个 namespace</code>，或者 <code>所有 namespace</code>的 secret（取决于其绑定方式）的读访问权限</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">kind:</span> ClusterRole</span><br><span class="line"><span class="symbol">apiVersion:</span> rbac.authorization.k8s.io/v1beta1</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line">  <span class="meta"># ClusterRole 是集群范围对象，没有 <span class="string">"namespace"</span> 区分</span></span><br><span class="line"><span class="symbol">  name:</span> demo-clusterrole</span><br><span class="line"><span class="symbol">rules:</span></span><br><span class="line">- apiGroups: [<span class="string">""</span>]</span><br><span class="line"><span class="symbol">  resources:</span> [<span class="string">"secrets"</span>]</span><br><span class="line"><span class="symbol">  verbs:</span> [<span class="string">"get"</span>, <span class="string">"watch"</span>, <span class="string">"list"</span>, <span class="string">"create"</span>, <span class="string">"delete"</span>]</span><br></pre></td></tr></table></figure><h2 id="ClusterRoleBinding-与-RoleBinding"><a href="#ClusterRoleBinding-与-RoleBinding" class="headerlink" title="ClusterRoleBinding 与 RoleBinding"></a>ClusterRoleBinding 与 RoleBinding</h2><p><code>RoleBinding</code>：把 Role 或 ClusterRole 中定义的各种权限映射到 User，Service Account 或者 Group，从而让这些用户继承角色在 namespace 中的权限。</p><p><code>ClusterRoleBinding</code>：让用户继承 ClusterRole 在整个集群中的权限。</p><p><code>RoleBinding</code> 可以引用在同一命名空间内定义的Role对象。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下角色绑定定义将允许用户 "jane" 从 "default" 命名空间中读取pod</span></span><br><span class="line">kind: RoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: read-pods</span><br><span class="line">  namespace: default</span><br><span class="line">subjects:</span><br><span class="line">- kind: User</span><br><span class="line">  name: jane</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">roleRef:</span><br><span class="line">  kind: Role</span><br><span class="line">  name: pod-reader</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure><p><code>RoleBinding</code> 对象也可以引用一个 <code>ClusterRole</code> 对象用于在 <code>RoleBinding</code> 所在的命名空间内授予用户对所引用的<code>ClusterRole</code> 中定义的命名空间资源的访问权限。这一点允许管理员在整个集群范围内首先定义一组通用的角色，然后再在不同的命名空间中复用这些角色。</p><p>例如，尽管下面示例中的 RoleBinding 引用的是一个 ClusterRole 对象，但是用户”dave”（即角色绑定主体）还是只能读取”development” 命名空间中的 secret（即RoleBinding所在的命名空间）</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 以下角色绑定允许用户<span class="string">"dave"</span>读取<span class="string">"development"</span>命名空间中的secret。</span></span><br><span class="line"><span class="symbol">kind:</span> RoleBinding</span><br><span class="line"><span class="symbol">apiVersion:</span> rbac.authorization.k8s.io/v1beta1</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> read-secrets</span><br><span class="line"><span class="symbol">  namespace:</span> development <span class="meta"># 这里表明仅授权读取<span class="string">"development"</span>命名空间中的资源。</span></span><br><span class="line"><span class="symbol">subjects:</span></span><br><span class="line">- kind: User</span><br><span class="line"><span class="symbol">  name:</span> dave</span><br><span class="line"><span class="symbol">  apiGroup:</span> rbac.authorization.k8s.io</span><br><span class="line"><span class="symbol">roleRef:</span></span><br><span class="line"><span class="symbol">  kind:</span> ClusterRole</span><br><span class="line"><span class="symbol">  name:</span> secret-reader</span><br><span class="line"><span class="symbol">  apiGroup:</span> rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure><p>最后，可以使用 <code>ClusterRoleBinding</code> 在集群级别和所有命名空间中授予权限。下面示例中所定义的 <code>ClusterRoleBinding</code> 允许在用户组 ”manager” 中的任何用户都可以读取集群中任何命名空间中的 secret 。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 以下`ClusterRoleBinding`对象允许在用户组<span class="string">"manager"</span>中的任何用户都可以读取集群中任何命名空间中的secret。</span></span><br><span class="line"><span class="symbol">kind:</span> ClusterRoleBinding</span><br><span class="line"><span class="symbol">apiVersion:</span> rbac.authorization.k8s.io/v1beta1</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> read-secrets-global</span><br><span class="line"><span class="symbol">subjects:</span></span><br><span class="line">- kind: Group</span><br><span class="line"><span class="symbol">  name:</span> manager</span><br><span class="line"><span class="symbol">  apiGroup:</span> rbac.authorization.k8s.io</span><br><span class="line"><span class="symbol">roleRef:</span></span><br><span class="line"><span class="symbol">  kind:</span> ClusterRole</span><br><span class="line"><span class="symbol">  name:</span> secret-reader</span><br><span class="line"><span class="symbol">  apiGroup:</span> rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure><h2 id="对资源的引用"><a href="#对资源的引用" class="headerlink" title="对资源的引用"></a>对资源的引用</h2><p>大多数资源由代表其名字的字符串表示，例如 ”pods”，就像它们出现在相关API endpoint 的URL中一样。然而，有一些Kubernetes API还 包含了”子资源”，比如 <code>pod</code> 的 <code>logs</code>。在Kubernetes中，pod logs endpoint的URL格式为：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /api/v1/namespaces/&#123;<span class="keyword">namespace</span>&#125;/<span class="symbol">pods</span>/&#123;name&#125;/log</span><br></pre></td></tr></table></figure><p>在这种情况下，”pods”是命名空间资源，而”log”是pods的子资源。为了在RBAC角色中表示出这一点，我们需要使用斜线来划分资源 与子资源。如果需要角色绑定主体读取pods以及pod log，您需要定义以下角色：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kind: Role</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  namespace: default</span><br><span class="line">  name: pod-and-pod-logs-reader</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [<span class="string">""</span>]</span><br><span class="line">  resources: [<span class="string">"pods"</span>, <span class="string">"pods/log"</span>]</span><br><span class="line">  verbs: [<span class="string">"get"</span>, <span class="string">"list"</span>]</span><br></pre></td></tr></table></figure><p>通过 <code>resourceNames</code> 列表，角色可以针对不同种类的请求根据资源名引用资源实例。当指定了 <code>resourceNames</code> 列表时，不同动作 种类的请求的权限，如使用 ”get”、”delete”、”update”以及”patch”等动词的请求，将被限定到资源列表中所包含的资源实例上。例如，如果需要限定一个角色绑定主体只能 ”get” 或者 ”update” 一个 <code>configmap</code> 时，您可以定义以下角色：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kind</span>: Role</span><br><span class="line"><span class="attribute">apiVersion</span>: rbac.authorization.k8s.io/v1beta1</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">namespace</span>: default</span><br><span class="line">  <span class="attribute">name</span>: configmap-updater</span><br><span class="line"><span class="attribute">rules</span>:</span><br><span class="line">- <span class="attribute">apiGroups</span>: [<span class="string">""</span>]</span><br><span class="line">  <span class="attribute">resources</span>: [<span class="string">"configmap"</span>]</span><br><span class="line">  <span class="attribute">resourceNames</span>: [<span class="string">"my-configmap"</span>]</span><br><span class="line">  <span class="attribute">verbs</span>: [<span class="string">"update"</span>, <span class="string">"get"</span>]</span><br></pre></td></tr></table></figure><p>值得注意的是，如果设置了 <code>resourceNames</code>，则请求所使用的动词不能是 <code>list、watch、create或者deletecollection</code>。由于资源名不会出现在 <code>create、list、watch和deletecollection</code> 等API请求的URL中，所以这些请求动词不会被设置了<code>resourceNames</code> 的规则所允许，因为规则中的 <code>resourceNames</code> 部分不会匹配这些请求。[1]</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ul><li><p>绑定用户能查看所有 namespace</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadat<span class="variable">a:</span></span><br><span class="line">  # 鉴于ClusterRole是集群范围对象，所以这里不需要定 义<span class="string">"namespace"</span>字段</span><br><span class="line">  name: <span class="keyword">view</span>-namespace-clusterrole</span><br><span class="line">rule<span class="variable">s:</span></span><br><span class="line">- apiGroup<span class="variable">s:</span></span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resource<span class="variable">s:</span></span><br><span class="line">  - namespaces</span><br><span class="line">  - namespaces/status</span><br><span class="line">  <span class="keyword">verb</span><span class="variable">s:</span></span><br><span class="line">  - <span class="built_in">get</span></span><br><span class="line">  - <span class="keyword">list</span></span><br><span class="line">  - watch</span><br></pre></td></tr></table></figure></li><li><p>定义 <code>develop-role</code> 用户对 <code>default</code> 命名空间详细权限</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: Role</span><br><span class="line">metadata:</span><br><span class="line">  name: develop-role</span><br><span class="line">  namespace: default</span><br><span class="line">rules:</span><br><span class="line">-<span class="ruby"> <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - <span class="string">""</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - endpoints</span></span><br><span class="line"><span class="ruby">  - serviceaccounts</span></span><br><span class="line"><span class="ruby">  - configmaps</span></span><br><span class="line"><span class="ruby">  - persistentvolumeclaims</span></span><br><span class="line"><span class="ruby">  - persistentvolumes</span></span><br><span class="line"><span class="ruby">  - services</span></span><br><span class="line"><span class="ruby">  - replicationcontrollers</span></span><br><span class="line"><span class="ruby">  - replicationcontrollers/scale</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - <span class="string">""</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - pods</span></span><br><span class="line"><span class="ruby">  - pods/log</span></span><br><span class="line"><span class="ruby">  - pods/status</span></span><br><span class="line"><span class="ruby">  - pods/exec</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - create</span></span><br><span class="line"><span class="ruby">  - delete</span></span><br><span class="line"><span class="ruby">  - deletecollection</span></span><br><span class="line"><span class="ruby">  - patch</span></span><br><span class="line"><span class="ruby">  - update</span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - <span class="string">""</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - bindings</span></span><br><span class="line"><span class="ruby">  - events</span></span><br><span class="line"><span class="ruby">  - limitranges</span></span><br><span class="line"><span class="ruby">  - namespaces/status</span></span><br><span class="line"><span class="ruby">  - replicationcontrollers/status</span></span><br><span class="line"><span class="ruby">  - resourcequotas</span></span><br><span class="line"><span class="ruby">  - resourcequotas/status</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - <span class="string">""</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - namespaces</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - apps</span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - daemonsets</span></span><br><span class="line"><span class="ruby">  - statefulsets</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - apps</span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - deployments</span></span><br><span class="line"><span class="ruby">  - deployments/scale</span></span><br><span class="line"><span class="ruby">  - replicasets</span></span><br><span class="line"><span class="ruby">  - replicasets/scale</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">  - update</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - autoscaling</span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - horizontalpodautoscalers</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - batch</span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - cronjobs</span></span><br><span class="line"><span class="ruby">  - jobs</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - extensions</span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - daemonsets</span></span><br><span class="line"><span class="ruby">  - statefulsets</span></span><br><span class="line"><span class="ruby">  - ingresses</span></span><br><span class="line"><span class="ruby">  - networkpolicies</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - extensions</span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - deployments</span></span><br><span class="line"><span class="ruby">  - deployments/scale</span></span><br><span class="line"><span class="ruby">  - replicasets</span></span><br><span class="line"><span class="ruby">  - replicasets/scale</span></span><br><span class="line"><span class="ruby">  - replicationcontrollers/scale</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">  - update</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - policy</span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - poddisruptionbudgets</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br><span class="line"><span class="ruby">- <span class="symbol">apiGroups:</span></span></span><br><span class="line"><span class="ruby">  - networking.k8s.io</span></span><br><span class="line"><span class="ruby">  <span class="symbol">resources:</span></span></span><br><span class="line"><span class="ruby">  - networkpolicies</span></span><br><span class="line"><span class="ruby">  <span class="symbol">verbs:</span></span></span><br><span class="line"><span class="ruby">  - get</span></span><br><span class="line"><span class="ruby">  - list</span></span><br><span class="line"><span class="ruby">  - watch</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="默认角色-与-默认角色绑定"><a href="#默认角色-与-默认角色绑定" class="headerlink" title="默认角色 与 默认角色绑定"></a>默认角色 与 默认角色绑定</h2><p><code>API Server</code> 会创建一组默认的 <code>ClusterRole</code> 和 <code>ClusterRoleBinding</code> 对象。这些默认对象中有许多包含 <code>system:</code> 前缀，表明这些资源由 <code>Kubernetes基础组件”拥有”</code>。对这些资源的修改可能<code>导致非功能性集群</code>（non-functional cluster）。一个例子是 <code>system:node ClusterRole</code> 对象。这个角色定义了 <code>kubelet</code> 的权限。如果这个角色被修改，可能会导致<code>kubelet</code> 无法正常工作。</p><p>所有默认的 <code>ClusterRole</code> 和 <code>ClusterRoleBinding</code> 对象都会被标记为 <code>kubernetes.io/bootstrapping=rbac-defaults</code>。[1]</p><h2 id="面向用户的角色"><a href="#面向用户的角色" class="headerlink" title="面向用户的角色"></a>面向用户的角色</h2><p>通过命令 <code>kubectl get clusterrole</code> 查看到并不是所有都是以 <code>system:前缀</code>，它们是<code>面向用户的角色</code>。这些角色包含<code>超级用户角色（cluster-admin</code>），即旨在利用 <code>ClusterRoleBinding（cluster-status）</code>在集群范围内授权的角色， 以及那些使用 <code>RoleBinding（admin、edit和view）</code>在特定命名空间中授权的角色。</p><ul><li><code>cluster-admin</code>：<code>超级用户权限</code>，允许对任何资源执行任何操作。在 ClusterRoleBinding 中使用时，可以完全控制集群和所有命名空间中的所有资源。在 RoleBinding 中使用时，可以完全控制 RoleBinding 所在命名空间中的所有资源，包括命名空间自己。</li><li><code>admin</code>：<code>管理员权限</code>，利用 RoleBinding 在某一命名空间内部授予。在 RoleBinding 中使用时，允许针对命名空间内大部分资源的读写访问， 包括在命名空间内创建角色与角色绑定的能力。但<code>不允许对资源配额（resource quota）</code>或者<code>命名空间本身</code>的<code>写访问</code>。</li><li><code>edit</code>：允许对某一个命名空间内大部分对象的读写访问，但不允许查看或者修改角色或者角色绑定。</li><li><code>view</code>：允许对某一个命名空间内大部分对象的只读访问。不允许查看角色或者角色绑定。由于可扩散性等原因，<code>不允许查看 secret 资源</code>。</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">核心组件角色、其它组件角色 和 控制器（Controller）角色 这里不在一一列出。具体见参考链接中[<span class="number">1</span>]。</span><br></pre></td></tr></table></figure><h2 id="Permissive-RBAC"><a href="#Permissive-RBAC" class="headerlink" title="Permissive RBAC"></a>Permissive RBAC</h2><p>所谓 <code>Permissive RBAC</code> 是指授权给所有的 <code>Service Accounts</code> 管理员权限。<code>不推荐的配置</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create clusterrolebinding permissive-binding \</span><br><span class="line"><span class="attribute">--clusterrole</span>=cluster-admin \</span><br><span class="line"><span class="attribute">--user</span>=admin \</span><br><span class="line"><span class="attribute">--user</span>=kubelet \</span><br><span class="line"><span class="attribute">--group</span>=system:serviceaccounts</span><br></pre></td></tr></table></figure><h2 id="创建用户-shell脚本"><a href="#创建用户-shell脚本" class="headerlink" title="创建用户 shell脚本"></a>创建用户 shell脚本</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment"># 注意修改KUBE_APISERVER为你的API Server的地址</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">KUBE_APISERVER</span>=<span class="variable">$1</span></span><br><span class="line"><span class="attribute">USER</span>=<span class="variable">$2</span></span><br><span class="line"><span class="attribute">USER_SA</span>=system:serviceaccount:default:$&#123;USER&#125;</span><br><span class="line"><span class="attribute">Authorization</span>=<span class="variable">$3</span></span><br><span class="line"><span class="attribute">USAGE</span>=<span class="string">"USAGE: create-user.sh &lt;api_server&gt; &lt;username&gt; &lt;clusterrole authorization&gt;\n</span></span><br><span class="line"><span class="string">Example: https://192.168.1.2:6443 brand"</span></span><br><span class="line"><span class="attribute">CSR</span>=`pwd`/user-csr.json</span><br><span class="line"><span class="attribute">SSL_PATH</span>=<span class="string">"/opt/kubernetes/ssl"</span></span><br><span class="line"><span class="attribute">USER_SSL_PATH</span>=<span class="string">"/opt/kubernetes/create-user"</span></span><br><span class="line">SSL_FILES=(ca-key.pem ca.pem ca-config.json)</span><br><span class="line">CERT_FILES=(<span class="variable">$&#123;USER&#125;</span>.csr <span class="variable">$USER</span>-key.pem <span class="variable">$&#123;USER&#125;</span>.pem)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$KUBE_APISERVER</span> == <span class="string">""</span> ]]; then</span><br><span class="line">   echo -e <span class="variable">$USAGE</span></span><br><span class="line">   exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$USER</span> == <span class="string">""</span> ]];then</span><br><span class="line">    echo -e <span class="variable">$USAGE</span></span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$Authorization</span> == <span class="string">""</span> ]];then</span><br><span class="line">    echo -e <span class="variable">$USAGE</span></span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户的csr文件</span></span><br><span class="line">function createCSR()&#123;</span><br><span class="line">cat&gt;<span class="variable">$CSR</span>&lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"USER"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换csr文件中的用户名</span></span><br><span class="line">sed -i <span class="string">"s/USER/<span class="variable">$USER_SA</span>/g"</span> <span class="variable">$CSR</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function ifExist()&#123;</span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">$SSL_PATH</span>/<span class="variable">$1</span>"</span> ]; then</span><br><span class="line">    echo <span class="string">"<span class="variable">$SSL_PATH</span>/<span class="variable">$1</span> not found."</span></span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function ifClusterrole()&#123;</span><br><span class="line">kubectl <span class="builtin-name">get</span> clusterrole <span class="variable">$&#123;Authorization&#125;</span> &amp;&gt; /dev/<span class="literal">null</span></span><br><span class="line"><span class="keyword">if</span> (( $? !=0 ));then</span><br><span class="line">   echo <span class="string">"<span class="variable">$&#123;Authorization&#125;</span> clusterrole there is no"</span></span><br><span class="line">   exit 1</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断clusterrole授权是否存在</span></span><br><span class="line">ifClusterrole</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断证书文件是否存在</span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$&#123;SSL_FILES[@]&#125;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    echo <span class="string">"Check if ssl file <span class="variable">$f</span> exist..."</span></span><br><span class="line">    ifExist <span class="variable">$f</span></span><br><span class="line">    echo <span class="string">"OK"</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo <span class="string">"Create CSR file..."</span></span><br><span class="line">createCSR</span><br><span class="line">echo <span class="string">"<span class="variable">$CSR</span> created"</span></span><br><span class="line">echo <span class="string">"Create user's certificates and keys..."</span></span><br><span class="line">cd <span class="variable">$USER_SSL_PATH</span></span><br><span class="line">cfssl gencert <span class="attribute">-ca</span>=<span class="variable">$&#123;SSL_PATH&#125;</span>/ca.pem <span class="attribute">-ca-key</span>=<span class="variable">$&#123;SSL_PATH&#125;</span>/ca-key.pem <span class="attribute">-config</span>=<span class="variable">$&#123;SSL_PATH&#125;</span>/ca-config.json <span class="attribute">-profile</span>=kubernetes <span class="variable">$CSR</span>| cfssljson -bare <span class="variable">$USER_SA</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 sa</span></span><br><span class="line">kubectl create sa <span class="variable">$&#123;USER&#125;</span> -n default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-cluster kubernetes \</span><br><span class="line"><span class="attribute">--certificate-authority</span>=<span class="variable">$&#123;SSL_PATH&#125;</span>/ca.pem \</span><br><span class="line"><span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line"><span class="attribute">--server</span>=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line"><span class="attribute">--kubeconfig</span>=<span class="variable">$&#123;USER&#125;</span>.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-credentials <span class="variable">$&#123;USER_SA&#125;</span> \</span><br><span class="line"><span class="attribute">--client-certificate</span>=<span class="variable">$&#123;USER_SSL_PATH&#125;</span>/$&#123;USER_SA&#125;.pem \</span><br><span class="line"><span class="attribute">--client-key</span>=<span class="variable">$&#123;USER_SSL_PATH&#125;</span>/$&#123;USER_SA&#125;-key.pem \</span><br><span class="line"><span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line"><span class="attribute">--kubeconfig</span>=<span class="variable">$&#123;USER&#125;</span>.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-context kubernetes \</span><br><span class="line"><span class="attribute">--cluster</span>=kubernetes \</span><br><span class="line"><span class="attribute">--user</span>=<span class="variable">$&#123;USER_SA&#125;</span> \</span><br><span class="line"><span class="attribute">--namespace</span>=development \</span><br><span class="line"><span class="attribute">--kubeconfig</span>=<span class="variable">$&#123;USER&#125;</span>.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl<span class="built_in"> config </span>use-context kubernetes <span class="attribute">--kubeconfig</span>=<span class="variable">$&#123;USER&#125;</span>.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 namespace</span></span><br><span class="line"><span class="comment"># kubectl create ns $USER</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定角色</span></span><br><span class="line"><span class="comment"># kubectl create rolebinding $&#123;USER&#125;-admin-binding --clusterrole=admin --user=$USER --namespace=$USER --serviceaccount=$USER:default</span></span><br><span class="line">kubectl create clusterrolebinding <span class="variable">$&#123;USER&#125;</span>-binding <span class="attribute">--clusterrole</span>=<span class="variable">$&#123;Authorization&#125;</span> <span class="attribute">--user</span>=<span class="variable">$&#123;USER_SA&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl config get-contexts</span></span><br><span class="line"></span><br><span class="line">echo <span class="string">"Congratulations!"</span></span><br><span class="line">echo <span class="string">"Your kubeconfig file is <span class="variable">$&#123;USER&#125;</span>.kubeconfig"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RBAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-service模板</title>
      <link href="/2020/03/08/k8s/k8s-service%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/03/08/k8s/k8s-service%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>service模板</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">mynginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">my-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="number">10.254</span><span class="number">.163</span><span class="number">.198</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#123;NodePort|NodePort|LoadBalancer|ExternalName&#125;</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="string">NodePort:30001</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">my-nginx</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yaml </tag>
            
            <tag> k8s-service </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-Deployment模板</title>
      <link href="/2020/03/08/k8s/k8s-Deployment%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/03/08/k8s/k8s-Deployment%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>Deployment模板</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span>   <span class="comment">#接口版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span>                 <span class="comment">#接口类型</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ptengine-demo</span>               <span class="comment">#Deployment名称</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ptengine-prd</span>           <span class="comment">#namespace 名称</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ptengine-demo</span>              <span class="comment">#标签</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">   <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span>  <span class="comment">##由于replicas为3,则整个升级,pod个数在2-4个之间</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span>       <span class="comment">#滚动升级时会先启动1个pod</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span> <span class="comment">#滚动升级时允许的最大Unavailable的pod个数</span></span><br><span class="line">  <span class="attr">template:</span>         </span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">ptengine-demo</span>  <span class="comment">#模板名称必填</span></span><br><span class="line">    <span class="attr">sepc:</span> <span class="comment">#定义容器模板，该模板可以包含多个容器</span></span><br><span class="line">      <span class="attr">containers:</span>                                                                   </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ptengine-demo</span>                                                           <span class="comment">#镜像名称</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">reg.pt1.com/ptengine-prd/ptengine-demo:0.0.1-SNAPSHOT</span> <span class="comment">#镜像地址</span></span><br><span class="line">          <span class="attr">CMD:</span> <span class="string">[</span> <span class="string">"/bin/sh"</span><span class="string">,"-c","cat</span> <span class="string">/etc/config/path/to/special-key"</span> <span class="string">]</span>    <span class="comment">#启动CMD</span></span><br><span class="line">          <span class="attr">args:</span>                                                                <span class="comment">#启动参数</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">'-storage.local.retention=$(STORAGE_RETENTION)'</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">'-web.external-url=$(EXTERNAL_URL)'</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span>  <span class="comment">#如果不存在则拉取</span></span><br><span class="line">          <span class="attr">livenessProbe:</span>       <span class="comment">#表示container是否处于live状态。如果LivenessProbe失败，LivenessProbe将会通知kubelet对应的container不健康了。随后kubelet将kill掉container，并根据RestarPolicy进行进一步的操作。默认情况下LivenessProbe在第一次检测之前初始化值为Success，如果container没有提供LivenessProbe，则也认为是Success；</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/health</span> <span class="comment">#如果没有心跳检测接口就为/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">60</span> <span class="comment">##启动后延时多久开始运行检测</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/health</span> <span class="comment">#如果没有健康检测接口就为/</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">30</span> <span class="comment">##启动后延时多久开始运行检测</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">resources:</span>              <span class="comment">##CPU内存限制</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2048Mi</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2048Mi</span></span><br><span class="line">          <span class="attr">env:</span>                    <span class="comment">##通过环境变量的方式，直接传递pod=自定义Linux OS环境变量</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LOCAL_KEY</span>     <span class="comment">#本地Key</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">value</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">CONFIG_MAP_KEY</span>  <span class="comment">#local策略可使用configMap的配置Key，</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">configMapKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">special-config</span>   <span class="comment">#configmap中找到name为special-config</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">special.type</span>      <span class="comment">#找到name为special-config里data下的key</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8080</span> <span class="comment">#对service暴露端口</span></span><br><span class="line">          <span class="attr">volumeMounts:</span>     <span class="comment">#挂载volumes中定义的磁盘</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">log-cache</span></span><br><span class="line">            <span class="attr">mount:</span> <span class="string">/tmp/log</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sdb</span>       <span class="comment">#普通用法，该卷跟随容器销毁，挂载一个目录</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/data/media</span>    </span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span>    <span class="comment">#直接挂载硬盘方法，如挂载下面的nfs目录到/mnt/nfs</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/mnt/nfs</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example-volume-config</span>  <span class="comment">#高级用法第1种，将ConfigMap的log-script,backup-script分别挂载到/etc/config目录下的一个相对路径path/to/...下，如果存在同名文件，直接覆盖。</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/etc/config</span>       </span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rbd-pvc</span>                <span class="comment">#高级用法第2中，挂载PVC(PresistentVolumeClaim)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用volume将ConfigMap作为文件或目录直接挂载，其中每一个key-value键值对都会生成一个文件，key为文件名，value为内容，</span></span><br><span class="line">  <span class="attr">volumes:</span>  <span class="comment"># 定义磁盘给上面volumeMounts挂载</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">log-cache</span></span><br><span class="line">    <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">sdb</span>  <span class="comment">#挂载宿主机上面的目录</span></span><br><span class="line">    <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/any/path/it/will/be/replaced</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">example-volume-config</span>  <span class="comment"># 供ConfigMap文件内容到指定路径使用</span></span><br><span class="line">    <span class="attr">configMap:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">example-volume-config</span>  <span class="comment">#ConfigMap中名称</span></span><br><span class="line">      <span class="attr">items:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">log-script</span>           <span class="comment">#ConfigMap中的Key</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">path/to/log-script</span>  <span class="comment">#指定目录下的一个相对路径path/to/log-script</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">backup-script</span>        <span class="comment">#ConfigMap中的Key</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">path/to/backup-script</span>  <span class="comment">#指定目录下的一个相对路径path/to/backup-script</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span>         <span class="comment">#供挂载NFS存储类型</span></span><br><span class="line">    <span class="attr">nfs:</span></span><br><span class="line">      <span class="attr">server:</span> <span class="number">10.42</span><span class="number">.0</span><span class="number">.55</span>          <span class="comment">#NFS服务器地址</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/opt/public</span>           <span class="comment">#showmount -e 看一下路径</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rbd-pvc</span>                 <span class="comment">#挂载PVC磁盘</span></span><br><span class="line">    <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">      <span class="attr">claimName:</span> <span class="string">rbd-pvc1</span>         <span class="comment">#挂载已经申请的pvc磁盘</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yaml </tag>
            
            <tag> k8s-Deployment模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-Pod模板</title>
      <link href="/2020/03/08/k8s/k8s-Pod%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/03/08/k8s/k8s-Pod%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>Pod模板</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span>        　　          <span class="comment">#必选，版本号，例如v1,版本号必须可以用 kubectl api-versions 查询到 .</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span>       　　　　　　         <span class="comment">#必选，Pod</span></span><br><span class="line"><span class="attr">metadata:</span>       　　　　　　         <span class="comment">#必选，元数据</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">string</span>        　　          <span class="comment">#必选，Pod名称</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">string</span>     　　        <span class="comment">#必选，Pod所属的命名空间,默认为"default"</span></span><br><span class="line">  <span class="attr">labels:</span>       　　　　　　          <span class="comment">#自定义标签</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span>      　          <span class="comment">#自定义标签名字</span></span><br><span class="line">  <span class="attr">annotations:</span>        　　                 <span class="comment">#自定义注释列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span></span><br><span class="line"><span class="attr">spec:</span>         　　　　　　　            <span class="comment">#必选，Pod中容器的详细定义</span></span><br><span class="line">  <span class="attr">containers:</span>       　　　　            <span class="comment">#必选，Pod中容器列表</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span>      　　                <span class="comment">#必选，容器名称,需符合RFC 1035规范</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">string</span>     　　                <span class="comment">#必选，容器的镜像名称</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">[</span> <span class="string">Always|Never|IfNotPresent</span> <span class="string">]</span>  <span class="comment">#获取镜像的策略 Alawys表示下载镜像 IfnotPresent表示优先使用本地镜像,否则下载镜像，Nerver表示仅使用本地镜像</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">[string]</span>     　　        <span class="comment">#容器的启动命令列表，如不指定，使用打包时使用的启动命令</span></span><br><span class="line">    <span class="attr">args:</span> <span class="string">[string]</span>      　　             <span class="comment">#容器的启动命令参数列表</span></span><br><span class="line">    <span class="attr">workingDir:</span> <span class="string">string</span>                     <span class="comment">#容器的工作目录</span></span><br><span class="line">    <span class="attr">volumeMounts:</span>     　　　　        <span class="comment">#挂载到容器内部的存储卷配置</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span>      　　　        <span class="comment">#引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">string</span>                 <span class="comment">#存储卷在容器内mount的绝对路径，应少于512字符</span></span><br><span class="line">      <span class="attr">readOnly:</span> <span class="string">boolean</span>                 <span class="comment">#是否为只读模式</span></span><br><span class="line">    <span class="attr">ports:</span>        　　　　　　        <span class="comment">#需要暴露的端口库号列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span>      　　　        <span class="comment">#端口的名称</span></span><br><span class="line">      <span class="attr">containerPort:</span> <span class="string">int</span>                <span class="comment">#容器需要监听的端口号</span></span><br><span class="line">      <span class="attr">hostPort:</span> <span class="string">int</span>     　　             <span class="comment">#容器所在主机需要监听的端口号，默认与Container相同</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">string</span>                  <span class="comment">#端口协议，支持TCP和UDP，默认TCP</span></span><br><span class="line">    <span class="attr">env:</span>        　　　　　　            <span class="comment">#容器运行前需设置的环境变量列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span>      　　            <span class="comment">#环境变量名称</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">string</span>     　　            <span class="comment">#环境变量的值</span></span><br><span class="line">    <span class="attr">resources:</span>        　　                <span class="comment">#资源限制和请求的设置</span></span><br><span class="line">      <span class="attr">limits:</span>       　　　　            <span class="comment">#资源限制的设置</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">string</span>     　　            <span class="comment">#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">string</span>                  <span class="comment">#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数</span></span><br><span class="line">      <span class="attr">requests:</span>       　　                <span class="comment">#资源请求的设置</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">string</span>     　　            <span class="comment">#Cpu请求，容器启动的初始可用数量</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">string</span>                    <span class="comment">#内存请求,容器启动的初始可用数量</span></span><br><span class="line">    <span class="attr">livenessProbe:</span>      　　            <span class="comment">#对Pod内各容器健康检查的设置，当探测无响应几次后将自动重启该容器，检查方法有exec、httpGet和tcpSocket，对一个容器只需设置其中一种方法即可</span></span><br><span class="line">      <span class="attr">exec:</span>       　　　　　　        <span class="comment">#对Pod容器内检查方式设置为exec方式</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">[string]</span>               <span class="comment">#exec方式需要制定的命令或脚本</span></span><br><span class="line">      <span class="attr">httpGet:</span>        　　　　        <span class="comment">#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">port:</span> <span class="string">number</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">scheme:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">HttpHeaders:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">string</span></span><br><span class="line">      <span class="attr">tcpSocket:</span>      　　　　　　<span class="comment">#对Pod内个容器健康检查方式设置为tcpSocket方式</span></span><br><span class="line">         <span class="attr">port:</span> <span class="string">number</span></span><br><span class="line">       <span class="attr">initialDelaySeconds:</span> <span class="number">0</span>       <span class="comment">#容器启动完成后首次探测的时间，单位为秒</span></span><br><span class="line">       <span class="attr">timeoutSeconds:</span> <span class="number">0</span>    　　    <span class="comment">#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒</span></span><br><span class="line">       <span class="attr">periodSeconds:</span> <span class="number">0</span>     　　    <span class="comment">#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次</span></span><br><span class="line">       <span class="attr">successThreshold:</span> <span class="number">0</span></span><br><span class="line">       <span class="attr">failureThreshold:</span> <span class="number">0</span></span><br><span class="line">       <span class="attr">securityContext:</span></span><br><span class="line">         <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">restartPolicy:</span> <span class="string">[Always</span> <span class="string">|</span> <span class="string">Never</span> <span class="string">|</span> <span class="string">OnFailure]</span> <span class="comment">#Pod的重启策略，Always表示一旦不管以何种方式终止运行，kubelet都将重启，OnFailure表示只有Pod以非0退出码退出才重启，Nerver表示不再重启该Pod</span></span><br><span class="line">    <span class="attr">nodeSelector:</span> <span class="string">obeject</span>   　　    <span class="comment">#设置NodeSelector表示将该Pod调度到包含这个label的node上，以key：value的格式指定</span></span><br><span class="line">    <span class="attr">imagePullSecrets:</span>     　　　　<span class="comment">#Pull镜像时使用的secret名称，以key：secretkey格式指定</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span></span><br><span class="line">    <span class="attr">hostNetwork:</span> <span class="literal">false</span>      　　    <span class="comment">#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络</span></span><br><span class="line">    <span class="attr">volumes:</span>        　　　　　　    <span class="comment">#在该pod上定义共享存储卷列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">string</span>     　　 　　    <span class="comment">#共享存储卷名称 （volumes类型有很多种）</span></span><br><span class="line">      <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span>      　　　　    <span class="comment">#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值</span></span><br><span class="line">      <span class="attr">hostPath:</span> <span class="string">string</span>      　　    <span class="comment">#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">string</span>      　　        <span class="comment">#Pod所在宿主机的目录，将被用于同期中mount的目录</span></span><br><span class="line">      <span class="attr">secret:</span>       　　　　　　    <span class="comment">#类型为secret的存储卷，挂载集群与定义的secre对象到容器内部</span></span><br><span class="line">        <span class="attr">scretname:</span> <span class="string">string</span>  </span><br><span class="line">        <span class="attr">items:</span>     </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">string</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">string</span></span><br><span class="line">      <span class="attr">configMap:</span>      　　　　            <span class="comment">#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">items:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">string</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">string</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yaml </tag>
            
            <tag> k8s-Pod模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从监控邮件报警脚本</title>
      <link href="/2020/03/07/Mysql/MySQL%E4%B8%BB%E4%BB%8E%E7%9B%91%E6%8E%A7%E9%82%AE%E4%BB%B6%E6%8A%A5%E8%AD%A6%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/03/07/Mysql/MySQL%E4%B8%BB%E4%BB%8E%E7%9B%91%E6%8E%A7%E9%82%AE%E4%BB%B6%E6%8A%A5%E8%AD%A6%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<ul><li>此脚本应该能适应各种各样不同的内外网环境。</li><li>让脚本也顺便监控下MySQL是否正常运行。</li><li>Slave机器的IO和SQL状态都必须为YES，缺一不可，这里用到了多重条件判断-a。</li></ul><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">shell&gt;</span><span class="bash"> check_mysql_slave.sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">check MySQL_Slave Status</span></span><br><span class="line"></span><br><span class="line">MYSQLPORT='netstat -na|grep "LISTEN"|grep "3306"|awk -F［:" "］+ '&#123;print $4&#125;''</span><br><span class="line">MYSQLIP='ifconfig eth0|grep "inet addr" | awk -F［:" "］+ '&#123;print $4&#125;''</span><br><span class="line">STATUS=$(/usr/local/mysql/bin/mysql -u dbuser -dbpwd123 -S /tmp/mysql.sock -e "show slave status＼G" | grep -i "running")</span><br><span class="line">IO_env='echo $STATUS | grep IO | awk ' &#123;print $2&#125;''</span><br><span class="line">SQL_env='echo $STATUS | grep SQL | awk '&#123;print $2&#125;''</span><br><span class="line"></span><br><span class="line">if ［ "$MYSQLPORT" == "3306" ］</span><br><span class="line">then</span><br><span class="line">　echo "mysql is running"</span><br><span class="line">else</span><br><span class="line">　mail -s "warn!server: $MYSQLIP mysql is down" magedu@gmail.com</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if ［ "$IO_env" = "Yes" -a "$SQL_env" = "Yes" ］</span><br><span class="line">then</span><br><span class="line">　echo "Slave is running!"</span><br><span class="line">else</span><br><span class="line">　echo "####### $date #########"&gt;&gt; /data/log/check_mysql_slave.log</span><br><span class="line">　echo "Slave is not running!" &gt;&gt; /data/log/check_mysql_slave.log</span><br><span class="line">　mail -s "warn! $MySQLIP_replicate_error" magedu@gmail.com &lt;&lt; /data/log/check_mysql_slave.log</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 建议每10分钟运行一次：</span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> crontab -e</span></span><br><span class="line">*/10 * * * * root /bin/sh /root/check_mysql_slave.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx负载均衡服务器上监控Nginx进程的脚本</title>
      <link href="/2020/03/07/Nginx/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9B%91%E6%8E%A7Nginx%E8%BF%9B%E7%A8%8B%E7%9A%84%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/03/07/Nginx/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9B%91%E6%8E%A7Nginx%E8%BF%9B%E7%A8%8B%E7%9A%84%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>企业负载均衡层如果用到Nginx+Keepalived架构，而Keepalived无法进行Nginx服务的实时切换，所以这里用了一个监控脚本check_nginx_pid.sh，每隔5秒就监控一次Nginx的运行状态，如果发现有问题就关闭本机的Keepalived程序，让VIP切换到从Nginx负载均衡器上。</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">shell&gt;</span><span class="bash"> vim check_nginx_pid.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">nginxpid='ps -C nginx --no-header | wc -l'</span><br><span class="line">if ［$nginxpid -eq 0 ］;then</span><br><span class="line">　　ulimit -SHn 65535</span><br><span class="line">　　/usr/local/nginx/sbin/nginx</span><br><span class="line">sleep 5</span><br><span class="line">　nginxpid='ps -C nginx --no-header | wc -l'</span><br><span class="line">　if ［$nginxpid -eq 0 ］;then</span><br><span class="line">　/etc/init.d/keepalived stop</span><br><span class="line">　fi</span><br><span class="line">fi</span><br><span class="line">sleep 5</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库备份脚本</title>
      <link href="/2020/03/07/Mysql/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/03/07/Mysql/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p><strong>Mysql全量备份+异地备份</strong></p><a id="more"></a><p>一般Mysql数据库备份会采用在MYSQL从库上执行全量备份+增量备份方式。在从库备份避免Mysql主库备份的时候锁表造成业务影响。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">shell&gt;</span><span class="bash"> vim db_backup.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description:  MySQL buckup shell script  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 192.168.10.10 为专门的备份服务器，需要做一下服务器之间免密码登录</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">备份的数据库名</span></span><br><span class="line">DATABASES=(</span><br><span class="line">            "da01"</span><br><span class="line">            "da02"                    </span><br><span class="line">)</span><br><span class="line">USER="root"</span><br><span class="line">PASSWORD="dbpwd123"</span><br><span class="line"></span><br><span class="line">MAIL="quhuixx@gmail.com" </span><br><span class="line">BACKUP_DIR=/data/backup</span><br><span class="line">LOGFILE=/data/backup/data_backup.log </span><br><span class="line">DATE=`date +%Y%m%d_%H%M`</span><br><span class="line"></span><br><span class="line">cd $BACKUP_DIR</span><br><span class="line"><span class="meta">#</span><span class="bash">开始备份之前，将备份信息头写入日记文件   </span></span><br><span class="line">echo "--------------------" &gt;&gt; $LOGFILE   </span><br><span class="line">echo "BACKUP DATE:" $(date +"%y-%m-%d %H:%M:%S") &gt;&gt; $LOGFILE   </span><br><span class="line">echo "-------------------" &gt;&gt; $LOGFILE</span><br><span class="line"></span><br><span class="line">for DATABASE in $&#123;DATABASES&#125;;do</span><br><span class="line">  /usr/local/mysql/bin/mysqldump -u$USER -p$PASSWORD --events  -R --opt  $DATABASE |gzip &gt;$&#123;BACKUP_DIR&#125;\/$&#123;DATABASE&#125;_$&#123;DATE&#125;.sql.gz</span><br><span class="line">  if [ $? == 0 ];then</span><br><span class="line">    echo "$DATE--$DATABASE is backup succeed" &gt;&gt; $LOGFILE</span><br><span class="line">  else</span><br><span class="line">    echo "Database Backup Fail!" &gt;&gt; $LOGFILE   </span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="bash">判断数据库备份是否全部成功，全部成功就同步到异地备份f服务器</span></span><br><span class="line">if [ $? == 0 ];then</span><br><span class="line">  /usr/bin/rsync -zrtopg   --delete  /data/backup/* root@192.168.10.10:/data/backup/  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">else</span><br><span class="line">  echo "Database Backup Fail!" &gt;&gt; $LOGFILE   </span><br><span class="line"><span class="meta">  #</span><span class="bash">备份失败后向管理者发送邮件提醒</span></span><br><span class="line">  mail -s "database Daily Backup Fail!" $MAIL   </span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除30天以上的备份文件  </span></span><br><span class="line">find $BACKUP_DIR  -type f -mtime +30 -name "*.gz" -exec rm -f &#123;&#125; \;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux中find命令用法全汇总</title>
      <link href="/2020/03/07/Linux/Linux%E4%B8%ADfind%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E5%85%A8%E6%B1%87%E6%80%BB/"/>
      <url>/2020/03/07/Linux/Linux%E4%B8%ADfind%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E5%85%A8%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<ul><li>第一部分：查找名称查找文件的基本查找命令</li><li>第二部分：根据他们的权限查找文件</li><li>第三部分：基于所有者和组的搜索文件</li><li>第四部分：根据日期和时间查找文件和目录</li><li>第五部分：根据大小查找文件和目录</li></ul><a id="more"></a><h3 id="第一部分-查找名称查找文件的基本查找命令"><a href="#第一部分-查找名称查找文件的基本查找命令" class="headerlink" title="第一部分 - 查找名称查找文件的基本查找命令"></a><strong>第一部分 - 查找名称查找文件的基本查找命令</strong></h3><h4 id="使用当前目录中的名称查找文件"><a href="#使用当前目录中的名称查找文件" class="headerlink" title="使用当前目录中的名称查找文件"></a>使用当前目录中的名称查找文件</h4><p>在当前工作目录中查找名称为table的所有文件。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find table</span><br><span class="line">table</span><br></pre></td></tr></table></figure><h4 id="在主目录下查找文件"><a href="#在主目录下查找文件" class="headerlink" title="在主目录下查找文件"></a>在主目录下查找文件</h4><p>查找/ home目录下的所有文件，名称为test。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find /home -name nohup.out</span><br><span class="line">/home/admin/nohup.out</span><br></pre></td></tr></table></figure><h4 id="使用名称和忽略案例查找文件"><a href="#使用名称和忽略案例查找文件" class="headerlink" title="使用名称和忽略案例查找文件"></a>使用名称和忽略案例查找文件</h4><p>找到名称为test的所有文件，并在/ home目录中同时包含大写和小写字母。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -iname test</span><br></pre></td></tr></table></figure><h4 id="使用名称查找目录"><a href="#使用名称查找目录" class="headerlink" title="使用名称查找目录"></a>使用名称查找目录</h4><p>在/目录中查找名称为test的所有目录。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root/ -type d -name test</span><br></pre></td></tr></table></figure><h4 id="使用名称查找PHP文件"><a href="#使用名称查找PHP文件" class="headerlink" title="使用名称查找PHP文件"></a>使用名称查找PHP文件</h4><p>在当前工作目录中查找名为test的所有文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root/ -type f -name test</span><br></pre></td></tr></table></figure><h4 id="查找目录中的所有PHP文件"><a href="#查找目录中的所有PHP文件" class="headerlink" title="查找目录中的所有PHP文件"></a>查找目录中的所有PHP文件</h4><p>查找目录中的所有php文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root/ -type f -name "*.php"</span><br></pre></td></tr></table></figure><h3 id="第二部分-根据他们的权限查找文件"><a href="#第二部分-根据他们的权限查找文件" class="headerlink" title="第二部分 - 根据他们的权限查找文件"></a><strong>第二部分 - 根据他们的权限查找文件</strong></h3><h4 id="查找权限为777的所有文件"><a href="#查找权限为777的所有文件" class="headerlink" title="查找权限为777的所有文件"></a>查找权限为777的所有文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -prem 777</span><br></pre></td></tr></table></figure><h4 id="查找没有777权限的文件"><a href="#查找没有777权限的文件" class="headerlink" title="查找没有777权限的文件"></a>查找没有777权限的文件</h4><p>查找没有777权限的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f ! -prem 777</span><br></pre></td></tr></table></figure><h4 id="查找具有644个权限的SGID文件"><a href="#查找具有644个权限的SGID文件" class="headerlink" title="查找具有644个权限的SGID文件"></a>查找具有644个权限的SGID文件</h4><p>查找权限设置为644的所有SGID位文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -prem 2644</span><br></pre></td></tr></table></figure><h4 id="找到具有551权限的粘滞位文件"><a href="#找到具有551权限的粘滞位文件" class="headerlink" title="找到具有551权限的粘滞位文件"></a>找到具有551权限的粘滞位文件</h4><p>查找权限为551的所有Sticky Bit设置文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -prem 1511</span><br></pre></td></tr></table></figure><h4 id="查找SUID文件"><a href="#查找SUID文件" class="headerlink" title="查找SUID文件"></a>查找SUID文件</h4><p>查找所有SUID集文件。 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">find</span> / -prem /<span class="attribute">u</span>=s</span><br></pre></td></tr></table></figure><h4 id="查找SGID文件"><a href="#查找SGID文件" class="headerlink" title="查找SGID文件"></a>查找SGID文件</h4><p>查找所有SGID设置文件 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">find</span> / -prem /<span class="attribute">u</span>=s</span><br></pre></td></tr></table></figure><h4 id="查找只读文件"><a href="#查找只读文件" class="headerlink" title="查找只读文件"></a>查找只读文件</h4><p>查找所有只读文件。 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">find</span> / -prem /<span class="attribute">u</span>=r</span><br></pre></td></tr></table></figure><h4 id="查找执行文件"><a href="#查找执行文件" class="headerlink" title="查找执行文件"></a>查找执行文件</h4><p>查找所有可执行文件。 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">find</span> / -prem /<span class="attribute">a</span>=x</span><br></pre></td></tr></table></figure><h4 id="找到777个权限和Chmod到644的文件"><a href="#找到777个权限和Chmod到644的文件" class="headerlink" title="找到777个权限和Chmod到644的文件"></a>找到777个权限和Chmod到644的文件</h4><p>查找所有777个权限文件，并使用chmod命令将权限设置为644 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -prem 0777 -print -exec chmod 644 &#123;&#125; \;</span><br></pre></td></tr></table></figure><h4 id="找到具有777个权限的目录和Chmod到755"><a href="#找到具有777个权限的目录和Chmod到755" class="headerlink" title="找到具有777个权限的目录和Chmod到755"></a>找到具有777个权限的目录和Chmod到755</h4><p>查找所有777个权限目录，并使用chmod命令将权限设置为755。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -prem 777 -print -exec chmod 755 &#123;&#125; \;</span><br></pre></td></tr></table></figure><h4 id="17-查找并删除单个文件"><a href="#17-查找并删除单个文件" class="headerlink" title="17.查找并删除单个文件"></a>17.查找并删除单个文件</h4><p>找到一个名为test.c的文件并将其删除 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -name "test" -print -exec rm -f &#123;&#125; \;</span><br></pre></td></tr></table></figure><h4 id="18-查找并删除多个文件"><a href="#18-查找并删除多个文件" class="headerlink" title="18.查找并删除多个文件"></a>18.查找并删除多个文件</h4><p>查找和删除多个文件，如.mp3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -name "*.mp3" -print -exec rm -f &#123;&#125; \;</span><br></pre></td></tr></table></figure><h4 id="19-查找所有空文件"><a href="#19-查找所有空文件" class="headerlink" title="19.查找所有空文件"></a>19.查找所有空文件</h4><p>在特定路径下查找所有空文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /tmp -type f -empty</span><br></pre></td></tr></table></figure><h4 id="20-查找所有空目录"><a href="#20-查找所有空目录" class="headerlink" title="20.查找所有空目录"></a>20.查找所有空目录</h4><p>将特定路径下的所有空目录归档。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /tmp -type d -empty</span><br></pre></td></tr></table></figure><h4 id="21-文件所有隐藏文件"><a href="#21-文件所有隐藏文件" class="headerlink" title="21.文件所有隐藏文件"></a>21.文件所有隐藏文件</h4><p>要查找所有隐藏的文件，请使用以下命令。 </p><h3 id="第三部分-基于所有者和组的搜索文件"><a href="#第三部分-基于所有者和组的搜索文件" class="headerlink" title="第三部分 - 基于所有者和组的搜索文件"></a><strong>第三部分 - 基于所有者和组的搜索文件</strong></h3><h4 id="22-查找基于用户的单个文件"><a href="#22-查找基于用户的单个文件" class="headerlink" title="22.查找基于用户的单个文件"></a>22.查找基于用户的单个文件</h4><p>在所有者root的/ root目录下查找名为test.c的所有或单个文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -name test.c</span><br></pre></td></tr></table></figure><h4 id="23-查找基于用户的所有文件"><a href="#23-查找基于用户的所有文件" class="headerlink" title="23.查找基于用户的所有文件"></a>23.查找基于用户的所有文件</h4><p>查找~目录下属于用户neil的所有文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ~ -user neil</span><br></pre></td></tr></table></figure><h4 id="24-查找基于组的所有文件"><a href="#24-查找基于组的所有文件" class="headerlink" title="24.查找基于组的所有文件"></a>24.查找基于组的所有文件</h4><p>查找/ home目录下属于Group Developer的所有文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /home -group dev</span><br></pre></td></tr></table></figure><h4 id="25-查找用户的特定文件"><a href="#25-查找用户的特定文件" class="headerlink" title="25.查找用户的特定文件"></a>25.查找用户的特定文件</h4><p>查找~目录下的用户neil的所有.txt文件 </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ~ -<span class="keyword">user</span> <span class="title">neil</span> -iname <span class="string">"*.txt"</span></span><br></pre></td></tr></table></figure><h3 id="第四部分-根据日期和时间查找文件和目录"><a href="#第四部分-根据日期和时间查找文件和目录" class="headerlink" title="第四部分 - 根据日期和时间查找文件和目录"></a><strong>第四部分 - 根据日期和时间查找文件和目录</strong></h3><h4 id="27-查找最近50天访问的文件"><a href="#27-查找最近50天访问的文件" class="headerlink" title="27.查找最近50天访问的文件"></a>27.查找最近50天访问的文件</h4><p>查找最近50天访问的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -atime 50</span><br></pre></td></tr></table></figure><h4 id="28-查找最后50-100天修改的文件"><a href="#28-查找最后50-100天修改的文件" class="headerlink" title="28.查找最后50-100天修改的文件"></a>28.查找最后50-100天修改的文件</h4><p>查找所有被修改超过50天以及少于100天的文件。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -mtime +50 -mtime -100</span><br></pre></td></tr></table></figure><h4 id="29-在过去1小时内查找更改的文件"><a href="#29-在过去1小时内查找更改的文件" class="headerlink" title="29.在过去1小时内查找更改的文件"></a>29.在过去1小时内查找更改的文件</h4><p>查找最近1小时内更改的所有文件 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">find</span> / -cmin -60</span><br></pre></td></tr></table></figure><h4 id="30-在最近1小时内查找修改的文件"><a href="#30-在最近1小时内查找修改的文件" class="headerlink" title="30.在最近1小时内查找修改的文件"></a>30.在最近1小时内查找修改的文件</h4><p>查找最近1小时内修改的所有文件。 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">find</span> / -mmin -60</span><br></pre></td></tr></table></figure><h4 id="31-查找最近1小时内访问的文件"><a href="#31-查找最近1小时内访问的文件" class="headerlink" title="31.查找最近1小时内访问的文件"></a>31.查找最近1小时内访问的文件</h4><p>查找最近1小时内访问的所有文件。 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">find</span> / -amin -60</span><br></pre></td></tr></table></figure><h3 id="第五部分-根据大小查找文件和目录"><a href="#第五部分-根据大小查找文件和目录" class="headerlink" title="第五部分 - 根据大小查找文件和目录"></a><strong>第五部分 - 根据大小查找文件和目录</strong></h3><h4 id="32-找到50MB的文件"><a href="#32-找到50MB的文件" class="headerlink" title="32.找到50MB的文件"></a>32.找到50MB的文件</h4><p>要找到所有50MB的文件，请使用。 </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> / -<span class="built_in">size</span> <span class="number">50</span>M</span><br></pre></td></tr></table></figure><h4 id="33-查找大小在50MB到100MB之间"><a href="#33-查找大小在50MB到100MB之间" class="headerlink" title="33.查找大小在50MB到100MB之间"></a>33.查找大小在50MB到100MB之间</h4><p>找到大于50MB且小于100MB的所有文件。 </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> / -<span class="built_in">size</span> +<span class="number">50</span>M -<span class="built_in">size</span> <span class="number">-100</span>M</span><br></pre></td></tr></table></figure><h4 id="34-查找并删除100MB的文件"><a href="#34-查找并删除100MB的文件" class="headerlink" title="34.查找并删除100MB的文件"></a>34.查找并删除100MB的文件</h4><p>查找所有100MB文件并使用一个命令删除它们。 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">find</span> / -zize 100M -exec rm -rf &#123;&#125; \;</span><br></pre></td></tr></table></figure><h4 id="35-查找特定文件并删除"><a href="#35-查找特定文件并删除" class="headerlink" title="35.查找特定文件并删除"></a>35.查找特定文件并删除</h4><p>查找超过10MB的所有.mp3文件，并使用一个命令删除它们 </p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> / -<span class="built_in">size</span> +<span class="number">10</span>M -<span class="built_in">name</span> <span class="string">"*.mp3"</span> -<span class="built_in">type</span> f -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 命令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JAVA进程CPU使用率使用过高故障排查</title>
      <link href="/2020/03/07/Linux/JAVA%E8%BF%9B%E7%A8%8BCPU%E4%BD%BF%E7%94%A8%E7%8E%87%E4%BD%BF%E7%94%A8%E8%BF%87%E9%AB%98%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/"/>
      <url>/2020/03/07/Linux/JAVA%E8%BF%9B%E7%A8%8BCPU%E4%BD%BF%E7%94%A8%E7%8E%87%E4%BD%BF%E7%94%A8%E8%BF%87%E9%AB%98%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h1><p>服务器cpu使用率非常高</p><p><img src="/2020/03/07/Linux/JAVA%E8%BF%9B%E7%A8%8BCPU%E4%BD%BF%E7%94%A8%E7%8E%87%E4%BD%BF%E7%94%A8%E8%BF%87%E9%AB%98%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/1.png" alt></p><a id="more"></a><h1 id="故障定位"><a href="#故障定位" class="headerlink" title="故障定位"></a>故障定位</h1><p>根据这种故障的一般处理思路，先找出问题进程内CPU占用率高的线程，再通过线程栈信息找出该线程当时在运行的问题代码段，操作如下：</p><h5 id="根据思路查看高占用的“进程中”占用高的“线程”，追踪发现7163的进程中16298的线程占用较高，使用命令："><a href="#根据思路查看高占用的“进程中”占用高的“线程”，追踪发现7163的进程中16298的线程占用较高，使用命令：" class="headerlink" title="根据思路查看高占用的“进程中”占用高的“线程”，追踪发现7163的进程中16298的线程占用较高，使用命令："></a>根据思路查看高占用的“进程中”占用高的“线程”，追踪发现7163的进程中16298的线程占用较高，使用命令：</h5><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -Hbp <span class="number">12241</span> | awk '/java/ &amp;&amp; $<span class="number">9</span>&gt;<span class="number">50</span>'</span><br></pre></td></tr></table></figure><h5 id="显示结果："><a href="#显示结果：" class="headerlink" title="显示结果："></a>显示结果：</h5><p><img src="/2020/03/07/Linux/JAVA%E8%BF%9B%E7%A8%8BCPU%E4%BD%BF%E7%94%A8%E7%8E%87%E4%BD%BF%E7%94%A8%E8%BF%87%E9%AB%98%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/2.png" alt></p><h5 id="将16298的线程ID转换为16进制的线程ID。"><a href="#将16298的线程ID转换为16进制的线程ID。" class="headerlink" title="将16298的线程ID转换为16进制的线程ID。"></a>将16298的线程ID转换为16进制的线程ID。</h5><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">printf <span class="string">"%x<span class="subst">\n</span>"</span> <span class="number">12384</span></span><br><span class="line"><span class="number">3060</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/07/Linux/JAVA%E8%BF%9B%E7%A8%8BCPU%E4%BD%BF%E7%94%A8%E7%8E%87%E4%BD%BF%E7%94%A8%E8%BF%87%E9%AB%98%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/3.png" alt></p><h5 id="通过jvm的jstack查看进程信息，发现是调用数据库的问题。"><a href="#通过jvm的jstack查看进程信息，发现是调用数据库的问题。" class="headerlink" title="通过jvm的jstack查看进程信息，发现是调用数据库的问题。"></a>通过jvm的jstack查看进程信息，发现是调用数据库的问题。</h5><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstack <span class="number">12241</span> | grep <span class="string">"3060"</span> -A <span class="number">30</span></span><br></pre></td></tr></table></figure><h5 id="显示结果：-1"><a href="#显示结果：-1" class="headerlink" title="显示结果："></a>显示结果：</h5><p><img src="/2020/03/07/Linux/JAVA%E8%BF%9B%E7%A8%8BCPU%E4%BD%BF%E7%94%A8%E7%8E%87%E4%BD%BF%E7%94%A8%E8%BF%87%E9%AB%98%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/4.png" alt></p><p>经查询为定时任务，需要大量cpu资源进行运算</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排错 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用</title>
      <link href="/2020/03/06/git/git%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/03/06/git/git%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a><strong>新建代码库</strong></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在当前目录新建一个Git代码库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git init</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git init [project-name]</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  下载一个项目和它的整个代码历史</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> [url]</span></span><br></pre></td></tr></table></figure><h2 id="Git的设置文件为-gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。"><a href="#Git的设置文件为-gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。" class="headerlink" title="Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。"></a>Git的设置文件为<code>.gitconfig</code>，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前的Git配置</span></span><br><span class="line">$ git<span class="built_in"> config </span>--list</span><br><span class="line"><span class="comment"># 编辑Git配置文件</span></span><br><span class="line">$ git<span class="built_in"> config </span>-e [--global]</span><br><span class="line"><span class="comment"># 设置提交代码时的用户信息</span></span><br><span class="line">$ git<span class="built_in"> config </span>[--global] user.name <span class="string">"[name]"</span></span><br><span class="line">$ git<span class="built_in"> config </span>[--global] user.email <span class="string">"[email address]"</span></span><br></pre></td></tr></table></figure><h2 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a><strong>增加/删除文件</strong></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加指定文件到暂存区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add [file1] [file2] ...</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加指定目录到暂存区，包括子目录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add [dir]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加当前目录的所有文件到暂存区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add .</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加每个变化前，都会要求确认</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add -p</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git rm [file1] [file2] ...</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git rm --cached [file]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 改名文件，并且将这个改名放入暂存区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git mv [file-original] [file-renamed]</span></span><br></pre></td></tr></table></figure><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 提交暂存区到仓库区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -m [message]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 提交暂存区的指定文件到仓库区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit [file1] [file2] ... -m [message]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 提交时显示所有diff信息</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -v</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit --amend -m [message]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit --amend [file1] [file2] ...</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成一个可供发布的压缩包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git archive</span></span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 列出所有本地分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出所有远程分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -r</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出所有本地分支和远程分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个分支，但依然停留在当前分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch [branch-name]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个分支，并切换到该分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout -b [branch]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个分支，指向指定commit</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch [branch] [commit]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch --track [branch] [remote-branch]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换到指定分支，并更新工作区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout [branch-name]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换到上一个分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout -</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch --<span class="built_in">set</span>-upstream [branch] [remote-branch]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 合并指定分支到当前分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git merge [branch]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 选择一个commit，合并进当前分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git cherry-pick [commit]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -d [branch-name]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除远程分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push origin --delete [branch-name]$ git branch -dr [remote/branch]</span></span><br></pre></td></tr></table></figure><p>标签</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有tag</span></span><br><span class="line">$ git tag</span><br><span class="line"><span class="comment"># 新建一个tag在当前commit</span></span><br><span class="line">$ git tag [tag]</span><br><span class="line"><span class="comment"># 新建一个tag在指定commit</span></span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"><span class="comment"># 删除本地tag</span></span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"><span class="comment"># 删除远程tag</span></span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"><span class="comment"># 查看tag信息</span></span><br><span class="line">$ git show [tag]</span><br><span class="line"><span class="comment"># 提交指定tag</span></span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"><span class="comment"># 提交所有tag</span></span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"><span class="comment"># 新建一个分支，指向某个tag</span></span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前git链接</span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="comment"># 显示有变更的文件</span></span><br><span class="line">$ git status</span><br><span class="line"><span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"><span class="comment"># 搜索提交历史，根据关键词</span></span><br><span class="line">$ git <span class="built_in">log</span> -S [keyword]</span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class="line">$ git <span class="built_in">log</span> [tag] HEAD --pretty=format:%s</span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件</span></span><br><span class="line">$ git <span class="built_in">log</span> [tag] HEAD --grep feature</span><br><span class="line"><span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">$ git <span class="built_in">log</span> --follow [file]$ git whatchanged [file]</span><br><span class="line"><span class="comment"># 显示指定文件相关的每一次diff</span></span><br><span class="line">$ git <span class="built_in">log</span> -p [file]</span><br><span class="line"><span class="comment"># 显示过去5次提交</span></span><br><span class="line">$ git <span class="built_in">log</span> -5 --pretty --oneline</span><br><span class="line"><span class="comment"># 显示所有提交过的用户，按提交次数排序</span></span><br><span class="line">$ git shortlog -sn</span><br><span class="line"><span class="comment"># 显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">$ git blame [file]</span><br><span class="line"><span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">$ git diff</span><br><span class="line"><span class="comment"># 显示暂存区和上一个commit的差异</span></span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"><span class="comment"># 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">$ git diff HEAD</span><br><span class="line"><span class="comment"># 显示两次提交之间的差异</span></span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"><span class="comment"># 显示今天你写了多少行代码</span></span><br><span class="line">$ git diff --shortstat <span class="string">"@&#123;0 day ago&#125;"</span></span><br><span class="line"><span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">$ git show [commit]</span><br><span class="line"><span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"><span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"><span class="comment"># 显示当前分支的最近几次提交</span></span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载远程仓库的所有变动</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git fetch [remote]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示所有远程仓库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote -v</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示某个远程仓库的信息</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote show [remote]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 增加一个新的远程仓库，并命名</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote add [shortname] [url]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git pull [remote] [branch]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 上传本地指定分支到远程仓库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push [remote] [branch]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push [remote] --force</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 推送所有分支到远程仓库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push [remote] --all</span></span><br></pre></td></tr></table></figure><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 恢复暂存区的指定文件到工作区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout [file]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout [commit] [file]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 恢复暂存区的所有文件到工作区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout .</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset [file]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset [commit]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard [commit]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --keep [commit]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个commit，用来撤销指定commit<span class="comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git revert [commit]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 暂时将未提交的变化移除，稍后再移入</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git stash</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git stash pop</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos最小化初始安装</title>
      <link href="/2020/03/06/Linux/centos%E6%9C%80%E5%B0%8F%E5%8C%96%E5%88%9D%E5%A7%8B%E5%AE%89%E8%A3%85/"/>
      <url>/2020/03/06/Linux/centos%E6%9C%80%E5%B0%8F%E5%8C%96%E5%88%9D%E5%A7%8B%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h5 id="系统时最小化安装的，这里要安装系统的软件库"><a href="#系统时最小化安装的，这里要安装系统的软件库" class="headerlink" title="系统时最小化安装的，这里要安装系统的软件库"></a><em>系统时最小化安装的，这里要安装系统的软件库</em></h5><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">install  -y net-tools vim iotop bc zip \</span></span><br><span class="line"><span class="attr">unzip</span> <span class="string">lrzsz tree ntpdate telnet lsof iostat \</span></span><br><span class="line"><span class="attr">tcpdump</span> <span class="string">wget traceroute bc net-tools \</span></span><br><span class="line"><span class="attr">bash-completion</span></span><br></pre></td></tr></table></figure><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall -<span class="symbol">y</span> <span class="string">"development tools"</span></span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="创建工作目录"><a href="#创建工作目录" class="headerlink" title="创建工作目录*"></a>创建工作目录*</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ ! -d <span class="string">/server/tools</span> ] &amp;&amp; mkdir -p <span class="string">/server/tools</span></span><br><span class="line">[ ! -d <span class="string">/application</span> ] &amp;&amp; mkdir -p <span class="string">/application</span></span><br><span class="line">[ ! -d <span class="string">/data</span> ] &amp;&amp; mkdir -p <span class="string">/data</span></span><br><span class="line">[ ! -d <span class="string">/app/logs</span> ] &amp;&amp; mkdir -p <span class="string">/app/logs</span></span><br><span class="line">[ ! -d <span class="string">/server/backup</span> ] &amp;&amp; mkdir -p <span class="string">/server/backup</span></span><br><span class="line">[ ! -d <span class="string">/delete</span> ] &amp;&amp; mkdir -p <span class="string">/delete</span></span><br></pre></td></tr></table></figure><h5 id="每周六凌晨1点0分更新服务器系统时间"><a href="#每周六凌晨1点0分更新服务器系统时间" class="headerlink" title="每周六凌晨1点0分更新服务器系统时间"></a><em>每周六凌晨1点0分更新服务器系统时间</em></h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">"############### auto update time ###############"</span> &gt;&gt; <span class="regexp">/var/</span>spool<span class="regexp">/cron/</span>root</span><br><span class="line">echo <span class="string">"00 01 * * *   /usr/sbin/ntpdate time.nist.gov &gt;/dev/null 2&gt;&amp;1"</span> &gt;&gt; <span class="regexp">/var/</span>spool<span class="regexp">/cron/</span>root</span><br><span class="line">[ `<span class="keyword">grep</span> ntpdate <span class="regexp">/var/</span>spool<span class="regexp">/cron/</span>root |wc -l` -ne <span class="number">0</span> ] &amp;&amp; action <span class="string">"uptime set"</span> <span class="regexp">/bin/</span><span class="keyword">true</span> || action <span class="string">"uptime set"</span> <span class="regexp">/bin/</span><span class="keyword">false</span></span><br></pre></td></tr></table></figure><h5 id="配置国内yum源"><a href="#配置国内yum源" class="headerlink" title="配置国内yum源"></a><em>配置国内yum源</em></h5><p>centos</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#备份</span></span><br><span class="line"></span><br><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载新的CentOS-Base.repo 到/etc/yum.repos.d/</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加EPEL</span></span><br><span class="line">CentOS 7</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#清理缓存并生成新的缓存</span></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看系统可用的yum源和所有的yum源</span></span><br><span class="line">yum repolist enabled</span><br><span class="line">yum repolist all</span><br></pre></td></tr></table></figure><p>ubuntu</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/apt/sources.list &lt;&lt; EOF</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">EOF</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h5 id="关闭SELINUX及iptables和firewalld"><a href="#关闭SELINUX及iptables和firewalld" class="headerlink" title="关闭SELINUX及iptables和firewalld"></a><em>关闭SELINUX及iptables和firewalld</em></h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/bin/cp /etc/selinux<span class="built_in">/config </span>/etc/selinux/config.bak</span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/'</span> /etc/selinux<span class="built_in">/config </span>2&gt;&amp;1</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="builtin-name">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><h5 id="调整文件描述符数量"><a href="#调整文件描述符数量" class="headerlink" title="调整文件描述符数量"></a><em>调整文件描述符数量</em></h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/bin/</span>cp <span class="regexp">/etc/</span>security<span class="regexp">/limits.conf /</span>etc<span class="regexp">/security/</span>limits.conf.bak</span><br><span class="line">echo <span class="string">'* -   nofile  65535'</span>&gt;&gt;<span class="regexp">/etc/</span>security<span class="regexp">/limits.conf</span></span><br></pre></td></tr></table></figure><p><em>内核参数优化</em></p><p>[ -f /etc/sysctl.conf.bak ] &amp;&amp; /bin/cp /etc/sysctl.conf.bak /etc/sysctl.conf.bak.$(date +%F-%H%M%S) ||/bin/cp </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/sysctl<span class="selector-class">.conf</span> &lt;&lt;EOF</span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_fin_timeout</span> = <span class="number">2</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_tw_reuse</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_tw_recycle</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_syncookies</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_keepalive_time</span> = <span class="number">600</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_local_port_range</span> = <span class="number">4000</span> <span class="number">65000</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_max_syn_backlog</span> = <span class="number">16384</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_max_tw_buckets</span> = <span class="number">36000</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.route</span><span class="selector-class">.gc_timeout</span> = <span class="number">100</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_syn_retries</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_synack_retries</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.core</span><span class="selector-class">.somaxconn</span> = <span class="number">16384</span></span><br><span class="line">net<span class="selector-class">.core</span><span class="selector-class">.netdev_max_backlog</span> = <span class="number">16384</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.tcp_max_orphans</span> = <span class="number">16384</span></span><br><span class="line">net<span class="selector-class">.ipv6</span><span class="selector-class">.conf</span><span class="selector-class">.all</span><span class="selector-class">.disable_ipv6</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.ipv6</span><span class="selector-class">.conf</span><span class="selector-class">.default</span><span class="selector-class">.disable_ipv6</span> = <span class="number">1</span></span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h5 id="bash调整"><a href="#bash调整" class="headerlink" title="bash调整"></a><em>bash调整</em></h5><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/profile.d/env.sh &lt;&lt; EOF</span><br><span class="line">export HISTTIMEFORMAT="[<span class="variable">%Y.%</span>m.<span class="variable">%d %</span>H:<span class="variable">%M:%</span>S]  "</span><br><span class="line">export HISTSIZE=50000</span><br><span class="line">export HISTIGNORE="ls:ls -lrt:ls -al:clear:pwd"</span><br><span class="line">export PS1='<span class="symbol">\[</span><span class="symbol">\e</span>[1;32m<span class="symbol">\]</span>[<span class="symbol">\t</span> <span class="symbol">\[</span><span class="symbol">\e</span>[1;33m<span class="symbol">\]</span><span class="symbol">\u</span><span class="symbol">\[</span><span class="symbol">\e</span>[36m<span class="symbol">\]</span>@<span class="symbol">\h</span><span class="symbol">\[</span><span class="symbol">\e</span>[1;31m<span class="symbol">\]</span> <span class="symbol">\w</span><span class="symbol">\[</span><span class="symbol">\e</span>[1;32m<span class="symbol">\]</span>]<span class="symbol">\[</span><span class="symbol">\e</span>[0m<span class="symbol">\]</span><span class="symbol">\$</span>'</span><br><span class="line">EOF</span><br><span class="line">source /etc/profile.d/env.sh</span><br></pre></td></tr></table></figure><h5 id="vim调整"><a href="#vim调整" class="headerlink" title="vim调整"></a>vim调整</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/vimrc &lt;&lt; EOF</span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">tabstop</span>=4</span><br><span class="line"><span class="builtin-name">set</span> expandtab</span><br><span class="line"><span class="builtin-name">set</span> number</span><br><span class="line"><span class="builtin-name">set</span> ruler</span><br><span class="line"><span class="builtin-name">set</span> showcmd</span><br><span class="line"><span class="builtin-name">set</span> autoindent</span><br><span class="line"><span class="builtin-name">set</span> hlsearch</span><br><span class="line"><span class="builtin-name">set</span> ignorecase</span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">backspace</span>=indent,eol,start</span><br><span class="line"><span class="builtin-name">set</span> paste</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s-15.1手动搭建</title>
      <link href="/2020/03/02/k8s/k8s/"/>
      <url>/2020/03/02/k8s/k8s/</url>
      
        <content type="html"><![CDATA[<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><h3 id="部署节点说明"><a href="#部署节点说明" class="headerlink" title="部署节点说明"></a>部署节点说明</h3><table><thead><tr><th align="center">主机名</th><th align="center">IP</th><th align="center">用途</th><th align="center">部署软件</th></tr></thead><tbody><tr><td align="center">k8s-1</td><td align="center">192.168.123.110</td><td align="center">master</td><td align="center">apiserver,scheduler,controller-manager etcd,flanneld</td></tr><tr><td align="center">k8s-2</td><td align="center">192.168.123.120</td><td align="center">node</td><td align="center">kubelet,kube-proxy etcd,flanneld,docker</td></tr><tr><td align="center">k8s-3</td><td align="center">192.168.123.130</td><td align="center">node</td><td align="center">kubelet,kube-proxy etcd,flanneld,docker</td></tr></tbody></table><a id="more"></a><h3 id="操作系统环境"><a href="#操作系统环境" class="headerlink" title="操作系统环境"></a>操作系统环境</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 三台机器相同</span><br><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /root] master</span><br><span class="line"># uname  -r</span><br><span class="line"><span class="number">3.10</span><span class="number">.0</span><span class="number">-957.</span>el7.x86_64</span><br><span class="line"></span><br><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /root] master</span><br><span class="line"># cat  /etc/redhat-release</span><br><span class="line">CentOS Linux release <span class="number">7.6</span><span class="number">.1810</span> (Core)</span><br><span class="line"></span><br><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /root] master</span><br><span class="line"># sestatus</span><br><span class="line">SELinux status:                 disabled</span><br></pre></td></tr></table></figure><h3 id="软件包版本"><a href="#软件包版本" class="headerlink" title="软件包版本"></a>软件包版本</h3><table><thead><tr><th align="center">软件包</th><th align="center">下载地址</th></tr></thead><tbody><tr><td align="center">kubernetes-node-linux-amd64.tar.gz</td><td align="center"><a href="https://dl.k8s.io/v1.15.1/kubernetes-node-linux-amd64.tar.gz" target="_blank" rel="noopener">https://dl.k8s.io/v1.15.1/kubernetes-node-linux-amd64.tar.gz</a></td></tr><tr><td align="center">kubernetes-server-linux-amd64.tar.gz</td><td align="center"><a href="https://dl.k8s.io/v1.15.1/kubernetes-server-linux-amd64.tar.gz" target="_blank" rel="noopener">https://dl.k8s.io/v1.15.1/kubernetes-server-linux-amd64.tar.gz</a></td></tr><tr><td align="center">flannel-v0.11.0-linux-amd64.tar.gz</td><td align="center"><a href="https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz" target="_blank" rel="noopener">https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz</a></td></tr><tr><td align="center">etcd-v3.3.10-linux-amd64.tar.gz</td><td align="center"><a href="https://github.com/etcd-io/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz" target="_blank" rel="noopener">https://github.com/etcd-io/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz</a></td></tr></tbody></table><h2 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h2><h3 id="设置关闭防火墙及SELINUX"><a href="#设置关闭防火墙及SELINUX" class="headerlink" title="设置关闭防火墙及SELINUX"></a>设置关闭防火墙及SELINUX</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h3 id="关闭swap"><a href="#关闭swap" class="headerlink" title="关闭swap"></a>关闭swap</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class="line">sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="设置Docker所需参数"><a href="#设置Docker所需参数" class="headerlink" title="设置Docker所需参数"></a>设置Docker所需参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt;EOF</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=0</span><br><span class="line">vm.swappiness=0</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">net.ipv6.conf.all.disable_ipv6=1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p  /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure><h3 id="安装-Docker-node节点"><a href="#安装-Docker-node节点" class="headerlink" title="安装 Docker(node节点)"></a>安装 Docker(node节点)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置yum源</span></span><br><span class="line">cd  /etc/yum.repos.d/</span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum clean all &amp;&amp; yum  repolist -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装docker ，版本 18.06.2</span></span><br><span class="line">yum  install  docker-ce-18.06.2.ce-3.el7 -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">systemctl start docker &amp;&amp; systemctl enable docker</span><br></pre></td></tr></table></figure><h3 id="SSH-互信配置"><a href="#SSH-互信配置" class="headerlink" title="SSH 互信配置"></a>SSH 互信配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">添加hoosts解析</span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.220.110 k8s-m1</span><br><span class="line">192.168.220.120 k8s-n1</span><br><span class="line">192.168.220.130 k8s-n2</span><br><span class="line">EOF</span><br><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id  k8s-m1</span><br><span class="line">ssh-copy-id  k8s-n1</span><br><span class="line">ssh-copy-id  k8s-n2</span><br></pre></td></tr></table></figure><h3 id="工作目录"><a href="#工作目录" class="headerlink" title="工作目录"></a>工作目录</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/k8s/bin/</span><br><span class="line">mkdir -p /etc/kubernetes/ssl</span><br><span class="line">mkdir -p /etc/etcd/ssl</span><br><span class="line">mkdir -p /etc/flanneld/ssl</span><br><span class="line">mkdir -p /var/<span class="class"><span class="keyword">lib</span>/<span class="title">etcd</span></span></span><br></pre></td></tr></table></figure><h3 id="集群环境变量"><a href="#集群环境变量" class="headerlink" title="集群环境变量"></a>集群环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">echo 'PATH=/usr/k8s/bin:$PATH' &gt;&gt; /etc/profile</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /etc/profile.d/k8s.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> TLS Bootstrapping 使用的Token，可以使用命令 head -c 16 /dev/urandom | od -An -t x | tr -d <span class="string">' '</span> 生成</span></span><br><span class="line">BOOTSTRAP_TOKEN="f3be89d17cf7d80847f3bc8b8ea58250"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 建议使用未用的网段来定义服务网段和Pod 网段</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务网段(Service CIDR)，部署前路由不可达，部署后集群内部使用IP:Port可达</span></span><br><span class="line">SERVICE_CIDR="10.254.0.0/16"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Pod 网段(Cluster CIDR)，部署前路由不可达，部署后路由可达(flanneld 保证)</span></span><br><span class="line">CLUSTER_CIDR="172.30.0.0/16"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务端口范围(NodePort Range)</span></span><br><span class="line">NODE_PORT_RANGE="30000-32766"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> etcd集群服务地址列表</span></span><br><span class="line">ETCD_ENDPOINTS="https://192.168.220.110:2379,https://192.168.220.120:2379,https://192.168.220.130:2379"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> flanneld 网络配置前缀</span></span><br><span class="line">FLANNEL_ETCD_PREFIX="/kubernetes/network"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubernetes 服务IP(预先分配，一般为SERVICE_CIDR中的第一个IP)</span></span><br><span class="line">CLUSTER_KUBERNETES_SVC_IP="10.254.0.1"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 集群 DNS 服务IP(从SERVICE_CIDR 中预先分配)</span></span><br><span class="line">CLUSTER_DNS_SVC_IP="10.254.0.2"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 集群 DNS 域名</span></span><br><span class="line">CLUSTER_DNS_DOMAIN="cluster.local."</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MASTER API Server 地址</span></span><br><span class="line">MASTER_URL="k8s-api.virtual.local"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">变量KUBE_APISERVER 指定kubelet 访问的kube-apiserver 的地址，后续被写入~/.kube/config配置文件</span></span><br><span class="line">KUBE_APISERVER="https://$&#123;MASTER_URL&#125;:6443"</span><br><span class="line">EOF</span><br><span class="line">source /etc/profile</span><br><span class="line">source /etc/profile.d/k8s.sh</span><br></pre></td></tr></table></figure><h2 id="创建CA-证书和密钥"><a href="#创建CA-证书和密钥" class="headerlink" title="创建CA 证书和密钥"></a>创建CA 证书和密钥</h2><p><code>kubernetes</code> 系统各个组件需要使用<code>TLS</code>证书对通信进行加密，这里我们使用<code>CloudFlare</code>的PKI 工具集<a href="https://github.com/cloudflare/cfssl" target="_blank" rel="noopener">cfssl</a> 来生成Certificate Authority(CA) 证书和密钥文件， CA 是自签名的证书，用来签名后续创建的其他TLS 证书。</p><h3 id="安装-CFSSL-master"><a href="#安装-CFSSL-master" class="headerlink" title="安装 CFSSL(master)"></a>安装 CFSSL(master)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</span><br><span class="line">chmod +x cfssl_linux-amd64</span><br><span class="line">sudo mv cfssl_linux-amd64 /usr/k8s/bin/cfssl</span><br><span class="line"></span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</span><br><span class="line">chmod +x cfssljson_linux-amd64</span><br><span class="line">sudo mv cfssljson_linux-amd64 /usr/k8s/bin/cfssljson</span><br><span class="line"></span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</span><br><span class="line">chmod +x cfssl-certinfo_linux-amd64</span><br><span class="line">sudo mv cfssl-certinfo_linux-amd64 /usr/k8s/bin/cfssl-certinfo</span><br><span class="line">chmod +x /usr/k8s/bin/*</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ssl &amp;&amp; cd ssl</span><br><span class="line">cfssl print-defaults config &gt; ca-config.json</span><br><span class="line">cfssl print-defaults csr &gt; ca-csr.json</span><br></pre></td></tr></table></figure><h3 id="创建CA"><a href="#创建CA" class="headerlink" title="创建CA"></a>创建CA</h3><p>修改上面创建的<code>ca-config.json</code>：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ca-config.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"signing"</span>: &#123;</span><br><span class="line">        <span class="attr">"default"</span>: &#123;</span><br><span class="line">            <span class="attr">"expiry"</span>: <span class="string">"876000h"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"profiles"</span>: &#123;</span><br><span class="line">            <span class="attr">"kubernetes"</span>: &#123;</span><br><span class="line">                <span class="attr">"expiry"</span>: <span class="string">"876000h"</span>,</span><br><span class="line">                <span class="attr">"usages"</span>: [</span><br><span class="line">                    <span class="string">"signing"</span>,</span><br><span class="line">                    <span class="string">"key encipherment"</span>,</span><br><span class="line">                    <span class="string">"server auth"</span>,</span><br><span class="line">                    <span class="string">"client auth"</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>config.json</code>：可以定义多个profiles，分别指定不同的过期时间、使用场景等参数；后续在签名证书时使用某个profile；</li><li><code>signing</code>: 表示该证书可用于签名其它证书；生成的ca.pem 证书中<code>CA=TRUE</code>；</li><li><code>server auth</code>: 表示client 可以用该CA 对server 提供的证书进行校验；</li><li><code>client auth</code>: 表示server 可以用该CA 对client 提供的证书进行验证。</li></ul><p>修改CA 证书签名ca-csr.json：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ca-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"CN"</span>: <span class="string">"kubernetes"</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">"key"</span>: &#123;</span><br><span class="line">        <span class="attr">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">2048</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="attr">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">            <span class="attr">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">            <span class="attr">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">            <span class="attr">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>CN</code>: <code>Common Name</code>，kube-apiserver 从证书中提取该字段作为请求的用户名(User Name)；浏览器使用该字段验证网站是否合法；</li><li><code>O</code>: <code>Organization</code>，kube-apiserver 从证书中提取该字段作为请求用户所属的组(Group)；</li></ul><p>生成CA 证书和私钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br><span class="line">ls ca*</span><br><span class="line">ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem</span><br></pre></td></tr></table></figure><h3 id="分发证书"><a href="#分发证书" class="headerlink" title="分发证书"></a>分发证书</h3><p>将生成的CA 证书、密钥文件、配置文件拷贝到<strong>所有机器</strong>的<code>/etc/kubernetes/ssl</code>目录下面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp ca* /etc/kubernetes/ssl</span><br></pre></td></tr></table></figure><h2 id="部署高可用etcd-集群"><a href="#部署高可用etcd-集群" class="headerlink" title="部署高可用etcd 集群"></a>部署高可用etcd 集群</h2><p>kubernetes 系统使用<code>etcd</code>存储所有的数据，我们这里部署3个节点的etcd 集群，这3个节点直接复用kubernetes master的3个节点，分别命名为<code>etcd01</code>、<code>etcd02</code>、<code>etcd03</code>:</p><ul><li>etcd01：192.168.220.110</li><li>etcd02：192.168.220.120</li><li>etcd03：192.168.220.130</li></ul><h3 id="定义环境变量"><a href="#定义环境变量" class="headerlink" title="定义环境变量"></a>定义环境变量</h3><p>使用到的变量如下：</p><p>节点1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/k8s/bin/env.sh &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前部署的机器名称(随便定义，只要能区分不同机器即可)</span></span><br><span class="line">NODE_NAME=etcd01</span><br><span class="line"></span><br><span class="line"><span class="comment">#当前部署的机器IP</span></span><br><span class="line">NODE_IP=192.168.220.110</span><br><span class="line"></span><br><span class="line"><span class="comment"># etcd 集群所有机器 IP</span></span><br><span class="line">NODE_IPS=<span class="string">"192.168.220.110 192.168.220.120 192.168.220.130"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># etcd 集群间通信的IP和端口</span></span><br><span class="line">ETCD_NODES=etcd01=https://192.168.220.110:2380,etcd02=https://192.168.220.120:2380,etcd03=https://192.168.220.130:2380</span><br><span class="line"><span class="comment"># 导入用到的其它全局变量：ETCD_ENDPOINTS、FLANNEL_ETCD_PREFIX、CLUSTER_CIDR</span></span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><p>节点2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/k8s/bin/env.sh &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前部署的机器名称(随便定义，只要能区分不同机器即可)</span></span><br><span class="line">NODE_NAME=etcd02</span><br><span class="line"></span><br><span class="line"><span class="comment">#当前部署的机器IP</span></span><br><span class="line">NODE_IP=192.168.220.120</span><br><span class="line"></span><br><span class="line"><span class="comment"># etcd 集群所有机器 IP</span></span><br><span class="line">NODE_IPS=<span class="string">"192.168.220.110 192.168.220.120 192.168.220.130"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># etcd 集群间通信的IP和端口</span></span><br><span class="line">ETCD_NODES=etcd01=https://192.168.220.110:2380,etcd02=https://192.168.220.120:2380,etcd03=https://192.168.220.130:2380</span><br><span class="line"><span class="comment"># 导入用到的其它全局变量：ETCD_ENDPOINTS、FLANNEL_ETCD_PREFIX、CLUSTER_CIDR</span></span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><p>节点3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/k8s/bin/env.sh &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前部署的机器名称(随便定义，只要能区分不同机器即可)</span></span><br><span class="line">NODE_NAME=etcd03</span><br><span class="line"></span><br><span class="line"><span class="comment">#当前部署的机器IP</span></span><br><span class="line">NODE_IP=192.168.220.130</span><br><span class="line"></span><br><span class="line"><span class="comment"># etcd 集群所有机器 IP</span></span><br><span class="line">NODE_IPS=<span class="string">"192.168.220.110 192.168.220.120 192.168.220.130"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># etcd 集群间通信的IP和端口</span></span><br><span class="line">ETCD_NODES=etcd01=https://192.168.220.110:2380,etcd02=https://192.168.220.120:2380,etcd03=https://192.168.220.130:2380</span><br><span class="line"><span class="comment"># 导入用到的其它全局变量：ETCD_ENDPOINTS、FLANNEL_ETCD_PREFIX、CLUSTER_CIDR</span></span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><h3 id="下载etcd-二进制文件"><a href="#下载etcd-二进制文件" class="headerlink" title="下载etcd 二进制文件"></a>下载etcd 二进制文件</h3><p>到<a href="https://github.com/coreos/etcd/releases" target="_blank" rel="noopener">https://github.com/coreos/etcd/releases</a>页面下载最新版本的二进制文件：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">https:</span><span class="comment">//github.com/etcd-io/etcd/releases/download/v3.3.17/etcd-v3.3.17-linux-amd64.tar.gz</span></span><br><span class="line">tar -xvf etcd-v3<span class="number">.3</span><span class="number">.17</span>-linux-amd64.tar.gz</span><br><span class="line">sudo mv etcd-v3<span class="number">.3</span><span class="number">.17</span>-linux-amd64<span class="regexp">/etcd* /</span>usr<span class="regexp">/k8s/</span>bin/</span><br><span class="line">chmod +x <span class="regexp">/usr/</span>k8s<span class="regexp">/bin/</span>*</span><br></pre></td></tr></table></figure><h3 id="创建TLS-密钥和证书"><a href="#创建TLS-密钥和证书" class="headerlink" title="创建TLS 密钥和证书"></a>创建TLS 密钥和证书</h3><p>为了保证通信安全，客户端(如etcdctl)与etcd 集群、etcd 集群之间的通信需要使用TLS 加密。</p><p>创建etcd 证书签名请求：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root<span class="meta">@k</span>8s-m1 ~/ssl</span><br><span class="line">cat &gt; etcd-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"etcd"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [</span><br><span class="line">    <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"<span class="subst">$&#123;NODE_IP&#125;</span>"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: <span class="number">2048</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>hosts</code> 字段指定授权使用该证书的<code>etcd</code>节点IP</li></ul><p>生成<code>etcd</code>证书和私钥：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca.pem \</span><br><span class="line">  -ca-key=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca-key.pem \</span><br><span class="line">  -config=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca-config.json \</span><br><span class="line">  -profile=kubernetes etcd-csr.json | cfssljson -bare etcd</span><br><span class="line">  </span><br><span class="line">$ ls etcd*</span><br><span class="line">etcd.csr  etcd-csr.json  etcd-key.pem  etcd.pem</span><br><span class="line"></span><br><span class="line">sudo mv etcd*.pem <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span></span><br></pre></td></tr></table></figure><h3 id="创建etcd-的systemd-unit-文件"><a href="#创建etcd-的systemd-unit-文件" class="headerlink" title="创建etcd 的systemd unit 文件"></a>创建etcd 的systemd unit 文件</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; etcd.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=https://github.com/coreos</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">ExecStart=/usr/k8s/bin/etcd \\</span><br><span class="line">  -<span class="ruby">-name=$&#123;NODE_NAME&#125; \\</span></span><br><span class="line"><span class="ruby">  --cert-file=<span class="regexp">/etc/etcd</span><span class="regexp">/ssl/etcd</span>.pem \\</span></span><br><span class="line"><span class="ruby">  --key-file=<span class="regexp">/etc/etcd</span><span class="regexp">/ssl/etcd</span>-key.pem \\</span></span><br><span class="line"><span class="ruby">  --peer-cert-file=<span class="regexp">/etc/etcd</span><span class="regexp">/ssl/etcd</span>.pem \\</span></span><br><span class="line"><span class="ruby">  --peer-key-file=<span class="regexp">/etc/etcd</span><span class="regexp">/ssl/etcd</span>-key.pem \\</span></span><br><span class="line"><span class="ruby">  --trusted-ca-file=<span class="regexp">/etc/kubernetes</span><span class="regexp">/ssl/ca</span>.pem \\</span></span><br><span class="line"><span class="ruby">  --peer-trusted-ca-file=<span class="regexp">/etc/kubernetes</span><span class="regexp">/ssl/ca</span>.pem \\</span></span><br><span class="line"><span class="ruby">  --initial-advertise-peer-urls=<span class="symbol">https:</span>/<span class="regexp">/$&#123;NODE_IP&#125;:2380 \\</span></span></span><br><span class="line"><span class="ruby">  --listen-peer-urls=<span class="symbol">https:</span>/<span class="regexp">/$&#123;NODE_IP&#125;:2380 \\</span></span></span><br><span class="line"><span class="ruby">  --listen-client-urls=<span class="symbol">https:</span>/<span class="regexp">/$&#123;NODE_IP&#125;:2379,http:/</span><span class="regexp">/127.0.0.1:2379 \\</span></span></span><br><span class="line"><span class="ruby">  --advertise-client-urls=<span class="symbol">https:</span>/<span class="regexp">/$&#123;NODE_IP&#125;:2379 \\</span></span></span><br><span class="line"><span class="ruby">  --initial-cluster-token=etcd-cluster-<span class="number">0</span> \\</span></span><br><span class="line"><span class="ruby">  --initial-cluster=$&#123;ETCD_NODES&#125; \\</span></span><br><span class="line"><span class="ruby">  --initial-cluster-state=new \\</span></span><br><span class="line"><span class="ruby">  --data-dir=<span class="regexp">/var/lib</span><span class="regexp">/etcd</span></span></span><br><span class="line"><span class="ruby">Restart=on-failure</span></span><br><span class="line"><span class="ruby">RestartSec=<span class="number">5</span></span></span><br><span class="line"><span class="ruby">LimitNOFILE=<span class="number">65536</span></span></span><br><span class="line"></span><br><span class="line"><span class="ruby">[Install]</span></span><br><span class="line"><span class="ruby">WantedBy=multi-user.target</span></span><br><span class="line"><span class="ruby">EOF</span></span><br></pre></td></tr></table></figure><ul><li>指定<code>etcd</code>的工作目录和数据目录为<code>/var/lib/etcd</code>，需要在启动服务前创建这个目录；</li><li>为了保证通信安全，需要指定etcd 的公私钥(cert-file和key-file)、Peers通信的公私钥和CA 证书(peer-cert-file、peer-key-file、peer-trusted-ca-file)、客户端的CA 证书(trusted-ca-file)；</li><li><code>--initial-cluster-state</code>值为<code>new</code>时，<code>--name</code>的参数值必须位于<code>--initial-cluster</code>列表中；</li></ul><h3 id="启动其他节点etcd-服务"><a href="#启动其他节点etcd-服务" class="headerlink" title="启动其他节点etcd 服务"></a>启动其他节点etcd 服务</h3><h4 id="分发ca证书"><a href="#分发ca证书" class="headerlink" title="分发ca证书"></a>分发ca证书</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca* k8s-<span class="string">n1:</span><span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span></span><br><span class="line">scp -r <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca* k8s-<span class="string">n2:</span><span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span></span><br></pre></td></tr></table></figure><h4 id="创建node1，node2-etcd-的systemd-unit-文件"><a href="#创建node1，node2-etcd-的systemd-unit-文件" class="headerlink" title="创建node1，node2 etcd 的systemd unit 文件"></a>创建node1，node2 etcd 的systemd unit 文件</h4><h4 id="生成etcd证书和私钥：-node1-node2"><a href="#生成etcd证书和私钥：-node1-node2" class="headerlink" title="生成etcd证书和私钥： (node1,node2)"></a>生成<code>etcd</code>证书和私钥： (node1,node2)</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">先在node上创建etcd 证书签名请求：</span><br><span class="line">cfssl gencert -ca=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca.pem \</span><br><span class="line">  -ca-key=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca-key.pem \</span><br><span class="line">  -config=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca-config.json \</span><br><span class="line">  -profile=kubernetes etcd-csr.json | cfssljson -bare etcd</span><br><span class="line">  </span><br><span class="line">$ ls etcd*</span><br><span class="line">etcd.csr  etcd-csr.json  etcd-key.pem  etcd.pem</span><br><span class="line"></span><br><span class="line">sudo mv etcd*.pem <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span></span><br></pre></td></tr></table></figure><h3 id="启动etcd-服务"><a href="#启动etcd-服务" class="headerlink" title="启动etcd 服务"></a>启动etcd 服务</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudo</span> <span class="string">mv etcd.service /etc/systemd/system/</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">systemctl daemon-reload</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">systemctl enable etcd</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">systemctl start etcd</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">systemctl status etcd</span></span><br></pre></td></tr></table></figure><p>最先启动的etcd 进程会卡住一段时间，等待其他节点启动加入集群，在所有的etcd 节点重复上面的步骤，直到所有的机器etcd 服务都已经启动。</p><h3 id="验证服务"><a href="#验证服务" class="headerlink" title="验证服务"></a>验证服务</h3><p>部署完etcd 集群后，在任一etcd 节点上执行下面命令：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span><span class="built_in"> ip </span><span class="keyword">in</span> <span class="variable">$&#123;NODE_IPS&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="attribute">ETCDCTL_API</span>=3 /usr/k8s/bin/etcdctl \</span><br><span class="line">  <span class="attribute">--endpoints</span>=https://$&#123;ip&#125;:2379  \</span><br><span class="line">  <span class="attribute">--cacert</span>=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  <span class="attribute">--cert</span>=/etc/etcd/ssl/etcd.pem \</span><br><span class="line">  <span class="attribute">--key</span>=/etc/etcd/ssl/etcd-key.pem \</span><br><span class="line">  endpoint<span class="built_in"> health; </span>done</span><br></pre></td></tr></table></figure><p>输出如下结果：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http<span class="variable">s:</span>//<span class="number">192.168</span>.<span class="number">220.110</span>:<span class="number">2379</span> <span class="keyword">is</span> healthy: successfully committed proposa<span class="variable">l:</span> took = <span class="number">5.709368</span>ms</span><br><span class="line">http<span class="variable">s:</span>//<span class="number">192.168</span>.<span class="number">220.120</span>:<span class="number">2379</span> <span class="keyword">is</span> healthy: successfully committed proposa<span class="variable">l:</span> took = <span class="number">6.465407</span>ms</span><br><span class="line">http<span class="variable">s:</span>//<span class="number">192.168</span>.<span class="number">220.130</span>:<span class="number">2379</span> <span class="keyword">is</span> healthy: successfully committed proposa<span class="variable">l:</span> took = <span class="number">5.402329</span>ms</span><br></pre></td></tr></table></figure><p>可以看到上面的信息3个节点上的etcd 均为<strong>healthy</strong>，则表示集群服务正常。</p><h2 id="部署Flannel网络"><a href="#部署Flannel网络" class="headerlink" title="部署Flannel网络"></a>部署Flannel网络</h2><p>kubernetes 要求集群内各节点能通过Pod 网段互联互通，下面我们来使用Flannel 在所有节点上创建互联互通的Pod 网段的步骤。</p><blockquote><p>需要在所有的Node节点安装。 #所有节点（包括master）</p></blockquote><h3 id="创建TLS-密钥和证书-1"><a href="#创建TLS-密钥和证书-1" class="headerlink" title="创建TLS 密钥和证书"></a>创建TLS 密钥和证书</h3><p>etcd 集群启用了双向TLS 认证，所以需要为flanneld 指定与etcd 集群通信的CA 和密钥。</p><p>创建flanneld 证书签名请求：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; flanneld-csr.json &lt;&lt;<span class="symbol">EOF</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"flanneld"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: <span class="number">2048</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="symbol">EOF</span></span><br></pre></td></tr></table></figure><p>生成flanneld 证书和私钥：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca.pem \</span><br><span class="line">  -ca-key=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca-key.pem \</span><br><span class="line">  -config=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca-config.json \</span><br><span class="line">  -profile=kubernetes flanneld-csr.json | cfssljson -bare flanneld</span><br><span class="line">$ ls flanneld*</span><br><span class="line">flanneld.csr  flanneld-csr.json  flanneld-key.pem flanneld.pem</span><br><span class="line">sudo mv flanneld*.pem <span class="regexp">/etc/</span>flanneld/ssl</span><br><span class="line">scp -r <span class="regexp">/etc/</span>flanneld<span class="regexp">/ssl/</span>flanneld* k8s-<span class="string">n1:</span><span class="regexp">/etc/</span>flanneld<span class="regexp">/ssl/</span></span><br><span class="line">scp -r <span class="regexp">/etc/</span>flanneld<span class="regexp">/ssl/</span>flanneld* k8s-<span class="string">n2:</span><span class="regexp">/etc/</span>flanneld<span class="regexp">/ssl/</span></span><br></pre></td></tr></table></figure><h3 id="向etcd-写入集群Pod-网段信息"><a href="#向etcd-写入集群Pod-网段信息" class="headerlink" title="向etcd 写入集群Pod 网段信息"></a>向etcd 写入集群Pod 网段信息</h3><blockquote><p>该步骤只需在第一次部署Flannel 网络时执行，后续在其他节点上部署Flanneld 时无需再写入该信息</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">etcdctl \</span><br><span class="line">  <span class="attribute">--endpoints</span>=<span class="variable">$&#123;ETCD_ENDPOINTS&#125;</span> \</span><br><span class="line">  <span class="attribute">--ca-file</span>=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  <span class="attribute">--cert-file</span>=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  <span class="attribute">--key-file</span>=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  <span class="builtin-name">set</span> <span class="variable">$&#123;FLANNEL_ETCD_PREFIX&#125;</span><span class="built_in">/config </span><span class="string">'&#123;"Network":"'</span><span class="variable">$&#123;CLUSTER_CIDR&#125;</span><span class="string">'", "SubnetLen": 24, "Backend": &#123;"Type": "vxlan"&#125;&#125;'</span></span><br><span class="line"><span class="comment"># 得到如下反馈信息</span></span><br><span class="line">&#123;<span class="string">"Network"</span>:<span class="string">"172.30.0.0/16"</span>, <span class="string">"SubnetLen"</span>: 24, <span class="string">"Backend"</span>: &#123;<span class="string">"Type"</span>: <span class="string">"vxlan"</span>&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>写入的 Pod 网段(${CLUSTER_CIDR}，172.30.0.0/16) 必须与<code>kube-controller-manager</code> 的 <code>--cluster-cidr</code> 选项值一致；</li></ul><h3 id="安装和配置flanneld"><a href="#安装和配置flanneld" class="headerlink" title="安装和配置flanneld"></a>安装和配置flanneld</h3><p>前往<a href="https://github.com/coreos/flannel/releases" target="_blank" rel="noopener">flanneld release</a>页面下载最新版的flanneld 二进制文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir flannel</span><br><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/coreos/</span>flannel<span class="regexp">/releases/</span>download<span class="regexp">/v0.11.0/</span>flannel-v0.<span class="number">11.0</span>-linux-amd64.tar.gz</span><br><span class="line">tar -xzvf flannel-v0.<span class="number">11.0</span>-linux-amd64.tar.gz -C flannel</span><br><span class="line">sudo cp flannel<span class="regexp">/&#123;flanneld,mk-docker-opts.sh&#125; /u</span>sr<span class="regexp">/k8s/</span>bin</span><br></pre></td></tr></table></figure><p>创建flanneld的systemd unit 文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; flanneld.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Flanneld overlay<span class="built_in"> address </span>etcd agent</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"><span class="attribute">After</span>=network-online.target</span><br><span class="line"><span class="attribute">Wants</span>=network-online.target</span><br><span class="line"><span class="attribute">After</span>=etcd.service</span><br><span class="line"><span class="attribute">Before</span>=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=notify</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/k8s/bin/flanneld \\</span><br><span class="line">  <span class="attribute">-etcd-cafile</span>=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">  <span class="attribute">-etcd-certfile</span>=/etc/flanneld/ssl/flanneld.pem \\</span><br><span class="line">  <span class="attribute">-etcd-keyfile</span>=/etc/flanneld/ssl/flanneld-key.pem \\</span><br><span class="line">  <span class="attribute">-etcd-endpoints</span>=<span class="variable">$&#123;ETCD_ENDPOINTS&#125;</span> \\</span><br><span class="line">  <span class="attribute">-etcd-prefix</span>=<span class="variable">$&#123;FLANNEL_ETCD_PREFIX&#125;</span></span><br><span class="line"><span class="attribute">ExecStartPost</span>=/usr/k8s/bin/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS -d /run/flannel/docker</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line"><span class="attribute">RequiredBy</span>=docker.service</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>mk-docker-opts.sh</code>脚本将分配给flanneld 的Pod 子网网段信息写入到<code>/run/flannel/docker</code> 文件中，后续docker 启动时使用这个文件中的参数值为 docker0 网桥</li><li>flanneld 使用系统缺省路由所在的接口和其他节点通信，对于有多个网络接口的机器(内网和公网)，可以用 <code>--iface</code> 选项值指定通信接口(上面的 systemd unit 文件没指定这个选项)</li></ul><h3 id="启动flanneld"><a href="#启动flanneld" class="headerlink" title="启动flanneld"></a>启动flanneld</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudo</span> <span class="string">cp flanneld.service /etc/systemd/system/</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">systemctl daemon-reload</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">systemctl enable flanneld</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">systemctl restart flanneld</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">status flanneld</span></span><br></pre></td></tr></table></figure><h3 id="检查flanneld-服务"><a href="#检查flanneld-服务" class="headerlink" title="检查flanneld 服务"></a>检查flanneld 服务</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig flannel<span class="number">.1</span></span><br></pre></td></tr></table></figure><h3 id="检查分配给各flanneld-的Pod-网段信息"><a href="#检查分配给各flanneld-的Pod-网段信息" class="headerlink" title="检查分配给各flanneld 的Pod 网段信息"></a>检查分配给各flanneld 的Pod 网段信息</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看集群 Pod 网段(/16)</span></span><br><span class="line">etcdctl \</span><br><span class="line">  <span class="attribute">--endpoints</span>=<span class="variable">$&#123;ETCD_ENDPOINTS&#125;</span> \</span><br><span class="line">  <span class="attribute">--ca-file</span>=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  <span class="attribute">--cert-file</span>=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  <span class="attribute">--key-file</span>=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  <span class="builtin-name">get</span> <span class="variable">$&#123;FLANNEL_ETCD_PREFIX&#125;</span>/config</span><br><span class="line">&#123;<span class="string">"Network"</span>:<span class="string">"172.30.0.0/16"</span>, <span class="string">"SubnetLen"</span>: 24, <span class="string">"Backend"</span>: &#123;<span class="string">"Type"</span>: <span class="string">"vxlan"</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已分配的 Pod 子网段列表(/24)</span></span><br><span class="line">etcdctl \</span><br><span class="line">  <span class="attribute">--endpoints</span>=<span class="variable">$&#123;ETCD_ENDPOINTS&#125;</span> \</span><br><span class="line">  <span class="attribute">--ca-file</span>=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  <span class="attribute">--cert-file</span>=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  <span class="attribute">--key-file</span>=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  ls <span class="variable">$&#123;FLANNEL_ETCD_PREFIX&#125;</span>/subnets</span><br><span class="line">/kubernetes/network/subnets/172.30.1.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.70.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.29.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.61.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.47.0-24</span><br><span class="line"></span><br><span class="line">查看某一 Pod 网段对应的 flanneld 进程监听的<span class="built_in"> IP </span>和网络参数</span><br><span class="line">etcdctl \</span><br><span class="line">  <span class="attribute">--endpoints</span>=<span class="variable">$&#123;ETCD_ENDPOINTS&#125;</span> \</span><br><span class="line">  <span class="attribute">--ca-file</span>=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  <span class="attribute">--cert-file</span>=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  <span class="attribute">--key-file</span>=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  <span class="builtin-name">get</span> <span class="variable">$&#123;FLANNEL_ETCD_PREFIX&#125;</span>/subnets/172.30.1.0-24</span><br><span class="line">&#123;<span class="string">"PublicIP"</span>:<span class="string">"192.168.220.102"</span>,<span class="string">"BackendType"</span>:<span class="string">"vxlan"</span>,<span class="string">"BackendData"</span>:&#123;<span class="string">"VtepMAC"</span>:<span class="string">"66:51:aa:cc:3f:e7"</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="确保各节点间Pod-网段能互联互通"><a href="#确保各节点间Pod-网段能互联互通" class="headerlink" title="确保各节点间Pod 网段能互联互通"></a>确保各节点间Pod 网段能互联互通</h3><p>在各个节点部署完Flanneld 后，查看已分配的Pod 子网段列表：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ etcdctl \</span><br><span class="line">  --endpoints=$&#123;ETCD_ENDPOINTS&#125; \</span><br><span class="line">  --ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cert-file=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  --<span class="type">key</span>-file=/etc/flanneld/ssl/flanneld-<span class="type">key</span>.pem \</span><br><span class="line">  ls $&#123;FLANNEL_ETCD_PREFIX&#125;/subnets</span><br><span class="line">  </span><br><span class="line">/kubernetes/network/subnets/<span class="number">172.30</span><span class="number">.47</span><span class="number">.0</span><span class="number">-24</span></span><br><span class="line">/kubernetes/network/subnets/<span class="number">172.30</span><span class="number">.1</span><span class="number">.0</span><span class="number">-24</span></span><br><span class="line">/kubernetes/network/subnets/<span class="number">172.30</span><span class="number">.70</span><span class="number">.0</span><span class="number">-24</span></span><br><span class="line">/kubernetes/network/subnets/<span class="number">172.30</span><span class="number">.29</span><span class="number">.0</span><span class="number">-24</span></span><br><span class="line">/kubernetes/network/subnets/<span class="number">172.30</span><span class="number">.61</span><span class="number">.0</span><span class="number">-24</span></span><br></pre></td></tr></table></figure><p>检查是否正确写入iptables</p><p><img src="/2020/03/02/k8s/k8s/1.png" alt></p><h2 id="配置kubectl-命令行工具-master"><a href="#配置kubectl-命令行工具-master" class="headerlink" title="配置kubectl 命令行工具(master)"></a>配置kubectl 命令行工具(master)</h2><p><code>kubectl</code>默认从<code>~/.kube/config</code>配置文件中获取访问kube-apiserver 地址、证书、用户名等信息，需要正确配置该文件才能正常使用<code>kubectl</code>命令。</p><p>需要将下载的kubectl 二进制文件和生产的<code>~/.kube/config</code>配置文件拷贝到需要使用kubectl 命令的机器上。</p><blockquote><p>很多童鞋说这个地方不知道在哪个节点上执行，<code>kubectl</code>只是一个和<code>kube-apiserver</code>进行交互的一个命令行工具，所以你想安装到那个节点都行，master或者node任意节点都可以，比如你先在master节点上安装，这样你就可以在master节点使用<code>kubectl</code>命令行工具了，如果你想在node节点上使用(当然安装的过程肯定会用到的)，你就把master上面的<code>kubectl</code>二进制文件和<code>~/.kube/config</code>文件拷贝到对应的node节点上就行了。</p></blockquote><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">16</span>:<span class="number">10</span>:<span class="number">31</span> <span class="symbol">root@</span>k8s-m1 ~]$echo $MASTER_URL</span><br><span class="line">k8s-api.virtual.local</span><br><span class="line"># 变量KUBE_APISERVER 指定kubelet 访问的kube-apiserver 的地址，后续被写入~/.kube/config配置文件</span><br><span class="line">[<span class="number">17</span>:<span class="number">17</span>:<span class="number">49</span> <span class="symbol">root@</span>k8s-m1 ~]$echo $KUBE_APISERVER</span><br><span class="line">https:<span class="comment">//k8s-api.virtual.local:6443</span></span><br></pre></td></tr></table></figure><blockquote><p>注意这里的<code>KUBE_APISERVER</code>地址，因为我们还没有安装<code>haproxy</code>，所以暂时需要手动指定使用<code>apiserver</code>的6443端口，等<code>haproxy</code>安装完成后就可以用使用443端口转发到6443端口去了。</p></blockquote><ul><li>变量KUBE_APISERVER 指定kubelet 访问的kube-apiserver 的地址，后续被写入<code>~/.kube/config</code>配置文件</li></ul><h3 id="下载kubectl"><a href="#下载kubectl" class="headerlink" title="下载kubectl"></a>下载kubectl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.k8s.io/v1.8.2/kubernetes-client-linux-amd64.tar.gz # 如果服务器上下载不下来，可以想办法下载到本地，然后scp上去即可</span><br><span class="line">tar -xzvf kubernetes-client-linux-amd64.tar.gz</span><br><span class="line">cp kubernetes/client/bin/kube* /usr/k8s/bin/</span><br><span class="line">sudo chmod a+x /usr/k8s/bin/kube*</span><br></pre></td></tr></table></figure><h3 id="创建admin-证书"><a href="#创建admin-证书" class="headerlink" title="创建admin 证书"></a>创建admin 证书</h3><p>kubectl 与kube-apiserver 的安全端口通信，需要为安全通信提供TLS 证书和密钥。创建admin 证书签名请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; admin-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "admin",</span><br><span class="line">  "hosts": [],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "ST": "BeiJing",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "O": "system:masters",</span><br><span class="line">      "OU": "System"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>后续<code>kube-apiserver</code>使用RBAC 对客户端(如kubelet、kube-proxy、Pod)请求进行授权</li><li><code>kube-apiserver</code> 预定义了一些RBAC 使用的RoleBindings，如cluster-admin 将Group <code>system:masters</code>与Role <code>cluster-admin</code>绑定，该Role 授予了调用<code>kube-apiserver</code>所有API 的权限</li><li>O 指定了该证书的Group 为<code>system:masters</code>，kubectl使用该证书访问<code>kube-apiserver</code>时，由于证书被CA 签名，所以认证通过，同时由于证书用户组为经过预授权的<code>system:masters</code>，所以被授予访问所有API 的劝降</li><li>hosts 属性值为空列表</li></ul><p>生成admin 证书和私钥： #分发证书到各个服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -ca-key=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  -config=/etc/kubernetes/ssl/ca-config.json \</span><br><span class="line">  -profile=kubernetes admin-csr.json | cfssljson -bare admin</span><br><span class="line">ls admin*</span><br><span class="line">admin.csr  admin-csr.json  admin-key.pem  admin.pem</span><br><span class="line">sudo mv admin*.pem /etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure><h3 id="创建kubectl-kubeconfig-文件"><a href="#创建kubectl-kubeconfig-文件" class="headerlink" title="创建kubectl kubeconfig 文件"></a>创建kubectl kubeconfig 文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置集群参数</span></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置客户端认证参数</span></span><br><span class="line">kubectl config set-credentials admin \</span><br><span class="line">  --client-certificate=/etc/kubernetes/ssl/admin.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --client-key=/etc/kubernetes/ssl/admin-key.pem \</span><br><span class="line">  --token=$&#123;BOOTSTRAP_TOKEN&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置上下文参数</span></span><br><span class="line">kubectl config set-context kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=admin</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认上下文</span></span><br><span class="line">kubectl config use-context kubernetes</span><br></pre></td></tr></table></figure><ul><li><code>admin.pem</code>证书O 字段值为<code>system:masters</code>，<code>kube-apiserver</code> 预定义的 RoleBinding <code>cluster-admin</code> 将 Group <code>system:masters</code> 与 Role <code>cluster-admin</code> 绑定，该 Role 授予了调用<code>kube-apiserver</code> 相关 API 的权限</li><li>生成的kubeconfig 被保存到 <code>~/.kube/config</code> 文件</li></ul><h3 id="分发kubeconfig-文件"><a href="#分发kubeconfig-文件" class="headerlink" title="分发kubeconfig 文件"></a>分发kubeconfig 文件</h3><p>将<code>~/.kube/config</code>文件拷贝到运行<code>kubectl</code>命令的机器的<code>~/.kube/</code>目录下去。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.kube</span><br></pre></td></tr></table></figure><h2 id="部署master-节点"><a href="#部署master-节点" class="headerlink" title="部署master 节点"></a>部署master 节点</h2><p>kubernetes master 节点包含的组件有：</p><ul><li>kube-apiserver</li><li>kube-scheduler</li><li>kube-controller-manager</li></ul><p>目前这3个组件需要部署到同一台机器上：（后面再部署高可用的master）</p><ul><li><code>kube-scheduler</code>、<code>kube-controller-manager</code> 和 <code>kube-apiserver</code> 三者的功能紧密相关；</li><li>同时只能有一个 <code>kube-scheduler</code>、<code>kube-controller-manager</code> 进程处于工作状态，如果运行多个，则需要通过选举产生一个 leader；</li></ul><p>master 节点与node 节点上的Pods 通过Pod 网络通信，所以需要在master 节点上部署Flannel 网络。</p><h3 id="环境变量-1"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[16:14:18 root@k8s-m1 ~]$echo $NODE_IP</span><br><span class="line">192.168.220.110</span><br></pre></td></tr></table></figure><h3 id="下载最新版本的二进制文件"><a href="#下载最新版本的二进制文件" class="headerlink" title="下载最新版本的二进制文件"></a>下载最新版本的二进制文件</h3><p>在<a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.8.md#server-binaries" target="_blank" rel="noopener">kubernetes changelog</a> 页面下载最新版本的文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.k8s.io/v1.8.9/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">tar -xzvf kubernetes-server-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>将二进制文件拷贝到<code>/usr/k8s/bin</code>目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -r server/bin/&#123;kube-apiserver,kube-controller-manager,kube-scheduler&#125; /usr/k8s/bin/</span><br></pre></td></tr></table></figure><h3 id="创建kubernetes-证书-以下master机器都要做"><a href="#创建kubernetes-证书-以下master机器都要做" class="headerlink" title="创建kubernetes 证书 #以下master机器都要做"></a>创建kubernetes 证书 #以下master机器都要做</h3><p>创建kubernetes 证书签名请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kubernetes-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "kubernetes",</span><br><span class="line">  "hosts": [</span><br><span class="line">    "127.0.0.1",</span><br><span class="line">    "$&#123;NODE_IP&#125;",</span><br><span class="line">    "$&#123;MASTER_URL&#125;",</span><br><span class="line">    "$&#123;CLUSTER_KUBERNETES_SVC_IP&#125;",</span><br><span class="line">    "kubernetes",</span><br><span class="line">    "kubernetes.default",</span><br><span class="line">    "kubernetes.default.svc",</span><br><span class="line">    "kubernetes.default.svc.cluster",</span><br><span class="line">    "kubernetes.default.svc.cluster.local"</span><br><span class="line">  ],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "ST": "BeiJing",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "O": "k8s",</span><br><span class="line">      "OU": "System"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>如果 hosts 字段不为空则需要指定授权使用该证书的 <strong>IP 或域名列表</strong>，所以上面分别指定了当前部署的 master 节点主机 IP 以及apiserver 负载的内部域名</li><li>还需要添加 kube-apiserver 注册的名为 <code>kubernetes</code> 的服务 IP (Service Cluster IP)，一般是 kube-apiserver <code>--service-cluster-ip-range</code> 选项值指定的网段的<strong>第一个IP</strong>，如 “10.254.0.1”</li></ul><p>生成kubernetes 证书和私钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -ca-key=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  -config=/etc/kubernetes/ssl/ca-config.json \</span><br><span class="line">  -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes</span><br><span class="line">  </span><br><span class="line"><span class="meta">$</span><span class="bash"> ls kubernetes*</span></span><br><span class="line">kubernetes.csr  kubernetes-csr.json  kubernetes-key.pem  kubernetes.pem</span><br><span class="line"></span><br><span class="line">sudo mv kubernetes*.pem /etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure><h3 id="6-1-配置和启动kube-apiserver"><a href="#6-1-配置和启动kube-apiserver" class="headerlink" title="6.1 配置和启动kube-apiserver"></a>6.1 配置和启动kube-apiserver</h3><h4 id="创建kube-apiserver-使用的客户端token-文件"><a href="#创建kube-apiserver-使用的客户端token-文件" class="headerlink" title="创建kube-apiserver 使用的客户端token 文件"></a>创建kube-apiserver 使用的客户端token 文件</h4><p>kubelet 首次启动时向kube-apiserver 发送TLS Bootstrapping 请求，kube-apiserver 验证请求中的token 是否与它配置的token.csv 一致，如果一致则自动为kubelet 生成证书和密钥。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 导入的 environment.sh 文件定义了 BOOTSTRAP_TOKEN 变量</span></span><br><span class="line">cat &gt; token.csv &lt;&lt;EOF</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;BOOTSTRAP_TOKEN&#125;,kubelet-bootstrap,10001,<span class="string">"system:kubelet-bootstrap"</span></span></span><br><span class="line">EOF</span><br><span class="line">sudo mv token.csv /etc/kubernetes/</span><br></pre></td></tr></table></figure><h4 id="创建kube-apiserver-的systemd-unit文件"><a href="#创建kube-apiserver-的systemd-unit文件" class="headerlink" title="创建kube-apiserver 的systemd unit文件"></a>创建kube-apiserver 的systemd unit文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-apiserver.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/k8s/bin/kube-apiserver \\</span><br><span class="line">--logtostderr=true \\</span><br><span class="line">--v=4 \\</span><br><span class="line">--etcd-servers=$&#123;ETCD_ENDPOINTS&#125; \\</span><br><span class="line">--bind-address=$&#123;NODE_IP&#125; \\</span><br><span class="line">--secure-port=6443 \\</span><br><span class="line">--advertise-address=$&#123;NODE_IP&#125; \\</span><br><span class="line">--allow-privileged=true \\</span><br><span class="line">--service-cluster-ip-range=$&#123;SERVICE_CIDR&#125; \\</span><br><span class="line">--insecure-bind-address=$&#123;NODE_IP&#125; \\</span><br><span class="line">--enable-admission-plugins=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,NodeRestriction \\</span><br><span class="line">--authorization-mode=RBAC,Node \\</span><br><span class="line">--enable-bootstrap-token-auth \\</span><br><span class="line">--token-auth-file=/etc/kubernetes/token.csv \\</span><br><span class="line">--service-node-port-range=30000-50000 \\</span><br><span class="line">--tls-cert-file=/etc/kubernetes/ssl/kubernetes.pem  \\</span><br><span class="line">--tls-private-key-file=/etc/kubernetes/ssl/kubernetes-key.pem \\</span><br><span class="line">--client-ca-file=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">--service-account-key-file=/etc/kubernetes/ssl/ca-key.pem \\</span><br><span class="line">--etcd-cafile=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">--etcd-certfile=/etc/kubernetes/ssl/kubernetes.pem \\</span><br><span class="line">--etcd-keyfile=/etc/kubernetes/ssl/kubernetes-key.pem</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>kube-apiserver 1.6 版本开始使用 etcd v3 API 和存储格式</li><li><code>--authorization-mode=RBAC</code> 指定在安全端口使用RBAC 授权模式，拒绝未通过授权的请求</li><li>kube-scheduler、kube-controller-manager 一般和 kube-apiserver 部署在同一台机器上，它们使用<strong>非安全端口</strong>和 kube-apiserver通信</li><li>kubelet、kube-proxy、kubectl 部署在其它 Node 节点上，如果通过<strong>安全端口</strong>访问 kube-apiserver，则必须先通过 TLS 证书认证，再通过 RBAC 授权</li><li>kube-proxy、kubectl 通过使用证书里指定相关的 User、Group 来达到通过 RBAC 授权的目的</li><li>如果使用了 kubelet TLS Boostrap 机制，则不能再指定 <code>--kubelet-certificate-authority</code>、<code>--kubelet-client-certificate</code> 和 <code>--kubelet-client-key</code> 选项，否则后续 kube-apiserver 校验 kubelet 证书时出现 ”x509: certificate signed by unknown authority“ 错误</li><li><code>--admission-control</code> 值必须包含 <code>ServiceAccount</code>，否则部署集群插件时会失败</li><li><code>--bind-address</code> 不能为 <code>127.0.0.1</code></li><li><code>--service-cluster-ip-range</code> 指定 Service Cluster IP 地址段，该地址段不能路由可达</li><li><code>--service-node-port-range=${NODE_PORT_RANGE}</code> 指定 NodePort 的端口范围</li><li>缺省情况下 kubernetes 对象保存在<code>etcd/registry</code> 路径下，可以通过 <code>--etcd-prefix</code> 参数进行调整</li><li>kube-apiserver 1.8版本后需要在<code>--authorization-mode</code>参数中添加<code>Node</code>，即：<code>--authorization-mode=Node,RBAC</code>，否则Node 节点无法注册</li><li>licy-file`，我们也可以使用日志收集工具收集相关的日志进行分析。</li></ul><h4 id="启动kube-apiserver"><a href="#启动kube-apiserver" class="headerlink" title="启动kube-apiserver"></a>启动kube-apiserver</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kube-apiserver</span><br><span class="line">sudo systemctl start kube-apiserver</span><br><span class="line">sudo systemctl status kube-apiserver</span><br></pre></td></tr></table></figure><h3 id="6-2-配置和启动kube-controller-manager"><a href="#6-2-配置和启动kube-controller-manager" class="headerlink" title="6.2 配置和启动kube-controller-manager"></a>6.2 配置和启动kube-controller-manager</h3><h4 id="创建kube-controller-manager-的systemd-unit-文件"><a href="#创建kube-controller-manager-的systemd-unit-文件" class="headerlink" title="创建kube-controller-manager 的systemd unit 文件"></a>创建kube-controller-manager 的systemd unit 文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-controller-manager.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/k8s/bin/kube-controller-manager \\</span><br><span class="line">--logtostderr=true \\</span><br><span class="line">--v=4 \\</span><br><span class="line">--master=$&#123;MASTER_URL&#125;:8080 \\</span><br><span class="line">--leader-elect=true \\</span><br><span class="line">--address=127.0.0.1 \\</span><br><span class="line">--service-cluster-ip-range=$&#123;SERVICE_CIDR&#125; \\</span><br><span class="line">--cluster-name=kubernetes \\</span><br><span class="line">--cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">--cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem  \\</span><br><span class="line">--root-ca-file=//etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">--service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>--address</code> 值必须为 <code>127.0.0.1</code>，因为当前 kube-apiserver 期望 scheduler 和 controller-manager 在同一台机器</li><li><code>--master=http://${MASTER_URL}:8080</code>：使用<code>http</code>(非安全端口)与 kube-apiserver 通信，需要下面的<code>haproxy</code>安装成功后才能去掉8080端口。</li><li><code>--cluster-cidr</code> 指定 Cluster 中 Pod 的 CIDR 范围，该网段在各 Node 间必须路由可达(flanneld保证)</li><li><code>--service-cluster-ip-range</code> 参数指定 Cluster 中 Service 的CIDR范围，该网络在各 Node 间必须路由不可达，必须和 kube-apiserver 中的参数一致</li><li><code>--cluster-signing-*</code> 指定的证书和私钥文件用来签名为 TLS BootStrap 创建的证书和私钥</li><li><code>--root-ca-file</code> 用来对 kube-apiserver 证书进行校验，<strong>指定该参数后，才会在Pod 容器的 ServiceAccount 中放置该 CA 证书文件</strong></li><li><code>--leader-elect=true</code> 部署多台机器组成的 master 集群时选举产生一处于工作状态的 <code>kube-controller-manager</code> 进程</li></ul><h4 id="启动kube-controller-manager"><a href="#启动kube-controller-manager" class="headerlink" title="启动kube-controller-manager"></a>启动kube-controller-manager</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kube-controller-manager</span><br><span class="line">sudo systemctl start kube-controller-manager</span><br><span class="line">sudo systemctl status kube-controller-manager</span><br></pre></td></tr></table></figure><h3 id="6-3-配置和启动kube-scheduler"><a href="#6-3-配置和启动kube-scheduler" class="headerlink" title="6.3 配置和启动kube-scheduler"></a>6.3 配置和启动kube-scheduler</h3><h4 id="创建kube-scheduler-的systemd-unit文件"><a href="#创建kube-scheduler-的systemd-unit文件" class="headerlink" title="创建kube-scheduler 的systemd unit文件"></a>创建kube-scheduler 的systemd unit文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-scheduler.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/k8s/bin/kube-scheduler \\</span><br><span class="line">--logtostderr=true \\</span><br><span class="line">--v=4 \\</span><br><span class="line">--address=127.0.0.1 \\</span><br><span class="line">--master=$&#123;MASTER_URL&#125;:8080 \\</span><br><span class="line">--leader-elect</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>--address</code> 值必须为 <code>127.0.0.1</code>，因为当前 kube-apiserver 期望 scheduler 和 controller-manager 在同一台机器</li><li><code>--master=http://${MASTER_URL}:8080</code>：使用<code>http</code>(非安全端口)与 kube-apiserver 通信，需要下面的<code>haproxy</code>启动成功后才能去掉8080端口</li><li><code>--leader-elect=true</code> 部署多台机器组成的 master 集群时选举产生一处于工作状态的 <code>kube-controller-manager</code> 进程</li></ul><h4 id="启动kube-scheduler"><a href="#启动kube-scheduler" class="headerlink" title="启动kube-scheduler"></a>启动kube-scheduler</h4><p>k8s-api.virtual.local 加hosts解析</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo cp kube-scheduler.service /etc/systemd/system/</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kube-scheduler</span><br><span class="line">sudo systemctl start kube-scheduler</span><br><span class="line">sudo systemctl status kube-scheduler</span><br></pre></td></tr></table></figure><h3 id="验证master-节点"><a href="#验证master-节点" class="headerlink" title="验证master 节点"></a>验证master 节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl get componentstatuses</span><br><span class="line">NAME                 STATUS    MESSAGE              ERROR</span><br><span class="line">scheduler            Healthy   ok</span><br><span class="line">controller-manager   Healthy   ok</span><br><span class="line">etcd-1               Healthy   &#123;"health": "true"&#125;</span><br><span class="line">etcd-2               Healthy   &#123;"health": "true"&#125;</span><br><span class="line">etcd-0               Healthy   &#123;"health": "true"&#125;</span><br></pre></td></tr></table></figure><h2 id="部署Node-节点"><a href="#部署Node-节点" class="headerlink" title="部署Node 节点"></a>部署Node 节点</h2><p>kubernetes Node 节点包含如下组件：</p><ul><li>flanneld</li><li>docker</li><li>kubelet</li><li>kube-proxy</li></ul><h3 id="部署-kubelet-组件"><a href="#部署-kubelet-组件" class="headerlink" title="部署 kubelet 组件"></a>部署 kubelet 组件</h3><blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kublet 运行在每个 worker 节点上，接收 kube-apiserver 发送的请求，管理 Pod 容器，执行交互式命令，如exec、<span class="keyword">run</span><span class="bash">、logs 等;</span></span><br></pre></td></tr></table></figure><p>kublet 启动时自动向 kube-apiserver 注册节点信息，内置的 cadvisor 统计和监控节点的资源使用情况;<br>为确保安全，本文档只开启接收 https 请求的安全端口，对请求进行认证和授权，拒绝未授权的访问(如apiserver、heapster)。</p></blockquote><p><strong>创建 kubelet bootstrap.kubeconfig 文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-cluster kubernetes \</span><br><span class="line">  <span class="attribute">--certificate-authority</span>=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  <span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line">  <span class="attribute">--server</span>=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=bootstrap.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-credentials kubelet-bootstrap \</span><br><span class="line">  <span class="attribute">--token</span>=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=bootstrap.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-context<span class="built_in"> default </span>\</span><br><span class="line">  <span class="attribute">--cluster</span>=kubernetes \</span><br><span class="line">  <span class="attribute">--user</span>=kubelet-bootstrap \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=bootstrap.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl<span class="built_in"> config </span>use-context<span class="built_in"> default </span><span class="attribute">--kubeconfig</span>=bootstrap.kubeconfig</span><br></pre></td></tr></table></figure><p><strong>创建 kubelet.kubeconfig 文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-cluster kubernetes \</span><br><span class="line">  <span class="attribute">--certificate-authority</span>=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  <span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line">  <span class="attribute">--server</span>=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-credentials kubelet \</span><br><span class="line">  <span class="attribute">--token</span>=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-context<span class="built_in"> default </span>\</span><br><span class="line">  <span class="attribute">--cluster</span>=kubernetes \</span><br><span class="line">  <span class="attribute">--user</span>=kubelet \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl<span class="built_in"> config </span>use-context<span class="built_in"> default </span><span class="attribute">--kubeconfig</span>=kubelet.kubeconfig</span><br></pre></td></tr></table></figure><h4 id="创建kube-proxy-证书签名请求："><a href="#创建kube-proxy-证书签名请求：" class="headerlink" title="创建kube-proxy 证书签名请求："></a>创建kube-proxy 证书签名请求：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kube-proxy-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "system:kube-proxy",</span><br><span class="line">  "hosts": [],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "ST": "BeiJing",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "O": "k8s",</span><br><span class="line">      "OU": "System"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>CN 指定该证书的 User 为 <code>system:kube-proxy</code></li><li><code>kube-apiserver</code> 预定义的 RoleBinding <code>system:node-proxier</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code>绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限</li><li>hosts 属性值为空列表</li></ul><h4 id="生成kube-proxy-客户端证书和私钥"><a href="#生成kube-proxy-客户端证书和私钥" class="headerlink" title="生成kube-proxy 客户端证书和私钥"></a>生成kube-proxy 客户端证书和私钥</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -ca-key=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  -config=/etc/kubernetes/ssl/ca-config.json \</span><br><span class="line">  -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy</span><br><span class="line">ls kube-proxy*</span><br><span class="line">kube-proxy.csr  kube-proxy-csr.json  kube-proxy-key.pem  kube-proxy.pem</span><br><span class="line">sudo mv kube-proxy*.pem /etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure><p><strong>创建kube-proxy kubeconfig文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-cluster kubernetes \</span><br><span class="line">  <span class="attribute">--certificate-authority</span>=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  <span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line">  <span class="attribute">--server</span>=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kube-proxy.kubeconfig</span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-credentials kube-proxy \</span><br><span class="line">  <span class="attribute">--client-certificate</span>=/etc/kubernetes/ssl/kube-proxy.pem \</span><br><span class="line">  <span class="attribute">--client-key</span>=/etc/kubernetes/ssl/kube-proxy-key.pem \</span><br><span class="line">  <span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kube-proxy.kubeconfig</span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-context<span class="built_in"> default </span>\</span><br><span class="line">  <span class="attribute">--cluster</span>=kubernetes \</span><br><span class="line">  <span class="attribute">--user</span>=kube-proxy \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kube-proxy.kubeconfig</span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl<span class="built_in"> config </span>use-context<span class="built_in"> default </span><span class="attribute">--kubeconfig</span>=kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure><ul><li>设置集群参数和客户端认证参数时 <code>--embed-certs</code> 都为 <code>true</code>，这会将 <code>certificate-authority</code>、<code>client-certificate</code> 和 <code>client-key</code> 指向的证书文件内容写入到生成的 <code>kube-proxy.kubeconfig</code> 文件中</li><li><code>kube-proxy.pem</code> 证书中 CN 为 <code>system:kube-proxy</code>，<code>kube-apiserver</code> 预定义的 RoleBinding <code>cluster-admin</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code> 绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限</li></ul><p>将bootstrap.kubeconfig kube-proxy.kubeconfig 文件拷贝到所有 nodes节点</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -rp bootstrap<span class="selector-class">.kubeconfig</span> kube-proxy<span class="selector-class">.kubeconfig</span> kubelet<span class="selector-class">.kubeconfig</span> k8s-n1:/etc/kubernetes/</span><br><span class="line">scp -rp bootstrap<span class="selector-class">.kubeconfig</span> kube-proxy<span class="selector-class">.kubeconfig</span> kubelet<span class="selector-class">.kubeconfig</span> k8s-n2:/etc/kubernetes/</span><br></pre></td></tr></table></figure><h4 id="创建kube-proxy-systemd-unit-文件"><a href="#创建kube-proxy-systemd-unit-文件" class="headerlink" title="创建kube-proxy systemd unit 文件"></a>创建kube-proxy systemd unit 文件</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-proxy.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Kubernetes Proxy</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">WorkingDirectory</span>=/var/lib/kube-proxy</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/k8s/bin/kube-proxy \\</span><br><span class="line"><span class="attribute">--logtostderr</span>=<span class="literal">true</span> \\</span><br><span class="line"><span class="attribute">--v</span>=4 \\</span><br><span class="line"><span class="attribute">--hostname-override</span>=<span class="variable">$&#123;NODE_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--cluster-cidr</span>=<span class="variable">$&#123;SERVICE_CIDR&#125;</span> \\</span><br><span class="line"><span class="attribute">--kubeconfig</span>=/etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="启动kube-proxy服务"><a href="#启动kube-proxy服务" class="headerlink" title="启动kube-proxy服务"></a>启动kube-proxy服务</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable kube-proxy</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart kube-proxy</span></span><br></pre></td></tr></table></figure><h4 id="检查服务运行状态"><a href="#检查服务运行状态" class="headerlink" title="检查服务运行状态"></a>检查服务运行状态</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl status kube-proxy</span></span><br></pre></td></tr></table></figure><h4 id="创建kubelet-参数配置文件拷贝到所有-nodes节点"><a href="#创建kubelet-参数配置文件拷贝到所有-nodes节点" class="headerlink" title="创建kubelet 参数配置文件拷贝到所有 nodes节点"></a>创建kubelet 参数配置文件拷贝到所有 nodes节点</h4><p><strong>创建 kubelet 参数配置模板文件</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-2</span> <span class="string">/root]</span> <span class="string">node</span></span><br><span class="line"><span class="comment"># cat /cloud/k8s/kubernetes/cfg/kubelet.config &lt;&lt; EOF</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">address:</span> <span class="number">192.168</span><span class="number">.220</span><span class="number">.120</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">10250</span></span><br><span class="line"><span class="attr">readOnlyPort:</span> <span class="number">10255</span></span><br><span class="line"><span class="attr">cgroupDriver:</span> <span class="string">cgroupfs</span></span><br><span class="line"><span class="attr">clusterDomain:</span> <span class="string">cluster.local.</span></span><br><span class="line"><span class="attr">failSwapOn:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">authentication:</span></span><br><span class="line">  <span class="attr">anonymous:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>创建kubelet systemd unit 文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kubelet.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Kubernetes Kubelet</span><br><span class="line"><span class="attribute">After</span>=docker.service</span><br><span class="line"><span class="attribute">Requires</span>=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/k8s/bin/kubelet \\</span><br><span class="line"><span class="attribute">--logtostderr</span>=<span class="literal">true</span> \\</span><br><span class="line"><span class="attribute">--v</span>=4 \\</span><br><span class="line"><span class="attribute">--address</span>=<span class="variable">$&#123;NODE_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--hostname-override</span>=<span class="variable">$&#123;NODE_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--cluster-dns</span>=<span class="variable">$&#123;CLUSTER_DNS_SVC_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--cluster-domain</span>=<span class="variable">$&#123;CLUSTER_DNS_DOMAIN&#125;</span> \\</span><br><span class="line"><span class="attribute">--kubeconfig</span>=/etc/kubernetes/kubelet.kubeconfig \\</span><br><span class="line"><span class="attribute">--bootstrap-kubeconfig</span>=/etc/kubernetes/bootstrap.kubeconfig \\</span><br><span class="line"><span class="attribute">--config</span>=/etc/kubernetes/kubelet.config \\</span><br><span class="line"><span class="attribute">--cert-dir</span>=/etc/kubernetes/ssl \\</span><br><span class="line"><span class="attribute">--pod-infra-container-image</span>=registry.cn-hangzhou.aliyuncs.com/google-containers/pause-amd64:3.1</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"><span class="attribute">KillMode</span>=process</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>将kubelet-bootstrap用户绑定到系统集群角色</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-bootstrap \</span><br><span class="line">  --<span class="attr">clusterrole=</span>system:<span class="keyword">node</span><span class="title">-bootstrapper</span> \</span><br><span class="line">  --<span class="attr">user=</span>kubelet-bootstrap</span><br></pre></td></tr></table></figure><h4 id="启动kubelet服务"><a href="#启动kubelet服务" class="headerlink" title="启动kubelet服务"></a>启动kubelet服务</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable kubelet</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart kubelet</span></span><br></pre></td></tr></table></figure><h4 id="approve-kubelet-CSR-请求"><a href="#approve-kubelet-CSR-请求" class="headerlink" title="approve kubelet CSR 请求"></a>approve kubelet CSR 请求</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="builtin-name">get</span> csr</span><br><span class="line">kubectl certificate approve <span class="variable">$NAME</span> </span><br><span class="line">kubectl <span class="builtin-name">get</span> csr</span><br><span class="line">csr 状态变为 Approved,Issued 即可</span><br></pre></td></tr></table></figure><blockquote><ul><li>Requesting User：请求 CSR 的用户，kube-apiserver 对它进行认证和授权；</li><li>Subject：请求签名的证书信息；</li><li>证书的 CN 是 system:node:kube-node2， Organization 是 system:nodes，kube-apiserver 的 Node 授权模式会授予该证书的相关权限；</li></ul></blockquote><h4 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-<span class="number">1</span> /root] <span class="literal">master</span></span><br><span class="line"><span class="comment"># kubectl  get  nodes,cs</span></span><br><span class="line">NAME         STATUS   ROLES   AGE     <span class="keyword">VERSION</span></span><br><span class="line"><span class="keyword">node</span><span class="title">/k8s-2</span>   Ready    <span class="keyword">node</span>    <span class="title">3d22h</span>   v1.<span class="number">15.1</span></span><br><span class="line"><span class="keyword">node</span><span class="title">/k8s-3</span>   Ready    <span class="keyword">node</span>    <span class="title">3d22h</span>   v1.<span class="number">15.1</span></span><br><span class="line"></span><br><span class="line">NAME                                 STATUS    MESSAGE             ERROR</span><br><span class="line">componentstatus/scheduler            Healthy   ok</span><br><span class="line">componentstatus/controller-manager   Healthy   ok</span><br><span class="line">componentstatus/etcd-<span class="number">0</span>               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br><span class="line">componentstatus/etcd-<span class="number">2</span>               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br><span class="line">componentstatus/etcd-<span class="number">1</span>               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="验证集群功能"><a href="#验证集群功能" class="headerlink" title="验证集群功能"></a>验证集群功能</h3><p>定义yaml 文件：（将下面内容保存为：nginx-ds.yaml）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">nginx-ds.yaml</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ds</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">static-web</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">static</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">      <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>创建 Pod 和服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f nginx-ds.yaml</span><br><span class="line">service "nginx-ds" created</span><br><span class="line">daemonset "nginx-ds" created</span><br></pre></td></tr></table></figure><h3 id="创建失败："><a href="#创建失败：" class="headerlink" title="创建失败："></a>创建失败：</h3><p>describe 出现Failed create pod sandbox.</p><p>journalctl -u kubelet -n 100</p><p><img src="/2020/03/02/k8s/k8s/Github/hexo/source/_posts/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84k8s%E9%9B%86%E7%BE%A4/2.png" alt></p><p>解决方法如下，从docker.io把pause-amd64镜像取下来，然后做个标签。这样就可以解决问题。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull googlecontainer/pause-amd64:<span class="number">3.1</span></span><br><span class="line">docker tag googlecontainer/pause-amd64:<span class="number">3.1</span> gcr.io/google_containers/pause-amd64:<span class="number">3.1</span></span><br></pre></td></tr></table></figure><ul><li>1.15.1拉取的版本是3.1</li></ul><p>执行下面的命令查看Pod 和SVC：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -o wide</span><br><span class="line">NAME             READY     STATUS    RESTARTS   AGE       IP           NODE</span><br><span class="line">nginx-ds-f29zt   1/1       Running   0          23m       172.17.0.2   192.168.1.170</span><br><span class="line">kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">nginx-ds     NodePort    10.254.6.249   &lt;none&gt;        80:30813/TCP   24m</span><br></pre></td></tr></table></figure><p>可以看到：</p><ul><li>服务IP：10.254.6.249</li><li>服务端口：80</li><li>NodePort端口：30813</li></ul><p>在所有 Node 上执行：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl <span class="number">10.254</span><span class="number">.6</span><span class="number">.249</span></span><br><span class="line">$ curl <span class="number">192.168</span><span class="number">.1</span><span class="number">.170</span>:<span class="number">30813</span></span><br></pre></td></tr></table></figure><p>执行上面的命令预期都会输出nginx 欢迎页面内容，表示我们的Node 节点正常运行了。</p><h2 id="9-部署kubedns-插件"><a href="#9-部署kubedns-插件" class="headerlink" title="9. 部署kubedns 插件"></a>9. 部署kubedns 插件</h2><p>官方文件目录：<a href="https://github.com/kubernetes/kubernetes/tree/v1.8.2/cluster/addons/dns" target="_blank" rel="noopener">kubernetes/cluster/addons/dns</a></p><p>使用的文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls *.yaml *.base</span></span><br><span class="line">kubedns-cm.yaml  kubedns-sa.yaml  kubedns-controller.yaml.base  kubedns-svc.yaml.base</span><br></pre></td></tr></table></figure><h3 id="系统预定义的RoleBinding"><a href="#系统预定义的RoleBinding" class="headerlink" title="系统预定义的RoleBinding"></a>系统预定义的RoleBinding</h3><p>预定义的RoleBinding <code>system:kube-dns</code>将kube-system 命名空间的<code>kube-dns</code>ServiceAccount 与 <code>system:kube-dns</code> Role 绑定，该Role 具有访问kube-apiserver DNS 相关的API 权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get clusterrolebindings system:kube-dns -o yaml</span></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: "true"</span><br><span class="line">  creationTimestamp: 2017-11-06T10:51:59Z</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: system:kube-dns</span><br><span class="line">  resourceVersion: "78"</span><br><span class="line">  selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Akube-dns</span><br><span class="line">  uid: 83a25fd9-c2e0-11e7-9646-00163e0055c1</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:kube-dns</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kube-dns</span><br><span class="line">  namespace: kube-system</span><br></pre></td></tr></table></figure><ul><li><code>kubedns-controller.yaml</code> 中定义的 Pods 时使用了 <code>kubedns-sa.yaml</code> 文件定义的 <code>kube-dns</code> ServiceAccount，所以具有访问 kube-apiserver DNS 相关 API 的权限；</li></ul><h3 id="配置kube-dns-ServiceAccount"><a href="#配置kube-dns-ServiceAccount" class="headerlink" title="配置kube-dns ServiceAccount"></a>配置kube-dns ServiceAccount</h3><p>无需更改</p><h3 id="配置kube-dns-服务"><a href="#配置kube-dns-服务" class="headerlink" title="配置kube-dns 服务"></a>配置kube-dns 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> diff kubedns-svc.yaml.base kubedns-svc.yaml</span></span><br><span class="line">30c30</span><br><span class="line">&lt;   clusterIP: __PILLAR__DNS__SERVER__</span><br><span class="line">---</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   clusterIP: 10.254.0.2</span></span><br></pre></td></tr></table></figure><ul><li>需要将 spec.clusterIP 设置为集群环境变量中变量 <code>CLUSTER_DNS_SVC_IP</code> 值，这个IP 需要和 kubelet 的 <code>—cluster-dns</code> 参数值一致</li></ul><h3 id="配置kube-dns-Deployment"><a href="#配置kube-dns-Deployment" class="headerlink" title="配置kube-dns Deployment"></a>配置kube-dns Deployment</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> diff kubedns-controller.yaml.base kubedns-controller.yaml</span></span><br><span class="line">88c88</span><br><span class="line">&lt;         - --domain=__PILLAR__DNS__DOMAIN__.</span><br><span class="line">---</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         - --domain=cluster.local</span></span><br><span class="line">128c128</span><br><span class="line">&lt;         - --server=/__PILLAR__DNS__DOMAIN__/127.0.0.1#10053</span><br><span class="line">---</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         - --server=/cluster.local/127.0.0.1<span class="comment">#10053</span></span></span><br><span class="line">160,161c160,161</span><br><span class="line">&lt;         - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.__PILLAR__DNS__DOMAIN__,5,A</span><br><span class="line">&lt;         - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.__PILLAR__DNS__DOMAIN__,5,A</span><br><span class="line">---</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A</span></span><br></pre></td></tr></table></figure><ul><li><code>--domain</code> 为集群环境变量<code>CLUSTER_DNS_DOMAIN</code> 的值</li><li>使用系统已经做了 RoleBinding 的 <code>kube-dns</code> ServiceAccount，该账户具有访问 kube-apiserver DNS 相关 API 的权限</li><li>修改拉取镜像的地址类似：</li></ul><p>anjia0532/k8s-dns-dnsmasq-nanny-amd64:1.14.5</p><h3 id="执行所有定义文件"><a href="#执行所有定义文件" class="headerlink" title="执行所有定义文件"></a>执行所有定义文件</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/home/ych/k8s-repo/kube-dns</span><br><span class="line">$ ls *.yaml</span><br><span class="line">kubedns-cm<span class="selector-class">.yaml</span>  kubedns-controller<span class="selector-class">.yaml</span>  kubedns-sa<span class="selector-class">.yaml</span>  kubedns-svc.yaml</span><br><span class="line">$ kubectl create -f .</span><br></pre></td></tr></table></figure><h3 id="检查kubedns-功能"><a href="#检查kubedns-功能" class="headerlink" title="检查kubedns 功能"></a>检查kubedns 功能</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; my-nginx.yaml&lt;&lt;EOF</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: my-nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 2</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        run: my-nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: my-nginx</span><br><span class="line">        image: nginx:1.7.9</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create -f my-nginx.yaml</span></span><br><span class="line">deployment "my-nginx" created</span><br></pre></td></tr></table></figure><p>Expose 该Deployment，生成my-nginx 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl expose deploy my-nginx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get services</span></span><br><span class="line">NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes   ClusterIP   10.254.0.1      &lt;none&gt;        443/TCP   1d</span><br><span class="line">my-nginx     ClusterIP   10.254.32.162   &lt;none&gt;        80/TCP    56s</span><br></pre></td></tr></table></figure><p>然后创建另外一个Pod，查看<code>/etc/resolv.conf</code>是否包含<code>kubelet</code>配置的<code>--cluster-dns</code> 和<code>--cluster-domain</code>，是否能够将服务<code>my-nginx</code> 解析到上面显示的CLUSTER-IP <code>10.254.32.162</code>上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat &gt; pod-centosnx.yaml&lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: centos</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: centos</span><br><span class="line">    image: centos</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create -f pod-centos.yaml</span></span><br><span class="line">pod "nginx" created</span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl <span class="built_in">exec</span>  nginx -i -t -- /bin/bash</span></span><br><span class="line">root@centos:/# cat /etc/resolv.conf</span><br><span class="line">nameserver 10.254.0.2</span><br><span class="line">search default.svc.cluster.local. svc.cluster.local. cluster.local.</span><br><span class="line">options ndots:5</span><br><span class="line">root@nginx:/# ping my-nginx</span><br><span class="line">PING my-nginx.default.svc.cluster.local (10.254.32.162): 48 data bytes</span><br><span class="line">^C--- my-nginx.default.svc.cluster.local ping statistics ---</span><br><span class="line">14 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line"></span><br><span class="line">root@nginx:/# ping kubernetes</span><br><span class="line">PING kubernetes.default.svc.cluster.local (10.254.0.1): 48 data bytes</span><br><span class="line">^C--- kubernetes.default.svc.cluster.local ping statistics ---</span><br><span class="line">6 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line"></span><br><span class="line">root@nginx:/# ping kube-dns.kube-system.svc.cluster.local</span><br><span class="line">PING kube-dns.kube-system.svc.cluster.local (10.254.0.2): 48 data bytes</span><br><span class="line">^C--- kube-dns.kube-system.svc.cluster.local ping statistics ---</span><br><span class="line">2 packets transmitted, 0 packets received, 100% packet loss</span><br></pre></td></tr></table></figure><p>在centos内访问my-nginx服务</p><h2 id="部署Dashboard-插件"><a href="#部署Dashboard-插件" class="headerlink" title="部署Dashboard 插件"></a>部署Dashboard 插件</h2><p>官方文件目录：<a href="https://github.com/kubernetes/kubernetes/tree/v1.8.2/cluster/addons/dashboard" target="_blank" rel="noopener">kubernetes/cluster/addons/dashboard</a></p><p>使用的文件如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls *.yaml</span></span><br><span class="line">dashboard-controller.yaml  dashboard-rbac.yaml  dashboard-service.yaml</span><br></pre></td></tr></table></figure><ul><li>新加了 <code>dashboard-rbac.yaml</code> 文件，定义 dashboard 使用的 RoleBinding。</li></ul><p>由于 <code>kube-apiserver</code> 启用了 <code>RBAC</code> 授权，而官方源码目录的 <code>dashboard-controller.yaml</code> 没有定义授权的 ServiceAccount，所以后续访问 <code>kube-apiserver</code> 的 API 时会被拒绝，前端界面提示：</p><p><img src="/2020/03/02/k8s/k8s/D:%5CGithub%5Chexo%5Csource_posts%5Cassets%5Cdashboard-403.png" alt="403">403</p><p>解决办法是：定义一个名为dashboard 的ServiceAccount，然后将它和Cluster Role view 绑定：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat &gt; dashboard-rbac.yaml&lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: dashboard</span><br><span class="line">    namespace: kube-system</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="配置dashboard-controller"><a href="#配置dashboard-controller" class="headerlink" title="配置dashboard-controller"></a>配置dashboard-controller</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">     serviceAccountName:</span> dashboard</span><br><span class="line"><span class="symbol">     containers:</span></span><br></pre></td></tr></table></figure><ul><li>使用名为 dashboard 的自定义 ServiceAccount</li></ul><h3 id="配置dashboard-service"><a href="#配置dashboard-service" class="headerlink" title="配置dashboard-service"></a>配置dashboard-service</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">type: NodePort</span><br><span class="line">ports:</span><br><span class="line">- port: 80</span><br><span class="line">  targetPort: 9090</span><br><span class="line">  nodePort: 30036</span><br></pre></td></tr></table></figure><ul><li>指定端口类型为 NodePort，这样外界可以通过地址 nodeIP:nodePort 访问 dashboard</li></ul><h3 id="执行所有定义文件-1"><a href="#执行所有定义文件-1" class="headerlink" title="执行所有定义文件"></a>执行所有定义文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">pwd</span></span></span><br><span class="line">/home/ych/k8s-repo/dashboard</span><br><span class="line">docker pull anjia0532/kubernetes-dashboard-amd64:v1.6.3</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls *.yaml</span></span><br><span class="line">dashboard-controller.yaml  dashboard-rbac.yaml  dashboard-service.yaml</span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create -f  .</span></span><br></pre></td></tr></table></figure><h3 id="检查执行结果"><a href="#检查执行结果" class="headerlink" title="检查执行结果"></a>检查执行结果</h3><p>查看分配的 NodePort</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get services kubernetes-dashboard -n kube-system</span></span><br><span class="line">NAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes-dashboard   NodePort   10.254.104.90   &lt;none&gt;        80:31202/TCP   1m</span><br></pre></td></tr></table></figure><ul><li>NodePort 31202映射到dashboard pod 80端口；</li></ul><p>检查 controller</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get deployment kubernetes-dashboard  -n kube-system</span></span><br><span class="line">NAME                   DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">kubernetes-dashboard   1         1         1            1           3m</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods  -n kube-system | grep dashboard</span></span><br><span class="line">kubernetes-dashboard-6667f9b4c-4xbpz   1/1       Running   0          3m</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s15.1版本二进制部署</title>
      <link href="/2020/03/01/k8s/k8s15/"/>
      <url>/2020/03/01/k8s/k8s15/</url>
      
        <content type="html"><![CDATA[<h2 id="1-架构篇"><a href="#1-架构篇" class="headerlink" title="1. 架构篇"></a>1. 架构篇</h2><h3 id="1-1-kubernetes-架构说明"><a href="#1-1-kubernetes-架构说明" class="headerlink" title="1.1 kubernetes 架构说明"></a>1.1 kubernetes 架构说明</h3><p><img src="/2020/03/01/k8s/k8s15/1.png" alt></p><a id="more"></a><h3 id="1-2-Flannel网络架构图"><a href="#1-2-Flannel网络架构图" class="headerlink" title="1.2 Flannel网络架构图"></a>1.2 Flannel网络架构图</h3><p><img src="/2020/03/01/k8s/k8s15/2.png" alt></p><p><a href="https://blog.51cto.com/10880347/2326146" target="_blank" rel="noopener">集群功能各模块功能描述：</a><br><strong>Master节点：</strong><br>Master节点上面主要由四个模块组成，APIServer，schedule,controller-manager,etcd<br>APIServer: APIServer负责对外提供RESTful的kubernetes API的服务，它是系统管理指令的统一接口，任何对资源的增删该查都要交给APIServer处理后再交给etcd，如图，kubectl(kubernetes提供的客户端工具，该工具内部是对kubernetes API的调用）是直接和APIServer交互的。<br>schedule: schedule负责调度Pod到合适的Node上，如果把scheduler看成一个黑匣子，那么它的输入是pod和由多个Node组成的列表，输出是Pod和一个Node的绑定。 kubernetes目前提供了调度算法，同样也保留了接口。用户根据自己的需求定义自己的调度算法。<br>controller manager: 如果APIServer做的是前台的工作的话，那么controller manager就是负责后台的。每一个资源都对应一个控制器。而control manager就是负责管理这些控制器的，比如我们通过APIServer创建了一个Pod，当这个Pod创建成功后，APIServer的任务就算完成了。<br>etcd：etcd是一个高可用的键值存储系统，kubernetes使用它来存储各个资源的状态，从而实现了Restful的API。</p><p><strong>Node节点：</strong><br>每个Node节点主要由三个模板组成：kublet, kube-proxy<br>kube-proxy: 该模块实现了kubernetes中的服务发现和反向代理功能。kube-proxy支持TCP和UDP连接转发，默认基Round Robin算法将客户端流量转发到与service对应的一组后端pod。服务发现方面，kube-proxy使用etcd的watch机制监控集群中service和endpoint对象数据的动态变化，并且维护一个service到endpoint的映射关系，从而保证了后端pod的IP变化不会对访问者造成影响，另外，kube-proxy还支持session affinity。<br>kublet：kublet是Master在每个Node节点上面的agent，是Node节点上面最重要的模块，它负责维护和管理该Node上的所有容器，但是如果容器不是通过kubernetes创建的，它并不会管理。本质上，它负责使Pod的运行状态与期望的状态一致。</p><h3 id="1-3-Kubernetes工作流程"><a href="#1-3-Kubernetes工作流程" class="headerlink" title="1.3 Kubernetes工作流程"></a>1.3 Kubernetes工作流程</h3><p><img src="/2020/03/01/k8s/k8s15/3.png" alt></p><h2 id="2-环境说明"><a href="#2-环境说明" class="headerlink" title="2. 环境说明"></a>2. 环境说明</h2><h3 id="2-1-部署节点说明"><a href="#2-1-部署节点说明" class="headerlink" title="2.1 部署节点说明"></a>2.1 部署节点说明</h3><table><thead><tr><th align="center">主机名</th><th align="center">IP</th><th align="center">用途</th><th align="center">部署软件</th></tr></thead><tbody><tr><td align="center">k8s-1</td><td align="center">192.168.123.110</td><td align="center">master</td><td align="center">apiserver,scheduler,controller-manager etcd,flanneld</td></tr><tr><td align="center">k8s-2</td><td align="center">192.168.123.120</td><td align="center">node</td><td align="center">kubelet,kube-proxy etcd,flanneld</td></tr><tr><td align="center">k8s-3</td><td align="center">192.168.123.130</td><td align="center">node</td><td align="center">kubelet,kube-proxy etcd,flanneld</td></tr></tbody></table><h3 id="2-2-操作系统环境"><a href="#2-2-操作系统环境" class="headerlink" title="2.2 操作系统环境"></a>2.2 操作系统环境</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 三台机器相同</span><br><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /root] master</span><br><span class="line"># uname  -r</span><br><span class="line"><span class="number">3.10</span><span class="number">.0</span><span class="number">-957.</span>el7.x86_64</span><br><span class="line"></span><br><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /root] master</span><br><span class="line"># cat  /etc/redhat-release</span><br><span class="line">CentOS Linux release <span class="number">7.6</span><span class="number">.1810</span> (Core)</span><br><span class="line"></span><br><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /root] master</span><br><span class="line"># sestatus</span><br><span class="line">SELinux status:                 disabled</span><br></pre></td></tr></table></figure><h3 id="2-3-软件包版本"><a href="#2-3-软件包版本" class="headerlink" title="2.3 软件包版本"></a>2.3 软件包版本</h3><table><thead><tr><th align="center">软件包</th><th align="center">下载地址</th></tr></thead><tbody><tr><td align="center">kubernetes-node-linux-amd64.tar.gz</td><td align="center"><a href="https://dl.k8s.io/v1.15.1/kubernetes-node-linux-amd64.tar.gz" target="_blank" rel="noopener">https://dl.k8s.io/v1.15.1/kubernetes-node-linux-amd64.tar.gz</a></td></tr><tr><td align="center">kubernetes-server-linux-amd64.tar.gz</td><td align="center"><a href="https://dl.k8s.io/v1.15.1/kubernetes-server-linux-amd64.tar.gz" target="_blank" rel="noopener">https://dl.k8s.io/v1.15.1/kubernetes-server-linux-amd64.tar.gz</a></td></tr><tr><td align="center">flannel-v0.11.0-linux-amd64.tar.gz</td><td align="center"><a href="https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz" target="_blank" rel="noopener">https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz</a></td></tr><tr><td align="center">etcd-v3.3.10-linux-amd64.tar.gz</td><td align="center"><a href="https://github.com/etcd-io/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz" target="_blank" rel="noopener">https://github.com/etcd-io/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz</a></td></tr></tbody></table><h2 id="3-Kubernetes-安装及配置"><a href="#3-Kubernetes-安装及配置" class="headerlink" title="3. Kubernetes 安装及配置"></a>3. Kubernetes 安装及配置</h2><h3 id="3-1-初始化环境"><a href="#3-1-初始化环境" class="headerlink" title="3.1 初始化环境"></a>3.1 初始化环境</h3><h4 id="3-1-1-设置关闭防火墙及SELINUX"><a href="#3-1-1-设置关闭防火墙及SELINUX" class="headerlink" title="3.1.1 设置关闭防火墙及SELINUX"></a>3.1.1 设置关闭防火墙及SELINUX</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h4 id="3-1-2-关闭swap"><a href="#3-1-2-关闭swap" class="headerlink" title="3.1.2 关闭swap"></a>3.1.2 关闭swap</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class="line">sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab</span><br></pre></td></tr></table></figure><h4 id="3-1-3-设置Docker所需参数"><a href="#3-1-3-设置Docker所需参数" class="headerlink" title="3.1.3 设置Docker所需参数"></a>3.1.3 设置Docker所需参数</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt;EOF</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=0</span><br><span class="line">vm.swappiness=0</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">net.ipv6.conf.all.disable_ipv6=1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p  /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure><h4 id="3-1-4-安装-Docker"><a href="#3-1-4-安装-Docker" class="headerlink" title="3.1.4 安装 Docker"></a>3.1.4 安装 Docker</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置yum源</span></span><br><span class="line">cd  /etc/yum.repos.d/</span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum clean all &amp;&amp; yum  repolist -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装docker ，版本 18.06.2</span></span><br><span class="line">yum  install  docker-ce-18.06.2.ce-3.el7 -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">systemctl start docker &amp;&amp; systemctl enable docker</span><br></pre></td></tr></table></figure><h4 id="3-1-5-创建相关目录"><a href="#3-1-5-创建相关目录" class="headerlink" title="3.1.5 创建相关目录"></a>3.1.5 创建相关目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建安装包存储目录</span></span><br><span class="line">mkdir  /data/&#123;install,ssl_config&#125; -p</span><br><span class="line">mkdir /data/ssl_config/&#123;etcd,kubernetes&#125;  -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建安装目录</span></span><br><span class="line">mkdir /cloud/k8s/etcd/&#123;bin,cfg,ssl&#125; -p</span><br><span class="line">mkdir /cloud/k8s/kubernetes/&#123;bin,cfg,ssl&#125; -p</span><br></pre></td></tr></table></figure><h4 id="3-1-6-SSH-互信配置"><a href="#3-1-6-SSH-互信配置" class="headerlink" title="3.1.6 SSH 互信配置"></a>3.1.6 SSH 互信配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">添加hoosts解析</span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.220.110 k8s-1</span><br><span class="line">192.168.220.120 k8s-2</span><br><span class="line">192.168.220.130 k8s-3</span><br><span class="line">EOF</span><br><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id  k8s-1</span><br><span class="line">ssh-copy-id  k8s-2</span><br><span class="line">ssh-copy-id  k8s-3</span><br></pre></td></tr></table></figure><h4 id="3-1-7-添加-PATH-变量"><a href="#3-1-7-添加-PATH-变量" class="headerlink" title="3.1.7 添加 PATH 变量"></a>3.1.7 添加 PATH 变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/profile &lt;&lt; EOF</span><br><span class="line">export PATH=$PATH:/cloud/k8s/etcd/bin/:/cloud/k8s/kubernetes/bin/</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /etc/profile.d/k8s.sh</span><br><span class="line">NODE_IP=192.168.220.110   #当前节点ip</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="3-2-创建ssl证书"><a href="#3-2-创建ssl证书" class="headerlink" title="3.2 创建ssl证书"></a>3.2 创建ssl证书</h3><h4 id="3-2-1-安装及配置CFSSL"><a href="#3-2-1-安装及配置CFSSL" class="headerlink" title="3.2.1 安装及配置CFSSL"></a>3.2.1 安装及配置CFSSL</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//</span>pkg.cfssl.org<span class="regexp">/R1.2/</span>cfssl_linux-amd64</span><br><span class="line">wget https:<span class="regexp">//</span>pkg.cfssl.org<span class="regexp">/R1.2/</span>cfssljson_linux-amd64</span><br><span class="line">wget https:<span class="regexp">//</span>pkg.cfssl.org<span class="regexp">/R1.2/</span>cfssl-certinfo_linux-amd64</span><br><span class="line">chmod +x cfssl_linux-amd64 cfssljson_linux-amd64 cfssl-certinfo_linux-amd64</span><br><span class="line">mv cfssl_linux-amd64 <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>cfssl</span><br><span class="line">mv cfssljson_linux-amd64 <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>cfssljson</span><br><span class="line">mv cfssl-certinfo_linux-amd64 <span class="regexp">/usr/</span>bin<span class="regexp">/cfssl-certinfo</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-创建-ETCD-相关证书"><a href="#3-2-2-创建-ETCD-相关证书" class="headerlink" title="3.2.2 创建 ETCD 相关证书"></a>3.2.2 创建 ETCD 相关证书</h4><p>以下操作均在/data/ssl_config/etcd/目录中<br><strong>etcd证书ca配置</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /data/ssl_config/etcd/</span><br><span class="line"></span><br><span class="line"><span class="keyword">cat</span> &lt;&lt; EOF | tee <span class="keyword">ca</span>-config.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"signing"</span>: &#123;</span><br><span class="line">    <span class="string">"default"</span>: &#123;</span><br><span class="line">      <span class="string">"expiry"</span>: <span class="string">"876000h"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"profiles"</span>: &#123;</span><br><span class="line">      <span class="string">"www"</span>: &#123;</span><br><span class="line">         <span class="string">"expiry"</span>: <span class="string">"876000h"</span>,</span><br><span class="line">         <span class="string">"usages"</span>: [</span><br><span class="line">            <span class="string">"signing"</span>,</span><br><span class="line">            <span class="string">"key encipherment"</span>,</span><br><span class="line">            <span class="string">"server auth"</span>,</span><br><span class="line">            <span class="string">"client auth"</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>创建 ETCD CA 配置文件</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &lt;&lt; EOF | tee <span class="keyword">ca</span>-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"etcd CA"</span>,</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="string">"L"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">            <span class="string">"ST"</span>: <span class="string">"Beijing"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>创建 ETCD Server 证书</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF | tee <span class="keyword">server</span>-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    "CN": "etcd",</span><br><span class="line">    "hosts": [</span><br><span class="line">    "k8s-3",</span><br><span class="line">    "k8s-2",</span><br><span class="line">    "k8s-1",</span><br><span class="line">    "192.168.220.110",</span><br><span class="line">    "192.168.220.120",</span><br><span class="line">    "192.168.220.130"</span><br><span class="line">    ],</span><br><span class="line">    "key": &#123;</span><br><span class="line">        "algo": "rsa",</span><br><span class="line">        "size": <span class="number">2048</span></span><br><span class="line">    &#125;,</span><br><span class="line">    "names": [</span><br><span class="line">        &#123;</span><br><span class="line">            "C": "CN",</span><br><span class="line">            "L": "Beijing",</span><br><span class="line">            "ST": "Beijing"</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>生成 ETCD CA 证书和私钥</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /data/ssl_config/etcd/</span><br><span class="line"><span class="comment"># 生成ca证书</span></span><br><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</span><br><span class="line"><span class="comment"># 生成server证书</span></span><br><span class="line">cfssl gencert <span class="attribute">-ca</span>=ca.pem \</span><br><span class="line"><span class="attribute">-ca-key</span>=ca-key.pem \</span><br><span class="line"><span class="attribute">-config</span>=ca-config.json \</span><br><span class="line"><span class="attribute">-profile</span>=www server-csr.json | cfssljson -bare server</span><br></pre></td></tr></table></figure><h4 id="3-2-3-创建-Kubernetes-相关证书"><a href="#3-2-3-创建-Kubernetes-相关证书" class="headerlink" title="3.2.3 创建 Kubernetes 相关证书"></a>3.2.3 创建 Kubernetes 相关证书</h4><p>以下操作均在/data/ssl_config/kubernetes/目录中<br><strong>kubernetes 证书ca配置</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /data/ssl_config/kubernetes/</span><br><span class="line"><span class="keyword">cat</span> &lt;&lt; EOF | tee <span class="keyword">ca</span>-config.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"signing"</span>: &#123;</span><br><span class="line">    <span class="string">"default"</span>: &#123;</span><br><span class="line">      <span class="string">"expiry"</span>: <span class="string">"876000h"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"profiles"</span>: &#123;</span><br><span class="line">      <span class="string">"kubernetes"</span>: &#123;</span><br><span class="line">         <span class="string">"expiry"</span>: <span class="string">"876000h"</span>,</span><br><span class="line">         <span class="string">"usages"</span>: [</span><br><span class="line">            <span class="string">"signing"</span>,</span><br><span class="line">            <span class="string">"key encipherment"</span>,</span><br><span class="line">            <span class="string">"server auth"</span>,</span><br><span class="line">            <span class="string">"client auth"</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>创建ca证书配置</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &lt;&lt; EOF | tee <span class="keyword">ca</span>-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"kubernetes"</span>,</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="string">"L"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">            <span class="string">"ST"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">            <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">            <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>生成API_SERVER证书</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF | tee <span class="keyword">server</span>-csr.json</span><br><span class="line">&#123;</span><br><span class="line">    "CN": "kubernetes",</span><br><span class="line">    "hosts": [</span><br><span class="line">      "10.0.0.1",</span><br><span class="line">      "127.0.0.1",</span><br><span class="line">      "192.168.220.110",</span><br><span class="line">      "k8s-1",</span><br><span class="line">      "kubernetes",</span><br><span class="line">      "kubernetes.default",</span><br><span class="line">      "kubernetes.default.svc",</span><br><span class="line">      "kubernetes.default.svc.cluster",</span><br><span class="line">      "kubernetes.default.svc.cluster.local"</span><br><span class="line">    ],</span><br><span class="line">    "key": &#123;</span><br><span class="line">        "algo": "rsa",</span><br><span class="line">        "size": <span class="number">2048</span></span><br><span class="line">    &#125;,</span><br><span class="line">    "names": [</span><br><span class="line">        &#123;</span><br><span class="line">            "C": "CN",</span><br><span class="line">            "L": "Beijing",</span><br><span class="line">            "ST": "Beijing",</span><br><span class="line">            "O": "k8s",</span><br><span class="line">            "OU": "System"</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>创建 Kubernetes Proxy 证书</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; <span class="symbol">EOF</span> | tee kube-proxy-csr.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"system:kube-proxy"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: <span class="number">2048</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"Beijing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="symbol">EOF</span></span><br></pre></td></tr></table></figure><p>生成 <strong>kubernetes</strong> CA 证书和私钥</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成ca证书</span></span><br><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</span><br><span class="line"><span class="comment"># 生成 api-server 证书</span></span><br><span class="line">cfssl gencert <span class="attribute">-ca</span>=ca.pem <span class="attribute">-ca-key</span>=ca-key.pem <span class="attribute">-config</span>=ca-config.json <span class="attribute">-profile</span>=kubernetes server-csr.json | cfssljson -bare server</span><br><span class="line"><span class="comment"># 生成 kube-proxy 证书</span></span><br><span class="line">cfssl gencert <span class="attribute">-ca</span>=ca.pem <span class="attribute">-ca-key</span>=ca-key.pem <span class="attribute">-config</span>=ca-config.json <span class="attribute">-profile</span>=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy</span><br></pre></td></tr></table></figure><h3 id="3-3-部署etcd"><a href="#3-3-部署etcd" class="headerlink" title="3.3 部署etcd"></a>3.3 部署etcd</h3><h4 id="3-3-1-配置软件包"><a href="#3-3-1-配置软件包" class="headerlink" title="3.3.1 配置软件包"></a>3.3.1 配置软件包</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /data/install/</span><br><span class="line">tar -xvf etcd-v3<span class="number">.3</span><span class="number">.10</span>-linux-amd64.tar.gz</span><br><span class="line">cd etcd-v3<span class="number">.3</span><span class="number">.10</span>-linux-amd64/</span><br><span class="line">cp etcd etcdctl /cloud/k8s/etcd/bin/</span><br></pre></td></tr></table></figure><h4 id="3-3-2-编辑etcd配置文件"><a href="#3-3-2-编辑etcd配置文件" class="headerlink" title="3.3.2 编辑etcd配置文件"></a>3.3.2 编辑etcd配置文件</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim /cloud/k8s/etcd/cfg/etcd</span><br><span class="line"><span class="attribute">NODE_IP</span>=192.168.220.110</span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line"><span class="attribute">ETCD_NAME</span>=<span class="string">"etcd01"</span></span><br><span class="line"><span class="attribute">ETCD_DATA_DIR</span>=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_PEER_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2380"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_CLIENT_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2379"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_ADVERTISE_PEER_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2380"</span></span><br><span class="line"><span class="attribute">ETCD_ADVERTISE_CLIENT_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2379"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER</span>=<span class="string">"etcd01=https://192.168.220.110:2380,etcd02=https://192.168.220.120:2380,etcd03=https://192.168.220.130:2380"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_TOKEN</span>=<span class="string">"etcd-cluster"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_STATE</span>=<span class="string">"new"</span></span><br></pre></td></tr></table></figure><h4 id="3-3-3-创建-etcd的-systemd-unit-文件"><a href="#3-3-3-创建-etcd的-systemd-unit-文件" class="headerlink" title="3.3.3 创建 etcd的 systemd unit 文件"></a>3.3.3 创建 etcd的 systemd unit 文件</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/etcd.service</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Etcd Server</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"><span class="attribute">After</span>=network-online.target</span><br><span class="line"><span class="attribute">Wants</span>=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=notify</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/k8s/bin/etcd \</span><br><span class="line"><span class="attribute">--name</span>=<span class="variable">$&#123;ETCD_NAME&#125;</span> \</span><br><span class="line"><span class="attribute">--data-dir</span>=<span class="variable">$&#123;ETCD_DATA_DIR&#125;</span> \</span><br><span class="line"><span class="attribute">--listen-peer-urls</span>=<span class="variable">$&#123;ETCD_LISTEN_PEER_URLS&#125;</span> \</span><br><span class="line"><span class="attribute">--listen-client-urls</span>=<span class="variable">$&#123;ETCD_LISTEN_CLIENT_URLS&#125;</span>,http://127.0.0.1:2379 \</span><br><span class="line"><span class="attribute">--advertise-client-urls</span>=<span class="variable">$&#123;ETCD_ADVERTISE_CLIENT_URLS&#125;</span> \</span><br><span class="line"><span class="attribute">--initial-advertise-peer-urls</span>=<span class="variable">$&#123;ETCD_INITIAL_ADVERTISE_PEER_URLS&#125;</span> \</span><br><span class="line"><span class="attribute">--initial-cluster</span>=<span class="variable">$&#123;ETCD_INITIAL_CLUSTER&#125;</span> \</span><br><span class="line"><span class="attribute">--initial-cluster-token</span>=<span class="variable">$&#123;ETCD_INITIAL_CLUSTER_TOKEN&#125;</span> \</span><br><span class="line"><span class="attribute">--initial-cluster-state</span>=new \</span><br><span class="line"><span class="attribute">--cert-file</span>=/cloud/k8s/etcd/ssl/server.pem \</span><br><span class="line"><span class="attribute">--key-file</span>=/cloud/k8s/etcd/ssl/server-key.pem \</span><br><span class="line"><span class="attribute">--peer-cert-file</span>=/cloud/k8s/etcd/ssl/server.pem \</span><br><span class="line"><span class="attribute">--peer-key-file</span>=/cloud/k8s/etcd/ssl/server-key.pem \</span><br><span class="line"><span class="attribute">--trusted-ca-file</span>=/cloud/k8s/etcd/ssl/ca.pem \</span><br><span class="line"><span class="attribute">--peer-trusted-ca-file</span>=/cloud/k8s/etcd/ssl/ca.pem</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"><span class="attribute">LimitNOFILE</span>=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="3-3-4-配置证书文件"><a href="#3-3-4-配置证书文件" class="headerlink" title="3.3.4 配置证书文件"></a>3.3.4 配置证书文件</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/data/</span>ssl_config<span class="regexp">/etcd/</span></span><br><span class="line">cp ca*pem server*pem <span class="regexp">/cloud/</span>k8s<span class="regexp">/etcd/</span>ssl</span><br></pre></td></tr></table></figure><h4 id="3-3-5-配置文件拷贝到-节点1、节点2"><a href="#3-3-5-配置文件拷贝到-节点1、节点2" class="headerlink" title="3.3.5 配置文件拷贝到 节点1、节点2"></a>3.3.5 配置文件拷贝到 节点1、节点2</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /cloud/k8s/ </span><br><span class="line">scp -r etcd k8s<span class="number">-2</span><span class="symbol">:/cloud/k8s/</span></span><br><span class="line">scp -r etcd k8s<span class="number">-3</span><span class="symbol">:/cloud/k8s/</span></span><br><span class="line">scp /usr/lib/systemd/system/etcd.service  k8s<span class="number">-2</span><span class="symbol">:/usr/lib/systemd/system/etcd</span>.service</span><br><span class="line">scp /usr/lib/systemd/system/etcd.service  k8s<span class="number">-3</span><span class="symbol">:/usr/lib/systemd/system/etcd</span>.service</span><br></pre></td></tr></table></figure><p>修改另外两台机器配置文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### k8s-2 </span></span><br><span class="line">cat &gt; /cloud/k8s/etcd/cfg/etcd &lt;&lt; EOF</span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line"><span class="attribute">ETCD_NAME</span>=<span class="string">"etcd02"</span></span><br><span class="line"><span class="attribute">ETCD_DATA_DIR</span>=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_PEER_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2380"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_CLIENT_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2379"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_ADVERTISE_PEER_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2380"</span></span><br><span class="line"><span class="attribute">ETCD_ADVERTISE_CLIENT_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2379"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER</span>=<span class="string">"etcd01=https://192.168.220.110:2380,etcd02=https://192.168.220.120:2380,etcd03=https://192.168.220.130:2380"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_TOKEN</span>=<span class="string">"etcd-cluster"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_STATE</span>=<span class="string">"new"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">### k8s-3 </span></span><br><span class="line">cat &gt; /cloud/k8s/etcd/cfg/etcd &lt;&lt; EOF</span><br><span class="line"><span class="attribute">NODE_IP</span>=192.168.220.130</span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line"><span class="attribute">ETCD_NAME</span>=<span class="string">"etcd03"</span></span><br><span class="line"><span class="attribute">ETCD_DATA_DIR</span>=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_PEER_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2380"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_CLIENT_URLS</span>=<span class="string">"https://<span class="variable">$&#123;NODE_IP&#125;</span>:2379"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_ADVERTISE_PEER_URLS</span>=<span class="string">"https://192.168.220.130:2380"</span></span><br><span class="line"><span class="attribute">ETCD_ADVERTISE_CLIENT_URLS</span>=<span class="string">"https://192.168.220.130:2379"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER</span>=<span class="string">"etcd01=https://192.168.220.110:2380,etcd02=https://192.168.220.120:2380,etcd03=https://192.168.220.130:2380"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_TOKEN</span>=<span class="string">"etcd-cluster"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_STATE</span>=<span class="string">"new"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>另外两台机器配置完成后，启动etcd服务，三台都需启动。</p><h4 id="3-3-6-启动ETCD服务"><a href="#3-3-6-启动ETCD服务" class="headerlink" title="3.3.6 启动ETCD服务"></a>3.3.6 启动ETCD服务</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable etcd</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start etcd</span></span><br><span class="line"><span class="comment">#启动ETCD集群同时启动二个节点，单节点是无法正常启动的。</span></span><br></pre></td></tr></table></figure><h4 id="3-3-7-检查服务是否正常"><a href="#3-3-7-检查服务是否正常" class="headerlink" title="3.3.7 检查服务是否正常"></a>3.3.7 检查服务是否正常</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /cloud/k8s/etcd/bin] master</span><br><span class="line">etcdctl --ca-file=/cloud/k8s/etcd/ssl/ca.pem --cert-file=/cloud/k8s/etcd/ssl/server.pem --key-file=/cloud/k8s/etcd/ssl/server-key.pem --endpoints=<span class="string">"https://192.168.220.110:2379,https://192.168.220.120:2379,https://192.168.220.130:2379"</span>  cluster-health</span><br><span class="line">member <span class="number">4</span>c6bfb873a73368c <span class="keyword">is</span> healthy: got healthy result <span class="keyword">from</span> https:<span class="comment">//192.168.123.213:2379</span></span><br><span class="line">member <span class="number">622f</span>71dbd55b34ce <span class="keyword">is</span> healthy: got healthy result <span class="keyword">from</span> https:<span class="comment">//192.168.123.211:2379</span></span><br><span class="line">member f14004aa5403b07d <span class="keyword">is</span> healthy: got healthy result <span class="keyword">from</span> https:<span class="comment">//192.168.123.212:2379</span></span><br><span class="line">cluster <span class="keyword">is</span> healthy</span><br></pre></td></tr></table></figure><h3 id="3-4-部署Flannel网络"><a href="#3-4-部署Flannel网络" class="headerlink" title="3.4 部署Flannel网络"></a>3.4 部署Flannel网络</h3><h4 id="3-4-1-向-etcd-写入集群-Pod-网段信息"><a href="#3-4-1-向-etcd-写入集群-Pod-网段信息" class="headerlink" title="3.4.1 向 etcd 写入集群 Pod 网段信息"></a>3.4.1 向 etcd 写入集群 Pod 网段信息</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="keyword">cd</span> <span class="string">/cloud/k8s/etcd/ssl/</span></span><br><span class="line">etcdctl <span class="params">--ca-file=ca</span>.pem <span class="params">--cert-file=server</span>.pem <span class="params">--key-file=server-key</span>.pem \</span><br><span class="line"><span class="params">--endpoints=</span><span class="string">"https://192.168.220.110:2379,https://192.168.220.120:2379,https://192.168.220.130:2379"</span> \</span><br><span class="line"><span class="keyword">set</span> <span class="string">/coreos.com/network/config</span>  \</span><br><span class="line">'&#123; <span class="string">"Network"</span>: <span class="string">"172.18.0.0/16"</span>, <span class="string">"Backend"</span>: &#123;<span class="string">"Type"</span>: <span class="string">"vxlan"</span>&#125;&#125;'</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">写入的 Pod 网段 $&#123;CLUSTER_CIDR&#125; 必须是 <span class="string">/16</span> 段地址，必须与 kube-controller-manager 的 <span class="params">--cluster-cidr</span> 参数值一致；</span><br></pre></td></tr></table></figure></blockquote><h4 id="3-4-2-部署-flannel"><a href="#3-4-2-部署-flannel" class="headerlink" title="3.4.2 部署 flannel"></a>3.4.2 部署 flannel</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="meta-keyword">/data/</span>install/</span><br><span class="line">tar xf  flannel-v0<span class="number">.11</span><span class="number">.0</span>-linux-amd64.tar.gz</span><br><span class="line">mv flanneld mk-docker-opts.sh <span class="meta-keyword">/cloud/</span>k8s<span class="meta-keyword">/kubernetes/</span>bin/</span><br></pre></td></tr></table></figure><h4 id="3-5-3-配置flannel"><a href="#3-5-3-配置flannel" class="headerlink" title="3.5.3 配置flannel"></a>3.5.3 配置flannel</h4><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim  /cloud/k8s/kubernetes/cfg/flanneld</span><br><span class="line"><span class="attr">FLANNEL_OPTIONS="--etcd-endpoints=https://192.168.220.110:2379,https://192.168.220.120:2379,https://192.168.220.130:2379</span> <span class="attr">-etcd-cafile=/cloud/k8s/etcd/ssl/ca.pem</span> <span class="attr">-etcd-certfile=/cloud/k8s/etcd/ssl/server.pem</span> <span class="attr">-etcd-keyfile=/cloud/k8s/etcd/ssl/server-key.pem"</span></span><br></pre></td></tr></table></figure><h4 id="3-5-4-创建-flanneld-的-systemd-unit-文件"><a href="#3-5-4-创建-flanneld-的-systemd-unit-文件" class="headerlink" title="3.5.4 创建 flanneld 的 systemd unit 文件"></a>3.5.4 创建 flanneld 的 systemd unit 文件</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/flanneld.service</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Flanneld overlay<span class="built_in"> address </span>etcd agent</span><br><span class="line"><span class="attribute">After</span>=network-online.target network.target</span><br><span class="line"><span class="attribute">Before</span>=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=notify</span><br><span class="line"><span class="attribute">EnvironmentFile</span>=/cloud/k8s/kubernetes/cfg/flanneld</span><br><span class="line"><span class="attribute">ExecStart</span>=/cloud/k8s/kubernetes/bin/flanneld --ip-masq <span class="variable">$FLANNEL_OPTIONS</span></span><br><span class="line"><span class="attribute">ExecStartPost</span>=/cloud/k8s/kubernetes/bin/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS -d /run/flannel/subnet.env</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mk-docker-opts.sh 脚本将分配给 flanneld 的 Pod 子网网段信息写入 /<span class="keyword">run</span><span class="bash">/flannel/docker 文件，后续 docker 启动时 使用这个文件中的环境变量配置 docker0 网桥；</span></span><br></pre></td></tr></table></figure><p>flanneld 使用系统缺省路由所在的接口与其它节点通信，对于有多个网络接口（如内网和公网）的节点，可以用 -iface 参数指定通信接口，如上面的 eth0 接口;<br>flanneld 运行时需要 root 权限；</p></blockquote><h4 id="3-5-5-配置Docker启动指定子网段"><a href="#3-5-5-配置Docker启动指定子网段" class="headerlink" title="3.5.5 配置Docker启动指定子网段"></a>3.5.5 配置Docker启动指定子网段</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/docker.service</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Docker Application Container Engine</span><br><span class="line"><span class="attribute">Documentation</span>=https://docs.docker.com</span><br><span class="line"><span class="attribute">After</span>=network-online.target firewalld.service</span><br><span class="line"><span class="attribute">Wants</span>=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=notify</span><br><span class="line"><span class="attribute">EnvironmentFile</span>=/run/flannel/subnet.env</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/bin/dockerd  <span class="variable">$DOCKER_NETWORK_OPTIONS</span></span><br><span class="line"><span class="attribute">ExecReload</span>=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attribute">LimitNOFILE</span>=infinity</span><br><span class="line"><span class="attribute">LimitNPROC</span>=infinity</span><br><span class="line"><span class="attribute">LimitCORE</span>=infinity</span><br><span class="line"><span class="attribute">TimeoutStartSec</span>=0</span><br><span class="line"><span class="attribute">Delegate</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">KillMode</span>=process</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"><span class="attribute">StartLimitBurst</span>=3</span><br><span class="line"><span class="attribute">StartLimitInterval</span>=60s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="3-5-6-将flanneld-systemd-unit-文件到所有节点"><a href="#3-5-6-将flanneld-systemd-unit-文件到所有节点" class="headerlink" title="3.5.6 将flanneld systemd unit 文件到所有节点"></a>3.5.6 将flanneld systemd unit 文件到所有节点</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cd /cloud/k8s/</span><br><span class="line">scp -r kubernetes k8s<span class="number">-2</span><span class="symbol">:/cloud/k8s/</span></span><br><span class="line">scp -r kubernetes k8s<span class="number">-3</span><span class="symbol">:/cloud/k8s/</span></span><br><span class="line">scp /cloud/k8s/kubernetes/cfg/flanneld  k8s<span class="number">-2</span><span class="symbol">:/cloud/k8s/kubernetes/cfg/flanneld</span></span><br><span class="line">scp /cloud/k8s/kubernetes/cfg/flanneld  k8s<span class="number">-3</span><span class="symbol">:/cloud/k8s/kubernetes/cfg/flanneld</span></span><br><span class="line">scp /usr/lib/systemd/system/docker.service    k8s<span class="number">-2</span><span class="symbol">:/usr/lib/systemd/system/docker</span>.service </span><br><span class="line">scp /usr/lib/systemd/system/docker.service    k8s<span class="number">-3</span><span class="symbol">:/usr/lib/systemd/system/docker</span>.service</span><br><span class="line">scp /usr/lib/systemd/system/flanneld.service  k8s<span class="number">-2</span><span class="symbol">:/usr/lib/systemd/system/flanneld</span>.service </span><br><span class="line">scp /usr/lib/systemd/system/flanneld.service  k8s<span class="number">-3</span><span class="symbol">:/usr/lib/systemd/system/flanneld</span>.service </span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务(每台节点都操作)</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start flanneld</span><br><span class="line">systemctl enable flanneld</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="3-5-7-验证fannel网络配置"><a href="#3-5-7-验证fannel网络配置" class="headerlink" title="3.5.7 验证fannel网络配置"></a>3.5.7 验证fannel网络配置</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /data/install] master</span><br><span class="line"># ip a</span><br><span class="line"><span class="number">1</span>: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu <span class="number">65536</span> qdisc noqueue state UNKNOWN group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/loopback <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> brd <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">    inet <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/<span class="number">8</span> scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">2</span>: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc mq state UP group <span class="keyword">default</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">33</span>:de:<span class="number">53</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet <span class="number">192.168</span><span class="number">.123</span><span class="number">.211</span>/<span class="number">24</span> brd <span class="number">192.168</span><span class="number">.123</span><span class="number">.255</span> scope global noprefixroute eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">3</span>: flannel<span class="number">.1</span>: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1450</span> qdisc noqueue state UNKNOWN group <span class="keyword">default</span></span><br><span class="line">    link/ether <span class="number">1</span>a:<span class="number">6f</span>:<span class="number">5</span>a:<span class="number">0</span>b:c7:<span class="number">18</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet <span class="number">172.18</span><span class="number">.30</span><span class="number">.0</span>/<span class="number">32</span> scope global flannel<span class="number">.1</span></span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="number">4</span>: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu <span class="number">1500</span> qdisc noqueue state DOWN group <span class="keyword">default</span></span><br><span class="line">    link/ether <span class="number">02</span>:<span class="number">42</span>:<span class="number">5</span>c:d0:df:e6 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet <span class="number">172.18</span><span class="number">.30</span><span class="number">.1</span>/<span class="number">24</span> brd <span class="number">172.18</span><span class="number">.30</span><span class="number">.255</span> scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h3 id="3-5-部署-master-节点"><a href="#3-5-部署-master-节点" class="headerlink" title="3.5 部署 master 节点"></a>3.5 部署 master 节点</h3><blockquote><p>kubernetes master 节点运行如下组件：<br>kube-apiserver<br>kube-scheduler<br>kube-controller-manager<br>kube-scheduler 和 kube-controller-manager 可以以集群模式运行，通过 leader 选举产生一个工作进程，其它进程处于阻塞模式。</p></blockquote><h4 id="3-5-1-配置-master-节点文件"><a href="#3-5-1-配置-master-节点文件" class="headerlink" title="3.5.1 配置 master 节点文件"></a>3.5.1 配置 master 节点文件</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /data/<span class="keyword">install</span>/</span><br><span class="line">tar xf kubernetes-<span class="keyword">server</span>-linux-amd64.tar.gz </span><br><span class="line">cd kubernetes/<span class="keyword">server</span>/<span class="keyword">bin</span>/</span><br><span class="line">cp kube-scheduler kube-apiserver kube-controller-manager kubectl /cloud/k8s/kubernetes/<span class="keyword">bin</span>/</span><br></pre></td></tr></table></figure><h4 id="3-5-2-配置-kubernetes相关证书"><a href="#3-5-2-配置-kubernetes相关证书" class="headerlink" title="3.5.2 配置 kubernetes相关证书"></a>3.5.2 配置 kubernetes相关证书</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/data/</span>ssl_config<span class="regexp">/kubernetes/</span></span><br><span class="line">cp *pem <span class="regexp">/cloud/</span>k8s<span class="regexp">/kubernetes/</span>ssl<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h4 id="3-5-3-部署-kube-apiserver-组件"><a href="#3-5-3-部署-kube-apiserver-组件" class="headerlink" title="3.5.3 部署 kube-apiserver 组件"></a>3.5.3 部署 kube-apiserver 组件</h4><p><strong>创建 TLS Bootstrapping Token</strong></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># head -<span class="keyword">c</span> <span class="number">16</span> /dev/urandom | od -An -t <span class="keyword">x</span> | tr -d ' '</span><br><span class="line"><span class="number">619</span>bd<span class="number">8</span>a<span class="number">5</span>bcfc<span class="number">6</span>bcde<span class="number">109</span>d<span class="number">710</span>d<span class="number">9</span>a<span class="number">02</span><span class="keyword">cc</span><span class="number">4</span></span><br><span class="line"></span><br><span class="line"># vim /cloud/k<span class="number">8</span>s/kubernetes/cfg/token.csv</span><br><span class="line"><span class="number">619</span>bd<span class="number">8</span>a<span class="number">5</span>bcfc<span class="number">6</span>bcde<span class="number">109</span>d<span class="number">710</span>d<span class="number">9</span>a<span class="number">02</span><span class="keyword">cc</span><span class="number">4</span>,kubelet-bootstrap,<span class="number">10001</span>,<span class="string">"system:kubelet-bootstrap"</span></span><br></pre></td></tr></table></figure><p><strong>创建apiserver配置文件</strong></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /cloud/k8s/kubernetes/cfg/kube-apiserver &lt;&lt; EOF</span><br><span class="line">KUBE_APISERVER_OPTS="--logtostderr=true \</span><br><span class="line">-<span class="ruby">-v=<span class="number">4</span> \</span></span><br><span class="line"><span class="ruby">--etcd-servers=<span class="symbol">https:</span>/<span class="regexp">/192.168.220.110:2379,https:/</span><span class="regexp">/192.168.220.120:2379,https:/</span><span class="regexp">/192.168.220.130:2379 \</span></span></span><br><span class="line"><span class="ruby">--bind-address=<span class="number">192.168</span>.<span class="number">220.110</span> \</span></span><br><span class="line"><span class="ruby">--secure-port=<span class="number">6443</span> \</span></span><br><span class="line"><span class="ruby">--advertise-address=<span class="number">192.168</span>.<span class="number">220.110</span> \</span></span><br><span class="line"><span class="ruby">--allow-privileged=<span class="literal">true</span> \</span></span><br><span class="line"><span class="ruby">--service-cluster-ip-range=<span class="number">10.0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">24</span> \</span></span><br><span class="line"><span class="ruby">--insecure-bind-address=* \</span></span><br><span class="line"><span class="ruby">--enable-admission-plugins=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,NodeRestriction \</span></span><br><span class="line"><span class="ruby">--authorization-mode=RBAC,Node \</span></span><br><span class="line"><span class="ruby">--enable-bootstrap-token-auth \</span></span><br><span class="line"><span class="ruby">--token-auth-file=<span class="regexp">/cloud/k</span>8s/kubernetes/cfg/token.csv \</span></span><br><span class="line"><span class="ruby">--service-node-port-range=<span class="number">30000</span>-<span class="number">50000</span> \</span></span><br><span class="line"><span class="ruby">--tls-cert-file=<span class="regexp">/cloud/k</span>8s/kubernetes/ssl/server.pem  \</span></span><br><span class="line"><span class="ruby">--tls-private-key-file=<span class="regexp">/cloud/k</span>8s/kubernetes/ssl/server-key.pem \</span></span><br><span class="line"><span class="ruby">--client-ca-file=<span class="regexp">/cloud/k</span>8s/kubernetes/ssl/ca.pem \</span></span><br><span class="line"><span class="ruby">--service-account-key-file=<span class="regexp">/cloud/k</span>8s/kubernetes/ssl/ca-key.pem \</span></span><br><span class="line"><span class="ruby">--etcd-cafile=<span class="regexp">/cloud/k</span>8s/etcd/ssl/ca.pem \</span></span><br><span class="line"><span class="ruby">--etcd-certfile=<span class="regexp">/cloud/k</span>8s/etcd/ssl/server.pem \</span></span><br><span class="line"><span class="ruby">--etcd-keyfile=<span class="regexp">/cloud/k</span>8s/etcd/ssl/server-key.pem<span class="string">"</span></span></span><br><span class="line"><span class="ruby">EOF</span></span><br></pre></td></tr></table></figure><p><strong>创建 kube-apiserver systemd unit 文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-apiserver.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Kubernetes API Server</span><br><span class="line"><span class="attribute">Documentation</span>=https://github.com/kubernetes/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/k8s/bin/kube-apiserver \\</span><br><span class="line"><span class="attribute">--logtostderr</span>=<span class="literal">true</span> \\</span><br><span class="line"><span class="attribute">--v</span>=4 \\</span><br><span class="line"><span class="attribute">--etcd-servers</span>=<span class="variable">$&#123;ETCD_ENDPOINTS&#125;</span> \\</span><br><span class="line"><span class="attribute">--bind-address</span>=<span class="variable">$&#123;NODE_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--secure-port</span>=6443 \\</span><br><span class="line"><span class="attribute">--advertise-address</span>=<span class="variable">$&#123;NODE_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--allow-privileged</span>=<span class="literal">true</span> \\</span><br><span class="line"><span class="attribute">--service-cluster-ip-range</span>=<span class="variable">$&#123;SERVICE_CIDR&#125;</span> \\</span><br><span class="line"><span class="attribute">--insecure-bind-address</span>=<span class="variable">$&#123;NODE_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--enable-admission-plugins</span>=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,NodeRestriction \\</span><br><span class="line"><span class="attribute">--authorization-mode</span>=RBAC,Node \\</span><br><span class="line">--enable-bootstrap-token-auth \\</span><br><span class="line"><span class="attribute">--token-auth-file</span>=/etc/kubernetes/token.csv \\</span><br><span class="line"><span class="attribute">--service-node-port-range</span>=30000-50000 \\</span><br><span class="line"><span class="attribute">--tls-cert-file</span>=/etc/kubernetes/ssl/kubernetes.pem  \\</span><br><span class="line"><span class="attribute">--tls-private-key-file</span>=/etc/kubernetes/ssl/kubernetes-key.pem \\</span><br><span class="line"><span class="attribute">--client-ca-file</span>=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line"><span class="attribute">--service-account-key-file</span>=/etc/kubernetes/ssl/ca-key.pem \\</span><br><span class="line"><span class="attribute">--etcd-cafile</span>=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line"><span class="attribute">--etcd-certfile</span>=/etc/kubernetes/ssl/kubernetes.pem \\</span><br><span class="line"><span class="attribute">--etcd-keyfile</span>=/etc/kubernetes/ssl/kubernetes-key.pem</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>启动服务</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable kube-apiserver</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart kube-apiserver</span></span><br></pre></td></tr></table></figure><p><strong>查看apiserver是否运行</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-1 /data/ssl_config/kubernetes] master</span><br><span class="line"><span class="comment"># ps -ef |grep kube-apiserver</span></span><br><span class="line">root      5475     1  2 7月30 ?       01:57:41 /cloud/k8s/kubernetes/bin/kube-apiserver <span class="attribute">--logtostderr</span>=<span class="literal">true</span> <span class="attribute">--v</span>=4 <span class="attribute">--etcd-servers</span>=https://192.168.123.211:2379,https://192.168.123.212:2379,https://192.168.123.213:2379 <span class="attribute">--bind-address</span>=192.168.123.211 <span class="attribute">--secure-port</span>=6443 <span class="attribute">--advertise-address</span>=192.168.123.211 <span class="attribute">--allow-privileged</span>=<span class="literal">true</span> <span class="attribute">--service-cluster-ip-range</span>=10.0.0.0/24 <span class="attribute">--enable-admission-plugins</span>=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota,NodeRestriction <span class="attribute">--authorization-mode</span>=RBAC,Node --enable-bootstrap-token-auth <span class="attribute">--token-auth-file</span>=/cloud/k8s/kubernetes/cfg/token.csv <span class="attribute">--service-node-port-range</span>=30000-50000 <span class="attribute">--tls-cert-file</span>=/cloud/k8s/kubernetes/ssl/server.pem <span class="attribute">--tls-private-key-file</span>=/cloud/k8s/kubernetes/ssl/server-key.pem <span class="attribute">--client-ca-file</span>=/cloud/k8s/kubernetes/ssl/ca.pem <span class="attribute">--service-account-key-file</span>=/cloud/k8s/kubernetes/ssl/ca-key.pem <span class="attribute">--etcd-cafile</span>=/cloud/k8s/etcd/ssl/ca.pem <span class="attribute">--etcd-certfile</span>=/cloud/k8s/etcd/ssl/server.pem <span class="attribute">--etcd-keyfile</span>=/cloud/k8s/etcd/ssl/server-key.pem</span><br><span class="line">root      6886  2930  0 19:49 pts/0    00:00:00 grep <span class="attribute">--color</span>=auto kube-apiserver</span><br></pre></td></tr></table></figure><h4 id="3-5-4-部署kube-scheduler"><a href="#3-5-4-部署kube-scheduler" class="headerlink" title="3.5.4 部署kube-scheduler"></a>3.5.4 部署kube-scheduler</h4><p><strong>创建kube-scheduler配置文件</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim  <span class="meta-keyword">/cloud/</span>k8s<span class="meta-keyword">/kubernetes/</span>cfg/kube-scheduler</span><br><span class="line">KUBE_SCHEDULER_OPTS=<span class="string">""</span></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--address：在 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">10251</span> 端口接收 http /metrics 请求；kube-scheduler 目前还不支持接收 https 请求；</span><br></pre></td></tr></table></figure><p>–kubeconfig：指定 kubeconfig 文件路径，kube-scheduler 使用它连接和验证 kube-apiserver；<br>–leader-elect=true：集群运行模式，启用选举功能；被选为 leader 的节点负责处理工作，其它节点为阻塞状态；</p></blockquote><p><strong>创建kube-scheduler systemd unit 文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-scheduler.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Kubernetes Scheduler</span><br><span class="line"><span class="attribute">Documentation</span>=https://github.com/kubernetes/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/k8s/bin/kube-scheduler \\</span><br><span class="line"><span class="attribute">--logtostderr</span>=<span class="literal">true</span> \\</span><br><span class="line"><span class="attribute">--v</span>=4 \\</span><br><span class="line"><span class="attribute">--address</span>=127.0.0.1 \\</span><br><span class="line"><span class="attribute">--master</span>=<span class="variable">$&#123;MASTER_URL&#125;</span>:8080 \\</span><br><span class="line">--leader-elect</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>启动kube-scheduler服务</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload </span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable kube-scheduler.service  </span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart kube-scheduler.service</span></span><br></pre></td></tr></table></figure><p><strong>查看kube-scheduler是否运行</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /data/ssl_config/kubernetes] master</span><br><span class="line">#  ps -ef |grep kube-scheduler</span><br><span class="line">root      <span class="number">7269</span>  <span class="number">2930</span>  <span class="number">0</span> <span class="number">19</span>:<span class="number">54</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep --color=<span class="built_in">auto</span> kube-scheduler</span><br><span class="line">root     <span class="number">13970</span>     <span class="number">1</span>  <span class="number">0</span> <span class="number">8</span>月<span class="number">02</span> ?       <span class="number">00</span>:<span class="number">01</span>:<span class="number">21</span> /cloud/k8s/kubernetes/bin/kube-scheduler --logtostderr=<span class="literal">true</span> --v=<span class="number">4</span> --master=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span> --leader-elect</span><br><span class="line"></span><br><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /data/ssl_config/kubernetes] master</span><br><span class="line"># systemctl status kube-scheduler</span><br><span class="line">● kube-scheduler.service - Kubernetes Scheduler</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/kube-scheduler.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 五 <span class="number">2019</span><span class="number">-08</span><span class="number">-02</span> <span class="number">18</span>:<span class="number">33</span>:<span class="number">11</span> CST; <span class="number">1</span> day <span class="number">1</span>h ago</span><br><span class="line">     Docs: https:<span class="comment">//github.com/kubernetes/kubernetes</span></span><br><span class="line"> Main PID: <span class="number">13970</span> (kube-scheduler)</span><br><span class="line">    Tasks: <span class="number">10</span></span><br><span class="line">   Memory: <span class="number">19.1</span>M</span><br><span class="line">   CGroup: /system.slice/kube-scheduler.service</span><br><span class="line">           └─<span class="number">13970</span> /cloud/k8s/kubernetes/bin/kube-scheduler --logtostderr=tru...</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">46</span>:<span class="number">52</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">46</span>:<span class="number">52.580662</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">47</span>:<span class="number">03</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">47</span>:<span class="number">03.578985</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">47</span>:<span class="number">03</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">47</span>:<span class="number">03.583437</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">48</span>:<span class="number">31</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">48</span>:<span class="number">31.637472</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">48</span>:<span class="number">48</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">48</span>:<span class="number">48.617124</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">50</span>:<span class="number">00</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">50</span>:<span class="number">00.589103</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">50</span>:<span class="number">18</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">50</span>:<span class="number">18.616574</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">52</span>:<span class="number">15</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">52</span>:<span class="number">15.629976</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">52</span>:<span class="number">45</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">52</span>:<span class="number">45.580103</span>   <span class="number">13970</span> ...d</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">53</span>:<span class="number">56</span> k8s<span class="number">-1</span> kube-scheduler[<span class="number">13970</span>]: I0803 <span class="number">19</span>:<span class="number">53</span>:<span class="number">56.601687</span>   <span class="number">13970</span> ...d</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br></pre></td></tr></table></figure><h4 id="3-5-5-部署kube-controller-manager"><a href="#3-5-5-部署kube-controller-manager" class="headerlink" title="3.5.5 部署kube-controller-manager"></a>3.5.5 部署kube-controller-manager</h4><p><strong>创建kube-controller-manager配置文件</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim  <span class="meta-keyword">/cloud/</span>k8s<span class="meta-keyword">/kubernetes/</span>cfg/kube-controller-manager</span><br><span class="line">KUBE_CONTROLLER_MANAGER_OPTS=<span class="string">""</span></span><br></pre></td></tr></table></figure><p><strong>创建kube-controller-manager systemd unit 文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-controller-manager.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/k8s/bin/kube-controller-manager \\</span><br><span class="line">--logtostderr=true \\</span><br><span class="line">--v=4 \\</span><br><span class="line">--master=$&#123;MASTER_URL&#125;:8080 \\</span><br><span class="line">--leader-elect=true \\</span><br><span class="line">--address=127.0.0.1 \\</span><br><span class="line">--service-cluster-ip-range=$&#123;SERVICE_CIDR&#125; \\</span><br><span class="line">--cluster-name=kubernetes \\</span><br><span class="line">--cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">--cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem  \\</span><br><span class="line">--root-ca-file=//etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">--service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>启动服务</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable kube-controller-manager</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart kube-controller-manager</span></span><br></pre></td></tr></table></figure><p><strong>查看kube-controller-manager是否运行</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /data/ssl_config/kubernetes] master</span><br><span class="line"># ps -ef |grep kube-controller-manager</span><br><span class="line">root      <span class="number">7759</span>  <span class="number">2930</span>  <span class="number">0</span> <span class="number">19</span>:<span class="number">59</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep --color=<span class="built_in">auto</span> kube-controller-manager</span><br><span class="line">root     <span class="number">13972</span>     <span class="number">1</span>  <span class="number">0</span> <span class="number">8</span>月<span class="number">02</span> ?       <span class="number">00</span>:<span class="number">10</span>:<span class="number">56</span> /cloud/k8s/kubernetes/bin/kube-controller-manager --logtostderr=<span class="literal">true</span> --v=<span class="number">4</span> --master=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span> --leader-elect=<span class="literal">true</span> --address=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> --service-cluster-ip-range=<span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span> --cluster-name=kubernetes --cluster-signing-cert-file=/cloud/k8s/kubernetes/ssl/ca.pem --cluster-signing-key-file=/cloud/k8s/kubernetes/ssl/ca-key.pem --root-ca-file=/cloud/k8s/kubernetes/ssl/ca.pem --service-account-<span class="keyword">private</span>-key-file=/cloud/k8s/kubernetes/ssl/ca-key.pem</span><br><span class="line"></span><br><span class="line">[<span class="symbol">root@</span>k8s<span class="number">-1</span> /data/ssl_config/kubernetes] master</span><br><span class="line">#  systemctl status kube-controller-manager</span><br><span class="line">● kube-controller-manager.service - Kubernetes Controller Manager</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/kube-controller-manager.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 五 <span class="number">2019</span><span class="number">-08</span><span class="number">-02</span> <span class="number">18</span>:<span class="number">33</span>:<span class="number">13</span> CST; <span class="number">1</span> day <span class="number">1</span>h ago</span><br><span class="line">     Docs: https:<span class="comment">//github.com/kubernetes/kubernetes</span></span><br><span class="line"> Main PID: <span class="number">13972</span> (kube-controller)</span><br><span class="line">    Tasks: <span class="number">10</span></span><br><span class="line">   Memory: <span class="number">51.9</span>M</span><br><span class="line">   CGroup: /system.slice/kube-controller-manager.service</span><br><span class="line">           └─<span class="number">13972</span> /cloud/k8s/kubernetes/bin/kube-controller-manager --logtos...</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">48</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">48.522342</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">48</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">48.526381</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">50</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">50.211112</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">50</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">50.455555</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">50</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">50.738397</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">50</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">50.767332</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">51</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">51.502835</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">53</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">53.567923</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">53</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">53.567955</span> ...</span><br><span class="line"><span class="number">8</span>月 <span class="number">03</span> <span class="number">19</span>:<span class="number">59</span>:<span class="number">54</span> k8s<span class="number">-1</span> kube-controller-manager[<span class="number">13972</span>]: I0803 <span class="number">19</span>:<span class="number">59</span>:<span class="number">54.321341</span> ...</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br></pre></td></tr></table></figure><h4 id="3-5-6-查看master集群状态"><a href="#3-5-6-查看master集群状态" class="headerlink" title="3.5.6 查看master集群状态"></a>3.5.6 查看master集群状态</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-1 /root] master</span><br><span class="line"><span class="comment"># kubectl get cs,nodes</span></span><br><span class="line">NAME                                 STATUS    MESSAGE             ERROR</span><br><span class="line">componentstatus/controller-manager   Healthy   ok</span><br><span class="line">componentstatus<span class="built_in">/scheduler </span>           Healthy   ok</span><br><span class="line">componentstatus/etcd-2               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br><span class="line">componentstatus/etcd-1               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br><span class="line">componentstatus/etcd-0               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="3-6-部署node-节点"><a href="#3-6-部署node-节点" class="headerlink" title="3.6 部署node 节点"></a>3.6 部署node 节点</h3><blockquote><p>kubernetes work 节点运行如下组件：<br>docker<br>kubelet<br>kube-proxy</p></blockquote><h4 id="3-6-1-部署-kubelet-组件"><a href="#3-6-1-部署-kubelet-组件" class="headerlink" title="3.6.1 部署 kubelet 组件"></a>3.6.1 部署 kubelet 组件</h4><blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kublet 运行在每个 worker 节点上，接收 kube-apiserver 发送的请求，管理 Pod 容器，执行交互式命令，如exec、<span class="keyword">run</span><span class="bash">、logs 等;</span></span><br></pre></td></tr></table></figure><p>kublet 启动时自动向 kube-apiserver 注册节点信息，内置的 cadvisor 统计和监控节点的资源使用情况;<br>为确保安全，本文档只开启接收 https 请求的安全端口，对请求进行认证和授权，拒绝未授权的访问(如apiserver、heapster)。</p></blockquote><p><strong>配置node节点</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /data/install/kubernetes/server/bin/</span><br><span class="line">scp kubelet kube-proxy k8s<span class="number">-2</span><span class="symbol">:/cloud/k8s/kubernetes/bin/</span></span><br><span class="line">scp kubelet kube-proxy k8s<span class="number">-3</span><span class="symbol">:/cloud/k8s/kubernetes/bin/</span></span><br></pre></td></tr></table></figure><p><strong>创建 kubelet bootstrap.kubeconfig 文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cd /data/ssl_config/kubernetes/</span><br><span class="line">vim environment.sh</span><br><span class="line"><span class="comment"># 创建kubelet bootstrapping kubeconfig</span></span><br><span class="line"><span class="attribute">BOOTSTRAP_TOKEN</span>=619bd8a5bcfc6bcde109d710d9a02cc4</span><br><span class="line"><span class="attribute">KUBE_APISERVER</span>=<span class="string">"https://192.168.220.110:6443"</span></span><br><span class="line"></span><br><span class="line">source environment.sh</span><br><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-cluster kubernetes \</span><br><span class="line">  <span class="attribute">--certificate-authority</span>=./ca.pem \</span><br><span class="line">  <span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line">  <span class="attribute">--server</span>=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=bootstrap.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-credentials kubelet-bootstrap \</span><br><span class="line">  <span class="attribute">--token</span>=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=bootstrap.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-context<span class="built_in"> default </span>\</span><br><span class="line">  <span class="attribute">--cluster</span>=kubernetes \</span><br><span class="line">  <span class="attribute">--user</span>=kubelet-bootstrap \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=bootstrap.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl<span class="built_in"> config </span>use-context<span class="built_in"> default </span><span class="attribute">--kubeconfig</span>=bootstrap.kubeconfig</span><br></pre></td></tr></table></figure><p><strong>创建 kubelet.kubeconfig 文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vim envkubelet.kubeconfig.sh</span><br><span class="line"><span class="comment"># 创建kubelet bootstrapping kubeconfig</span></span><br><span class="line"><span class="attribute">BOOTSTRAP_TOKEN</span>=619bd8a5bcfc6bcde109d710d9a02cc4</span><br><span class="line"><span class="attribute">KUBE_APISERVER</span>=<span class="string">"https://192.168.220.110:6443"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置集群参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-cluster kubernetes \</span><br><span class="line">  <span class="attribute">--certificate-authority</span>=./ca.pem \</span><br><span class="line">  <span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line">  <span class="attribute">--server</span>=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置客户端认证参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-credentials kubelet \</span><br><span class="line">  <span class="attribute">--token</span>=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置上下文参数</span></span><br><span class="line">kubectl<span class="built_in"> config </span>set-context<span class="built_in"> default </span>\</span><br><span class="line">  <span class="attribute">--cluster</span>=kubernetes \</span><br><span class="line">  <span class="attribute">--user</span>=kubelet \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kubelet.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认上下文</span></span><br><span class="line">kubectl<span class="built_in"> config </span>use-context<span class="built_in"> default </span><span class="attribute">--kubeconfig</span>=kubelet.kubeconfig</span><br></pre></td></tr></table></figure><p><strong>创建kube-proxy kubeconfig文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vim  env_proxy.sh</span><br><span class="line"><span class="comment"># 创建kube-proxy kubeconfig文件</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">BOOTSTRAP_TOKEN</span>=619bd8a5bcfc6bcde109d710d9a02cc4</span><br><span class="line"><span class="attribute">KUBE_APISERVER</span>=<span class="string">"https://192.168.220.110:6443"</span></span><br><span class="line"></span><br><span class="line">kubectl<span class="built_in"> config </span>set-cluster kubernetes \</span><br><span class="line">  <span class="attribute">--certificate-authority</span>=./ca.pem \</span><br><span class="line">  <span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line">  <span class="attribute">--server</span>=<span class="variable">$&#123;KUBE_APISERVER&#125;</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl<span class="built_in"> config </span>set-credentials kube-proxy \</span><br><span class="line">  <span class="attribute">--client-certificate</span>=./kube-proxy.pem \</span><br><span class="line">  <span class="attribute">--client-key</span>=./kube-proxy-key.pem \</span><br><span class="line">  <span class="attribute">--embed-certs</span>=<span class="literal">true</span> \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl<span class="built_in"> config </span>set-context<span class="built_in"> default </span>\</span><br><span class="line">  <span class="attribute">--cluster</span>=kubernetes \</span><br><span class="line">  <span class="attribute">--user</span>=kube-proxy \</span><br><span class="line">  <span class="attribute">--kubeconfig</span>=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl<span class="built_in"> config </span>use-context<span class="built_in"> default </span><span class="attribute">--kubeconfig</span>=kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure><p>将bootstrap.kubeconfig kube-proxy.kubeconfig 文件拷贝到所有 nodes节点</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -rp bootstrap.kubeconfig kube-proxy.kubeconfig k8s<span class="number">-2</span><span class="symbol">:/cloud/k8s/kubernetes/cfg/</span></span><br><span class="line">scp -rp bootstrap.kubeconfig kube-proxy.kubeconfig k8s<span class="number">-3</span><span class="symbol">:/cloud/k8s/kubernetes/cfg/</span></span><br></pre></td></tr></table></figure><h4 id="3-6-2-创建kubelet-参数配置文件拷贝到所有-nodes节点"><a href="#3-6-2-创建kubelet-参数配置文件拷贝到所有-nodes节点" class="headerlink" title="3.6.2 创建kubelet 参数配置文件拷贝到所有 nodes节点"></a>3.6.2 创建kubelet 参数配置文件拷贝到所有 nodes节点</h4><p><strong>创建 kubelet 参数配置模板文件</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-2</span> <span class="string">/root]</span> <span class="string">node</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">/etc/kubernetes/kubelet.config</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">address:</span> <span class="string">$&#123;NODE_IP&#125;</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">10250</span></span><br><span class="line"><span class="attr">readOnlyPort:</span> <span class="number">10255</span></span><br><span class="line"><span class="attr">cgroupDriver:</span> <span class="string">cgroupfs</span></span><br><span class="line"><span class="attr">clusterDomain:</span> <span class="string">cluster.local.</span></span><br><span class="line"><span class="attr">failSwapOn:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">authentication:</span></span><br><span class="line">  <span class="attr">anonymous:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p><strong>创建kubelet配置文件</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim  <span class="meta-keyword">/cloud/</span>k8s<span class="meta-keyword">/kubernetes/</span>cfg/kubelet</span><br><span class="line">KUBELET_OPTS=<span class="string">""</span></span><br></pre></td></tr></table></figure><p><strong>创建kubelet systemd unit 文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kubelet.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Kubernetes Kubelet</span><br><span class="line"><span class="attribute">After</span>=docker.service</span><br><span class="line"><span class="attribute">Requires</span>=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/k8s/bin/kubelet \\</span><br><span class="line"><span class="attribute">--logtostderr</span>=<span class="literal">true</span> \\</span><br><span class="line"><span class="attribute">--v</span>=4 \\</span><br><span class="line"><span class="attribute">--hostname-override</span>=<span class="variable">$&#123;NODE_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--kubeconfig</span>=/etc/kubernetes/kubelet.kubeconfig \\</span><br><span class="line"><span class="attribute">--bootstrap-kubeconfig</span>=/etc/kubernetes/bootstrap.kubeconfig \\</span><br><span class="line"><span class="attribute">--config</span>=/etc/kubernetes/kubelet.config \\</span><br><span class="line"><span class="attribute">--cert-dir</span>=/etc/kubernetes/ssl \\</span><br><span class="line"><span class="attribute">--pod-infra-container-image</span>=registry.cn-hangzhou.aliyuncs.com/google-containers/pause-amd64:3.0</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"><span class="attribute">KillMode</span>=process</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>将kubelet-bootstrap用户绑定到系统集群角色</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-bootstrap \</span><br><span class="line">  --<span class="attr">clusterrole=</span>system:<span class="keyword">node</span><span class="title">-bootstrapper</span> \</span><br><span class="line">  --<span class="attr">user=</span>kubelet-bootstrap</span><br></pre></td></tr></table></figure><h4 id="3-6-3-启动kubelet服务"><a href="#3-6-3-启动kubelet服务" class="headerlink" title="3.6.3 启动kubelet服务"></a>3.6.3 启动kubelet服务</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable kubelet</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart kubelet</span></span><br></pre></td></tr></table></figure><h4 id="3-6-4-approve-kubelet-CSR-请求"><a href="#3-6-4-approve-kubelet-CSR-请求" class="headerlink" title="3.6.4 approve kubelet CSR 请求"></a>3.6.4 approve kubelet CSR 请求</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="builtin-name">get</span> csr</span><br><span class="line">kubectl certificate approve <span class="variable">$NAME</span> </span><br><span class="line">kubectl <span class="builtin-name">get</span> csr</span><br><span class="line">csr 状态变为 Approved,Issued 即可</span><br></pre></td></tr></table></figure><blockquote><ul><li>Requesting User：请求 CSR 的用户，kube-apiserver 对它进行认证和授权；</li><li>Subject：请求签名的证书信息；</li><li>证书的 CN 是 system:node:kube-node2， Organization 是 system:nodes，kube-apiserver 的 Node 授权模式会授予该证书的相关权限；</li></ul></blockquote><h4 id="3-6-5-查看集群状态"><a href="#3-6-5-查看集群状态" class="headerlink" title="3.6.5 查看集群状态"></a>3.6.5 查看集群状态</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-<span class="number">1</span> /root] <span class="literal">master</span></span><br><span class="line"><span class="comment"># kubectl  get  nodes,cs</span></span><br><span class="line">NAME         STATUS   ROLES   AGE     <span class="keyword">VERSION</span></span><br><span class="line"><span class="keyword">node</span><span class="title">/k8s-2</span>   Ready    <span class="keyword">node</span>    <span class="title">3d22h</span>   v1.<span class="number">15.1</span></span><br><span class="line"><span class="keyword">node</span><span class="title">/k8s-3</span>   Ready    <span class="keyword">node</span>    <span class="title">3d22h</span>   v1.<span class="number">15.1</span></span><br><span class="line"></span><br><span class="line">NAME                                 STATUS    MESSAGE             ERROR</span><br><span class="line">componentstatus/scheduler            Healthy   ok</span><br><span class="line">componentstatus/controller-manager   Healthy   ok</span><br><span class="line">componentstatus/etcd-<span class="number">0</span>               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br><span class="line">componentstatus/etcd-<span class="number">2</span>               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br><span class="line">componentstatus/etcd-<span class="number">1</span>               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="3-7-部署-node-kube-proxy-组件"><a href="#3-7-部署-node-kube-proxy-组件" class="headerlink" title="3.7 部署 node kube-proxy 组件"></a>3.7 部署 node kube-proxy 组件</h3><blockquote><p>kube-proxy 运行在所有 node节点上，它监听 apiserver 中 service 和 Endpoint 的变化情况，创建路由规则来进行服务负载均衡。</p></blockquote><h4 id="3-7-1-创建kube-proxy配置文件"><a href="#3-7-1-创建kube-proxy配置文件" class="headerlink" title="3.7.1 创建kube-proxy配置文件"></a>3.7.1 创建kube-proxy配置文件</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vim</span>  <span class="string">/cloud/k8s/kubernetes/cfg/kube-proxy</span></span><br><span class="line"><span class="attr">KUBE_PROXY_OPTS</span>=<span class="string">"--logtostderr=true \</span></span><br><span class="line"><span class="meta">--v</span>=<span class="string">4 \</span></span><br><span class="line"><span class="meta">--hostname-override</span>=<span class="string">k8s-2 \</span></span><br><span class="line"><span class="meta">--cluster-cidr</span>=<span class="string">10.0.0.0/24 \</span></span><br><span class="line"><span class="meta">--kubeconfig</span>=<span class="string">/cloud/k8s/kubernetes/cfg/kube-proxy.kubeconfig"</span></span><br></pre></td></tr></table></figure><h4 id="3-7-2-创建kube-proxy-systemd-unit-文件"><a href="#3-7-2-创建kube-proxy-systemd-unit-文件" class="headerlink" title="3.7.2 创建kube-proxy systemd unit 文件"></a>3.7.2 创建kube-proxy systemd unit 文件</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-proxy.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Kubernetes Proxy</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">WorkingDirectory</span>=/var/lib/kube-proxy</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/k8s/bin/kube-proxy \\</span><br><span class="line"><span class="attribute">--logtostderr</span>=<span class="literal">true</span> \\</span><br><span class="line"><span class="attribute">--v</span>=4 \\</span><br><span class="line"><span class="attribute">--hostname-override</span>=<span class="variable">$&#123;NODE_IP&#125;</span> \\</span><br><span class="line"><span class="attribute">--cluster-cidr</span>=<span class="variable">$&#123;SERVICE_CIDR&#125;</span> \\</span><br><span class="line"><span class="attribute">--kubeconfig</span>=/etc/kubernetes/kube-proxy.kubeconfig</span><br><span class="line"><span class="attribute">Restart</span>=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="3-7-3-启动kube-proxy服务"><a href="#3-7-3-启动kube-proxy服务" class="headerlink" title="3.7.3 启动kube-proxy服务"></a>3.7.3 启动kube-proxy服务</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable kube-proxy</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart kube-proxy</span></span><br></pre></td></tr></table></figure><h4 id="3-7-4-检查服务运行状态"><a href="#3-7-4-检查服务运行状态" class="headerlink" title="3.7.4 检查服务运行状态"></a>3.7.4 检查服务运行状态</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-2</span> <span class="string">/root]</span> <span class="string">node</span></span><br><span class="line"><span class="comment">#  systemctl status kube-proxy</span></span><br><span class="line"><span class="string">●</span> <span class="string">kube-proxy.service</span> <span class="bullet">-</span> <span class="string">Kubernetes</span> <span class="string">Proxy</span></span><br><span class="line">   <span class="attr">Loaded:</span> <span class="string">loaded</span> <span class="string">(/usr/lib/systemd/system/kube-proxy.service;</span> <span class="string">enabled;</span> <span class="attr">vendor preset:</span> <span class="string">disabled)</span></span><br><span class="line">   <span class="attr">Active:</span> <span class="string">active</span> <span class="string">(running)</span> <span class="string">since</span> <span class="string">二</span> <span class="number">2019</span><span class="number">-07</span><span class="number">-30</span> <span class="number">22</span><span class="string">:30:04</span> <span class="string">CST;</span> <span class="number">3</span> <span class="string">days</span> <span class="string">ago</span></span><br><span class="line"> <span class="attr">Main PID:</span> <span class="number">5764</span> <span class="string">(kube-proxy)</span></span><br><span class="line">    <span class="attr">Tasks:</span> <span class="number">0</span></span><br><span class="line">   <span class="attr">Memory:</span> <span class="number">11.</span><span class="string">8M</span></span><br><span class="line">   <span class="attr">CGroup:</span> <span class="string">/system.slice/kube-proxy.service</span></span><br><span class="line">           <span class="string">‣</span> <span class="number">5764</span> <span class="string">/cloud/k8s/kubernetes/bin/kube-proxy</span> <span class="string">--logtostderr=true</span> <span class="string">--v...</span></span><br><span class="line"></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:33</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:33.736946</span>    <span class="number">5764</span> <span class="string">iptab...]</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:33</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:33.740738</span>    <span class="number">5764</span> <span class="string">healt..."</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:33</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:33.740762</span>    <span class="number">5764</span> <span class="string">proxi...s</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:33</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:33.740780</span>    <span class="number">5764</span> <span class="string">bound...s</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:34</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:34.018700</span>    <span class="number">5764</span> <span class="string">confi...e</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:34</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:34.028396</span>    <span class="number">5764</span> <span class="string">confi...e</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:36</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:36.035812</span>    <span class="number">5764</span> <span class="string">confi...e</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:36</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:36.046563</span>    <span class="number">5764</span> <span class="string">confi...e</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:38</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:38.045395</span>    <span class="number">5764</span> <span class="string">confi...e</span></span><br><span class="line"><span class="number">8</span><span class="string">月</span> <span class="number">03</span> <span class="number">20</span><span class="string">:51:38</span> <span class="string">k8s-2</span> <span class="string">kube-proxy[5764]:</span> <span class="string">I0803</span> <span class="number">20</span><span class="string">:51:38.061197</span>    <span class="number">5764</span> <span class="string">confi...e</span></span><br><span class="line"><span class="attr">Hint:</span> <span class="string">Some</span> <span class="string">lines</span> <span class="string">were</span> <span class="string">ellipsized,</span> <span class="string">use</span> <span class="string">-l</span> <span class="string">to</span> <span class="string">show</span> <span class="string">in</span> <span class="string">full.</span></span><br></pre></td></tr></table></figure><p>至此 kubernetes 1.15 版本简单部署完成~</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx反向代理</title>
      <link href="/2020/02/26/Nginx/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
      <url>/2020/02/26/Nginx/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>NGINX服务器的反向代理PROXY_PASS配置方法讲解</p><p>Nginx的配置还是比较简单的，如：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~ /*</span> &#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://127.0.0.1:8008;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>或者可以</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">/&#123;</span></span><br><span class="line"><span class="title">proxy_pass</span> http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8008</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Apache2的反向代理的配置是：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ProxyPass <span class="regexp">/ysz/</span> <span class="string">http:</span><span class="comment">//localhost:8080/</span></span><br></pre></td></tr></table></figure><p>然而，如果要配置一个相对复杂的反向代理<br>Nginx相对Apache2就要麻烦一些了<br>比如，将url中以/wap/开头的请求转发到后台对应的某台server上<br>可以再Nginx里设置一个变量，来临时保存/wap/后面的路径信息</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location ^~ <span class="regexp">/wap/</span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($request_uri ~ <span class="regexp">/wap/</span>(\d+)/(.+))&#123;</span><br><span class="line">set $bucketid $1;<span class="string">``</span>set $params $2;</span><br><span class="line">&#125;</span><br><span class="line">proxy_pass <span class="symbol">http:</span>/<span class="regexp">/mx$bucketid.test.com:6601/</span>$params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以首先rewrite一下，然后再代理：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span><span class="regexp"> ^~</span> /wap/&#123;</span><br><span class="line"><span class="attribute">rewrite</span> /wap/(\d+)/(.+) /<span class="variable">$2</span>?<span class="variable">$args</span> <span class="literal">break</span>;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://mx<span class="variable">$1</span>.test.com:6601;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~* /wap/(\d+)/(.+)</span>&#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://mx<span class="variable">$1</span>.test.com:6601/<span class="variable">$2</span>?<span class="variable">$args</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意上面最后的?$args，表明把原始url最后的get参数也给代理到后台<br>如果在proxy_pass中使用了变量（不管是主机名变量$1或后面的$2变量），则必须得加这段代码<br>但如果pass_proxy后没用任何变量，则不需要加，它默认会把所有的url都给代理到后台，如：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~* /wap/(\d+)/(.+)</span>&#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://mx.test.com:6601;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而Apache2相对就简单多了：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ProxyPassMatch</span><span class="regexp"> ^/wap/(.*)$</span>  http://192.168.132.147/<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">if (<span class="variable">$host</span> <span class="regexp">~* www.(.*))</span>&#123;</span><br><span class="line"><span class="attribute">set</span> <span class="variable">$host_without_www</span> <span class="variable">$1</span>;</span><br><span class="line"><span class="attribute">rewrite</span> (.*)$ http://<span class="variable">$host_without_www</span>/www<span class="variable">$1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>url的/问题</strong>在nginx中配置proxy_pass时，当在后面的url加上了/，相当于是绝对根路径，则nginx不会把location中匹配的路径部分代理走;如果没有/，则会把匹配的路径部分也给代理走。</p><p>下面四种情况分别用<a href="http://192.168.1.4/proxy/test.html" target="_blank" rel="noopener">http://192.168.1.4/proxy/test.html</a> 进行访问。<br>第一种：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">/proxy</span>/ &#123;</span><br><span class="line">proxy_pass http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">81</span>/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会被代理到<a href="http://127.0.0.1:81/test.html" target="_blank" rel="noopener">http://127.0.0.1:81/test.html</a> 这个url</p><p>第二咱(相对于第一种，最后少一个 /)</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">/proxy</span>/ &#123;</span><br><span class="line">proxy_pass http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">81</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会被代理到<a href="http://127.0.0.1:81/proxy/test.html" target="_blank" rel="noopener">http://127.0.0.1:81/proxy/test.html</a> 这个url</p><p>第三种：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location <span class="regexp">/proxy/</span> &#123;</span><br><span class="line">proxy_pass http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">81</span><span class="regexp">/ftlynx/</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会被代理到<a href="http://127.0.0.1:81/ftlynx/test.html" target="_blank" rel="noopener">http://127.0.0.1:81/ftlynx/test.html</a> 这个url。</p><p>第四种情况(相对于第三种，最后少一个 / )：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">/proxy</span>/ &#123;</span><br><span class="line">proxy_pass http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">81</span>/ftlynx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会被代理到<a href="http://127.0.0.1:81/ftlynxtest.html" target="_blank" rel="noopener">http://127.0.0.1:81/ftlynxtest.html</a> 这个url</p><p>上面的结果都是结合日志文件测试过的。从结果可以看出，应该说分为两种情况才正确。即<a href="http://127.0.0.1:81" target="_blank" rel="noopener">http://127.0.0.1:81</a> (上面的第二种) 这种和 <a href="http://127.0.0.1:81/" target="_blank" rel="noopener">http://127.0.0.1:81/</a>…. （上面的第1，3，4种） 这种。</p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手动搭建高可用的k8s集群</title>
      <link href="/2020/02/22/k8s/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84k8s%E9%9B%86%E7%BE%A4/"/>
      <url>/2020/02/22/k8s/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84k8s%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<p>该文档部署了最新的<code>v1.8.2</code>版本，实现了<code>kube-apiserver</code>的高可用、<code>traefik ingress</code> 的部署、在<code>kubernetes</code>上安装<code>docker</code>的私有仓库<code>harbor</code>、容器化<code>kubernetes</code>部分组建、使用阿里云日志服务收集日志。</p><p>部署完成后，你将理解系统各组件的交互原理，进而能快速解决实际问题，所以本文档主要适合于那些有一定<code>kubernetes</code>基础，想通过一步步部署的方式来学习和了解系统配置、运行原理的人。</p><p>本系列系文档适用于 <code>CentOS 7</code>、<code>Ubuntu 16.04</code> 及以上版本系统，由于启用了 <code>TLS</code> 双向认证、<code>RBAC</code> 授权等严格的安全机制，建议<strong>从头开始部署</strong>，否则可能会认证、授权等失败！</p><a id="more"></a><h1 id="1-组件版本-amp-amp-集群环境"><a href="#1-组件版本-amp-amp-集群环境" class="headerlink" title="1. 组件版本 &amp;&amp; 集群环境"></a>1. 组件版本 &amp;&amp; 集群环境</h1><h3 id="组件版本"><a href="#组件版本" class="headerlink" title="组件版本"></a>组件版本</h3><ul><li>Kubernetes 1.8.2(1.9.x版本也可以，只有细微的差别)</li><li>Docker 17.10.0-ce</li><li>Etcd 3.2.9</li><li>Flanneld</li><li>TLS 认证通信（所有组件，如etcd、kubernetes master 和node）</li><li>RBAC 授权</li><li>kubelet TLS Bootstrapping</li><li>kubedns、dashboard、heapster等插件</li><li>harbor，使用nfs后端存储</li></ul><h3 id="etcd-集群-amp-amp-k8s-master-机器-amp-amp-k8s-node-机器"><a href="#etcd-集群-amp-amp-k8s-master-机器-amp-amp-k8s-node-机器" class="headerlink" title="etcd 集群 &amp;&amp; k8s master 机器 &amp;&amp; k8s node 机器"></a>etcd 集群 &amp;&amp; k8s master 机器 &amp;&amp; k8s node 机器</h3><ul><li>master01：192.168.220.100</li><li>master02：192.168.220.101</li><li>master03/node03：192.168.220.102</li><li>由于机器有限，所以我们将master03 也作为node 节点，后续有新的机器增加即可</li><li>node01: 192.168.220.200</li><li>node02: 192.168.220.201</li></ul><h3 id="工作目录"><a href="#工作目录" class="headerlink" title="工作目录"></a>工作目录</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta-keyword">/usr/</span>k8s<span class="meta-keyword">/bin/</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>kubernetes/ssl <span class="meta">#所以机器都一样ca</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>etcd/ <span class="meta">#每台机器不一样，根据ip</span></span><br></pre></td></tr></table></figure><h3 id="集群环境变量"><a href="#集群环境变量" class="headerlink" title="集群环境变量"></a>集群环境变量</h3><p>后面部署将会使用到的全局变量，定义如下（根据自己的机器、网络修改）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/k8s/bin/ -p</span><br><span class="line">cat &gt; /usr/k8s/bin/env.sh &lt;&lt;EOF</span><br><span class="line"><span class="comment"># TLS Bootstrapping 使用的Token，可以使用命令 head -c 16 /dev/urandom | od -An -t x | tr -d ' ' 生成</span></span><br><span class="line">BOOTSTRAP_TOKEN=<span class="string">"f3be89d17cf7d80847f3bc8b8ea58250"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建议使用未用的网段来定义服务网段和Pod 网段</span></span><br><span class="line"><span class="comment"># 服务网段(Service CIDR)，部署前路由不可达，部署后集群内部使用IP:Port可达</span></span><br><span class="line">SERVICE_CIDR=<span class="string">"10.254.0.0/16"</span></span><br><span class="line"><span class="comment"># Pod 网段(Cluster CIDR)，部署前路由不可达，部署后路由可达(flanneld 保证)</span></span><br><span class="line">CLUSTER_CIDR=<span class="string">"172.30.0.0/16"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端口范围(NodePort Range)</span></span><br><span class="line">NODE_PORT_RANGE=<span class="string">"30000-32766"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># etcd集群服务地址列表</span></span><br><span class="line">ETCD_ENDPOINTS=<span class="string">"https://192.168.220.100:2379,https://192.168.220.101:2379,https://192.168.220.102:2379"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># flanneld 网络配置前缀</span></span><br><span class="line">FLANNEL_ETCD_PREFIX=<span class="string">"/kubernetes/network"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubernetes 服务IP(预先分配，一般为SERVICE_CIDR中的第一个IP)</span></span><br><span class="line">CLUSTER_KUBERNETES_SVC_IP=<span class="string">"10.254.0.1"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群 DNS 服务IP(从SERVICE_CIDR 中预先分配)</span></span><br><span class="line">CLUSTER_DNS_SVC_IP=<span class="string">"10.254.0.2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群 DNS 域名</span></span><br><span class="line">CLUSTER_DNS_DOMAIN=<span class="string">"cluster.local."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MASTER API Server 地址</span></span><br><span class="line">MASTER_URL=<span class="string">"k8s-api.virtual.local"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>将上面变量保存为: <strong>env.sh</strong>，然后将脚本拷贝到所有机器的<code>/usr/k8s/bin</code>目录。 为方便后面迁移，我们在集群内定义一个域名用于访问<code>apiserver</code>，在每个节点的<code>/etc/hosts</code>文件中添加记录：</p><p><strong>192.168.220.100 k8s-api.virtual.local k8s-api</strong></p><p>其中<code>192.168.1.137</code>为master01 的IP，暂时使用该IP 来做apiserver 的负载地址</p><p>添加/usr/k8s/bin 到env中</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=/usr/k8s/bin:$PATH</span><br></pre></td></tr></table></figure><p>如果你使用的是阿里云的ECS 服务，强烈建议你先将上述节点的安全组配置成允许所有访问，不然在安装过程中会遇到各种访问不了的问题，待集群配置成功以后再根据需要添加安全限制。</p><h2 id="2-创建CA-证书和密钥"><a href="#2-创建CA-证书和密钥" class="headerlink" title="2. 创建CA 证书和密钥"></a>2. 创建CA 证书和密钥</h2><p><code>kubernetes</code> 系统各个组件需要使用<code>TLS</code>证书对通信进行加密，这里我们使用<code>CloudFlare</code>的PKI 工具集<a href="https://github.com/cloudflare/cfssl" target="_blank" rel="noopener">cfssl</a> 来生成Certificate Authority(CA) 证书和密钥文件， CA 是自签名的证书，用来签名后续创建的其他TLS 证书。</p><h3 id="安装-CFSSL"><a href="#安装-CFSSL" class="headerlink" title="安装 CFSSL"></a>安装 CFSSL</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</span><br><span class="line">chmod +x cfssl_linux-amd64</span><br><span class="line">sudo mv cfssl_linux-amd64 /usr/k8s/bin/cfssl</span><br><span class="line"></span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</span><br><span class="line">chmod +x cfssljson_linux-amd64</span><br><span class="line">sudo mv cfssljson_linux-amd64 /usr/k8s/bin/cfssljson</span><br><span class="line"></span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</span><br><span class="line">chmod +x cfssl-certinfo_linux-amd64</span><br><span class="line">sudo mv cfssl-certinfo_linux-amd64 /usr/k8s/bin/cfssl-certinfo</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;profile &lt;&lt; EOF</span><br><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;k8s&#x2F;bin:$PATH</span><br><span class="line">EOF</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir ssl &amp;&amp; cd ssl</span><br><span class="line">cfssl print-defaults config &gt; ca-config.json</span><br><span class="line">cfssl print-defaults csr &gt; ca-csr.json</span><br></pre></td></tr></table></figure><h3 id="创建CA"><a href="#创建CA" class="headerlink" title="创建CA"></a>创建CA</h3><p>修改上面创建的<code>ca-config.json</code>：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ca-config.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"signing"</span>: &#123;</span><br><span class="line">        <span class="attr">"default"</span>: &#123;</span><br><span class="line">            <span class="attr">"expiry"</span>: <span class="string">"876000h"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"profiles"</span>: &#123;</span><br><span class="line">            <span class="attr">"kubernetes"</span>: &#123;</span><br><span class="line">                <span class="attr">"expiry"</span>: <span class="string">"876000h"</span>,</span><br><span class="line">                <span class="attr">"usages"</span>: [</span><br><span class="line">                    <span class="string">"signing"</span>,</span><br><span class="line">                    <span class="string">"key encipherment"</span>,</span><br><span class="line">                    <span class="string">"server auth"</span>,</span><br><span class="line">                    <span class="string">"client auth"</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>config.json</code>：可以定义多个profiles，分别指定不同的过期时间、使用场景等参数；后续在签名证书时使用某个profile；</li><li><code>signing</code>: 表示该证书可用于签名其它证书；生成的ca.pem 证书中<code>CA=TRUE</code>；</li><li><code>server auth</code>: 表示client 可以用该CA 对server 提供的证书进行校验；</li><li><code>client auth</code>: 表示server 可以用该CA 对client 提供的证书进行验证。</li></ul><p>修改CA 证书签名ca-csr.json：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ca-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"CN"</span>: <span class="string">"kubernetes"</span>,</span><br><span class="line">    <span class="attr">"key"</span>: &#123;</span><br><span class="line">        <span class="attr">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">2048</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"names"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">            <span class="attr">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">            <span class="attr">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">            <span class="attr">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">            <span class="attr">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>CN</code>: <code>Common Name</code>，kube-apiserver 从证书中提取该字段作为请求的用户名(User Name)；浏览器使用该字段验证网站是否合法；</li><li><code>O</code>: <code>Organization</code>，kube-apiserver 从证书中提取该字段作为请求用户所属的组(Group)；</li></ul><p>生成CA 证书和私钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br><span class="line">ls ca*</span><br><span class="line">ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem</span><br></pre></td></tr></table></figure><h3 id="分发证书"><a href="#分发证书" class="headerlink" title="分发证书"></a>分发证书</h3><p>将生成的CA 证书、密钥文件、配置文件拷贝到<strong>所有机器</strong>的<code>/etc/kubernetes/ssl</code>目录下面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/kubernetes/ssl</span><br><span class="line">sudo cp ca* /etc/kubernetes/ssl</span><br></pre></td></tr></table></figure><h2 id="3-部署高可用etcd-集群"><a href="#3-部署高可用etcd-集群" class="headerlink" title="3. 部署高可用etcd 集群"></a>3. 部署高可用etcd 集群</h2><p>kubernetes 系统使用<code>etcd</code>存储所有的数据，我们这里部署3个节点的etcd 集群，这3个节点直接复用kubernetes master的3个节点，分别命名为<code>etcd01</code>、<code>etcd02</code>、<code>etcd03</code>:</p><ul><li>etcd01：192.168.220.100</li><li>etcd02：192.168.220.101</li><li>etcd03：192.168.220.102</li></ul><h3 id="三个节点重复–-gt"><a href="#三个节点重复–-gt" class="headerlink" title="三个节点重复–&gt;"></a>三个节点重复–&gt;</h3><h3 id="定义环境变量"><a href="#定义环境变量" class="headerlink" title="定义环境变量"></a>定义环境变量</h3><p>使用到的变量如下：</p><p>节点1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/k8s/bin/env.sh &lt;&lt;EOF</span><br><span class="line"><span class="built_in">export</span> NODE_NAME=etcd01 <span class="comment"># 当前部署的机器名称(随便定义，只要能区分不同机器即可)</span></span><br><span class="line"><span class="built_in">export</span> NODE_IP=192.168.220.100 <span class="comment"># 当前部署的机器IP</span></span><br><span class="line"><span class="built_in">export</span> NODE_IPS=<span class="string">"192.168.220.100 192.168.220.101 192.168.220.102"</span> <span class="comment"># etcd 集群所有机器 IP</span></span><br><span class="line"><span class="comment"># etcd 集群间通信的IP和端口</span></span><br><span class="line"><span class="built_in">export</span> ETCD_NODES=etcd01=https://192.168.220.100:2380,etcd02=https://192.168.220.101:2380,etcd03=https://192.168.220.102:2380</span><br><span class="line"><span class="comment"># 导入用到的其它全局变量：ETCD_ENDPOINTS、FLANNEL_ETCD_PREFIX、CLUSTER_CIDR</span></span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><p>节点2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/k8s/bin/env.sh &lt;&lt;EOF</span><br><span class="line"><span class="built_in">export</span> NODE_NAME=etcd02 <span class="comment"># 当前部署的机器名称(随便定义，只要能区分不同机器即可)</span></span><br><span class="line"><span class="built_in">export</span> NODE_IP=192.168.220.101 <span class="comment"># 当前部署的机器IP</span></span><br><span class="line"><span class="built_in">export</span> NODE_IPS=<span class="string">"192.168.220.100 192.168.220.101 192.168.220.102"</span> <span class="comment"># etcd 集群所有机器 IP</span></span><br><span class="line"><span class="comment"># etcd 集群间通信的IP和端口</span></span><br><span class="line"><span class="built_in">export</span> ETCD_NODES=etcd01=https://192.168.220.100:2380,etcd02=https://192.168.220.101:2380,etcd03=https://192.168.220.102:2380</span><br><span class="line"><span class="comment"># 导入用到的其它全局变量：ETCD_ENDPOINTS、FLANNEL_ETCD_PREFIX、CLUSTER_CIDR</span></span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><p>节点3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/k8s/bin/env.sh &lt;&lt;EOF</span><br><span class="line"><span class="built_in">export</span> NODE_NAME=etcd03 <span class="comment"># 当前部署的机器名称(随便定义，只要能区分不同机器即可)</span></span><br><span class="line"><span class="built_in">export</span> NODE_IP=192.168.220.102 <span class="comment"># 当前部署的机器IP</span></span><br><span class="line"><span class="built_in">export</span> NODE_IPS=<span class="string">"192.168.220.100 192.168.220.101 192.168.220.102"</span> <span class="comment"># etcd 集群所有机器 IP</span></span><br><span class="line"><span class="comment"># etcd 集群间通信的IP和端口</span></span><br><span class="line"><span class="built_in">export</span> ETCD_NODES=etcd01=https://192.168.220.100:2380,etcd02=https://192.168.220.101:2380,etcd03=https://192.168.220.102:2380</span><br><span class="line"><span class="comment"># 导入用到的其它全局变量：ETCD_ENDPOINTS、FLANNEL_ETCD_PREFIX、CLUSTER_CIDR</span></span><br><span class="line">EOF</span><br><span class="line"><span class="built_in">source</span> /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><h3 id="下载etcd-二进制文件"><a href="#下载etcd-二进制文件" class="headerlink" title="下载etcd 二进制文件"></a>下载etcd 二进制文件</h3><p>到<a href="https://github.com/coreos/etcd/releases" target="_blank" rel="noopener">https://github.com/coreos/etcd/releases</a>页面下载最新版本的二进制文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/etcd-io/etcd/releases/download/v3.3.17/etcd-v3.3.17-linux-amd64.tar.gz</span><br><span class="line">tar -xvf etcd-v3.3.17-linux-amd64.tar.gz</span><br><span class="line">sudo mv etcd-v3.3.17-linux-amd64/etcd* /usr/k8s/bin/</span><br></pre></td></tr></table></figure><h3 id="创建TLS-密钥和证书"><a href="#创建TLS-密钥和证书" class="headerlink" title="创建TLS 密钥和证书"></a>创建TLS 密钥和证书</h3><p>为了保证通信安全，客户端(如etcdctl)与etcd 集群、etcd 集群之间的通信需要使用TLS 加密。</p><p>创建etcd 证书签名请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; etcd-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"etcd"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [</span><br><span class="line">    <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"<span class="variable">$&#123;NODE_IP&#125;</span>"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"BeiJing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>hosts</code> 字段指定授权使用该证书的<code>etcd</code>节点IP</li></ul><p>生成<code>etcd</code>证书和私钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -ca-key=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  -config=/etc/kubernetes/ssl/ca-config.json \</span><br><span class="line">  -profile=kubernetes etcd-csr.json | cfssljson -bare etcd</span><br><span class="line">  </span><br><span class="line">$ ls etcd*</span><br><span class="line">etcd.csr  etcd-csr.json  etcd-key.pem  etcd.pem</span><br><span class="line"></span><br><span class="line">sudo mkdir -p /etc/etcd/ssl</span><br><span class="line">sudo mv etcd*.pem /etc/etcd/ssl/</span><br></pre></td></tr></table></figure><h3 id="创建etcd-的systemd-unit-文件"><a href="#创建etcd-的systemd-unit-文件" class="headerlink" title="创建etcd 的systemd unit 文件"></a>创建etcd 的systemd unit 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /var/lib/etcd  <span class="comment"># 必须要先创建工作目录</span></span><br><span class="line">cat &gt; etcd.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=https://github.com/coreos</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">ExecStart=/usr/k8s/bin/etcd \\</span><br><span class="line">  --name=<span class="variable">$&#123;NODE_NAME&#125;</span> \\</span><br><span class="line">  --cert-file=/etc/etcd/ssl/etcd.pem \\</span><br><span class="line">  --key-file=/etc/etcd/ssl/etcd-key.pem \\</span><br><span class="line">  --peer-cert-file=/etc/etcd/ssl/etcd.pem \\</span><br><span class="line">  --peer-key-file=/etc/etcd/ssl/etcd-key.pem \\</span><br><span class="line">  --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">  --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">  --initial-advertise-peer-urls=https://<span class="variable">$&#123;NODE_IP&#125;</span>:2380 \\</span><br><span class="line">  --listen-peer-urls=https://<span class="variable">$&#123;NODE_IP&#125;</span>:2380 \\</span><br><span class="line">  --listen-client-urls=https://<span class="variable">$&#123;NODE_IP&#125;</span>:2379,http://127.0.0.1:2379 \\</span><br><span class="line">  --advertise-client-urls=https://<span class="variable">$&#123;NODE_IP&#125;</span>:2379 \\</span><br><span class="line">  --initial-cluster-token=etcd-cluster-0 \\</span><br><span class="line">  --initial-cluster=<span class="variable">$&#123;ETCD_NODES&#125;</span> \\</span><br><span class="line">  --initial-cluster-state=new \\</span><br><span class="line">  --data-dir=/var/lib/etcd</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>指定<code>etcd</code>的工作目录和数据目录为<code>/var/lib/etcd</code>，需要在启动服务前创建这个目录；</li><li>为了保证通信安全，需要指定etcd 的公私钥(cert-file和key-file)、Peers通信的公私钥和CA 证书(peer-cert-file、peer-key-file、peer-trusted-ca-file)、客户端的CA 证书(trusted-ca-file)；</li><li><code>--initial-cluster-state</code>值为<code>new</code>时，<code>--name</code>的参数值必须位于<code>--initial-cluster</code>列表中；</li></ul><h3 id="启动etcd-服务"><a href="#启动etcd-服务" class="headerlink" title="启动etcd 服务"></a>启动etcd 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo mv etcd.service /etc/systemd/system/</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable etcd</span><br><span class="line">sudo systemctl start etcd</span><br><span class="line">sudo systemctl status etcd</span><br></pre></td></tr></table></figure><p>最先启动的etcd 进程会卡住一段时间，等待其他节点启动加入集群，在所有的etcd 节点重复上面的步骤，直到所有的机器etcd 服务都已经启动。</p><h3 id="验证服务"><a href="#验证服务" class="headerlink" title="验证服务"></a>验证服务</h3><p>部署完etcd 集群后，在任一etcd 节点上执行下面命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for ip in $&#123;NODE_IPS&#125;; do</span><br><span class="line">  ETCDCTL_API=3 /usr/k8s/bin/etcdctl \</span><br><span class="line">  --endpoints=https://$&#123;ip&#125;:2379  \</span><br><span class="line">  --cacert=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cert=/etc/etcd/ssl/etcd.pem \</span><br><span class="line">  --key=/etc/etcd/ssl/etcd-key.pem \</span><br><span class="line">  endpoint health; done</span><br></pre></td></tr></table></figure><p>输出如下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://192.168.220.100:2379 is healthy: successfully committed proposal: took = 4.719966ms</span><br><span class="line">https://192.168.220.101:2379 is healthy: successfully committed proposal: took = 5.852401ms</span><br><span class="line">https://192.168.220.102:2379 is healthy: successfully committed proposal: took = 11.755439ms</span><br></pre></td></tr></table></figure><p>可以看到上面的信息3个节点上的etcd 均为<strong>healthy</strong>，则表示集群服务正常。</p><h2 id="4-配置kubectl-命令行工具"><a href="#4-配置kubectl-命令行工具" class="headerlink" title="4. 配置kubectl 命令行工具"></a>4. 配置kubectl 命令行工具</h2><p><code>kubectl</code>默认从<code>~/.kube/config</code>配置文件中获取访问kube-apiserver 地址、证书、用户名等信息，需要正确配置该文件才能正常使用<code>kubectl</code>命令。</p><p>需要将下载的kubectl 二进制文件和生产的<code>~/.kube/config</code>配置文件拷贝到需要使用kubectl 命令的机器上。</p><blockquote><p>很多童鞋说这个地方不知道在哪个节点上执行，<code>kubectl</code>只是一个和<code>kube-apiserver</code>进行交互的一个命令行工具，所以你想安装到那个节点都行，master或者node任意节点都可以，比如你先在master节点上安装，这样你就可以在master节点使用<code>kubectl</code>命令行工具了，如果你想在node节点上使用(当然安装的过程肯定会用到的)，你就把master上面的<code>kubectl</code>二进制文件和<code>~/.kube/config</code>文件拷贝到对应的node节点上就行了。</p></blockquote><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/k8s/bin/env.sh &lt;&lt; EOF</span><br><span class="line">export KUBE_APISERVER="https://$&#123;MASTER_URL&#125;:6443"</span><br><span class="line">EOF</span><br><span class="line">source /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><blockquote><p>注意这里的<code>KUBE_APISERVER</code>地址，因为我们还没有安装<code>haproxy</code>，所以暂时需要手动指定使用<code>apiserver</code>的6443端口，等<code>haproxy</code>安装完成后就可以用使用443端口转发到6443端口去了。</p></blockquote><ul><li>变量KUBE_APISERVER 指定kubelet 访问的kube-apiserver 的地址，后续被写入<code>~/.kube/config</code>配置文件</li></ul><h3 id="下载kubectl"><a href="#下载kubectl" class="headerlink" title="下载kubectl"></a>下载kubectl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.k8s.io/v1.8.2/kubernetes-client-linux-amd64.tar.gz # 如果服务器上下载不下来，可以想办法下载到本地，然后scp上去即可</span><br><span class="line">tar -xzvf kubernetes-client-linux-amd64.tar.gz</span><br><span class="line">cp kubernetes/client/bin/kube* /usr/k8s/bin/</span><br><span class="line">sudo chmod a+x /usr/k8s/bin/kube*</span><br></pre></td></tr></table></figure><h3 id="创建admin-证书"><a href="#创建admin-证书" class="headerlink" title="创建admin 证书"></a>创建admin 证书</h3><p>kubectl 与kube-apiserver 的安全端口通信，需要为安全通信提供TLS 证书和密钥。创建admin 证书签名请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; admin-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "admin",</span><br><span class="line">  "hosts": [],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "ST": "BeiJing",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "O": "system:masters",</span><br><span class="line">      "OU": "System"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>后续<code>kube-apiserver</code>使用RBAC 对客户端(如kubelet、kube-proxy、Pod)请求进行授权</li><li><code>kube-apiserver</code> 预定义了一些RBAC 使用的RoleBindings，如cluster-admin 将Group <code>system:masters</code>与Role <code>cluster-admin</code>绑定，该Role 授予了调用<code>kube-apiserver</code>所有API 的权限</li><li>O 指定了该证书的Group 为<code>system:masters</code>，kubectl使用该证书访问<code>kube-apiserver</code>时，由于证书被CA 签名，所以认证通过，同时由于证书用户组为经过预授权的<code>system:masters</code>，所以被授予访问所有API 的劝降</li><li>hosts 属性值为空列表</li></ul><p>生成admin 证书和私钥： #分发证书到各个服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -ca-key=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  -config=/etc/kubernetes/ssl/ca-config.json \</span><br><span class="line">  -profile=kubernetes admin-csr.json | cfssljson -bare admin</span><br><span class="line">ls admin*</span><br><span class="line">admin.csr  admin-csr.json  admin-key.pem  admin.pem</span><br><span class="line">sudo mv admin*.pem /etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure><h3 id="创建kubectl-kubeconfig-文件"><a href="#创建kubectl-kubeconfig-文件" class="headerlink" title="创建kubectl kubeconfig 文件"></a>创建kubectl kubeconfig 文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置集群参数</span></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置客户端认证参数</span></span><br><span class="line">kubectl config set-credentials admin \</span><br><span class="line">  --client-certificate=/etc/kubernetes/ssl/admin.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --client-key=/etc/kubernetes/ssl/admin-key.pem \</span><br><span class="line">  --token=$&#123;BOOTSTRAP_TOKEN&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置上下文参数</span></span><br><span class="line">kubectl config set-context kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=admin</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认上下文</span></span><br><span class="line">kubectl config use-context kubernetes</span><br></pre></td></tr></table></figure><ul><li><code>admin.pem</code>证书O 字段值为<code>system:masters</code>，<code>kube-apiserver</code> 预定义的 RoleBinding <code>cluster-admin</code> 将 Group <code>system:masters</code> 与 Role <code>cluster-admin</code> 绑定，该 Role 授予了调用<code>kube-apiserver</code> 相关 API 的权限</li><li>生成的kubeconfig 被保存到 <code>~/.kube/config</code> 文件</li></ul><h3 id="分发kubeconfig-文件"><a href="#分发kubeconfig-文件" class="headerlink" title="分发kubeconfig 文件"></a>分发kubeconfig 文件</h3><p>将<code>~/.kube/config</code>文件拷贝到运行<code>kubectl</code>命令的机器的<code>~/.kube/</code>目录下去。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.kube</span><br></pre></td></tr></table></figure><h2 id="5-部署Flannel-网络"><a href="#5-部署Flannel-网络" class="headerlink" title="5. 部署Flannel 网络"></a>5. 部署Flannel 网络</h2><p>kubernetes 要求集群内各节点能通过Pod 网段互联互通，下面我们来使用Flannel 在所有节点上创建互联互通的Pod 网段的步骤。</p><blockquote><p>需要在所有的Node节点安装。  #所有节点（包括master）</p></blockquote><h3 id="环境变量-1"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /usr/k8s/bin/env.sh &lt;&lt; EOF</span><br><span class="line">export NODE_IP=192.168.220.100  # 当前部署节点的IP</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> 导入全局变量</span></span><br><span class="line">source /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><h3 id="创建TLS-密钥和证书-1"><a href="#创建TLS-密钥和证书-1" class="headerlink" title="创建TLS 密钥和证书"></a>创建TLS 密钥和证书</h3><p>etcd 集群启用了双向TLS 认证，所以需要为flanneld 指定与etcd 集群通信的CA 和密钥。</p><p>创建flanneld 证书签名请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; flanneld-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "flanneld",</span><br><span class="line">  "hosts": [],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "ST": "BeiJing",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "O": "k8s",</span><br><span class="line">      "OU": "System"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>生成flanneld 证书和私钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -ca-key=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  -config=/etc/kubernetes/ssl/ca-config.json \</span><br><span class="line">  -profile=kubernetes flanneld-csr.json | cfssljson -bare flanneld</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls flanneld*</span></span><br><span class="line">flanneld.csr  flanneld-csr.json  flanneld-key.pem flanneld.pem</span><br><span class="line">sudo mkdir -p /etc/flanneld/ssl   #将证书和私钥分发到各个服务器</span><br><span class="line">sudo mv flanneld*.pem /etc/flanneld/ssl</span><br></pre></td></tr></table></figure><h3 id="向etcd-写入集群Pod-网段信息"><a href="#向etcd-写入集群Pod-网段信息" class="headerlink" title="向etcd 写入集群Pod 网段信息"></a>向etcd 写入集群Pod 网段信息</h3><blockquote><p>该步骤只需在第一次部署Flannel 网络时执行，后续在其他节点上部署Flanneld 时无需再写入该信息</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">etcdctl \</span><br><span class="line">  --endpoints=$&#123;ETCD_ENDPOINTS&#125; \</span><br><span class="line">  --ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cert-file=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  --key-file=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  set $&#123;FLANNEL_ETCD_PREFIX&#125;/config '&#123;"Network":"'$&#123;CLUSTER_CIDR&#125;'", "SubnetLen": 24, "Backend": &#123;"Type": "vxlan"&#125;&#125;'</span><br><span class="line"><span class="meta">#</span><span class="bash"> 得到如下反馈信息</span></span><br><span class="line">&#123;"Network":"172.30.0.0/16", "SubnetLen": 24, "Backend": &#123;"Type": "vxlan"&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>写入的 Pod 网段(${CLUSTER_CIDR}，172.30.0.0/16) 必须与<code>kube-controller-manager</code> 的 <code>--cluster-cidr</code> 选项值一致；</li></ul><h3 id="安装和配置flanneld"><a href="#安装和配置flanneld" class="headerlink" title="安装和配置flanneld"></a>安装和配置flanneld</h3><p>前往<a href="https://github.com/coreos/flannel/releases" target="_blank" rel="noopener">flanneld release</a>页面下载最新版的flanneld 二进制文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir flannel</span><br><span class="line">wget https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz</span><br><span class="line">tar -xzvf flannel-v0.11.0-linux-amd64.tar.gz -C flannel</span><br><span class="line">sudo cp flannel/&#123;flanneld,mk-docker-opts.sh&#125; /usr/k8s/bin</span><br></pre></td></tr></table></figure><p>创建flanneld的systemd unit 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; flanneld.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Flanneld overlay address etcd agent</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">After=etcd.service</span><br><span class="line">Before=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/k8s/bin/flanneld \\</span><br><span class="line">  -etcd-cafile=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">  -etcd-certfile=/etc/flanneld/ssl/flanneld.pem \\</span><br><span class="line">  -etcd-keyfile=/etc/flanneld/ssl/flanneld-key.pem \\</span><br><span class="line">  -etcd-endpoints=$&#123;ETCD_ENDPOINTS&#125; \\</span><br><span class="line">  -etcd-prefix=$&#123;FLANNEL_ETCD_PREFIX&#125;</span><br><span class="line">ExecStartPost=/usr/k8s/bin/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS -d /run/flannel/docker</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">RequiredBy=docker.service</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>mk-docker-opts.sh</code>脚本将分配给flanneld 的Pod 子网网段信息写入到<code>/run/flannel/docker</code> 文件中，后续docker 启动时使用这个文件中的参数值为 docker0 网桥</li><li>flanneld 使用系统缺省路由所在的接口和其他节点通信，对于有多个网络接口的机器(内网和公网)，可以用 <code>--iface</code> 选项值指定通信接口(上面的 systemd unit 文件没指定这个选项)</li></ul><h3 id="启动flanneld"><a href="#启动flanneld" class="headerlink" title="启动flanneld"></a>启动flanneld</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo cp flanneld.service /etc/systemd/system/</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable flanneld</span><br><span class="line">sudo systemctl restart flanneld</span><br><span class="line">systemctl status flanneld</span><br></pre></td></tr></table></figure><h3 id="检查flanneld-服务"><a href="#检查flanneld-服务" class="headerlink" title="检查flanneld 服务"></a>检查flanneld 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig flannel.1</span><br></pre></td></tr></table></figure><h3 id="检查分配给各flanneld-的Pod-网段信息"><a href="#检查分配给各flanneld-的Pod-网段信息" class="headerlink" title="检查分配给各flanneld 的Pod 网段信息"></a>检查分配给各flanneld 的Pod 网段信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看集群 Pod 网段(/16)</span></span><br><span class="line">etcdctl \</span><br><span class="line">  --endpoints=$&#123;ETCD_ENDPOINTS&#125; \</span><br><span class="line">  --ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cert-file=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  --key-file=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  get $&#123;FLANNEL_ETCD_PREFIX&#125;/config</span><br><span class="line">&#123;"Network":"172.30.0.0/16", "SubnetLen": 24, "Backend": &#123;"Type": "vxlan"&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看已分配的 Pod 子网段列表(/24)</span></span><br><span class="line">etcdctl \</span><br><span class="line">  --endpoints=$&#123;ETCD_ENDPOINTS&#125; \</span><br><span class="line">  --ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cert-file=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  --key-file=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  ls $&#123;FLANNEL_ETCD_PREFIX&#125;/subnets</span><br><span class="line">/kubernetes/network/subnets/172.30.1.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.70.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.29.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.61.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.47.0-24</span><br><span class="line"></span><br><span class="line">查看某一 Pod 网段对应的 flanneld 进程监听的 IP 和网络参数</span><br><span class="line">etcdctl \</span><br><span class="line">  --endpoints=$&#123;ETCD_ENDPOINTS&#125; \</span><br><span class="line">  --ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cert-file=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  --key-file=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  get $&#123;FLANNEL_ETCD_PREFIX&#125;/subnets/172.30.1.0-24</span><br><span class="line">&#123;"PublicIP":"192.168.220.102","BackendType":"vxlan","BackendData":&#123;"VtepMAC":"66:51:aa:cc:3f:e7"&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="确保各节点间Pod-网段能互联互通"><a href="#确保各节点间Pod-网段能互联互通" class="headerlink" title="确保各节点间Pod 网段能互联互通"></a>确保各节点间Pod 网段能互联互通</h3><p>在各个节点部署完Flanneld 后，查看已分配的Pod 子网段列表：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> etcdctl \</span></span><br><span class="line">  --endpoints=$&#123;ETCD_ENDPOINTS&#125; \</span><br><span class="line">  --ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cert-file=/etc/flanneld/ssl/flanneld.pem \</span><br><span class="line">  --key-file=/etc/flanneld/ssl/flanneld-key.pem \</span><br><span class="line">  ls $&#123;FLANNEL_ETCD_PREFIX&#125;/subnets</span><br><span class="line">  </span><br><span class="line">/kubernetes/network/subnets/172.30.47.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.1.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.70.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.29.0-24</span><br><span class="line">/kubernetes/network/subnets/172.30.61.0-24</span><br></pre></td></tr></table></figure><p>当前五个节点分配的 Pod 网段分别是：</p><ul><li>mster1 172.30.61.0</li><li>master2 172.30.47.0</li><li>master3 172.30.1.0</li><li>node1 172.30.70.0</li><li>node2 172.30.29.0</li></ul><h2 id="6-部署master-节点"><a href="#6-部署master-节点" class="headerlink" title="6. 部署master 节点"></a>6. 部署master 节点</h2><p>kubernetes master 节点包含的组件有：</p><ul><li>kube-apiserver</li><li>kube-scheduler</li><li>kube-controller-manager</li></ul><p>目前这3个组件需要部署到同一台机器上：（后面再部署高可用的master）</p><ul><li><code>kube-scheduler</code>、<code>kube-controller-manager</code> 和 <code>kube-apiserver</code> 三者的功能紧密相关；</li><li>同时只能有一个 <code>kube-scheduler</code>、<code>kube-controller-manager</code> 进程处于工作状态，如果运行多个，则需要通过选举产生一个 leader；</li></ul><p>master 节点与node 节点上的Pods 通过Pod 网络通信，所以需要在master 节点上部署Flannel 网络。</p><h3 id="环境变量-2"><a href="#环境变量-2" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> NODE_IP=192.168.1.137  <span class="comment"># 当前部署的master 机器IP</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> /usr/k8s/bin/env.sh</span></span><br></pre></td></tr></table></figure><h3 id="下载最新版本的二进制文件"><a href="#下载最新版本的二进制文件" class="headerlink" title="下载最新版本的二进制文件"></a>下载最新版本的二进制文件</h3><p>在<a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.8.md#server-binaries" target="_blank" rel="noopener">kubernetes changelog</a> 页面下载最新版本的文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.k8s.io/v1.8.9/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">tar -xzvf kubernetes-server-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>将二进制文件拷贝到<code>/usr/k8s/bin</code>目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -r server/bin/&#123;kube-apiserver,kube-controller-manager,kube-scheduler&#125; /usr/k8s/bin/</span><br></pre></td></tr></table></figure><h3 id="创建kubernetes-证书-以下master机器都要做"><a href="#创建kubernetes-证书-以下master机器都要做" class="headerlink" title="创建kubernetes 证书 #以下master机器都要做"></a>创建kubernetes 证书 #以下master机器都要做</h3><p>创建kubernetes 证书签名请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kubernetes-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "kubernetes",</span><br><span class="line">  "hosts": [</span><br><span class="line">    "127.0.0.1",</span><br><span class="line">    "$&#123;NODE_IP&#125;",</span><br><span class="line">    "$&#123;MASTER_URL&#125;",</span><br><span class="line">    "$&#123;CLUSTER_KUBERNETES_SVC_IP&#125;",</span><br><span class="line">    "kubernetes",</span><br><span class="line">    "kubernetes.default",</span><br><span class="line">    "kubernetes.default.svc",</span><br><span class="line">    "kubernetes.default.svc.cluster",</span><br><span class="line">    "kubernetes.default.svc.cluster.local"</span><br><span class="line">  ],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "ST": "BeiJing",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "O": "k8s",</span><br><span class="line">      "OU": "System"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>如果 hosts 字段不为空则需要指定授权使用该证书的 <strong>IP 或域名列表</strong>，所以上面分别指定了当前部署的 master 节点主机 IP 以及apiserver 负载的内部域名</li><li>还需要添加 kube-apiserver 注册的名为 <code>kubernetes</code> 的服务 IP (Service Cluster IP)，一般是 kube-apiserver <code>--service-cluster-ip-range</code> 选项值指定的网段的<strong>第一个IP</strong>，如 “10.254.0.1”</li></ul><p>生成kubernetes 证书和私钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -ca-key=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  -config=/etc/kubernetes/ssl/ca-config.json \</span><br><span class="line">  -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes</span><br><span class="line">  </span><br><span class="line"><span class="meta">$</span><span class="bash"> ls kubernetes*</span></span><br><span class="line">kubernetes.csr  kubernetes-csr.json  kubernetes-key.pem  kubernetes.pem</span><br><span class="line"></span><br><span class="line">sudo mkdir -p /etc/kubernetes/ssl/</span><br><span class="line">sudo mv kubernetes*.pem /etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure><h3 id="6-1-配置和启动kube-apiserver"><a href="#6-1-配置和启动kube-apiserver" class="headerlink" title="6.1 配置和启动kube-apiserver"></a>6.1 配置和启动kube-apiserver</h3><h4 id="创建kube-apiserver-使用的客户端token-文件"><a href="#创建kube-apiserver-使用的客户端token-文件" class="headerlink" title="创建kube-apiserver 使用的客户端token 文件"></a>创建kube-apiserver 使用的客户端token 文件</h4><p>kubelet 首次启动时向kube-apiserver 发送TLS Bootstrapping 请求，kube-apiserver 验证请求中的token 是否与它配置的token.csv 一致，如果一致则自动为kubelet 生成证书和密钥。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 导入的 environment.sh 文件定义了 BOOTSTRAP_TOKEN 变量</span></span><br><span class="line">cat &gt; token.csv &lt;&lt;EOF</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;BOOTSTRAP_TOKEN&#125;,kubelet-bootstrap,10001,<span class="string">"system:kubelet-bootstrap"</span></span></span><br><span class="line">EOF</span><br><span class="line">sudo mv token.csv /etc/kubernetes/</span><br></pre></td></tr></table></figure><h4 id="创建kube-apiserver-的systemd-unit文件"><a href="#创建kube-apiserver-的systemd-unit文件" class="headerlink" title="创建kube-apiserver 的systemd unit文件"></a>创建kube-apiserver 的systemd unit文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">cat  &gt; kube-apiserver.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/k8s/bin/kube-apiserver \\</span><br><span class="line">  --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \\</span><br><span class="line">  --advertise-address=$&#123;NODE_IP&#125; \\</span><br><span class="line">  --bind-address=0.0.0.0 \\</span><br><span class="line">  --insecure-bind-address=$&#123;NODE_IP&#125; \\</span><br><span class="line">  --authorization-mode=Node,RBAC \\</span><br><span class="line">  --runtime-config=rbac.authorization.k8s.io/v1alpha1 \\</span><br><span class="line">  --kubelet-https=true \\</span><br><span class="line">  --experimental-bootstrap-token-auth \\</span><br><span class="line">  --token-auth-file=/etc/kubernetes/token.csv \\</span><br><span class="line">  --service-cluster-ip-range=$&#123;SERVICE_CIDR&#125; \\</span><br><span class="line">  --service-node-port-range=$&#123;NODE_PORT_RANGE&#125; \\</span><br><span class="line">  --tls-cert-file=/etc/kubernetes/ssl/kubernetes.pem \\</span><br><span class="line">  --tls-private-key-file=/etc/kubernetes/ssl/kubernetes-key.pem \\</span><br><span class="line">  --client-ca-file=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">  --service-account-key-file=/etc/kubernetes/ssl/ca-key.pem \\</span><br><span class="line">  --etcd-cafile=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">  --etcd-certfile=/etc/kubernetes/ssl/kubernetes.pem \\</span><br><span class="line">  --etcd-keyfile=/etc/kubernetes/ssl/kubernetes-key.pem \\</span><br><span class="line">  --etcd-servers=$&#123;ETCD_ENDPOINTS&#125; \\</span><br><span class="line">  --enable-swagger-ui=true \\</span><br><span class="line">  --allow-privileged=true \\</span><br><span class="line">  --apiserver-count=2 \\</span><br><span class="line">  --audit-log-maxage=30 \\</span><br><span class="line">  --audit-log-maxbackup=3 \\</span><br><span class="line">  --audit-log-maxsize=100 \\</span><br><span class="line">  --audit-log-path=/var/lib/audit.log \\</span><br><span class="line">  --audit-policy-file=/etc/kubernetes/audit-policy.yaml \\</span><br><span class="line">  --event-ttl=1h \\</span><br><span class="line">  --logtostderr=true \\</span><br><span class="line">  --v=6</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">Type=notify</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>如果你安装的是<strong>1.9.x</strong>版本的，一定要记住上面的参数<code>experimental-bootstrap-token-auth</code>，需要替换成<code>enable-bootstrap-token-auth</code>，因为这个参数在<strong>1.9.x</strong>里面已经废弃掉了</li><li>kube-apiserver 1.6 版本开始使用 etcd v3 API 和存储格式</li><li><code>--authorization-mode=RBAC</code> 指定在安全端口使用RBAC 授权模式，拒绝未通过授权的请求</li><li>kube-scheduler、kube-controller-manager 一般和 kube-apiserver 部署在同一台机器上，它们使用<strong>非安全端口</strong>和 kube-apiserver通信</li><li>kubelet、kube-proxy、kubectl 部署在其它 Node 节点上，如果通过<strong>安全端口</strong>访问 kube-apiserver，则必须先通过 TLS 证书认证，再通过 RBAC 授权</li><li>kube-proxy、kubectl 通过使用证书里指定相关的 User、Group 来达到通过 RBAC 授权的目的</li><li>如果使用了 kubelet TLS Boostrap 机制，则不能再指定 <code>--kubelet-certificate-authority</code>、<code>--kubelet-client-certificate</code> 和 <code>--kubelet-client-key</code> 选项，否则后续 kube-apiserver 校验 kubelet 证书时出现 ”x509: certificate signed by unknown authority“ 错误</li><li><code>--admission-control</code> 值必须包含 <code>ServiceAccount</code>，否则部署集群插件时会失败</li><li><code>--bind-address</code> 不能为 <code>127.0.0.1</code></li><li><code>--service-cluster-ip-range</code> 指定 Service Cluster IP 地址段，该地址段不能路由可达</li><li><code>--service-node-port-range=${NODE_PORT_RANGE}</code> 指定 NodePort 的端口范围</li><li>缺省情况下 kubernetes 对象保存在<code>etcd/registry</code> 路径下，可以通过 <code>--etcd-prefix</code> 参数进行调整</li><li>kube-apiserver 1.8版本后需要在<code>--authorization-mode</code>参数中添加<code>Node</code>，即：<code>--authorization-mode=Node,RBAC</code>，否则Node 节点无法注册</li><li>注意要开启审查日志功能，指定<code>--audit-log-path</code>参数是不够的，这只是指定了日志的路径，还需要指定一个审查日志策略文件：<code>--audit-policy-file</code>，我们也可以使用日志收集工具收集相关的日志进行分析。</li></ul><p>审查日志策略文件内容如下：（<strong>/etc/kubernetes/audit-policy.yaml</strong>）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">/etc/kubernetes/audit-policy.yaml</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">audit.k8s.io/v1beta1</span> <span class="comment"># This is required.</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Policy</span></span><br><span class="line"><span class="comment"># Don't generate audit events for all requests in RequestReceived stage.</span></span><br><span class="line"><span class="attr">omitStages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"RequestReceived"</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># Log pod changes at RequestResponse level</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">RequestResponse</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">      <span class="comment"># Resource "pods" doesn't match requests to any subresource of pods,</span></span><br><span class="line">      <span class="comment"># which is consistent with the RBAC policy.</span></span><br><span class="line">      <span class="attr">resources:</span> <span class="string">["pods"]</span></span><br><span class="line">  <span class="comment"># Log "pods/log", "pods/status" at Metadata level</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Metadata</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">      <span class="attr">resources:</span> <span class="string">["pods/log",</span> <span class="string">"pods/status"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don't log requests to a configmap called "controller-leader"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span></span><br><span class="line">      <span class="attr">resources:</span> <span class="string">["configmaps"]</span></span><br><span class="line">      <span class="attr">resourceNames:</span> <span class="string">["controller-leader"]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don't log watch requests by the "system:kube-proxy" on endpoints or services</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">users:</span> <span class="string">["system:kube-proxy"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["watch"]</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span> <span class="comment"># core API group</span></span><br><span class="line">      <span class="attr">resources:</span> <span class="string">["endpoints",</span> <span class="string">"services"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don't log authenticated requests to certain non-resource URL paths.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">None</span></span><br><span class="line">    <span class="attr">userGroups:</span> <span class="string">["system:authenticated"]</span></span><br><span class="line">    <span class="attr">nonResourceURLs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"/api*"</span> <span class="comment"># Wildcard matching.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"/version"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Log the request body of configmap changes in kube-system.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Request</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span> <span class="comment"># core API group</span></span><br><span class="line">      <span class="attr">resources:</span> <span class="string">["configmaps"]</span></span><br><span class="line">    <span class="comment"># This rule only applies to resources in the "kube-system" namespace.</span></span><br><span class="line">    <span class="comment"># The empty string "" can be used to select non-namespaced resources.</span></span><br><span class="line">    <span class="attr">namespaces:</span> <span class="string">["kube-system"]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Log configmap and secret changes in all other namespaces at the Metadata level.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Metadata</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span> <span class="comment"># core API group</span></span><br><span class="line">      <span class="attr">resources:</span> <span class="string">["secrets",</span> <span class="string">"configmaps"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Log all other resources in core and extensions at the Request level.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Request</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">""</span> <span class="comment"># core API group</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">"extensions"</span> <span class="comment"># Version of group should NOT be included.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># A catch-all rule to log all other requests at the Metadata level.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">level:</span> <span class="string">Metadata</span></span><br><span class="line">    <span class="comment"># Long-running requests like watches that fall under this rule will not</span></span><br><span class="line">    <span class="comment"># generate an audit event in RequestReceived.</span></span><br><span class="line">    <span class="attr">omitStages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"RequestReceived"</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>审查日志的相关配置可以查看文档了解：<a href="https://kubernetes.io/docs/tasks/debug-application-cluster/audit/" target="_blank" rel="noopener">https://kubernetes.io/docs/tasks/debug-application-cluster/audit/</a></p><h4 id="启动kube-apiserver"><a href="#启动kube-apiserver" class="headerlink" title="启动kube-apiserver"></a>启动kube-apiserver</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo cp kube-apiserver.service /etc/systemd/system/</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kube-apiserver</span><br><span class="line">sudo systemctl start kube-apiserver</span><br><span class="line">sudo systemctl status kube-apiserver</span><br></pre></td></tr></table></figure><h3 id="6-2-配置和启动kube-controller-manager"><a href="#6-2-配置和启动kube-controller-manager" class="headerlink" title="6.2 配置和启动kube-controller-manager"></a>6.2 配置和启动kube-controller-manager</h3><h4 id="创建kube-controller-manager-的systemd-unit-文件"><a href="#创建kube-controller-manager-的systemd-unit-文件" class="headerlink" title="创建kube-controller-manager 的systemd unit 文件"></a>创建kube-controller-manager 的systemd unit 文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kube-controller-manager.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/k8s/bin/kube-controller-manager \\</span><br><span class="line">  --address=127.0.0.1 \\</span><br><span class="line">  --master=http://$&#123;MASTER_URL&#125;:8080 \\</span><br><span class="line">  --allocate-node-cidrs=true \\</span><br><span class="line">  --service-cluster-ip-range=$&#123;SERVICE_CIDR&#125; \\</span><br><span class="line">  --cluster-cidr=$&#123;CLUSTER_CIDR&#125; \\</span><br><span class="line">  --cluster-name=kubernetes \\</span><br><span class="line">  --cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">  --cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem \\</span><br><span class="line">  --service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem \\</span><br><span class="line">  --root-ca-file=/etc/kubernetes/ssl/ca.pem \\</span><br><span class="line">  --leader-elect=true \\</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>--address</code> 值必须为 <code>127.0.0.1</code>，因为当前 kube-apiserver 期望 scheduler 和 controller-manager 在同一台机器</li><li><code>--master=http://${MASTER_URL}:8080</code>：使用<code>http</code>(非安全端口)与 kube-apiserver 通信，需要下面的<code>haproxy</code>安装成功后才能去掉8080端口。</li><li><code>--cluster-cidr</code> 指定 Cluster 中 Pod 的 CIDR 范围，该网段在各 Node 间必须路由可达(flanneld保证)</li><li><code>--service-cluster-ip-range</code> 参数指定 Cluster 中 Service 的CIDR范围，该网络在各 Node 间必须路由不可达，必须和 kube-apiserver 中的参数一致</li><li><code>--cluster-signing-*</code> 指定的证书和私钥文件用来签名为 TLS BootStrap 创建的证书和私钥</li><li><code>--root-ca-file</code> 用来对 kube-apiserver 证书进行校验，<strong>指定该参数后，才会在Pod 容器的 ServiceAccount 中放置该 CA 证书文件</strong></li><li><code>--leader-elect=true</code> 部署多台机器组成的 master 集群时选举产生一处于工作状态的 <code>kube-controller-manager</code> 进程</li></ul><h4 id="启动kube-controller-manager"><a href="#启动kube-controller-manager" class="headerlink" title="启动kube-controller-manager"></a>启动kube-controller-manager</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo cp kube-controller-manager.service /etc/systemd/system/</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kube-controller-manager</span><br><span class="line">sudo systemctl start kube-controller-manager</span><br><span class="line">sudo systemctl status kube-controller-manager</span><br></pre></td></tr></table></figure><h3 id="6-3-配置和启动kube-scheduler"><a href="#6-3-配置和启动kube-scheduler" class="headerlink" title="6.3 配置和启动kube-scheduler"></a>6.3 配置和启动kube-scheduler</h3><h4 id="创建kube-scheduler-的systemd-unit文件"><a href="#创建kube-scheduler-的systemd-unit文件" class="headerlink" title="创建kube-scheduler 的systemd unit文件"></a>创建kube-scheduler 的systemd unit文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kube-scheduler.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/k8s/bin/kube-scheduler \\</span><br><span class="line">  --address=127.0.0.1 \\</span><br><span class="line">  --master=http://$&#123;MASTER_URL&#125;:8080 \\</span><br><span class="line">  --leader-elect=true \\</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>--address</code> 值必须为 <code>127.0.0.1</code>，因为当前 kube-apiserver 期望 scheduler 和 controller-manager 在同一台机器</li><li><code>--master=http://${MASTER_URL}:8080</code>：使用<code>http</code>(非安全端口)与 kube-apiserver 通信，需要下面的<code>haproxy</code>启动成功后才能去掉8080端口</li><li><code>--leader-elect=true</code> 部署多台机器组成的 master 集群时选举产生一处于工作状态的 <code>kube-controller-manager</code> 进程</li></ul><h4 id="启动kube-scheduler"><a href="#启动kube-scheduler" class="headerlink" title="启动kube-scheduler"></a>启动kube-scheduler</h4><p>k8s-api.virtual.local 加hosts解析</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo cp kube-scheduler.service /etc/systemd/system/</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kube-scheduler</span><br><span class="line">sudo systemctl start kube-scheduler</span><br><span class="line">sudo systemctl status kube-scheduler</span><br></pre></td></tr></table></figure><h3 id="6-4-验证master-节点"><a href="#6-4-验证master-节点" class="headerlink" title="6.4 验证master 节点"></a>6.4 验证master 节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl get componentstatuses</span><br><span class="line">NAME                 STATUS    MESSAGE              ERROR</span><br><span class="line">scheduler            Healthy   ok</span><br><span class="line">controller-manager   Healthy   ok</span><br><span class="line">etcd-1               Healthy   &#123;"health": "true"&#125;</span><br><span class="line">etcd-2               Healthy   &#123;"health": "true"&#125;</span><br><span class="line">etcd-0               Healthy   &#123;"health": "true"&#125;</span><br></pre></td></tr></table></figure><h2 id="7-kube-apiserver-高可用"><a href="#7-kube-apiserver-高可用" class="headerlink" title="7. kube-apiserver 高可用"></a>7. kube-apiserver 高可用</h2><p>按照上面的方式在<code>master02</code>与<code>master03</code>机器上安装<code>kube-apiserver</code>、<code>kube-controller-manager</code>、<code>kube-scheduler</code>，但是现在我们还是手动指定访问的6443和8080端口的，因为我们的域名<code>k8s-api.virtual.local</code>对应的<code>master01</code>节点直接通过http 和https 还不能访问，这里我们使用<code>haproxy</code> 来代替请求。</p><blockquote><p>明白什么意思吗？就是我们需要将http默认的80端口请求转发到<code>apiserver</code>的8080端口，将https默认的443端口请求转发到<code>apiserver</code>的6443端口，所以我们这里使用<code>haproxy</code>来做请求转发。</p></blockquote><h3 id="安装haproxy"><a href="#安装haproxy" class="headerlink" title="安装haproxy"></a>安装haproxy</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://www.haproxy.org/download/2.1/src/haproxy-2.1.3.tar.gz #编译安装</span><br><span class="line">yum install gcc gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel net-tools vim iotop bc zip unzip zlib-devel lrzsz tree screen lsof tcpdump wget ntpdate</span><br><span class="line">make TARGET=linux-glibc   USE_OPENSSL=1 USE_SYSTEMD=1 USE_PCRE=1  USE_ZLIB=1  &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">yum install -y haproxy</span><br></pre></td></tr></table></figure><h3 id="配置haproxy"><a href="#配置haproxy" class="headerlink" title="配置haproxy"></a>配置haproxy</h3><p>由于集群内部有的组建是通过非安全端口访问apiserver 的，有的是通过安全端口访问apiserver 的，所以我们要配置http 和https 两种代理方式，配置文件 <code>/etc/haproxy/haproxy.cfg</code>：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">listen stats</span><br><span class="line">  bind    *:<span class="number">9000</span></span><br><span class="line">  mode    http</span><br><span class="line">  stats   enable</span><br><span class="line">  stats   hide-version</span><br><span class="line">  stats   uri       /stats</span><br><span class="line">  stats   <span class="built_in">ref</span>resh   <span class="number">30</span>s</span><br><span class="line">  stats   realm     Haproxy\ Statistics</span><br><span class="line">  stats   auth      Admin:Password</span><br><span class="line"></span><br><span class="line">frontend k8s-api</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.220</span><span class="number">.224</span>:<span class="number">443</span></span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    tcp-request inspect-delay <span class="number">5</span>s</span><br><span class="line">    tcp-request content accept <span class="keyword">if</span> &#123; req.ssl_hello_type <span class="number">1</span> &#125;</span><br><span class="line">    default_backend k8s-api</span><br><span class="line"></span><br><span class="line">backend k8s-api</span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    option tcp-check</span><br><span class="line">    balance roundrobin</span><br><span class="line">    <span class="keyword">default</span>-server <span class="built_in">int</span>er <span class="number">10</span>s downinter <span class="number">5</span>s rise <span class="number">2</span> fall <span class="number">2</span> slowstart <span class="number">60</span>s maxconn <span class="number">250</span> maxqueue <span class="number">256</span> weight <span class="number">100</span></span><br><span class="line">    server k8s-api<span class="number">-1</span> <span class="number">192.168</span><span class="number">.220</span><span class="number">.100</span>:<span class="number">6443</span> check</span><br><span class="line">    server k8s-api<span class="number">-2</span> <span class="number">192.168</span><span class="number">.220</span><span class="number">.101</span>:<span class="number">6443</span> check</span><br><span class="line"></span><br><span class="line">frontend k8s-http-api</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.220</span><span class="number">.224</span>:<span class="number">80</span></span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    default_backend k8s-http-api</span><br><span class="line"></span><br><span class="line">backend k8s-http-api</span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    option tcp-check</span><br><span class="line">    balance roundrobin</span><br><span class="line">    <span class="keyword">default</span>-server <span class="built_in">int</span>er <span class="number">10</span>s downinter <span class="number">5</span>s rise <span class="number">2</span> fall <span class="number">2</span> slowstart <span class="number">60</span>s maxconn <span class="number">250</span> maxqueue <span class="number">256</span> weight <span class="number">100</span></span><br><span class="line">    server k8s-http-api<span class="number">-1</span> <span class="number">192.168</span><span class="number">.220</span><span class="number">.100</span>:<span class="number">8080</span> check</span><br><span class="line">    server k8s-http-api<span class="number">-2</span> <span class="number">192.168</span><span class="number">.220</span><span class="number">.101</span>:<span class="number">8080</span> check</span><br></pre></td></tr></table></figure><p>通过上面的配置文件我们可以看出通过<code>https</code>的访问将请求转发给apiserver 的6443端口了，http的请求转发到了apiserver 的8080端口。</p><p>修改内核参数： /etc/sysctl.conf</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/sysctl.conf &lt;&lt; <span class="literal">EOF</span></span><br><span class="line">net.ipv4.ip_forward = <span class="number">1</span></span><br><span class="line">net.ipv4.ip_nonlocal_bind=<span class="number">1</span></span><br><span class="line"><span class="literal">EOF</span></span><br></pre></td></tr></table></figure><p>保存结果，使结果生效</p><p>sysctl -p</p><h3 id="启动haproxy"><a href="#启动haproxy" class="headerlink" title="启动haproxy"></a>启动haproxy</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start haproxy</span><br><span class="line">sudo systemctl enable haproxy</span><br><span class="line">sudo systemctl status haproxy</span><br></pre></td></tr></table></figure><p>然后我们可以通过上面<code>9000</code>端口监控我们的<code>haproxy</code>的运行状态(<code>192.168.220.100:9000/stats</code>):</p><p><img src="/2020/02/22/k8s/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84k8s%E9%9B%86%E7%BE%A4/haproxy.png" alt="haproxy stats"></p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>上面我们的<code>haproxy</code>的确可以代理我们的两个master 上的apiserver 了，但是还不是高可用的，如果master01 这个节点down 掉了，那么我们haproxy 就不能正常提供服务了。这里我们可以使用两种方法来实现高可用</p><h4 id="方式1：使用阿里云SLB"><a href="#方式1：使用阿里云SLB" class="headerlink" title="方式1：使用阿里云SLB"></a>方式1：使用阿里云SLB</h4><p>这种方式实际上是最省心的，在阿里云上建一个内网的SLB，将master01 与master02 添加到SLB 机器组中，转发80(http)和443(https)端口即可（注意下面的提示）</p><blockquote><p>注意：阿里云的负载均衡是四层TCP负责，不支持后端ECS实例既作为Real Server又作为客户端向所在的负载均衡实例发送请求。因为返回的数据包只在云服务器内部转发，不经过负载均衡，所以在后端ECS实例上去访问负载均衡的服务地址是不通的。什么意思？就是如果你要使用阿里云的SLB的话，那么你不能在<code>apiserver</code>节点上使用SLB（比如在apiserver 上安装kubectl，然后将apiserver的地址设置为SLB的负载地址使用），因为这样的话就可能造成回环了，所以简单的做法是另外用两个新的节点做<code>HA</code>实例，然后将这两个实例添加到<code>SLB</code> 机器组中。</p></blockquote><h4 id="方式2：使用keepalived"><a href="#方式2：使用keepalived" class="headerlink" title="方式2：使用keepalived"></a>方式2：使用keepalived</h4><p><code>KeepAlived</code> 是一个高可用方案，通过 VIP（即虚拟 IP）和心跳检测来实现高可用。其原理是存在一组（两台）服务器，分别赋予 Master、Backup 两个角色，默认情况下Master 会绑定VIP 到自己的网卡上，对外提供服务。Master、Backup 会在一定的时间间隔向对方发送心跳数据包来检测对方的状态，这个时间间隔一般为 2 秒钟，如果Backup 发现Master 宕机，那么Backup 会发送ARP 包到网关，把VIP 绑定到自己的网卡，此时Backup 对外提供服务，实现自动化的故障转移，当Master 恢复的时候会重新接管服务。非常类似于路由器中的虚拟路由器冗余协议（VRRP）</p><p>k8s-api.virtual.local hosts 改为 192.168.220.224</p><p>开启路由转发，这里我们定义虚拟IP为：<strong>192.168.220.224</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加以下内容</span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.ipv4.ip_nonlocal_bind = 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证并生效</span></span><br><span class="line">sysctl -p</span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证是否生效</span></span><br><span class="line">cat /proc/sys/net/ipv4/ip_forward</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>安装<code>keepalived</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y keepalived</span><br></pre></td></tr></table></figure><p>我们这里将master01 设置为Master，master02 设置为Backup，修改配置：</p><p>master1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[11:51:13 root@k8s-master1 ~]$cat /etc/keepalived/keepalived.conf </span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">   &#125;</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line"><span class="meta">   #</span><span class="bash">vrrp_strict</span></span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">   vrrp_iptables</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.200.224/24 dev ens33 label ens33:0</span><br><span class="line">    &#125;</span><br><span class="line">    # 使用单播通信，默认是组播通信</span><br><span class="line">    unicast_src_ip 192.168.220.100</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        192.168.220.101</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_haproxy</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>统一的方式在master02 节点上安装keepalived，修改配置，只需要将state 更改成BACKUP，priority更改成99，unicast_src_ip 与unicast_peer 地址修改即可。</p><p>启动keepalived:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start keepalived</span><br><span class="line">systemctl enable keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看日志</span></span><br><span class="line">journalctl -f -u keepalived</span><br></pre></td></tr></table></figure><p>验证虚拟IP:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用ifconfig -a 命令查看不到，要使用ip addr</span></span><br><span class="line">ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:16:3e:00:55:c1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.1.137/24 brd 192.168.1.255 scope global dynamic eth0</span><br><span class="line">       valid_lft 31447746sec preferred_lft 31447746sec</span><br><span class="line">    inet 192.168.1.139/24 brd 192.168.1.255 scope global secondary eth0-vip</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><blockquote><p>到这里，我们就可以将上面的6443端口和8080端口去掉了，可以手动将<code>kubectl</code>生成的<code>config</code>文件(<code>~/.kube/config</code>)中的server 地址6443端口去掉</p><p>另外<code>kube-controller-manager</code>和<code>kube-scheduler</code>的<strong>–master</strong>参数中的8080端口去掉了，然后分别重启这两个组件即可。</p></blockquote><p>验证apiserver：关闭master01 节点上的kube-apiserver 进程，curl 192.168.220.224 是否正确</p><blockquote><p>master01 与master 02 节点都需要安装keepalived 和haproxy，实际上我们虚拟IP的自身检测应该是检测haproxy，脚本大家可以自行更改</p></blockquote><p><img src="/2020/02/22/k8s/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84k8s%E9%9B%86%E7%BE%A4/apiserver-ha.png" alt="kube-apiserver ha"></p><p>这样我们就实现了接入层apiserver 的高可用了，一个部分是多活的apiserver 服务，另一个部分是一主一备的haproxy 服务。</p><h3 id="kube-controller-manager-和kube-scheduler-的高可用"><a href="#kube-controller-manager-和kube-scheduler-的高可用" class="headerlink" title="kube-controller-manager 和kube-scheduler 的高可用"></a>kube-controller-manager 和kube-scheduler 的高可用</h3><p>Kubernetes 的管理层服务包括<code>kube-scheduler</code>和<code>kube-controller-manager</code>。kube-scheduler和kube-controller-manager使用一主多从的高可用方案，在<strong>同一时刻只允许一个服务</strong>处以具体的任务。Kubernetes中实现了一套简单的选主逻辑，依赖Etcd实现scheduler和controller-manager的选主功能。如果scheduler和controller-manager在启动的时候设置了<code>leader-elect</code>参数，它们在启动后会先尝试获取leader节点身份，只有在获取leader节点身份后才可以执行具体的业务逻辑。它们分别会在Etcd中创建kube-scheduler和kube-controller-manager的endpoint，endpoint的信息中记录了当前的leader节点信息，以及记录的上次更新时间。leader节点会定期更新endpoint的信息，维护自己的leader身份。每个从节点的服务都会定期检查endpoint的信息，如果endpoint的信息在时间范围内没有更新，它们会尝试更新自己为leader节点。scheduler服务以及controller-manager服务之间不会进行通信，利用Etcd的强一致性，能够保证在分布式高并发情况下leader节点的全局唯一性。整体方案如下图所示：</p><p><img src="/2020/02/22/k8s/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84k8s%E9%9B%86%E7%BE%A4/1.png" alt></p><p>当集群中的leader节点服务异常后，其它节点的服务会尝试更新自身为leader节点，当有多个节点同时更新endpoint时，由Etcd保证只有一个服务的更新请求能够成功。通过这种机制sheduler和controller-manager可以保证在leader节点宕机后其它的节点可以顺利选主，保证服务故障后快速恢复。当集群中的网络出现故障时对服务的选主影响不是很大，因为scheduler和controller-manager是依赖Etcd进行选主的，在网络故障后，可以和Etcd通信的主机依然可以按照之前的逻辑进行选主，就算集群被切分，Etcd也可以保证同一时刻只有一个节点的服务处于leader状态。</p><h2 id="8-部署Node-节点"><a href="#8-部署Node-节点" class="headerlink" title="8. 部署Node 节点"></a>8. 部署Node 节点</h2><p>kubernetes Node 节点包含如下组件：</p><ul><li>flanneld</li><li>docker</li><li>kubelet</li><li>kube-proxy</li></ul><h3 id="环境变量-3"><a href="#环境变量-3" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export KUBE_APISERVER="https://$&#123;MASTER_URL&#125;"  // 如果你没有安装`haproxy`的话，还是需要使用6443端口的哦</span><br><span class="line">export NODE_IP=192.168.1.170  # 当前部署的节点 IP</span><br><span class="line"></span><br><span class="line">source /usr/k8s/bin/env.sh</span><br></pre></td></tr></table></figure><p>按照上面的步骤安装配置好flanneld</p><h3 id="开启路由转发"><a href="#开启路由转发" class="headerlink" title="开启路由转发"></a>开启路由转发</h3><p>修改<code>/etc/sysctl.conf</code>文件，添加下面的规则：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h3 id="配置docker"><a href="#配置docker" class="headerlink" title="配置docker"></a>配置docker</h3><p>你可以用二进制或yum install 的方式来安装docker，然后修改docker 的systemd unit 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/lib/systemd/system/docker.service  # 用systemctl status docker 命令可查看unit 文件路径</span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"><span class="meta">#</span><span class="bash"> the default is not to use systemd <span class="keyword">for</span> cgroups because the delegate issues still</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> exists and systemd currently does not support the cgroup feature <span class="built_in">set</span> required</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">for</span> containers run by docker</span></span><br><span class="line">EnvironmentFile=-/run/flannel/docker</span><br><span class="line">ExecStart=/usr/bin/dockerd --log-level=info $DOCKER_NETWORK_OPTIONS</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line"><span class="meta">#</span><span class="bash"> Having non-zero Limit*s causes performance problems due to accounting overhead</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">in</span> the kernel. We recommend using cgroups to <span class="keyword">do</span> container-local accounting.</span></span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment TasksMax <span class="keyword">if</span> your systemd version supports it.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Only systemd 226 and above support this version.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">TasksMax=infinity</span></span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> delegate yes so that systemd does not reset the cgroups of docker containers</span></span><br><span class="line">Delegate=yes</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">kill</span> only the docker process, not all processes <span class="keyword">in</span> the cgroup</span></span><br><span class="line">KillMode=process</span><br><span class="line"><span class="meta">#</span><span class="bash"> restart the docker process <span class="keyword">if</span> it exits prematurely</span></span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><ul><li>dockerd 运行时会调用其它 docker 命令，如 docker-proxy，所以需要将 docker 命令所在的目录加到 PATH 环境变量中</li><li>flanneld 启动时将网络配置写入到 <code>/run/flannel/docker</code> 文件中的变量 <code>DOCKER_NETWORK_OPTIONS</code>，dockerd 命令行上指定该变量值来设置 docker0 网桥参数</li><li>如果指定了多个 <code>EnvironmentFile</code> 选项，则必须将 <code>/run/flannel/docker</code> 放在最后(确保 docker0 使用 flanneld 生成的 bip 参数)</li><li>不能关闭默认开启的 <code>--iptables</code> 和 <code>--ip-masq</code> 选项</li><li>如果内核版本比较新，建议使用 <code>overlay</code> 存储驱动</li><li>docker 从 1.13 版本开始，可能将 <strong>iptables FORWARD chain的默认策略设置为DROP</strong>，从而导致 ping 其它 Node 上的 Pod IP 失败，遇到这种情况时，需要手动设置策略为 <code>ACCEPT</code>：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -P FORWARD ACCEPT</span><br></pre></td></tr></table></figure><p>如果没有开启上面的路由转发(<code>net.ipv4.ip_forward=1</code>)，则需要把以下命令写入<code>/etc/rc.local</code>文件中，防止节点重启<strong>iptables FORWARD chain的默认策略又还原为DROP</strong>（下面的开机脚本我测试了几次都没生效，不知道是不是方法有误，所以最好的方式还是开启上面的路由转发功能，一劳永逸）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sleep 60 &amp;&amp; /sbin/iptables -P FORWARD ACCEPT</span><br></pre></td></tr></table></figure><ul><li>为了加快 pull image 的速度，可以使用国内的仓库镜像服务器，同时增加下载的并发数。(如果 dockerd 已经运行，则需要重启 dockerd 生效。)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">  &#123;</span><br><span class="line">    "max-concurrent-downloads": 10</span><br><span class="line">  &#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl stop firewalld</span><br><span class="line">sudo systemctl disable firewalld</span><br><span class="line">sudo iptables -F &amp;&amp; sudo iptables -X &amp;&amp; sudo iptables -F -t nat &amp;&amp; sudo iptables -X -t nat</span><br><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><ul><li>需要关闭 firewalld(centos7)/ufw(ubuntu16.04)，否则可能会重复创建 iptables 规则</li><li>最好清理旧的 iptables rules 和 chains 规则</li><li>执行命令：docker version，检查docker服务是否正常</li></ul><h3 id="安装和配置kubelet"><a href="#安装和配置kubelet" class="headerlink" title="安装和配置kubelet"></a>安装和配置kubelet</h3><p>kubelet 启动时向kube-apiserver 发送TLS bootstrapping 请求，需要先将bootstrap token 文件中的kubelet-bootstrap 用户赋予system:node-bootstrapper 角色，然后kubelet 才有权限创建认证请求(certificatesigningrequests)：</p><blockquote><p>kubelet就是运行在Node节点上的，所以这一步安装是在所有的Node节点上，如果你想把你的Master也当做Node节点的话，当然也可以在Master节点上安装的。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap</span><br></pre></td></tr></table></figure><ul><li><code>--user=kubelet-bootstrap</code> 是文件 <code>/etc/kubernetes/token.csv</code> 中指定的用户名，同时也写入了文件 <code>/etc/kubernetes/bootstrap.kubeconfig</code></li></ul><p>另外1.8 版本中还需要为Node 请求创建一个RBAC 授权规则：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-nodes --clusterrole=system:node --group=system:nodes</span><br></pre></td></tr></table></figure><p>然后下载最新的kubelet 和kube-proxy 二进制文件（前面下载kubernetes 目录下面其实也有）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.k8s.io/v1.8.2/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">tar -xzvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">cd kubernetes</span><br><span class="line">tar -xzvf  kubernetes-src.tar.gz</span><br><span class="line">sudo cp -r ./server/bin/&#123;kube-proxy,kubelet&#125; /usr/k8s/bin/</span><br></pre></td></tr></table></figure><h3 id="创建kubelet-bootstapping-kubeconfig-文件"><a href="#创建kubelet-bootstapping-kubeconfig-文件" class="headerlink" title="创建kubelet bootstapping kubeconfig 文件"></a>创建kubelet bootstapping kubeconfig 文件</h3><p> 在node执行(node需要bootstrap.kubeconfig文件)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置集群参数</span></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置客户端认证参数</span></span><br><span class="line">kubectl config set-credentials kubelet-bootstrap \</span><br><span class="line">  --token=$&#123;BOOTSTRAP_TOKEN&#125; \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置上下文参数</span></span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kubelet-bootstrap \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=bootstrap.kubeconfig</span><br><span class="line">mv bootstrap.kubeconfig /etc/kubernetes/</span><br></pre></td></tr></table></figure><ul><li><code>--embed-certs</code> 为 <code>true</code> 时表示将 <code>certificate-authority</code> 证书写入到生成的 <code>bootstrap.kubeconfig</code> 文件中；</li><li>设置 kubelet 客户端认证参数时<strong>没有</strong>指定秘钥和证书，后续由 <code>kube-apiserver</code> 自动生成；</li></ul><h3 id="创建kubelet-的systemd-unit-文件"><a href="#创建kubelet-的systemd-unit-文件" class="headerlink" title="创建kubelet 的systemd unit 文件"></a>创建kubelet 的systemd unit 文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/lib/kubelet # 必须先创建工作目录</span><br><span class="line">cat &gt; kubelet.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=docker.service</span><br><span class="line">Requires=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/var/lib/kubelet</span><br><span class="line">ExecStart=/usr/k8s/bin/kubelet \\</span><br><span class="line">  --fail-swap-on=false \\</span><br><span class="line">  --cgroup-driver=cgroupfs \\</span><br><span class="line">  --address=$&#123;NODE_IP&#125; \\</span><br><span class="line">  --hostname-override=$&#123;NODE_IP&#125; \\</span><br><span class="line">  --experimental-bootstrap-kubeconfig=/etc/kubernetes/bootstrap.kubeconfig \\</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \\</span><br><span class="line">  --require-kubeconfig \\</span><br><span class="line">  --cert-dir=/etc/kubernetes/ssl \\</span><br><span class="line">  --cluster-dns=$&#123;CLUSTER_DNS_SVC_IP&#125; \\</span><br><span class="line">  --cluster-domain=$&#123;CLUSTER_DNS_DOMAIN&#125; \\</span><br><span class="line">  --hairpin-mode promiscuous-bridge \\</span><br><span class="line">  --allow-privileged=true \\</span><br><span class="line">  --serialize-image-pulls=false \\</span><br><span class="line">  --logtostderr=true \\</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p><strong>请仔细阅读下面的注意事项，不然可能会启动失败</strong>。</p></blockquote><ul><li><code>--fail-swap-on</code>参数，这个一定要注意，<strong>Kubernetes 1.8开始要求关闭系统的Swap</strong>，如果不关闭，默认配置下kubelet将无法启动，也可以通过kubelet的启动参数<code>–fail-swap-on=false</code>来避免该问题</li><li><code>--cgroup-driver</code>参数，kubelet 用来维护主机的的 cgroups 的，默认是<code>cgroupfs</code>，但是这个地方的值需要你根据docker 的配置来确定（<code>docker info |grep cgroup</code>）</li><li><code>-address</code> 不能设置为 <code>127.0.0.1</code>，否则后续 Pods 访问 kubelet 的 API 接口时会失败，因为 Pods 访问的 <code>127.0.0.1</code>指向自己而不是 kubelet</li><li>如果设置了 <code>--hostname-override</code> 选项，则 <code>kube-proxy</code> 也需要设置该选项，否则会出现找不到 Node 的情况</li><li><code>--experimental-bootstrap-kubeconfig</code> 指向 bootstrap kubeconfig 文件，kubelet 使用该文件中的用户名和 token 向 kube-apiserver 发送 TLS Bootstrapping 请求</li><li>管理员通过了 CSR 请求后，kubelet 自动在 <code>--cert-dir</code> 目录创建证书和私钥文件(<code>kubelet-client.crt</code> 和 <code>kubelet-client.key</code>)，然后写入 <code>--kubeconfig</code> 文件(自动创建 <code>--kubeconfig</code> 指定的文件)</li><li>建议在 <code>--kubeconfig</code> 配置文件中指定 <code>kube-apiserver</code> 地址，如果未指定 <code>--api-servers</code> 选项，则必须指定 <code>--require-kubeconfig</code> 选项后才从配置文件中读取 kue-apiserver 的地址，否则 kubelet 启动后将找不到 kube-apiserver (日志中提示未找到 API Server），<code>kubectl get nodes</code> 不会返回对应的 Node 信息</li><li><code>--cluster-dns</code> 指定 kubedns 的 Service IP(可以先分配，后续创建 kubedns 服务时指定该 IP)，<code>--cluster-domain</code> 指定域名后缀，这两个参数同时指定后才会生效</li></ul><h3 id="启动kubelet"><a href="#启动kubelet" class="headerlink" title="启动kubelet"></a>启动kubelet</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo cp kubelet.service /etc/systemd/system/kubelet.service</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kubelet</span><br><span class="line">sudo systemctl start kubelet</span><br><span class="line">systemctl status kubelet</span><br></pre></td></tr></table></figure><h3 id="通过kubelet-的TLS-证书请求"><a href="#通过kubelet-的TLS-证书请求" class="headerlink" title="通过kubelet 的TLS 证书请求"></a>通过kubelet 的TLS 证书请求</h3><p>有几个node节点就有几个证书请求</p><p>kubelet 首次启动时向kube-apiserver 发送证书签名请求，必须通过后kubernetes 系统才会将该 Node 加入到集群。查看未授权的CSR 请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl get csr</span><br><span class="line">NAME                                                   AGE       REQUESTOR           CONDITION</span><br><span class="line">node-csr-j6-yJCcqj2wY3AmWh0R13aNwZw-EX3-rnJ1LNYqPlY8   10s       kubelet-bootstrap   Pending</span><br><span class="line">node-csr-kvQwPMrqwy5Xee0VLD8ZtLIHPo2HDBd_XyzL5WLivb4   1m        kubelet-bootstrap   Approved,Issued</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#一个node已经同意</span></span></span><br><span class="line">kubectl get nodes</span><br><span class="line">No resources found.</span><br></pre></td></tr></table></figure><p>通过CSR 请求：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl certificate approve node-csr-j6-yJCcqj2wY3AmWh0R13aNwZw-EX3-rnJ1LNYqPlY8</span><br><span class="line">certificatesigningrequest "node-csr-j6-yJCcqj2wY3AmWh0R13aNwZw-EX3-rnJ1LNYqPlY8" approved</span><br><span class="line">kubectl get nodes</span><br><span class="line">NAME            STATUS    ROLES     AGE       VERSION</span><br><span class="line">192.168.1.170   Ready     &lt;none&gt;    48s       v1.8.9</span><br></pre></td></tr></table></figure><p><img src="/2020/02/22/k8s/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84k8s%E9%9B%86%E7%BE%A4/nodes.png" alt></p><p>自动生成了kubelet kubeconfig 文件和公私钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ls -l /etc/kubernetes/kubelet.kubeconfig</span><br><span class="line">-rw------- 1 root root 2280 Nov  7 10:26 /etc/kubernetes/kubelet.kubeconfig</span><br><span class="line">ls -l /etc/kubernetes/ssl/kubelet*</span><br><span class="line">-rw-r--r-- 1 root root 1046 Nov  7 10:26 /etc/kubernetes/ssl/kubelet-client.crt</span><br><span class="line">-rw------- 1 root root  227 Nov  7 10:22 /etc/kubernetes/ssl/kubelet-client.key</span><br><span class="line">-rw-r--r-- 1 root root 1115 Nov  7 10:16 /etc/kubernetes/ssl/kubelet.crt</span><br><span class="line">-rw------- 1 root root 1675 Nov  7 10:16 /etc/kubernetes/ssl/kubelet.key</span><br></pre></td></tr></table></figure><h3 id="配置kube-proxy"><a href="#配置kube-proxy" class="headerlink" title="配置kube-proxy"></a>配置kube-proxy</h3><h4 id="创建kube-proxy-证书签名请求："><a href="#创建kube-proxy-证书签名请求：" class="headerlink" title="创建kube-proxy 证书签名请求："></a>创建kube-proxy 证书签名请求：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kube-proxy-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "system:kube-proxy",</span><br><span class="line">  "hosts": [],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "ST": "BeiJing",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "O": "k8s",</span><br><span class="line">      "OU": "System"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>CN 指定该证书的 User 为 <code>system:kube-proxy</code></li><li><code>kube-apiserver</code> 预定义的 RoleBinding <code>system:node-proxier</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code>绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限</li><li>hosts 属性值为空列表</li></ul><h4 id="生成kube-proxy-客户端证书和私钥"><a href="#生成kube-proxy-客户端证书和私钥" class="headerlink" title="生成kube-proxy 客户端证书和私钥"></a>生成kube-proxy 客户端证书和私钥</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -ca-key=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  -config=/etc/kubernetes/ssl/ca-config.json \</span><br><span class="line">  -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy</span><br><span class="line">ls kube-proxy*</span><br><span class="line">kube-proxy.csr  kube-proxy-csr.json  kube-proxy-key.pem  kube-proxy.pem</span><br><span class="line">sudo mv kube-proxy*.pem /etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure><h4 id="创建kube-proxy-kubeconfig-文件"><a href="#创建kube-proxy-kubeconfig-文件" class="headerlink" title="创建kube-proxy kubeconfig 文件"></a>创建kube-proxy kubeconfig 文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置集群参数</span></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置客户端认证参数</span></span><br><span class="line">kubectl config set-credentials kube-proxy \</span><br><span class="line">  --client-certificate=/etc/kubernetes/ssl/kube-proxy.pem \</span><br><span class="line">  --client-key=/etc/kubernetes/ssl/kube-proxy-key.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置上下文参数</span></span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-proxy \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">mv kube-proxy.kubeconfig /etc/kubernetes/</span><br></pre></td></tr></table></figure><ul><li>设置集群参数和客户端认证参数时 <code>--embed-certs</code> 都为 <code>true</code>，这会将 <code>certificate-authority</code>、<code>client-certificate</code> 和 <code>client-key</code> 指向的证书文件内容写入到生成的 <code>kube-proxy.kubeconfig</code> 文件中</li><li><code>kube-proxy.pem</code> 证书中 CN 为 <code>system:kube-proxy</code>，<code>kube-apiserver</code> 预定义的 RoleBinding <code>cluster-admin</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code> 绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限</li></ul><h4 id="创建kube-proxy-的systemd-unit-文件"><a href="#创建kube-proxy-的systemd-unit-文件" class="headerlink" title="创建kube-proxy 的systemd unit 文件"></a>创建kube-proxy 的systemd unit 文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /var/lib/kube-proxy # 必须先创建工作目录</span><br><span class="line">cat &gt; kube-proxy.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kube-Proxy Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/var/lib/kube-proxy</span><br><span class="line">ExecStart=/usr/k8s/bin/kube-proxy \\</span><br><span class="line">  --bind-address=$&#123;NODE_IP&#125; \\</span><br><span class="line">  --hostname-override=$&#123;NODE_IP&#125; \\</span><br><span class="line">  --cluster-cidr=$&#123;SERVICE_CIDR&#125; \\</span><br><span class="line">  --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig \\</span><br><span class="line">  --logtostderr=true \\</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li><code>--hostname-override</code> 参数值必须与 kubelet 的值一致，否则 kube-proxy 启动后会找不到该 Node，从而不会创建任何 iptables 规则</li><li><code>--cluster-cidr</code> 必须与 kube-apiserver 的 <code>--service-cluster-ip-range</code> 选项值一致</li><li>kube-proxy 根据 <code>--cluster-cidr</code> 判断集群内部和外部流量，指定 <code>--cluster-cidr</code> 或 <code>--masquerade-all</code> 选项后 kube-proxy 才会对访问 Service IP 的请求做 SNAT</li><li><code>--kubeconfig</code> 指定的配置文件嵌入了 kube-apiserver 的地址、用户名、证书、秘钥等请求和认证信息</li><li>预定义的 RoleBinding <code>cluster-admin</code> 将User <code>system:kube-proxy</code> 与 Role <code>system:node-proxier</code> 绑定，该 Role 授予了调用 <code>kube-apiserver</code> Proxy 相关 API 的权限</li></ul><h4 id="启动kube-proxy"><a href="#启动kube-proxy" class="headerlink" title="启动kube-proxy"></a>启动kube-proxy</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo mv kube-proxy.service /etc/systemd/system/</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kube-proxy</span><br><span class="line">sudo systemctl start kube-proxy</span><br><span class="line">systemctl status kube-proxy</span><br></pre></td></tr></table></figure><h3 id="验证集群功能"><a href="#验证集群功能" class="headerlink" title="验证集群功能"></a>验证集群功能</h3><p>定义yaml 文件：（将下面内容保存为：nginx-ds.yaml）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&gt;</span> <span class="string">nginx-ds.yaml</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ds</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ds</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx-ds</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.7.9</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>创建 Pod 和服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f nginx-ds.yaml</span><br><span class="line">service "nginx-ds" created</span><br><span class="line">daemonset "nginx-ds" created</span><br></pre></td></tr></table></figure><h3 id="创建失败："><a href="#创建失败：" class="headerlink" title="创建失败："></a>创建失败：</h3><p>describe 出现Failed create pod sandbox.</p><p>journalctl -u kubelet -n 100</p><p><img src="/2020/02/22/k8s/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84k8s%E9%9B%86%E7%BE%A4/2.png" alt></p><p>解决方法如下，从docker.io把pause-amd64镜像取下来，然后做个标签。这样就可以解决问题。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull googlecontainer/pause-amd64:<span class="number">3.0</span></span><br><span class="line">docker tag googlecontainer/pause-amd64:<span class="number">3.0</span> gcr.io/google_containers/pause-amd64:<span class="number">3.0</span></span><br></pre></td></tr></table></figure><p>执行下面的命令查看Pod 和SVC：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -o wide</span><br><span class="line">NAME             READY     STATUS    RESTARTS   AGE       IP           NODE</span><br><span class="line">nginx-ds-f29zt   1/1       Running   0          23m       172.17.0.2   192.168.1.170</span><br><span class="line">kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">nginx-ds     NodePort    10.254.6.249   &lt;none&gt;        80:30813/TCP   24m</span><br></pre></td></tr></table></figure><p>可以看到：</p><ul><li>服务IP：10.254.6.249</li><li>服务端口：80</li><li>NodePort端口：30813</li></ul><p>在所有 Node 上执行：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl <span class="number">10.254</span><span class="number">.6</span><span class="number">.249</span></span><br><span class="line">$ curl <span class="number">192.168</span><span class="number">.1</span><span class="number">.170</span>:<span class="number">30813</span></span><br></pre></td></tr></table></figure><p>执行上面的命令预期都会输出nginx 欢迎页面内容，表示我们的Node 节点正常运行了。</p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker简介</title>
      <link href="/2020/02/21/docker/docker/"/>
      <url>/2020/02/21/docker/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-简介"><a href="#Docker-简介" class="headerlink" title="Docker 简介"></a>Docker 简介</h1><h2 id="什么是-Docker？"><a href="#什么是-Docker？" class="headerlink" title="什么是 Docker？"></a>什么是 Docker？</h2><p><code>Docker</code>的英文翻译是“搬运工”的意思，他搬运的东西就是我们常说的集装箱<code>Container</code>，Container 里面装的是任意类型的 App，我们的开发人员可以通过 Docker 将App 变成一种标准化的、可移植的、自管理的组件，我们可以在任何主流的操作系统中开发、调试和运行。</p><a id="more"></a><p>从概念上来看 Docker 和我们传统的虚拟机比较类似，只是更加轻量级，更加方便使，Docker 和虚拟机最主要的区别有以下几点：</p><ul><li>虚拟化技术依赖的是物理CPU和内存，是硬件级别的；而我们的 Docker 是构建在操作系统层面的，利用操作系统的容器化技术，所以 Docker 同样的可以运行在虚拟机上面。</li><li>我们知道虚拟机中的系统就是我们常说的操作系统镜像，比较复杂；而 Docker 比较轻量级，我们可以用 Docker 部署一个独立的 Redis，就类似于在虚拟机当中安装一个 Redis 应用，但是我们用 Docker 部署的应用是完全隔离的。</li><li>我们都知道传统的虚拟化技术是通过快照来保存状态的；而 Docker 引入了类似于源码管理的机制，将容器的快照历史版本一一记录下来，切换成本非常之低。</li><li>传统虚拟化技术在构建系统的时候非常复杂；而 Docker 可以通过一个简单的 Dockerfile 文件来构建整个容器，更重要的是 Dockerfile 可以手动编写，这样应用程序开发人员可以通过发布 Dockerfile 来定义应用的环境和依赖，这样对于持续交付非常有利。<br><img src="/2020/02/21/docker/docker/docker-what.png" alt="what-is-docker"><br>​​​​</li></ul><h2 id="为啥要用容器"><a href="#为啥要用容器" class="headerlink" title="为啥要用容器?"></a>为啥要用容器?</h2><p>应用容器是个啥样子呢，一个做好的应用容器长得就像一个装好了一组特定应用的虚拟机一样，比如我现在想用 Redis，那我就找个装好了 Redis 的容器就可以了，然后运行起来，我就能直接使用了。</p><p>那为什么不能直接安装一个 Redis 呢？肯定是可行的，但是有的时候根据每个人电脑的不同，在安装的时候可能会报出各种各样的错误，万一你的机器中毒了，你的电脑挂了，你所有的服务都需要重新安装。但是有了 Docker 或者说有了容器就不一样了，你就相当于有了一个可以运行起来的虚拟机，只要你能运行容器，Redis 的配置就省了。而且如果你想换个电脑，没问题，很简单，直接把容器”端过来”就可以使用容器里面的服务了。</p><h2 id="Docker-Engine"><a href="#Docker-Engine" class="headerlink" title="Docker Engine"></a>Docker Engine</h2><p><code>Docker Engine</code>是一个<strong>C/S</strong>架构的应用程序，主要包含下面几个组件：</p><ul><li>常驻后台进程<code>Dockerd</code></li><li>一个用来和 Dockerd 交互的 REST API Server</li><li>命令行<code>CLI</code>接口，通过和 REST API 进行交互（我们经常使用的 docker 命令）</li></ul><p><img src="/2020/02/21/docker/docker/docker-engine.png" alt="docker engine"><br>​​</p><h2 id="Docker-架构"><a href="#Docker-架构" class="headerlink" title="Docker 架构"></a>Docker 架构</h2><p>Docker 使用 C/S （客户端/服务器）体系的架构，Docker 客户端与 Docker 守护进程通信，Docker 守护进程负责构建，运行和分发 Docker 容器。Docker 客户端和守护进程可以在同一个系统上运行，也可以将 Docker 客户端连接到远程 Docker 守护进程。Docker 客户端和守护进程使用 REST API 通过<code>UNIX</code>套接字或网络接口进行通信。<br><img src="/2020/02/21/docker/docker/docker-structrue.png" alt="docker structrue"><br>​​</p><ul><li>Docker Damon：dockerd，用来监听 Docker API 的请求和管理 Docker 对象，比如镜像、容器、网络和 Volume。</li><li>Docker Client：docker，docker client 是我们和 Docker 进行交互的最主要的方式方法，比如我们可以通过 docker run 命令来运行一个容器，然后我们的这个 client 会把命令发送给上面的 Dockerd，让他来做真正事情。</li><li>Docker Registry：用来存储 Docker 镜像的仓库，Docker Hub 是 Docker 官方提供的一个公共仓库，而且 Docker 默认也是从 Docker Hub 上查找镜像的，当然你也可以很方便的运行一个私有仓库，当我们使用 docker pull 或者 docker run 命令时，就会从我们配置的 Docker 镜像仓库中去拉取镜像，使用 docker push 命令时，会将我们构建的镜像推送到对应的镜像仓库中。</li><li>Images：镜像，镜像是一个只读模板，带有创建 Docker 容器的说明，一般来说的，镜像会基于另外的一些基础镜像并加上一些额外的自定义功能。比如，你可以构建一个基于 Centos 的镜像，然后在这个基础镜像上面安装一个 Nginx 服务器，这样就可以构成一个属于我们自己的镜像了。</li><li>Containers：容器，容器是一个镜像的可运行的实例，可以使用 Docker REST API 或者 CLI 来操作容器，容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的<a href="https://en.wikipedia.org/wiki/Linux_namespaces" target="_blank" rel="noopener">命名空间</a>。因此容器可以拥有自己的 <strong>root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间</strong>。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全。</li><li>底层技术支持：Namespaces（做隔离）、CGroups（做资源限制）、UnionFS（镜像和容器的分层） the-underlying-technology  Docker 底层架构分析</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接前往<a href="https://docs.docker.com/install/" target="_blank" rel="noopener">官方文档</a>选择合适的平台安装即可，比如我们这里想要在<code>centos</code>系统上安装 Docker，这前往地址<a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/centos/</a>根据提示安装即可。</p><p>安装依赖软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br></pre></td></tr></table></figure><p>添加软件仓库，我们这里使用稳定版 Docker，执行下面命令添加 yum 仓库地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager \</span></span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>然后直接安装即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install docker-ce</span></span><br></pre></td></tr></table></figure><p>如果要安装指定的版本，可以使用 yum list 列出可用的版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum list docker-ce --showduplicates | sort -r</span></span><br><span class="line">docker-ce.x86_64            18.03.0.ce-1.el7.centos             docker-ce-stable</span><br></pre></td></tr></table></figure><p>比如这里可以安装<strong>18.03.0.ce</strong>版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install docker-ce-18.03.0.ce</span></span><br></pre></td></tr></table></figure><p>要启动 Docker 也非常简单：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start docker</span></span><br></pre></td></tr></table></figure><p>另外一种安装方式是可以直接下载指定的软件包直接安装即可，前往地址：<a href="https://download.docker.com/linux/centos/7/x86_64/stable/Packages/" target="_blank" rel="noopener">https://download.docker.com/linux/centos/7/x86_64/stable/Packages/</a> 找到合适的<code>.rpm</code>包下载，然后安装即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install /path/to/package.rpm</span></span><br></pre></td></tr></table></figure><p>test</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> 理论 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix常用功能(tcp，nginx，memcaches，redis)</title>
      <link href="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/"/>
      <url>/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">监控linux tcp连接数</span><br><span class="line">端口转换状态</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/9R3J6BRUU_G@C1RX0FB.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TCP三次握手</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715135449.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TCP四次挥手</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715135510.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">监控TCP连接数的数据脚本</span><br><span class="line"><span class="comment"># vim /etc/zabbix/zabbix_agentd.d/tcp_conn.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">tcp_conn_status</span></span>()&#123;</span><br><span class="line">        TCP_STAT=<span class="variable">$1</span></span><br><span class="line">   ss -ant | awk <span class="string">'NR&gt;1 &#123;++s[$1]&#125; END &#123;for(k in s) print k,s[k]&#125;'</span> &gt; /tmp/tcp_conn.txt</span><br><span class="line">   TCP_NUM=$(grep <span class="string">"<span class="variable">$TCP_STAT</span>"</span> /tmp/tcp_conn.txt | cut -d <span class="string">' '</span> -f2)</span><br><span class="line">   <span class="keyword">if</span> [ -z <span class="variable">$TCP_NUM</span> ];<span class="keyword">then</span></span><br><span class="line">           TCP_NUM=0</span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$TCP_NUM</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">            tcp_status)</span><br><span class="line">                tcp_conn_status <span class="variable">$2</span>;</span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main <span class="variable">$1</span> <span class="variable">$2</span></span><br><span class="line"></span><br><span class="line">脚本参数测试</span><br><span class="line"><span class="comment"># chmod 755 /etc/zabbix/zabbix_agentd.d/tcp_conn.sh</span></span><br><span class="line"><span class="comment"># bash tcp_conn.sh tcp_status LISTEN</span></span><br><span class="line"><span class="comment"># bash tcp_conn.sh tcp_status TIME-WAIT</span></span><br><span class="line">agentd.conf导入脚本，传递参数</span><br><span class="line"><span class="comment"># vim /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">UserParameter=linux_status[*],/etc/zabbix/zabbix_agentd.d/tcp_conn.sh <span class="variable">$1</span> <span class="variable">$2</span></span><br><span class="line"></span><br><span class="line">重启agent</span><br><span class="line"><span class="comment"># systemctl restart zabbix-agent</span></span><br><span class="line"></span><br><span class="line">远程命令测试</span><br><span class="line"><span class="comment"># /app/zabbix_agent/bin/zabbix_get -s 192.168.2.10 -p 10050 -k "linux_status[tcp_status,LISTEN]"</span></span><br><span class="line">21</span><br><span class="line"></span><br><span class="line">创建模板/导入模板</span><br><span class="line"></span><br><span class="line">效果图</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715181223.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">==========================================================================</span><br><span class="line"></span><br><span class="line">memcache模板</span><br><span class="line"></span><br><span class="line">监控脚本内容</span><br><span class="line">~<span class="comment">#  vim memcached.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">memcached_status</span></span>()&#123;</span><br><span class="line">        M_PORT=<span class="variable">$1</span></span><br><span class="line">        M_COMMAND=<span class="variable">$2</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">"stats\nquit"</span> | ncat 127.0.0.1 <span class="string">"<span class="variable">$M_PORT</span>"</span> | grep <span class="string">"STAT <span class="variable">$M_COMMAND</span>"</span> | awk <span class="string">'&#123;print $3&#125;'</span>         <span class="comment">#centos用nc</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">                memcached_status)</span><br><span class="line">                        memcached_status <span class="variable">$2</span> <span class="variable">$3</span></span><br><span class="line">                        ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">main <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span></span><br><span class="line"></span><br><span class="line">测试脚本</span><br><span class="line"><span class="comment"># echo -e "stats\nquit"|ncat 127.0.0.1 "11211"     #状态信息</span></span><br><span class="line"><span class="comment"># chmod 755 memcached.sh </span></span><br><span class="line"><span class="comment"># bash memcached.sh memcached_status 11211 curr_connections</span></span><br><span class="line"></span><br><span class="line">agent调用脚本</span><br><span class="line"><span class="comment"># vim /etc/zabbix/zabbix_agentd.d/zabbix_agent_linux.conf   #自定义conf文件</span></span><br><span class="line">UserParameter=memcached_status[*],/etc/zabbix/zabbix_agentd.d/memcached.sh <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart zabbix-agent</span></span><br><span class="line"></span><br><span class="line">zabbix_server远程测试</span><br><span class="line"><span class="comment"># /app/zabbix_agent/bin/zabbix_get -s 192.168.2.10 -p 10050 -k "memcached_status[memcached_status,11211,curr_connections]"</span></span><br><span class="line"></span><br><span class="line">zabbix_server_web创建模板</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715172326.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建监控项</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715172542.png" alt="img"></p><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715174414.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建图形</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715174515.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建触发器</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715173549.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加自建模板</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715173827.png" alt="img"></p><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715174628.png" alt="img">效果图</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">===================================================================================================</span><br><span class="line"></span><br><span class="line">redis模板</span><br><span class="line">监控脚本</span><br><span class="line"><span class="comment"># vim redis_status.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">redis_status</span></span>()&#123;</span><br><span class="line">        R_PORT=<span class="variable">$1</span></span><br><span class="line">        R_COMMAND=<span class="variable">$2</span></span><br><span class="line">        (<span class="built_in">echo</span> -en <span class="string">"INFO \r\n"</span>;sleep 1;) | ncat 127.0.0.1 <span class="string">"<span class="variable">$R_PORT</span>"</span> &gt; /tmp/redis_<span class="string">"<span class="variable">$R_PORT</span>"</span>.tmp       <span class="comment">#ubuntu用ncat，centos用nc</span></span><br><span class="line">        REDIS_STAT_VALUE=$(grep <span class="string">""</span><span class="variable">$R_COMMAND</span><span class="string">":"</span> /tmp/redis_<span class="string">"<span class="variable">$R_PORT</span>"</span>.tmp | cut -d <span class="string">':'</span> -f2)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$REDIS_STAT_VALUE</span>  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">help</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;0&#125;</span> + redis_status + PORT + COMMAND"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        redis_status)</span><br><span class="line">            redis_status <span class="variable">$2</span> <span class="variable">$3</span></span><br><span class="line">                ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="built_in">help</span></span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">测试脚本</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"info\n quit"</span> | nc 127.0.0.1 <span class="string">"6379"</span></span><br><span class="line"><span class="comment"># chmod 755 redis_status.sh</span></span><br><span class="line"><span class="comment"># bash redis_status.sh redis_status 6379 connected_clients</span></span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">agent调用脚本</span><br><span class="line"><span class="comment"># vim /etc/zabbix/zabbix_agentd.d/zabbix_agent_linux.conf </span></span><br><span class="line">UserParameter=redis_status[*],/etc/zabbix/zabbix_agentd.d/redis_status.sh <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span></span><br><span class="line"></span><br><span class="line">zabbix_server远程测试</span><br><span class="line"><span class="comment"># /app/zabbix_agent/bin/zabbix_get -s 192.168.2.10 -p 10050 -k "redis_status[redis_status,6379,connected_clients]"</span></span><br><span class="line">1</span><br><span class="line"><span class="comment"># /app/zabbix_agent/bin/zabbix_get -s 192.168.2.10 -p 10050 -k "redis_status[redis_status,6379,used_cpu_sys]"</span></span><br><span class="line">2.94</span><br><span class="line">zabbix_server_web创建模板</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715175422.png" alt="img"></p><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715175819.png" alt="img"></p><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715180001.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">添加自建模板redis_linux</span><br><span class="line">查看监控效果图</span><br></pre></td></tr></table></figure><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715180043.png" alt="img"></p><p><img src="/2019/02/26/zabbix/Zabbix%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD(tcp%EF%BC%8Cnginx%EF%BC%8Cmemcaches%EF%BC%8Credis)/QQ%E6%88%AA%E5%9B%BE20190715180347.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br><span class="line"></span><br><span class="line">开启状态页</span><br><span class="line"><span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line"></span><br><span class="line">location /nginx_status &#123;</span><br><span class="line">        stub_status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">监控脚本</span><br><span class="line"><span class="comment"># vim nginx_status.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_status_fun</span></span>()&#123; <span class="comment">#函数内容</span></span><br><span class="line">        NGINX_PORT=<span class="variable">$1</span> <span class="comment">#端口，函数的第一个参数是脚本的第二个参数，即脚本的第二个参数是段端口号</span></span><br><span class="line">        NGINX_COMMAND=<span class="variable">$2</span> <span class="comment">#命令，函数的第二个参数是脚本的第三个参数，即脚本的第三个参数是命令</span></span><br><span class="line">        <span class="function"><span class="title">nginx_active</span></span>()&#123; <span class="comment">#获取nginx_active数量，以下相同，这是开启了nginx状态但是只能从本机看到</span></span><br><span class="line">        /usr/bin/curl <span class="string">"http://127.0.0.1:"</span><span class="variable">$NGINX_PORT</span><span class="string">"/nginx_status/"</span> 2&gt;/dev/null| grep <span class="string">'Active'</span> | awk <span class="string">'&#123;print $NF&#125;'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="title">nginx_reading</span></span>()&#123; <span class="comment">#获取nginx_reading状态的数量</span></span><br><span class="line">        /usr/bin/curl <span class="string">"http://127.0.0.1:"</span><span class="variable">$NGINX_PORT</span><span class="string">"/nginx_status/"</span> 2&gt;/dev/null| grep <span class="string">'Reading'</span> | awk <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">       &#125;</span><br><span class="line">        <span class="function"><span class="title">nginx_writing</span></span>()&#123;</span><br><span class="line">        /usr/bin/curl <span class="string">"http://127.0.0.1:"</span><span class="variable">$NGINX_PORT</span><span class="string">"/nginx_status/"</span> 2&gt;/dev/null| grep <span class="string">'Writing'</span> | awk <span class="string">'&#123;print $4&#125;'</span></span><br><span class="line">       &#125;</span><br><span class="line">        <span class="function"><span class="title">nginx_waiting</span></span>()&#123;</span><br><span class="line">        /usr/bin/curl <span class="string">"http://127.0.0.1:"</span><span class="variable">$NGINX_PORT</span><span class="string">"/nginx_status/"</span> 2&gt;/dev/null| grep <span class="string">'Waiting'</span> | awk <span class="string">'&#123;print $6&#125;'</span></span><br><span class="line">       &#125;</span><br><span class="line">        <span class="function"><span class="title">nginx_accepts</span></span>()&#123;</span><br><span class="line">        /usr/bin/curl <span class="string">"http://127.0.0.1:"</span><span class="variable">$NGINX_PORT</span><span class="string">"/nginx_status/"</span> 2&gt;/dev/null| awk NR==3 | awk <span class="string">'&#123;print $1&#125;'</span></span><br><span class="line">       &#125;</span><br><span class="line">        <span class="function"><span class="title">nginx_handled</span></span>()&#123;</span><br><span class="line">        /usr/bin/curl <span class="string">"http://127.0.0.1:"</span><span class="variable">$NGINX_PORT</span><span class="string">"/nginx_status/"</span> 2&gt;/dev/null| awk NR==3 | awk <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">       &#125;</span><br><span class="line">        <span class="function"><span class="title">nginx_requests</span></span>()&#123;</span><br><span class="line">        /usr/bin/curl <span class="string">"http://127.0.0.1:"</span><span class="variable">$NGINX_PORT</span><span class="string">"/nginx_status/"</span> 2&gt;/dev/null| awk NR==3 | awk <span class="string">'&#123;print $3&#125;'</span></span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$NGINX_COMMAND</span> <span class="keyword">in</span></span><br><span class="line">                active)</span><br><span class="line">                        nginx_active;</span><br><span class="line">                        ;;</span><br><span class="line">                reading)</span><br><span class="line">                        nginx_reading;</span><br><span class="line">                        ;;</span><br><span class="line">                writing)</span><br><span class="line">                        nginx_writing;</span><br><span class="line">                        ;;</span><br><span class="line">                waiting)</span><br><span class="line">                        nginx_waiting;</span><br><span class="line">                        ;;</span><br><span class="line">                accepts)</span><br><span class="line">                        nginx_accepts;</span><br><span class="line">                        ;;</span><br><span class="line">                handled)</span><br><span class="line">                        nginx_handled;</span><br><span class="line">                        ;;</span><br><span class="line">                requests)</span><br><span class="line">                        nginx_requests;</span><br><span class="line">                <span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123; <span class="comment">#主函数内容</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span> <span class="comment">#分支结构，用于判断用户的输入而进行响应的操作</span></span><br><span class="line">                nginx_status) <span class="comment">#当输入nginx_status就调用nginx_status_fun，并传递第二和第三个参数</span></span><br><span class="line">                        nginx_status_fun <span class="variable">$2</span> <span class="variable">$3</span>;</span><br><span class="line">                        ;;</span><br><span class="line">                *) <span class="comment">#其他的输入打印帮助信息</span></span><br><span class="line">                        <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;nginx_status key&#125;"</span></span><br><span class="line">        <span class="keyword">esac</span> <span class="comment">#分支结束符</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span></span><br><span class="line">测试脚本</span><br><span class="line"><span class="comment"># bash nginx_status.sh nginx_status 80 active</span></span><br><span class="line"><span class="comment"># chmod 755 nginx_status.sh</span></span><br><span class="line"></span><br><span class="line">agent调用脚本</span><br><span class="line"><span class="comment"># vim /etc/zabbix/zabbix_agentd.d/zabbix_agent_linux.conf</span></span><br><span class="line">UserParameter=nginx_status[*],/etc/zabbix/zabbix_agentd.d/nginx_status.sh <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span></span><br><span class="line"></span><br><span class="line">zabbix_server远程测试</span><br><span class="line"><span class="comment"># /app/zabbix_agent/bin/zabbix_get -s 192.168.2.10 -p 10050 -k "nginx_status[nginx_status,80,active]"</span></span><br><span class="line">3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
